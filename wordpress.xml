<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your blog. -->
<!-- It contains information about your blog's posts, comments, and categories. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your blog. -->

<!-- To import this information into a WordPress blog follow these steps. -->
<!-- 1. Log into that blog as an administrator. -->
<!-- 2. Go to Tools: Import in the blog's admin panels (or Manage: Import in older versions of WordPress). -->
<!-- 3. Choose "WordPress" from the list. -->
<!-- 4. Upload this file using the form provided on that page. -->
<!-- 5. You will first be asked to map the authors in this export file to users -->
<!--    on the blog.  For each author, you may choose to map to an -->
<!--    existing user on the blog or to create a new user -->
<!-- 6. WordPress will then import each of the posts, comments, and categories -->
<!--    contained in this file into your blog -->

<!-- generator="WordPress/2.8.4" created="2010-09-28 15:26"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.0/"
>

<channel>
	<title>Tigraine</title>
	<link>http://www.tigraine.at</link>
	<description>Daniel Hoelbling talks about .NET</description>
	<pubDate>Mon, 27 Sep 2010 17:00:00 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.8.4</generator>
	<language>en</language>
	<wp:wxr_version>1.0</wp:wxr_version>
	<wp:base_site_url>http://www.tigraine.at</wp:base_site_url>
	<wp:base_blog_url>http://www.tigraine.at</wp:base_blog_url>
	<wp:category><wp:category_nicename>programmierung</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Coding]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>git</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>imagineclub</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[imagineClub]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>internet</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Internet]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>java</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>job</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Job]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>jquery</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[jQuery]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>patterns</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Patterns]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>personal</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Personal]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>projects</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Projects]]></wp:cat_name><wp:category_description><![CDATA[A category for all posts about my projects]]></wp:category_description></wp:category>
	<wp:category><wp:category_nicename>site-news</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Site-News]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>subversion</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Subversion]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>testing</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[Testing]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>tools</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tools]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>windows-vista</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Windows Vista]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>net</wp:category_nicename><wp:category_parent>Coding</wp:category_parent><wp:cat_name><![CDATA[.NET]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>barcamp</wp:category_nicename><wp:category_parent>Personal</wp:category_parent><wp:cat_name><![CDATA[Barcamp]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>castle</wp:category_nicename><wp:category_parent>.NET</wp:category_parent><wp:cat_name><![CDATA[Castle]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>dotless</wp:category_nicename><wp:category_parent>Projects</wp:category_parent><wp:cat_name><![CDATA[dotless]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>elmsconnector</wp:category_nicename><wp:category_parent>Projects</wp:category_parent><wp:cat_name><![CDATA[elmsConnector]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>imagineclub-website</wp:category_nicename><wp:category_parent>Projects</wp:category_parent><wp:cat_name><![CDATA[imagineClub Website]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>nhibernate</wp:category_nicename><wp:category_parent>.NET</wp:category_parent><wp:cat_name><![CDATA[NHibernate]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>pandora</wp:category_nicename><wp:category_parent>Projects</wp:category_parent><wp:cat_name><![CDATA[Pandora]]></wp:cat_name><wp:category_description><![CDATA[Posts about the Pandora Project 
(http://bitbucket.org/Tigraine/pandora-container/)]]></wp:category_description></wp:category>
	<wp:category><wp:category_nicename>wpf</wp:category_nicename><wp:category_parent>.NET</wp:category_parent><wp:cat_name><![CDATA[WPF]]></wp:cat_name></wp:category>
	<wp:tag><wp:tag_slug>116</wp:tag_slug></wp:tag>
	<wp:tag><wp:tag_slug>net</wp:tag_slug><wp:tag_name><![CDATA[.NET]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>net-35</wp:tag_slug><wp:tag_name><![CDATA[.NET 3.5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>2-weltkrieg</wp:tag_slug><wp:tag_name><![CDATA[2. Weltkrieg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>adsl</wp:tag_slug><wp:tag_name><![CDATA[ADSL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ankhsvn</wp:tag_slug><wp:tag_name><![CDATA[AnkhSVN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>aspnet-monorail-elmah-castle</wp:tag_slug><wp:tag_name><![CDATA[asp.net monorail elmah castle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>auto</wp:tag_slug><wp:tag_name><![CDATA[Auto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>berg</wp:tag_slug><wp:tag_name><![CDATA[Berg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>best-practices</wp:tag_slug><wp:tag_name><![CDATA[best-practices]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>beta</wp:tag_slug><wp:tag_name><![CDATA[Beta]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>bildschirm</wp:tag_slug><wp:tag_name><![CDATA[Bildschirm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>bill-gates</wp:tag_slug><wp:tag_name><![CDATA[bill gates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>brettspiele</wp:tag_slug><wp:tag_name><![CDATA[Brettspiele]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>c-clipboard-stathread</wp:tag_slug><wp:tag_name><![CDATA[C# Clipboard STAThread]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>call-of-duty</wp:tag_slug><wp:tag_name><![CDATA[Call of Duty]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>cashgame</wp:tag_slug><wp:tag_name><![CDATA[Cashgame]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ccnet</wp:tag_slug><wp:tag_name><![CDATA[ccnet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>programmierung</wp:tag_slug><wp:tag_name><![CDATA[Coding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>coding</wp:tag_slug><wp:tag_name><![CDATA[Coding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>composition</wp:tag_slug><wp:tag_name><![CDATA[composition]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>computer</wp:tag_slug><wp:tag_name><![CDATA[Computer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>computerspiel</wp:tag_slug><wp:tag_name><![CDATA[Computerspiel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>configuration</wp:tag_slug><wp:tag_name><![CDATA[configuration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>continuous-integration</wp:tag_slug><wp:tag_name><![CDATA[continuous integration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>controls</wp:tag_slug><wp:tag_name><![CDATA[controls]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>dark</wp:tag_slug><wp:tag_name><![CDATA[dark]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>deadlines</wp:tag_slug><wp:tag_name><![CDATA[deadlines]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>demo</wp:tag_slug><wp:tag_name><![CDATA[Demo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>drivers</wp:tag_slug><wp:tag_name><![CDATA[Drivers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>dry</wp:tag_slug><wp:tag_name><![CDATA[dry]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ebooks</wp:tag_slug><wp:tag_name><![CDATA[eBooks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>event-pattern</wp:tag_slug><wp:tag_name><![CDATA[Event Pattern]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>eyestrain</wp:tag_slug><wp:tag_name><![CDATA[eyestrain]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>feed</wp:tag_slug><wp:tag_name><![CDATA[Feed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>feedburner</wp:tag_slug><wp:tag_name><![CDATA[FeedBurner]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>film</wp:tag_slug><wp:tag_name><![CDATA[Film]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>forceware</wp:tag_slug><wp:tag_name><![CDATA[Forceware]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>funny</wp:tag_slug><wp:tag_name><![CDATA[Funny]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>gadged</wp:tag_slug><wp:tag_name><![CDATA[Gadged]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>gadget</wp:tag_slug><wp:tag_name><![CDATA[Gadget]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>gdi</wp:tag_slug><wp:tag_name><![CDATA[gdi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>geek-stuff</wp:tag_slug><wp:tag_name><![CDATA[Geek-Stuff]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>geforce</wp:tag_slug><wp:tag_name><![CDATA[GeForce]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[Google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>grafikkarte</wp:tag_slug><wp:tag_name><![CDATA[Grafikkarte]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>handheld</wp:tag_slug><wp:tag_name><![CDATA[Handheld]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>harddrive</wp:tag_slug><wp:tag_name><![CDATA[Harddrive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>hardware</wp:tag_slug><wp:tag_name><![CDATA[hardware]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>hotline</wp:tag_slug><wp:tag_name><![CDATA[Hotline]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>hp</wp:tag_slug><wp:tag_name><![CDATA[HP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>hutte</wp:tag_slug><wp:tag_name><![CDATA[Hütte]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>i18n</wp:tag_slug><wp:tag_name><![CDATA[i18n]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>installation</wp:tag_slug><wp:tag_name><![CDATA[Installation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>internet</wp:tag_slug><wp:tag_name><![CDATA[Internet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>iterator</wp:tag_slug><wp:tag_name><![CDATA[Iterator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>keyboard</wp:tag_slug><wp:tag_name><![CDATA[keyboard]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>keynote</wp:tag_slug><wp:tag_name><![CDATA[keynote]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>kubrick</wp:tag_slug><wp:tag_name><![CDATA[Kubrick]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>label-tag</wp:tag_slug><wp:tag_name><![CDATA[label-tag]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>language</wp:tag_slug><wp:tag_name><![CDATA[language]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>library</wp:tag_slug><wp:tag_name><![CDATA[library]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>lice-cd</wp:tag_slug><wp:tag_name><![CDATA[Lice-CD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>live-cd</wp:tag_slug><wp:tag_name><![CDATA[Live-CD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>log4net</wp:tag_slug><wp:tag_name><![CDATA[log4net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>logging</wp:tag_slug><wp:tag_name><![CDATA[logging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mathematik</wp:tag_slug><wp:tag_name><![CDATA[Mathematik]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mediaroom</wp:tag_slug><wp:tag_name><![CDATA[mediaroom]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>metroid-prime</wp:tag_slug><wp:tag_name><![CDATA[Metroid Prime]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>microsoft</wp:tag_slug><wp:tag_name><![CDATA[Microsoft]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mmorpg</wp:tag_slug><wp:tag_name><![CDATA[MMORPG]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mocks</wp:tag_slug><wp:tag_name><![CDATA[mocks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>monitor</wp:tag_slug><wp:tag_name><![CDATA[Monitor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>multiplayer</wp:tag_slug><wp:tag_name><![CDATA[Multiplayer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>news</wp:tag_slug><wp:tag_name><![CDATA[News]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nhibernate</wp:tag_slug><wp:tag_name><![CDATA[NHibernate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nhibernate-orm-net</wp:tag_slug><wp:tag_name><![CDATA[nhibernate orm .net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nichtrauchen</wp:tag_slug><wp:tag_name><![CDATA[Nichtrauchen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nvidia</wp:tag_slug><wp:tag_name><![CDATA[nVidia]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>observer-pattern</wp:tag_slug><wp:tag_name><![CDATA[Observer Pattern]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>open-source</wp:tag_slug><wp:tag_name><![CDATA[Open Source]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>opensource</wp:tag_slug><wp:tag_name><![CDATA[opensource]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>orcas</wp:tag_slug><wp:tag_name><![CDATA[Orcas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>orf</wp:tag_slug><wp:tag_name><![CDATA[ORF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>orm</wp:tag_slug><wp:tag_name><![CDATA[orm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>pattern</wp:tag_slug><wp:tag_name><![CDATA[Pattern]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>patterns</wp:tag_slug><wp:tag_name><![CDATA[Patterns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>pc</wp:tag_slug><wp:tag_name><![CDATA[PC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>pda</wp:tag_slug><wp:tag_name><![CDATA[PDA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>personal</wp:tag_slug><wp:tag_name><![CDATA[Personal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>photoshop</wp:tag_slug><wp:tag_name><![CDATA[Photoshop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>pirates</wp:tag_slug><wp:tag_name><![CDATA[Pirates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>plugin</wp:tag_slug><wp:tag_name><![CDATA[Plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>poker</wp:tag_slug><wp:tag_name><![CDATA[Poker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>printing</wp:tag_slug><wp:tag_name><![CDATA[printing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>productivity</wp:tag_slug><wp:tag_name><![CDATA[productivity]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>programmiersprache</wp:tag_slug><wp:tag_name><![CDATA[Programmiersprache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[Programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>project-management</wp:tag_slug><wp:tag_name><![CDATA[project management]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>project-organization</wp:tag_slug><wp:tag_name><![CDATA[project organization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>protokoll</wp:tag_slug><wp:tag_name><![CDATA[Protokoll]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>quotes</wp:tag_slug><wp:tag_name><![CDATA[Quotes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rainbow-six</wp:tag_slug><wp:tag_name><![CDATA[Rainbow Six]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rainbox-six</wp:tag_slug><wp:tag_name><![CDATA[Rainbox Six]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rant</wp:tag_slug><wp:tag_name><![CDATA[rant]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rechnernetze</wp:tag_slug><wp:tag_name><![CDATA[Rechnernetze]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rechnerorganisation</wp:tag_slug><wp:tag_name><![CDATA[Rechnerorganisation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>review</wp:tag_slug><wp:tag_name><![CDATA[Review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rhino-mocks</wp:tag_slug><wp:tag_name><![CDATA[rhino mocks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rss</wp:tag_slug><wp:tag_name><![CDATA[RSS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>scottgu</wp:tag_slug><wp:tag_name><![CDATA[ScottGu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>screen</wp:tag_slug><wp:tag_name><![CDATA[Screen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>server</wp:tag_slug><wp:tag_name><![CDATA[Server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>shooter</wp:tag_slug><wp:tag_name><![CDATA[Shooter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>silverlight</wp:tag_slug><wp:tag_name><![CDATA[silverlight]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>silvester</wp:tag_slug><wp:tag_name><![CDATA[Silvester]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>singleton</wp:tag_slug><wp:tag_name><![CDATA[Singleton]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sinnlos</wp:tag_slug><wp:tag_name><![CDATA[Sinnlos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>site</wp:tag_slug><wp:tag_name><![CDATA[Site]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>site-news</wp:tag_slug><wp:tag_name><![CDATA[Site-News]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sony</wp:tag_slug><wp:tag_name><![CDATA[Sony]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>source-control</wp:tag_slug><wp:tag_name><![CDATA[Source Control]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sourcecontrol</wp:tag_slug><wp:tag_name><![CDATA[sourcecontrol]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>spaziergang</wp:tag_slug><wp:tag_name><![CDATA[Spaziergang]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>spiele</wp:tag_slug><wp:tag_name><![CDATA[Spiele]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>stochastik</wp:tag_slug><wp:tag_name><![CDATA[Stochastik]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>studium</wp:tag_slug><wp:tag_name><![CDATA[Studium]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>subversion</wp:tag_slug><wp:tag_name><![CDATA[Subversion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>support</wp:tag_slug><wp:tag_name><![CDATA[Support]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>surface</wp:tag_slug><wp:tag_name><![CDATA[surface]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>svn</wp:tag_slug><wp:tag_name><![CDATA[svn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>tags</wp:tag_slug><wp:tag_name><![CDATA[Tags]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>telephone</wp:tag_slug><wp:tag_name><![CDATA[Telephone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[Testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>theme</wp:tag_slug><wp:tag_name><![CDATA[Theme]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>turnier</wp:tag_slug><wp:tag_name><![CDATA[Turnier]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ubuntu</wp:tag_slug><wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>unreal-tournament</wp:tag_slug><wp:tag_name><![CDATA[Unreal Tournament]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>verein</wp:tag_slug><wp:tag_name><![CDATA[Verein]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>video</wp:tag_slug><wp:tag_name><![CDATA[Video]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>visual-studio</wp:tag_slug><wp:tag_name><![CDATA[Visual Studio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>visual-studio-2008</wp:tag_slug><wp:tag_name><![CDATA[Visual Studio 2008]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>webdesign</wp:tag_slug><wp:tag_name><![CDATA[Webdesign]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>weihnachten</wp:tag_slug><wp:tag_name><![CDATA[Weihnachten]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>widescreen</wp:tag_slug><wp:tag_name><![CDATA[Widescreen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wii</wp:tag_slug><wp:tag_name><![CDATA[Wii]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>windows-forms</wp:tag_slug><wp:tag_name><![CDATA[windows forms]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>windows-live</wp:tag_slug><wp:tag_name><![CDATA[Windows Live]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[Wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>world-of-warcraft</wp:tag_slug><wp:tag_name><![CDATA[World of Warcraft]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wow</wp:tag_slug><wp:tag_name><![CDATA[WoW]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>xbox360</wp:tag_slug><wp:tag_name><![CDATA[xbox360]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>xhtml</wp:tag_slug><wp:tag_name><![CDATA[xhtml]]></wp:tag_name></wp:tag>
		<item>
<title>Testpost</title>
<link>http://www.tigraine.at/?p=243</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

<guid isPermaLink="false">http://www.tigraine.at/?p=243</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/">Kommentar</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>243</wp:post_id>
<wp:post_date>0000-00-00 00:00:00</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Windows Live Writer failure</title>
<link>http://www.tigraine.at/?p=745</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

<guid isPermaLink="false">http://www.tigraine.at/?p=745</guid>
<description></description>
<content:encoded><![CDATA[In short: My Windows Live Writer crashes whenever I try to start it up :(.

Apparently something about the font "Courier New" not having a "regular" cut breaks WLW during init and I'm unable to resolve this at the moment.
All I get upon starting WLW is this:

<a href="http://www.tigraine.at/wp-content/uploads/2009/09/wlw.png"><img class="size-full wp-image-746 alignnone" title="wlw" src="http://www.tigraine.at/wp-content/uploads/2009/09/wlw.png" alt="wlw" width="396" height="277" /></a>

Along with this StackTrace:
<blockquote>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">System.ArgumentException: Die Schriftart Courier New unterstützt den Schnitt Regular nicht.</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei System.Drawing.Font.CreateNativeFont()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei System.Drawing.Font.Initialize(FontFamily family, Single emSize, FontStyle style, GraphicsUnit unit, Byte gdiCharSet, Boolean gdiVerticalFont)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei System.Drawing.Font.Initialize(String familyName, Single emSize, FontStyle style, GraphicsUnit unit, Byte gdiCharSet, Boolean gdiVerticalFont)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei System.Drawing.Font..ctor(String familyName, Single emSize)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.HtmlEditor.HtmlSourceEditorControl..ctor(ISpellingChecker spellingChecker)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostHtmlEditing.HtmlSourceEditorControl..ctor(ISpellingChecker spellingChecker)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostHtmlEditing.BlogPostHtmlSourceEditorControl..ctor(IBlogPostSpellCheckingContext spellingContext)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostHtmlEditing.BlogPostHtmlEditor.InitializeSourceEditor()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostHtmlEditing.BlogPostHtmlEditor..ctor(IMainFrameWindow mainFrameWindow, Control editorContainer, Control editorTopStripControl, IBlogPostEditingSite postEditingSite, CommandBarDefinition commandBarDefinition)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorMainControl.InitializeHtmlEditor()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorMainControl.InitializeUI()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorMainControl.Init(IMainFrameWindow mainFrameWindow, IBlogPostEditingContext editingContext)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorMainControl..ctor(IMainFrameWindow mainFrameWindow, IBlogPostEditingContext editingContext)</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorForm.CreateMainControl()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.ApplicationFramework.SatelliteApplicationForm.OnInitializeWorkspace()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.PostEditor.PostEditorForm.OnInitializeWorkspace()</div>
<div id="_mcePaste" style="position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px; overflow-x: hidden; overflow-y: hidden;">bei WindowsLive.Writer.ApplicationFramework.SatelliteApplicationForm.OnLoad(EventArgs e</div></blockquote>
I've reinstalled WLW now about 3 times and can't it to work at all. So I'm a bit impaired in my ability to blog at the moment.

But worst of all: Windows Live Writer stores drafts in a binary file format that is only readable by Windows Live Writer. So now that WLW is down I have no other choice but to take my drafts to another computer to make them readable (let's just hope WLW didn't break there too).

I hope I'll be back with some interesting content real soon, but right now this is a real show-stopper]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>745</wp:post_id>
<wp:post_date>2009-09-15 15:30:39</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1253026124</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>About</title>
<link>http://www.tigraine.at/?page_id=2</link>
<pubDate>Tue, 11 Sep 2007 13:36:40 +0000</pubDate>
<dc:creator><![CDATA[sandra]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false"></guid>
<description></description>
<content:encoded><![CDATA[Ich weiss was ihr euch alle Fragt:
<h4>Was zum Geier ist Tigraine??</h4>
Nun, um dies zu beantworten habe ich sogar extra diese Seite geschrieben :).

Aber mal von Vorne:

Tigraine bin ich. Also Daniel.
Eigentlich bin ich es aber doch nicht, Tigraine ist nämlich eigentlich ein WoW Charakter von Daniel.
Andererseits, die Zeitungen schreiben wir PC-Spieler können Realität nicht von Fiktion unterscheiden und laufen früher oder später Amok.. Vielleicht bin ich also doch Tigraine und nicht Daniel.

Wir können es drehen und wenden, die Frage ist nicht zufriedenstellend zu klären.
<h4>Also.. Warum dieses Blog?</h4>
Hmmm.. Eigentlich weil ich mir ganz sicher bin meinen Mitmenschen mittlerweile gehörig auf die Nerven zu gehen wenn ich Sie wegen jedem kleinen Mist der mir gerade durch den Kopf schwirrt anrufe. Also schreibe ich meine Ergüsse lieber hier rein und wer wirklich verzweifelt ist kann sichs ja dann hier durchlesen.
<h4>Erreichbarkeit</h4>
Nun, wer mich bereits kennt hat wohl meine Handynummer, wer bisher das Glück hatte sich meine Bekanntschaft zu ersparen sollte Gott für diesen Umstand danken.
Wenns aber trotzdem unbedingt mit mir Kontakt aufnehmen will kann das gerne in den Kommentaren tun oder per Email unter: <strong>tig</strong>[at]<strong>tigraine</strong>[dot]<strong>at</strong>

grüße,
Daniel err.. Tigraine]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>2</wp:post_id>
<wp:post_date>2007-09-11 15:36:40</wp:post_date>
<wp:post_date_gmt>2007-09-11 13:36:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>about</wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_wp_page_template</wp:meta_key>
<wp:meta_value>default</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Endlich Umgezogen</title>
<link>http://www.tigraine.at/2007/09/11/endlich-umgezogen/</link>
<pubDate>Tue, 11 Sep 2007 14:06:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/11/endlich-umgezogen/</guid>
<description></description>
<content:encoded><![CDATA[Wow, nach fast 3 Jahren hin und her habe ich es endlich geschafft mir meinen eigenen Webspace zu kaufen ;)

Wie schon im <a href="http://tigraine.blogspot.com/2007/09/tigraine-goes-wordpress.html">alten Blog</a> beschrieben ist das Blog übersiedelt und läuft nun auf dem viel besseren und auch viel schöneren <a target="_blank" href="http://www.wordpress.org">WordPress</a> :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>3</wp:post_id>
<wp:post_date>2007-09-11 16:06:08</wp:post_date>
<wp:post_date_gmt>2007-09-11 14:06:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>endlich-umgezogen</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Call me Don!</title>
<link>http://www.tigraine.at/2007/09/11/call-me-don/</link>
<pubDate>Tue, 11 Sep 2007 20:51:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[Kubrick]]></category>

		<category domain="tag" nicename="kubrick"><![CDATA[Kubrick]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/11/call-me-don/</guid>
<description></description>
<content:encoded><![CDATA[Nun, vielleicht ist es aufgefallen. Ich habe mir endlich mal die Arbeit angetan und mir einene Header erstellt.

Noch bin ich zwar nicht 100%ig zufrieden mit dem Ergebnis des neuen Headers aber ich finde den <a target="_blank" href="http://en.wikipedia.org/wiki/The_godfather">Paten</a> look einfach cool :)

Kommentare und Verbesserungsvorschläge sind natürlich immer willkommen ;)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>5</wp:post_id>
<wp:post_date>2007-09-11 22:51:38</wp:post_date>
<wp:post_date_gmt>2007-09-11 20:51:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>call-me-don</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284591675</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Lustiges Video</title>
<link>http://www.tigraine.at/2007/09/17/lustiges-video/</link>
<pubDate>Mon, 17 Sep 2007 09:24:01 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/17/lustiges-video/</guid>
<description></description>
<content:encoded><![CDATA[<p><embed src="http://www.youtube.com/v/ib3G_xM3y7Y" width="425" height="350" type="application/x-shockwave-flash" wmode="transparent"></embed></embed></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>15</wp:post_id>
<wp:post_date>2007-09-17 11:24:01</wp:post_date>
<wp:post_date_gmt>2007-09-17 09:24:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>lustiges-video</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284591904</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>logo-showdown-neu-690x137.jpg</title>
<link>http://www.tigraine.at/?attachment_id=16</link>
<pubDate>Mon, 17 Sep 2007 09:42:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/logo-showdown-neu-690x137.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>16</wp:post_id>
<wp:post_date>2007-09-17 11:42:51</wp:post_date>
<wp:post_date_gmt>2007-09-17 09:42:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo-showdown-neu-690x137jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/logo-showdown-neu-690x137.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/logo-showdown-neu-690x137.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:379;s:6:"height";i:137;s:14:"hwstring_small";s:23:"height='46' width='128'";s:4:"file";s:86:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/logo-showdown-neu-690x137.jpg";s:5:"thumb";s:39:"logo-showdown-neu-690x137.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wow.jpg</title>
<link>http://www.tigraine.at/2007/09/21/back-to-wow/wowjpg/</link>
<pubDate>Fri, 21 Sep 2007 16:08:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/wow.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>25</wp:post_id>
<wp:post_date>2007-09-21 18:08:40</wp:post_date>
<wp:post_date_gmt>2007-09-21 16:08:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wowjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>28</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/wow.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:438;s:6:"height";i:192;s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:64:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow.jpg";s:5:"thumb";s:17:"wow.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wow.jpg</title>
<link>http://www.tigraine.at/2007/09/21/back-to-wow/wowjpg-2/</link>
<pubDate>Fri, 21 Sep 2007 16:08:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/wow1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>26</wp:post_id>
<wp:post_date>2007-09-21 18:08:41</wp:post_date>
<wp:post_date_gmt>2007-09-21 16:08:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wowjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>28</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/wow1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:434;s:6:"height";i:197;s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow1.jpg";s:5:"thumb";s:18:"wow1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wow-thumb.jpg</title>
<link>http://www.tigraine.at/2007/09/21/back-to-wow/wow-thumbjpg/</link>
<pubDate>Fri, 21 Sep 2007 16:08:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/wow-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>27</wp:post_id>
<wp:post_date>2007-09-21 18:08:42</wp:post_date>
<wp:post_date_gmt>2007-09-21 16:08:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wow-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>28</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/wow-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:434;s:6:"height";i:197;s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/wow-thumb.jpg";s:5:"thumb";s:23:"wow-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Back to WoW</title>
<link>http://www.tigraine.at/2007/09/21/back-to-wow/</link>
<pubDate>Fri, 21 Sep 2007 16:08:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/21/back-to-wow/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2007/09/wow.jpg"></a><a href="http://www.tigraine.at/wp-content/uploads/2007/09/wow1.jpg"><img id="id" style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="197" alt="wow" src="http://www.tigraine.at/wp-content/uploads/2007/09/wow-thumb.jpg" width="434" border="0" /></a>&#xA0; </p>  <p>Nun, Kalu muss auf eine Reha, und nun fehlt ein Maintank.   <br />Ich habe mich erweichen lassen und werde f&#xFC;r die n&#xE4;chsten 4 Wochen meinen Krieger wieder auspacken und versuchen Prinz Kael eine auf den Deckel zu geben.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>28</wp:post_id>
<wp:post_date>2007-09-21 18:08:42</wp:post_date>
<wp:post_date_gmt>2007-09-21 16:08:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>back-to-wow</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284591872</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>emailme@uboot.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2007-09-21 19:32:08</wp:comment_date>
<wp:comment_date_gmt>2007-09-21 17:32:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[...würde es doch sehr begrüßen wenn Du stattdessen wieder zu rauchen beginnst]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.43</wp:comment_author_IP>
<wp:comment_date>2007-09-21 19:53:50</wp:comment_date>
<wp:comment_date_gmt>2007-09-21 17:53:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ich bereue es auch schon wieder.
Sandra will am Di zu mir kommen und ich hab Raid. 
Mist... wie konnte ich nur dem Mist zusagen.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Erster Raidtag und gleich abger&auml;umt]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/09/28/erster-raidtag-und-gleich-abgerumt/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-09-28 13:24:17</wp:comment_date>
<wp:comment_date_gmt>2007-09-28 11:24:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] wie schon zuvor berichtet Raide ich wieder, wenn auch nur Zeitlich befristet so habe ich mich doch wieder an die Front [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>chipheader.jpg</title>
<link>http://www.tigraine.at/?attachment_id=31</link>
<pubDate>Sun, 23 Sep 2007 10:43:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/chipheader.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>31</wp:post_id>
<wp:post_date>2007-09-23 12:43:37</wp:post_date>
<wp:post_date_gmt>2007-09-23 10:43:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>chipheaderjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/chipheader.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/chipheader.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:359;s:6:"height";i:100;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/chipheader.jpg";s:5:"thumb";s:24:"chipheader.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>chipheader-thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=32</link>
<pubDate>Sun, 23 Sep 2007 10:43:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/chipheader-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>32</wp:post_id>
<wp:post_date>2007-09-23 12:43:37</wp:post_date>
<wp:post_date_gmt>2007-09-23 10:43:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>chipheader-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/chipheader-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/chipheader-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:359;s:6:"height";i:100;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/chipheader-thumb.jpg";s:5:"thumb";s:30:"chipheader-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Erster Raidtag und gleich abger&#228;umt</title>
<link>http://www.tigraine.at/2007/09/28/erster-raidtag-und-gleich-abgerumt/</link>
<pubDate>Fri, 28 Sep 2007 11:24:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/28/erster-raidtag-und-gleich-abgerumt/</guid>
<description></description>
<content:encoded><![CDATA[<p>Nun, wie schon zuvor berichtet <a href="http://www.tigraine.at/2007/09/21/back-to-wow/" target="_blank">Raide ich wieder</a>, wenn auch nur Zeitlich befristet so habe ich mich doch wieder an die Front begeben.</p>  <p>Und siehe da, da ist auch gleich mein lang ersehntes <a href="http://www.wowhead.com/?item=28825" target="_blank">Schild</a> von Gruul gedroppt.</p>  <p>Weiter ging es dann nach Tempest Keep um Solarian nach 5 Tries mit einer neuen Taktik und ohne Pala Tank aus dem Leben zu sto&#xDF;en.</p>  <p>Eigentlich h&#xE4;tte dann auch Kael ein wenig Aufmerksamkeit verdiehnt, aber au&#xDF;er einem Try in&#xA0; Phase 2 haben wir eigentlich garnichts gesehen. Der Trash davor ist n&#xE4;mlich so eklig dass es fast 2 Stunden von Solarian zu Kael dauert.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>37</wp:post_id>
<wp:post_date>2007-09-28 13:24:14</wp:post_date>
<wp:post_date_gmt>2007-09-28 11:24:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>erster-raidtag-und-gleich-abgerumt</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284591858</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>draghkar70.jpg</title>
<link>http://www.tigraine.at/2007/09/29/draghkar-erreicht-level-70/draghkar70jpg/</link>
<pubDate>Sat, 29 Sep 2007 01:53:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>38</wp:post_id>
<wp:post_date>2007-09-29 03:53:12</wp:post_date>
<wp:post_date_gmt>2007-09-29 01:53:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>draghkar70jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>40</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/draghkar70.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:519;s:6:"height";i:388;s:14:"hwstring_small";s:23:"height='95' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/draghkar70.jpg";s:5:"thumb";s:24:"draghkar70.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>draghkar70-thumb.jpg</title>
<link>http://www.tigraine.at/2007/09/29/draghkar-erreicht-level-70/draghkar70-thumbjpg/</link>
<pubDate>Sat, 29 Sep 2007 01:53:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>39</wp:post_id>
<wp:post_date>2007-09-29 03:53:14</wp:post_date>
<wp:post_date_gmt>2007-09-29 01:53:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>draghkar70-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>40</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/draghkar70-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:519;s:6:"height";i:388;s:14:"hwstring_small";s:23:"height='95' width='128'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/draghkar70-thumb.jpg";s:5:"thumb";s:30:"draghkar70-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Draghkar erreicht level 70!</title>
<link>http://www.tigraine.at/2007/09/29/draghkar-erreicht-level-70/</link>
<pubDate>Sat, 29 Sep 2007 01:53:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/29/draghkar-erreicht-level-70/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70.jpg"><img src="http://www.tigraine.at/wp-content/uploads/2007/09/draghkar70-thumb.jpg" id="id" style="border: 0px none " alt="draghkar70" border="0" height="388" width="519" /></a>

Nun, eigentlich wollte ich schon um halb 2 das Handtuch werfen und für heute schluss machen. Immerhin hab ich ja heute morgen mit lvl 67 angefangen.

Nun, geendet hats mit lvl 70 um 3:47, 3 Levels an einem Tag und mein dritter 70er :)

So .. und morgen gleich ab ins Alterac]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>40</wp:post_id>
<wp:post_date>2007-09-29 03:53:15</wp:post_date>
<wp:post_date_gmt>2007-09-29 01:53:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>draghkar-erreicht-level-70</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284591896</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>alterac.jpg</title>
<link>http://www.tigraine.at/2007/09/30/langwieriges-gemetzel/alteracjpg/</link>
<pubDate>Sun, 30 Sep 2007 17:55:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/alterac.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>41</wp:post_id>
<wp:post_date>2007-09-30 19:55:13</wp:post_date>
<wp:post_date_gmt>2007-09-30 17:55:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>alteracjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>43</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/alterac.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/alterac.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:422;s:6:"height";i:245;s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:68:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/alterac.jpg";s:5:"thumb";s:21:"alterac.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>alterac-thumb.jpg</title>
<link>http://www.tigraine.at/2007/09/30/langwieriges-gemetzel/alterac-thumbjpg/</link>
<pubDate>Sun, 30 Sep 2007 17:55:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/09/alterac-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>42</wp:post_id>
<wp:post_date>2007-09-30 19:55:14</wp:post_date>
<wp:post_date_gmt>2007-09-30 17:55:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>alterac-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>43</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/09/alterac-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/alterac-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:422;s:6:"height";i:245;s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/09/alterac-thumb.jpg";s:5:"thumb";s:27:"alterac-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Langwieriges Gemetzel</title>
<link>http://www.tigraine.at/2007/09/30/langwieriges-gemetzel/</link>
<pubDate>Sun, 30 Sep 2007 17:55:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/09/30/langwieriges-gemetzel/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.tigraine.at/wp-content/uploads/2007/09/alterac.jpg"><img src="http://www.tigraine.at/wp-content/uploads/2007/09/alterac-thumb.jpg" alt="alterac" style="border: 0px none " id="id" border="0" height="245" width="422" /></a>

Nun, der Hexer ist endlich 70, und ich werfe mich ins Schlachtengetümmel. Wochenende ist und Bonus Ehre gibts für <a href="http://www.wowwiki.com/Alterac_Valley" target="_blank">Alterac Valley</a>.

Gesagt getan, rein da und mit dem Schlachtfest begonnen.
Meine ersten Matches waren sogar schwer unterhaltsam, ich habe <a href="http://www.wowhead.com/?spell=27243" target="_blank">Seed of Corruption</a> gespammt und mich über die großen Zahlen gefreut die dabei rauskommen.

Und so ging es weiter, SoC spammend metzelte ich mich durch knapp 1000 Allianzler in 12 verschiedenen Alterac Valleys.
Und JA! Instant Invites sind genial, und JA Hexer ist genial.
Aber wenn ich auf die erforderlichen Ehre zahlen beim PvP Equipment schaue muss man trotzdem den Kopf schütteln.

<!--more-->

17.800 Ehre für den <a href="http://www.wowhead.com/?item=32799" target="_blank">Epischen PvP Gurt</a> ist einfach nur hart. Verdammt hart am Limit des erträglichen.
Meine 12 Alterac Valleys haben nämlich gesamt gerade mal 9k Ehre produziert. Um den Gürtel kaufen zu können müsste ich also 2-3 Tage durchgehend Alterac spielen an einem AV Wochenende um an den Gürtel zu kommen. Und dann fehlen noch immer <a href="http://www.wowhead.com/?item=32787" target="_blank">Schuhe</a> und <a href="http://www.wowhead.com/?item=32811" target="_blank">Armschienen</a>.

Und das sind grad mal die 3 Items die ich wirklich dringend brauche auch wenn ich an Arena Season 1 oder Season 2 Gear rankomme. Dass ich eigentlich um überhaupt mal eine Arena von innen zu sehen wahrscheinlich auch viel vom blauen PvP Set brauche muss wohl kaum erwähnt werden. :(

Egal, was soll man machen. Hoffentlich spielt Brutus mit mir ein wenig 3:3 Arena damit ich wenigstens 1-2 Arena Items abgreifen kann bis die neue Saison anfängt.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>43</wp:post_id>
<wp:post_date>2007-09-30 19:55:15</wp:post_date>
<wp:post_date_gmt>2007-09-30 17:55:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>langwieriges-gemetzel</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024093</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>update.jpg</title>
<link>http://www.tigraine.at/2007/10/02/page-update-wordpress-23/updatejpg/</link>
<pubDate>Tue, 02 Oct 2007 21:28:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/update.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>49</wp:post_id>
<wp:post_date>2007-10-02 23:28:06</wp:post_date>
<wp:post_date_gmt>2007-10-02 21:28:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>updatejpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>50</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/update.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/update.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:528;s:6:"height";i:239;s:14:"hwstring_small";s:23:"height='57' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/update.jpg";s:5:"thumb";s:20:"update.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Page Update.. Wordpress 2.3</title>
<link>http://www.tigraine.at/2007/10/02/page-update-wordpress-23/</link>
<pubDate>Tue, 02 Oct 2007 21:28:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/02/page-update-wordpress-23/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/update.jpg" id="id" style="border-width: 0px" alt="update" border="0" height="239" width="528" />

Nun, irgendwie hat mich die Kunde ereilt dass es ein neues Software Update für <a href="http://www.wordpress.org" target="_blank">Wordpress</a> gibt (die Software mit der die Seite betrieben wird). Und da habe ich auch gleich die neueste Version hier installiert.

Was ist neu?
.. nun .. so genau weiß ich das auch noch nicht wirklich. Aber Updates sind immer gut :). Jedenfalls gibts einen neuen Statistik Plugin.

Sonst aber wohl kaum was auffälliges, ich wollts nur loswerden :).
Falls ihr irgendwo nen Fehler seht.. laut schreien..]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>50</wp:post_id>
<wp:post_date>2007-10-02 23:28:07</wp:post_date>
<wp:post_date_gmt>2007-10-02 21:28:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>page-update-wordpress-23</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Video: Web 2.0</title>
<link>http://www.tigraine.at/2007/10/03/video-web-20/</link>
<pubDate>Tue, 02 Oct 2007 23:02:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/03/video-web-20/</guid>
<description></description>
<content:encoded><![CDATA[<object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/6gmP4nk0EOE"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/6gmP4nk0EOE" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350"></embed></object>

<p>Eigentlich schon älter, aber noch immer ein verdammt gutes Video über die Bedeutung von Information im neuen Internet.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>51</wp:post_id>
<wp:post_date>2007-10-03 01:02:30</wp:post_date>
<wp:post_date_gmt>2007-10-02 23:02:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>video-web-20</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Erste Uniwoche überlebt</title>
<link>http://www.tigraine.at/2007/10/04/erste-uniwoche-berlebt/</link>
<pubDate>Thu, 04 Oct 2007 12:06:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Rechnernetze]]></category>

		<category domain="tag" nicename="rechnernetze"><![CDATA[Rechnernetze]]></category>

		<category domain="tag"><![CDATA[Rechnerorganisation]]></category>

		<category domain="tag" nicename="rechnerorganisation"><![CDATA[Rechnerorganisation]]></category>

		<category domain="tag"><![CDATA[Stochastik]]></category>

		<category domain="tag" nicename="stochastik"><![CDATA[Stochastik]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/04/erste-uniwoche-berlebt/</guid>
<description></description>
<content:encoded><![CDATA[<center><a href="http://www.uni-klu.ac.at" target="_blank"><img src="http://www.uni-klu.ac.at/main/bilder/struktur/logo_uniklgft.gif" id="id" /></a></center>Juhu, Wochenende :)
Endlich fängt das WE wieder am Donnerstag an und nicht wie für Arbeitstreibende am Freitag Abend. Eklige Angewohnheiten..

Nun, jetzt gehts wieder. Die ersten Woche ist vorbei und mein eigentlich extrem schrecklicher Stundenplan (Perlen wie "<a href="https://wwws.uni-klu.ac.at/uniklu/studien/lvkarte.jsp?portal=true&amp;rlvkey=55331" target="_blank">Einführung in die Theoretische Informatik</a>", <a href="https://wwws.uni-klu.ac.at/uniklu/studien/lvkarte.jsp?portal=true&amp;rlvkey=57075" target="_blank">Rechnerorganisation</a> sowie <a href="https://wwws.uni-klu.ac.at/uniklu/studien/lvkarte.jsp?portal=true&amp;rlvkey=57085" target="_blank">Rechnernetze und Netzwerkprogrammierung</a>) stellt sich als überraschend zahm heraus.

Rechnerorg ist doch nicht nur theoretische Mathe sondern eher <a href="http://ti.itec.uka.de/TI-2/Spim/spim_documentation.pdf" target="_blank">MIPS-Assembler-Programmierung</a> was das ganze zwar nicht Interessanter macht, aber immerhin erträglich.
Rechnernetze und Netzwerkprogrammierung klingt sogar richtig Interesant, nämlich eine Wiederholung des <a href="http://www.ccna.de/" target="_blank">Cisco CCNA Kurses</a> den ich schonmal in der Schule gemacht habe. Mit lustigen Netzwerksimulatoren etc.
Und dann ist da noch ETI was heute Vollgas losgegangen ist und wohl der härteste Brocken das Semester wird. Das ist nämlich wirklich Mathe.

Also alles in allem garnicht mal so richtig tödlich. Die Kurse erscheinen alle halbwegs machbar, auch wenns bei einigen mehr bei anderen weniger Arbeit wird.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>52</wp:post_id>
<wp:post_date>2007-10-04 14:06:46</wp:post_date>
<wp:post_date_gmt>2007-10-04 12:06:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>erste-uniwoche-berlebt</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024099</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Simpsons meets WoW</title>
<link>http://www.tigraine.at/2007/10/04/simpsons-meets-wow/</link>
<pubDate>Thu, 04 Oct 2007 12:08:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/04/simpsons-meets-wow/</guid>
<description></description>
<content:encoded><![CDATA[<p>Sehr sehr lustige Simpsons Folge:</p>  <p><object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/mAJYQOANDCk"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/mAJYQOANDCk" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350"></embed></object></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>53</wp:post_id>
<wp:post_date>2007-10-04 14:08:54</wp:post_date>
<wp:post_date_gmt>2007-10-04 12:08:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>simpsons-meets-wow</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>I hate Java</title>
<link>http://www.tigraine.at/2007/10/06/i-hate-java/</link>
<pubDate>Sat, 06 Oct 2007 18:39:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="coding"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Rechnernetze]]></category>

		<category domain="tag" nicename="rechnernetze"><![CDATA[Rechnernetze]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/06/i-hate-java/</guid>
<description></description>
<content:encoded><![CDATA[Gut dass ich mir sicher sein kann das das nicht wirklich viele Leute lesen, sonst müsste ich wohl einen Flame-War allein wegen der Überschrift fürchten, ganz zu schweigen von dem was noch kommt.

Aber zurück zum Thema.
Gute Vorsätze fürs Semester und so wollte heute erstmalig umgesetzt werden und ich hab mich an die Rechnernetze Aufgabe rangemacht.
Die Sache fing simpel an, <a href="http://www.eclipse.org/downloads" target="_blank">Eclipse</a> runterladen und installieren, und los gehts.
Zwei vorgefertigte Klassen implementieren und jeweils eine Read und Write Methode erstellen die die Klasse auf die Festplatte als Datei schreiben würde.

Bisher eigentlich ganz simpel, und eigentlich sollte es auch so bleiben dachte ich. Löblicherweise wurde sogar ein Link zu einem <a href="http://java.sun.com/docs/books/tutorial/essential/io/datastreams.html" target="_blank">DataStream</a> Tutorial gegeben und nach einigem herumgesuche hab ich es sogar geschafft (unter Zuhilfenahme der <a href="http://java.sun.com/j2se/1.5.0/docs/api/" target="_blank">Javadoc</a>) ein halbwegs funktionierendes Programm zusammenzuzimmern.

Nun, warum hasse ich also Java?
Ein 30 Zeilen Programm hat mich fast 2 Stunden Arbeit gekostet. Herumprobieren mit dem Code, herumspielen mit der IDE, Debugger testen (Guter Tipp: <em><a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Throwable.html#printStackTrace()" target="_blank">Exception.printStackTrace()</a></em> ist dein bester Freund!)
Und das beste: Ich bin nicht fertig und habe noch 3 Punkte am Aufgabenblatt vor mir.

Denn: Nachdem der erste Teil der Aufgabe simpel war (Ein Objekt das nicht Serializable ist auf die Platte zu schreiben) scheitere ich wohl an der zweiten Aufgabenstellung. Nämlich ein Collection Objekt in eine File zu schreiben.

An und für sich auch simpel, ich habe nur keinerlei Lust den gesamten <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/io/DataOutputStream.html#writeUTF(java.lang.String)" target="_blank">Stream.writeUTF</a> Mist den ich schon für das einzelne Objekt geschriebne habe nochmal in der Collection Klasse erneut zu schreiben mit irgendwelchen armen Count variablen etc. Eklige Sache.

Nun, eigentlich kann Java garnichts dafür, unter .NET wäre die Sache ähnlich verzwickt, nur dass ich mich da mit der Sprache soviel sicherer fühle dass das ganze bis zu dem aktuellen Punkt wohl nur 10 Minuten gedauert hätte.

Übrigens, sagte ich schon dass ich das neue Eclipse ziemlich gut finde? Vor allem das Word-Hopping :). Mit CRTL+Pfeiltaste kommt man innerhalb eines Wortes anhand des <a href="http://en.wikipedia.org/wiki/Camel_case" target="_blank">Camel Casings</a> weiter. Also bis zum nächsten großgeschriebenen Wort (genial wenn alle Variablen z.B. strInputParam2 etc heißen)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>55</wp:post_id>
<wp:post_date>2007-10-06 20:39:07</wp:post_date>
<wp:post_date_gmt>2007-10-06 18:39:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>i-hate-java</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1212933638</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2455</wp:comment_id>
<wp:comment_author><![CDATA[Renè]]></wp:comment_author>
<wp:comment_author_email>rglanzer@oase.ag</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>194.177.153.130</wp:comment_author_IP>
<wp:comment_date>2009-02-10 09:44:38</wp:comment_date>
<wp:comment_date_gmt>2009-02-10 14:44:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ich würde sagen, einem eingefleischten Java Programmieren würde es mit der gleichen Aufgabenstellung wohl auch in C# so ergehen wir Dir in Java. Deshalb kann man doch nicht gleich eine ganze Sprache hassen :-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Mathe 1 Daniel 0</title>
<link>http://www.tigraine.at/2007/10/07/mathe-1-daniel-0/</link>
<pubDate>Sun, 07 Oct 2007 15:05:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Mathematik]]></category>

		<category domain="tag" nicename="mathematik"><![CDATA[Mathematik]]></category>

		<category domain="tag"><![CDATA[Stochastik]]></category>

		<category domain="tag" nicename="stochastik"><![CDATA[Stochastik]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/07/mathe-1-daniel-0/</guid>
<description></description>
<content:encoded><![CDATA[Sagte ich schon, dass ich Gott für den freien Mittwoch danke?
Ja! Mittwoch ist Feiertag für das faule Pack der Studenten und ich erspare mir Rechnernetze, Morphosyntax und Rechnerorg!

Dafür bleibt mir aber Stochastik und ETI nicht erspart, und auch wenn uns das erste Aufgabenblatt in Stochastik als "Aufwärmübung" verkauft wurde, scheitere ich schon wieder daran.

Ok, noch stellen mich Aufgabenstellungen wie diese
<blockquote>In einem Raum liegen wild durcheinander f¨unf Paar Schuhe. In der Nacht gehen Sie
in diesen Raum und greifen wahllos vier Schuhe heraus. Wieviel M¨oglichkeiten gibt
es, daß Sie nur rechte Schuhe erwischt haben?
Und wieviel M¨oglichkeiten gibt es f¨ur 2 rechte und 2 linke?</blockquote>
nicht vor absolut unlösbare Probleme. Aber ohne mein Mathebuch, das ich Beni geborgt habe, wird sich da wohl nichts tun. Im Wiki steht nämlich nur absolut unverständlicher Nonsense der meiner Meinung nach absolut unverständlich und auch unlernbar ist. Wie z.B. so vielsagende Formeln wie:

<a href="http://de.wikipedia.org/wiki/Kombinatorik" target="_blank"><img src="http://upload.wikimedia.org/math/4/b/4/4b4635fa9d1f25c10826bb0437fdf66b.png" /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>59</wp:post_id>
<wp:post_date>2007-10-07 17:05:36</wp:post_date>
<wp:post_date_gmt>2007-10-07 15:05:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mathe-1-daniel-0</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024106</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>9</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>emailme@uboot.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2007-10-08 22:37:36</wp:comment_date>
<wp:comment_date_gmt>2007-10-08 20:37:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hihi
..:):) seite vier in meinem mathe buch... das ist seeehr lange her; irgendwann hab ich das sogar verstanden (blöd nur das man irgendwann auch die mathe 2 prüfung machen und das dann auch wieder verstehen sollte ...das heißt so kompliziert ist es ja nicht aber was nun geschieht wenn k größer n will ich mir jetzt auf die schnelle nicht durchdenken ;) )

manchmal hats geholfen: www.mathe-online.at
oder analog: mathematik für ingenieure von lothar papula - der prof hat zwar bei meinen beweisansätzen die hände über dem kopf zusammengeschlagen aber im grunde waren sie richtig und im gegensatz zum skript war das buch einigermaßen in deutscher sprache abgefasst. 
die uni klagenfurt hat zwar nur die zugehörige formelsammlung (die auch ganz hilfreich seien kann) aber vielleicht klappt es ja über fernleihe sonst -solltest Du je nach wien kommen - kannst Du ja hier ein buch abstauben.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.43</wp:comment_author_IP>
<wp:comment_date>2007-10-08 22:57:02</wp:comment_date>
<wp:comment_date_gmt>2007-10-08 20:57:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Bei meinem Mathe buch ist es seite 381 :)

Beni hat mir gestern Abend das Mathe Buch vorbeigebracht. D.h. ich kann morgen den ganzen Tag fröhlich strebern ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>14</wp:comment_id>
<wp:comment_author><![CDATA[mortis]]></wp:comment_author>
<wp:comment_author_email>beni.k@gmx.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.115.131.197</wp:comment_author_IP>
<wp:comment_date>2007-10-09 22:27:14</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 20:27:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[aargh ... ich hab grad 2 h gebraucht um das erste analysis beispiel zu lösen .. und mir fehlen noch 5 ... soviel dazu ;))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>15</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.43</wp:comment_author_IP>
<wp:comment_date>2007-10-09 23:14:51</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 21:14:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ich fühle mit dir.. ich bin selbst noch nit durch mit dem Mathe scheiss :( 

Und dabei wäre morgen so schön frei..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>16</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.43</wp:comment_author_IP>
<wp:comment_date>2007-10-09 23:30:01</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 21:30:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ach übrigens, gratz zu deinem inet in graz :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>raid.jpg</title>
<link>http://www.tigraine.at/2007/10/07/away-from-wow/raidjpg/</link>
<pubDate>Sun, 07 Oct 2007 20:41:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/raid.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>60</wp:post_id>
<wp:post_date>2007-10-07 22:41:31</wp:post_date>
<wp:post_date_gmt>2007-10-07 20:41:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>raidjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>61</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/raid.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/raid.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:535;s:6:"height";i:188;s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/raid.jpg";s:5:"thumb";s:18:"raid.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Away from WoW</title>
<link>http://www.tigraine.at/2007/10/07/away-from-wow/</link>
<pubDate>Sun, 07 Oct 2007 20:41:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/07/away-from-wow/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/raid.jpg" alt="raid" style="border: 0px none " id="id" border="0" height="188" width="535" />

Noch 80 Minuten Raidzeit über und ich hab einfach keinerlei Lust mehr.
Eigentlich hatte ich ja gehofft der Raid heute findet überhaupt nicht statt. Aber wir haben dann doch mit 22 Leuten oder so losgelegt, Voidreaver gekillt mit 23 und dann mit 24 Al'ar. Voidreaver hat 3 Trys und Al'ar 5 gekostet. Während die Stimmung von Stunde zu Stunde weiter in den Keller ging.

Soweit runter, dass sogar wer einfach den Raid verlassen hat. Klari will wohl aufhören in nächster Zeit und Ichi hat schon fix gesagt, dass er sich ne Pause gönnen muss.

Und verdammt: <strong>ER HAT RECHT!</strong>

Es nervt nicht nur elendiglich, es ermüdet.
WoW ist ja an sich ein recht geniales Spiel, aber wenn man den Zwang hast 3x die Woche für insgesamt 14 Stunden einzuloggen (obwohl null Lust), verliert man einfach sämtliche Motivation und brennt aus.

Aber ich habe dem Raid die Zusage gegeben sie zu unterstützen, während der Maintank auf Reha ist und daran werde ich mich wohl halten müssen.
Schlimm nur, dass ich eigentlich die Raidzeit brauche um halbwegs stressfrei mit meinem Uni zeugs zurande zu kommen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>61</wp:post_id>
<wp:post_date>2007-10-07 22:41:31</wp:post_date>
<wp:post_date_gmt>2007-10-07 20:41:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>away-from-wow</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024116</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Blog redesign</title>
<link>http://www.tigraine.at/2007/10/07/blog-redesign/</link>
<pubDate>Sun, 07 Oct 2007 20:47:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[Kubrick]]></category>

		<category domain="tag" nicename="kubrick"><![CDATA[Kubrick]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Theme]]></category>

		<category domain="tag" nicename="theme"><![CDATA[Theme]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/07/blog-redesign/</guid>
<description></description>
<content:encoded><![CDATA[Nun, wer sich mit <a href="http://www.wordpress.org" target="_blank">Wordpress </a>auskennt, wird wohl schon gemerkt haben, dass ich mir bisher noch nicht wirklich viel angetan habe, sondern einfach ein Standard <a href="http://binarybonsai.com" target="_blank">Kubrick Theme </a>mit einem anderen Header-Bild hergenommen habe.

Nun, ich gelobe Besserung :)
Während des heutigen Raids bin ich nämlich über das <a href="http://www.revolutiontheme.com/" target="_blank">Revolution Theme</a> gestolpert und ich muss mir sagen, dass es mir extrem gut gefällt.

Leider kostet Revolution 60$, und entspricht auch nicht zu 100% dem was ich mir von meinem Blog erwarte. Also bleibt nur selbst was ähnliches coden :)

Sollte es jemals fertig werden, erfährt ihr es wohl als erste :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>62</wp:post_id>
<wp:post_date>2007-10-07 22:47:12</wp:post_date>
<wp:post_date_gmt>2007-10-07 20:47:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blog-redesign</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>rocksuccess.jpg</title>
<link>http://www.tigraine.at/2007/10/08/java-liegt-am-boden-und-wird-ausgezhlt/rocksuccessjpg/</link>
<pubDate>Mon, 08 Oct 2007 16:21:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/rocksuccess.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>63</wp:post_id>
<wp:post_date>2007-10-08 18:21:45</wp:post_date>
<wp:post_date_gmt>2007-10-08 16:21:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rocksuccessjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>64</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/rocksuccess.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/rocksuccess.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:638;s:6:"height";i:292;s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/rocksuccess.jpg";s:5:"thumb";s:25:"rocksuccess.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Java liegt am Boden und wird ausgezählt!</title>
<link>http://www.tigraine.at/2007/10/08/java-liegt-am-boden-und-wird-ausgezhlt/</link>
<pubDate>Mon, 08 Oct 2007 16:21:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="coding"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Rechnernetze]]></category>

		<category domain="tag" nicename="rechnernetze"><![CDATA[Rechnernetze]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/08/java-liegt-am-boden-und-wird-ausgezhlt/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.youtube.com/watch?v=EADM_Ak3GTg" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/rocksuccess.jpg" alt="Rocky Balboa" style="border: 0px none " id="id" border="0" /></a>

Juhu, ich habs geschafft!
Ich habe das Aufgabenblatt von Rechnernetze geschafft.

Was für eine Leistung! Wenn man bedenkt, dass ich fast 2 Tage mit dem Dämon Java kämpfe, sollte ich vielleicht ernsthaft in Erwägung ziehen, das Land zu verlassen und irgendwo in Kolumbien mein Leben als Kaffeebauer zu verbringen.

Aber was einen nicht umbringt, macht einen nur härter, und ich glaube mittlerweile den Bogen rauszuhaben. Mein Programm kann sinnlose xy Daten verschlüsselt und komprimiert auf die Platte schreiben.

Übrigens sollte ich wohl den LV Leitern sagen, dass es komplett idiotisch ist, Daten zu verschlüsseln und anschließend zu komprimieren. Verschlüsselte Daten haben keine Lücken mehr zwischen den Bits, die man komprimieren könnte (Gewinn durchs komprimieren also gleich 0).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>64</wp:post_id>
<wp:post_date>2007-10-08 18:21:45</wp:post_date>
<wp:post_date_gmt>2007-10-08 16:21:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>java-liegt-am-boden-und-wird-ausgezhlt</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024178</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Coden ohne Nikotin</title>
<link>http://www.tigraine.at/2007/10/08/coden-ohne-nikotin/</link>
<pubDate>Mon, 08 Oct 2007 17:29:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Nichtrauchen]]></category>

		<category domain="tag" nicename="nichtrauchen"><![CDATA[Nichtrauchen]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/08/coden-ohne-nikotin/</guid>
<description></description>
<content:encoded><![CDATA[<center><a href="http://www.ownatron.com/?m=20070907" target="_blank"><img src="http://www.ownatron.com/wp-content/uploads/2007/09/cigarettes.JPG" id="id" /></a></center>Nun, dass ich seit bald 2 Monaten Nichtraucher bin, ist wohl keinem entgangen (einer der Gründe warum ich soviel Zeit mit dem Blog hier verbringe).Dabei ist mir aber entgangen, dass ich, seit ich nicht mehr rauche, auch keine einzige Zeile Sourcecode produziert habe. Und seit gestern weiß ich auch warum: Die Versuchung!

Die Gewohnheit schlägt durch und man wünscht sich jedesmal, wenn etwas nicht funktioniert oder man keine Ahnung hat, eine Zigarette herbei.

Dem Ganzen wird momentan mit Teetrinken entgegengewirkt, und wenn man sich erstmal nicht mehr ablenken lässt, muss ich sagen, ist man sogar bei weitem produktiver als sonst. Immerhin fallen die Rauchpausen weg. :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>65</wp:post_id>
<wp:post_date>2007-10-08 19:29:12</wp:post_date>
<wp:post_date_gmt>2007-10-08 17:29:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>coden-ohne-nikotin</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>11</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2007-10-09 17:59:23</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 15:59:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[wenn man sich ablenken muss könnte man z.b. folgendes basteln: http://www.metacafe.com/watch/756433/laser_flashlight_hack/]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2007-10-09 18:02:10</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 16:02:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[wer böses denkt und dem teil leistung zutraut könnte es möglicherweise in verbindung mit der erfindung des rades; automobilen fortbewegungsmitteln und telekom austria service mitarbeitern bringen]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.43</wp:comment_author_IP>
<wp:comment_date>2007-10-09 19:37:35</wp:comment_date>
<wp:comment_date_gmt>2007-10-09 17:37:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[SIR ! Ich befürchte Sie sind vor Macht verrückt geworden !
NATÜRLICH ! Haben sie schonmal versucht ohne Macht verrückt zu werden ? Das ist langweilig ! 
Niemand hört einem zu !]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>nightbane.jpg</title>
<link>http://www.tigraine.at/2007/10/12/entspannte-retro-abende-in-wow/nightbanejpg/</link>
<pubDate>Thu, 11 Oct 2007 22:06:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/nightbane.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>66</wp:post_id>
<wp:post_date>2007-10-12 00:06:30</wp:post_date>
<wp:post_date_gmt>2007-10-11 22:06:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>nightbanejpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>67</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/nightbane.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/nightbane.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:676;s:6:"height";i:321;s:14:"hwstring_small";s:23:"height='60' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/nightbane.jpg";s:5:"thumb";s:23:"nightbane.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Entspannte Retro-Abende in WoW</title>
<link>http://www.tigraine.at/2007/10/12/entspannte-retro-abende-in-wow/</link>
<pubDate>Thu, 11 Oct 2007 22:06:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/12/entspannte-retro-abende-in-wow/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/nightbane.jpg" id="id" style="border-width: 0px" alt="nightbane" border="0" />

Hmm.. Also heute fiel der Raid aus.

Was passiert? Spontan organisieren wir eine anderen Raid! yay.

Keine Ahnung welcher Teufel mich geritten hat zuzusagen für die Kollegen in Kharazan zu Raiden. Aber im Endeffekt haben wirs dann doch getan. Losgezogen sind wir mit der Creme de la Creme:
Huriath, Andokay, Akhara, Bothvar, Holli, Ole, Ungol, Schatenzunge, Grecko und meine Wenigkeit.

Da Grecko mit seinem Schurken mit war und Schaten mit ihrem Heal-Schammy endete das ganze in einer 3 Melee DPS, 1 Shadowpriest und 5 Healer Gruppe. Trotzdem war der DPS gleich gut wie sonst mit nem 6-7 DPS Setup und die Healer haben sich permanent über Arbeitsmangel aufgeregt. :)

Ganz entspannt, ganz angenehm haben wir während im TS gequatscht wurde nach und nach Kharazan gecleart :)

Irgendwie hat das ganze dann noch so eine Eigendynamik entwickelt dass wirs gleich komplett gecleart haben, inklusive Nightbane, Netherspite und Attumen (Bosse die wir sonst eigentlich immer weggelassen haben).

Alles in allem, war sogar richtig Spaßig. Zwar hätte ich besser das neue ETI Übungsblatt lösen sollen, aber man gönnt sich ja sonst nix im Leben.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>67</wp:post_id>
<wp:post_date>2007-10-12 00:06:30</wp:post_date>
<wp:post_date_gmt>2007-10-11 22:06:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>entspannte-retro-abende-in-wow</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024182</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>uncle-imdb.jpg</title>
<link>http://www.tigraine.at/2007/10/12/shame-on-you-orf/uncle-imdbjpg/</link>
<pubDate>Fri, 12 Oct 2007 02:02:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/uncle-imdb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>68</wp:post_id>
<wp:post_date>2007-10-12 04:02:24</wp:post_date>
<wp:post_date_gmt>2007-10-12 02:02:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>uncle-imdbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>69</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/uncle-imdb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/uncle-imdb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1024;s:6:"height";i:666;s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/uncle-imdb.jpg";s:5:"thumb";s:24:"uncle-imdb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Shame on you ORF</title>
<link>http://www.tigraine.at/2007/10/12/shame-on-you-orf/</link>
<pubDate>Fri, 12 Oct 2007 02:02:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Film]]></category>

		<category domain="tag" nicename="film"><![CDATA[Film]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[ORF]]></category>

		<category domain="tag" nicename="orf"><![CDATA[ORF]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Sinnlos]]></category>

		<category domain="tag" nicename="sinnlos"><![CDATA[Sinnlos]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/12/shame-on-you-orf/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.imdb.com/gallery/mptv/1367/Mptv/1367/9948_0009.jpg.html?hint=tt0057765" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/uncle-imdb.jpg" alt="(c)IMDB.com" style="border: 0px none " id="id" border="0" /></a>

Nun, ich bin wohl einer der wenigen Leute die nur ORF1 und ORF2 haben und trotzdem halbwegs glücklich leben können.
Dementsprechend bin ich auch sicherlich der einzige der die Filme zwischen 23:30 und 5 Uhr morgens schaut die der ORF da bringt.

Der Abend hatte ja gut angefangen, die typischen Wiederholungen vom Hauptabend: Dr. House, CSI etc.
Und dann ist es 3:10 und der ORF macht Schluss für heute. Zu seinen Glanzzeiten wäre da ein guter alter Bud Spencer Film wie 4 Fäuse gegen Rio gekommen, oder ein guter Western, oder Columbo oder Mord ist ihr Hobby.
Und was bringt der ORF um 3:10?

<a href="http://www.imdb.com/title/tt0061858/" target="_blank">The Karate Killers</a>!

Also, keiner hat eine Ahnung was das ist oder?
Da ich letzte Woche schonmal zwischen 3 und 5 vor der Couch gegammelt habe (und schockiert war) dachte ich ich guck mal im www nach was man über diese miesen Filme findet:
<ol>
	<li>Es geht um eine Organisation namens UNCLE der die beiden Agenten Solo und Kuryakin angehören</li>
	<li>UNCLE kämpft unentwegt gegen DROSSEL</li>
	<li>Das ganze wurde in den 60ern gedreht</li>
	<li>Das ganze war Ursprünglich eine TV Serie gegen die sogar Knight Rider niveauvoll erscheint</li>
	<li>Star Trek: ToS war ein Effektfeuerwerk verglichen mit "The Man from UNCLE" (so hieß die Serie -&gt; über 100 Folgen wurden gedreht)</li>
</ol>
Kurzum, extremste low-budget Fernsehproduktion mit mieser Story und noch viel miesen Spezialeffekten und Kampfszenen.
Das ganze fürs Kino aufgepeppt mit 1-2 bekannten Schauspielern (die dem Film rein garnichts gebracht haben) und dann ins Kino gesetzt (und als 2 neue Folgen der Fernsehserie verkauft).

Mein Gott, warum schreibe ich das hier eigentlich um 3:50?

Weil ich schwer am überlegen bin ob es nicht sinnvoll wäre mir SAT zuzulegen!!
Kann doch nicht sein dass keinerlei annehmbares Fernsehprogramm um 4 Uhr Morgens läuft. Klar, ein Film der 50 Jahre alt ist kostet nichts mehr weil es wahrscheinlich keinen mehr gibt der Geld für die Rechte verlangen könnte. Oder meinetwegen hat der ORF sich diese Rechte schon vor 30 Jahren in einem Anfall geistiger Umnachtung gekauft.
Aber das entschuldigt noch lange nicht dass in 3 Wochen 3x solch ein Schrott ausgestrahlt wird. Das war jetzt schon mein 3ter "Man From UNCLE" Film und ich fand sie alle super-mies.

Klar dass die Quoten sinken, wenn das Programm so mies wird dass sogar einer wie ich der keine andere Wahl hat die Flucht ergreift.
(Und ich sage euch, mich um 4 Uhr morgens vom Fernseher wegzuholen wenn ich mich in eine Decke eingewickelt habe ist wirklich eine Leistung)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>69</wp:post_id>
<wp:post_date>2007-10-12 04:02:24</wp:post_date>
<wp:post_date_gmt>2007-10-12 02:02:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>shame-on-you-orf</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>R6:V durchgespielt</title>
<link>http://www.tigraine.at/2007/10/12/r6v-durchgespielt/</link>
<pubDate>Fri, 12 Oct 2007 11:35:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Rainbow Six]]></category>

		<category domain="tag" nicename="rainbow-six"><![CDATA[Rainbow Six]]></category>

		<category domain="tag"><![CDATA[Shooter]]></category>

		<category domain="tag" nicename="shooter"><![CDATA[Shooter]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/12/r6v-durchgespielt/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.joystiq.com/media/2006/03/rainbow6_vegas.jpg" id="id" />

Eigentlich hatte ich das Spiel gedanklich schon abgehakt. Die eine Stelle mit den 20 Gegnern die auf einen zustürmen und die Kameraden ausräuchern wollen erschien einfach zu schwer und ich habs nach knapp 2.5 Stunden gelassen und das Game für nen Monat in die Ecke gestellt (<a href="http://www.tigraine.at/2007/09/12/rainbow-six-vegas/" target="_blank">Wie schon hier beschrieben</a>).

Aber nun hab ichs endlich doch noch geschafft :)
Ich bin endlich durch bei dem verdammten Shooter und freue mich ehrlich gesagt schon auf eine Fortsetzung.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>70</wp:post_id>
<wp:post_date>2007-10-12 13:35:11</wp:post_date>
<wp:post_date_gmt>2007-10-12 11:35:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>r6v-durchgespielt</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Live Poker muss nicht immer gefallen</title>
<link>http://www.tigraine.at/2007/10/13/live-poker-muss-nicht-immer-gefallen/</link>
<pubDate>Sat, 13 Oct 2007 01:50:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Poker]]></category>

		<category domain="tag" nicename="poker"><![CDATA[Poker]]></category>

		<category domain="tag"><![CDATA[Turnier]]></category>

		<category domain="tag" nicename="turnier"><![CDATA[Turnier]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/13/live-poker-muss-nicht-immer-gefallen/</guid>
<description></description>
<content:encoded><![CDATA[Wie schon <a href="http://www.tigraine.at/2007/09/17/showdown-pokersportverein/" target="_blank">hier</a> berichtet bin ich seit einiger Zeit Mitglied beim Poker Verein Showdown.

Und heute war das erste Meisterschaftsspiel im Verein von dem ich gerade zurückkehre.
Das ganze lief als 53 Personen 5 Table Turnier mit 3 Rebuys und 1 Addon nach dem dritten Level.

Rebuy war 5&euro; und Addon kostete auch 5&euro; (Von beidem wurde kräftig gebrauch gemacht).

Das war auch schon mein erster großer Kritikpunkt: Rebuy.
Ich verstehe einfach nicht warum man Rebuy Turniere spielt. Es ist einfach nur eklig wenn man den ersten nach 2 Händen All-In sieht weil er fix damit rechnet sich noch einen Stack zu kaufen.
Genauso wie ich gezwungen war mir ein 5&euro; Addon zu kaufen um überhaupt noch mitspielen zu können (Ich hatte 4k und das Addon war 4k).
Unverständlich wirklich, ich meine: Die Rebuy Phase dauert 1.5 Stunden und kein einziger Spieler hat das Turnier verlassen. Alle sind geblieben und haben ihre Rebuys genutzt um weiterzuspielen.
Kaum war aber die Rebuy Phase vorbei, spielten alle plötzlich super-tight und haben halbwegs "richtig" Poker gespielt.
Also ist in meinen Augen die Rebuy Phase nichts anderes als 1.5 Stunden sinnloses Chips hin und her schieben. Das quasi verpflichtende Addon ebnet dann den Weg ins richtige Spiel und dann gehts von da an weiter (50 Teilnehmer nach 3 Blindlevels!!! Da stellts einem die Haare auf).

Außerdem muss ich gestehen war ich von den Mitspielern zum größten Teil nicht wirklich begeistert.
Warum sich bei solchen Events immer die komischten Leute zusammenfinden weiß ich nicht. Faktum ist aber dass für meinen Geschmack um einiges zuviel geschrien wurde, um einiges zuviel getrunken und warum sich die Leute nicht an das vorgeschriebene Rauchverbot an den Tischen halten ist mir auch absolut schleierhaft.

Ob ich das nächste mal hingehe falls sich die Struktur nicht ändert steht jedenfalls in den Sternen. Mit den sinnlosen Rebuys und Addons macht es jedenfalls herzlich wenig Sinn die ersten 1.5 Stunden überhaupt zu spielen. Zu spät kommen und mit Addon die Endrunde angehen erzielt eigentlich genau den selben Effekt wie normal mitspielen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>71</wp:post_id>
<wp:post_date>2007-10-13 03:50:14</wp:post_date>
<wp:post_date_gmt>2007-10-13 01:50:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>live-poker-muss-nicht-immer-gefallen</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024135</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Telekom Austria schockiert</title>
<link>http://www.tigraine.at/2007/10/15/telekom-austria-schockiert/</link>
<pubDate>Mon, 15 Oct 2007 11:39:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[ADSL]]></category>

		<category domain="tag" nicename="adsl"><![CDATA[ADSL]]></category>

		<category domain="tag"><![CDATA[Internet]]></category>

		<category domain="tag" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/15/telekom-austria-schockiert/</guid>
<description></description>
<content:encoded><![CDATA[Ich wusste ja dass der Wind etwas rauher geworden ist am ISP Markt hier in Österreich. Aber dass die Telekom jetzt ernsthaft arbeiten muss war mir absolut neu.Sandra hat nämlich letzten Montag ihre Bestellung für das neue AonSpeed Easy abgegeben und bereits am Donnerstag war das Paket mit Router und Splitter bei ihr. Schockierend!
Als ich damals mein AonSpeed geordert habe (Gott sei dank hab ich das hinter mir) da habe ich noch 6 Wochen auf mein Modem gewartet.

Einziger Haken an der Sache: Das Modem ist zwar Ethernet, kann aber nur VPN und kein PPoE, was es mir wohl unmöglich machen wird einen <a href="http://www.dd-wrt.com/dd-wrtv2/index.php" target="_blank">DD-WRT</a> Router zu installieren.
Andererseits ist das eigentlich auch kein Problem, denn sollte ich jemals dort einziehen und einen W-Lan Router installieren wollen ist meine erste Amtshandlung als Hausherr das anmelden eines neuen xDSL Anschlusses bei Inode (sofern das bis dahin dort verfügbar ist)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>72</wp:post_id>
<wp:post_date>2007-10-15 13:39:59</wp:post_date>
<wp:post_date_gmt>2007-10-15 11:39:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>telekom-austria-schockiert</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Doch kein 24&quot; Widescreen Bildschirm</title>
<link>http://www.tigraine.at/2007/10/17/doch-kein-24-widescreen-bildschirm/</link>
<pubDate>Wed, 17 Oct 2007 21:04:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Gadget]]></category>

		<category domain="tag" nicename="gadget"><![CDATA[Gadget]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Screen]]></category>

		<category domain="tag" nicename="screen"><![CDATA[Screen]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/17/doch-kein-24-widescreen-bildschirm/</guid>
<description></description>
<content:encoded><![CDATA[Nun, auch wenn manche schon die Suchtrupps losschicken wollten: Mir geht es gut und ich poste auch wieder :)

Eigentlich hatte ich ja das Geld schon in der Hand und war fest entschlossen mir das Schmuckstück mit seiner verführerischen X-Black Beschichtung und seiner 1900x1200 Auflösung zu kaufen.

Aber irgendwie hatte den <a href="http://geizhals.at/a262807.html" target="_blank">Schirm</a> weder Saturn, noch Media noch Cosmos oder einer der Online Shops lagernd also hatte ich zum Glück eine Nacht Zeit um darüber zu reflektieren.

Und ich habe festgestellt dass es keinen Sinn macht aus folgenden Gründen:
<ul style="list-style-type: disc; margin-left: 10px">
	<li>Meine Grafikkarte schafft aktuelle Spiele garantiert nicht auf 1900x1200</li>
	<li>Wenn ich DVDs oder Filme schaue dann auf meinem <a href="http://www.toshiba.de/consumer/content/defaultid1_1_id3_170.aspx" target="_blank">37" LCD Fernseher</a></li>
	<li>Wenn ich mir jemals eine XBox oder PS3 kaufe dann spiele ich damit sicher auf meinem Fernseher</li>
	<li>Fürs Surfen und ein wenig Programmieren ist 24" einfach vollständig überdimensioniert (Mein Blog ist 960 Pixel breit, auf einer 1900 Pixel breiten Auflösung!)</li>
</ul>
Wenn man bedenkt dass die XBox360 nur noch 250&euro; Kostet und die <a href="http://www.amazon.de/gp/product/B000WV0WZK/ref=amb_link_48124365_/028-7999321-9180511?pf_rd_m=A3JWKAKR8XB7XF&amp;pf_rd_s=center-2&amp;pf_rd_r=157TCRH22SM4DXRFZA7T&amp;pf_rd_t=101&amp;pf_rd_p=157131791&amp;pf_rd_i=195012011" target="_blank">PS3 auch gerade auf 400&euro; gefallen</a> ist

Was natürlich eindeutig für den Monitor spricht ist dass das Bild absolut genial ist und X-Black echt super aussieht. Und wenn man bedenkt dass ich doch sehr sehr viel Zeit vor diesem Bildschirm verbringe zahlt es sich dann doch wieder aus.
Aber für 500&euro; kriegt man doch einiges an Zeug auf dieser weiten großen Welt, also werde ich bei meinen 19" bleiben und in einem halben Jahr oder so auf 24" umsteigen wenn das ganze etwas billiger geworden ist.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>73</wp:post_id>
<wp:post_date>2007-10-17 23:04:09</wp:post_date>
<wp:post_date_gmt>2007-10-17 21:04:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>doch-kein-24-widescreen-bildschirm</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>105</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Wiederstand ist zwecklos]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/12/19/wiederstand-ist-zwecklos/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-12-19 12:38:03</wp:comment_date>
<wp:comment_date_gmt>2007-12-19 10:38:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] selbst zugute halten dass ich es immerhin 2 Monate lang ausgehalten habe. Und obwohl ich schonmal festgestellt habe dass ich ihn eigentlich nicht brauche hab ich mir doch einen 24&quot; Widescreen von HP [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Die Mikrowelle auf meinem Nachtk&#228;stchen</title>
<link>http://www.tigraine.at/2007/10/17/die-mikrowelle-auf-meinem-nachtkstchen/</link>
<pubDate>Wed, 17 Oct 2007 21:30:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Gadget]]></category>

		<category domain="tag" nicename="gadget"><![CDATA[Gadget]]></category>

		<category domain="tag"><![CDATA[Geek-Stuff]]></category>

		<category domain="tag" nicename="geek-stuff"><![CDATA[Geek-Stuff]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/17/die-mikrowelle-auf-meinem-nachtkstchen/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://store.chumby.com/" target="_blank"><img src="http://store.chumby.com/images/products/latte_front_285.jpg" id="id" /></a>

Oder besser gesagt.. Wie wird man zum echten "Geek"?

<strong>Indem man sich den neuen </strong><a href="http://store.chumby.com/" target="_blank"><strong>Chumby</strong></a><strong> Super-Radiowecker kauft!</strong>
<h5>Moment, was ist das Teil?</h5>
Im Grunde ist es nichts anderes als ein 350 mhz CPU zusammen mit einem 3.5 Zoll Display und einer W-Lan Karte. Der Clou dran ist dass man das Teil mit allen möglichen Widgets aufladen kann und dann wird aus dem Radiowecker fürs Nachtkästchen plötzlich ein RSS-Reader, Youtube Videoplayer, Wetterbrowser etc pp.

Das ganze baut darauf dass die User mit dem SDK eigene Widgets erstellen und somit den Chumby zum ultimativen Info-Panel macht.

Bedient wird das ganze über einen Touchscreen und einen Druck Sensor (Das Gehäuse ist aus Leder und kann stellenweise gequetscht werden).

Der Haken? Nun, ich weiß nicht wie ihr darüber denkt, aber meine Freundin verdreht schon die Augen wenn ich von einem Laptop im Schlafzimmer rede, ich will garnicht wissen was sie über eine W-Lan Station auf meinem Nachtkästchen denkt. 2 Handys sind genug sage ich und werde wohl fürs erste bei meinem Radiowecker aus der Steinzeit bleiben (Omg er ist wirklich so alt dass ich nichtmal daran denken brauche einen Produktlink zu suchen, den hab ich glaub ich von Opa vor knapp 15 Jahren geschenkt bekommen oder so)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>74</wp:post_id>
<wp:post_date>2007-10-17 23:30:15</wp:post_date>
<wp:post_date_gmt>2007-10-17 21:30:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>die-mikrowelle-auf-meinem-nachtkstchen</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ETI Übungsblatt 3</title>
<link>http://www.tigraine.at/2007/10/18/wer-macht-sowas/eti-ubungsblatt-3/</link>
<pubDate>Thu, 18 Oct 2007 00:25:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/blatt03.pdf</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>76</wp:post_id>
<wp:post_date>2007-10-18 02:25:13</wp:post_date>
<wp:post_date_gmt>2007-10-18 00:25:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>eti-ubungsblatt-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>75</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/blatt03.pdf</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/blatt03.pdf</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ETI Skriptum Grundlagen</title>
<link>http://www.tigraine.at/2007/10/18/wer-macht-sowas/eti-skriptum-grundlagen/</link>
<pubDate>Thu, 18 Oct 2007 00:27:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/grundlagen.pdf</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>77</wp:post_id>
<wp:post_date>2007-10-18 02:27:10</wp:post_date>
<wp:post_date_gmt>2007-10-18 00:27:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>eti-skriptum-grundlagen</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>75</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/grundlagen.pdf</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/grundlagen.pdf</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Wer macht sowas?</title>
<link>http://www.tigraine.at/2007/10/18/wer-macht-sowas/</link>
<pubDate>Thu, 18 Oct 2007 00:32:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/18/wer-macht-sowas/</guid>
<description></description>
<content:encoded><![CDATA[Verzweiflung macht sich breit um 2 Uhr Nachts.

Ich komme mit meinem ETI Blatt einfach nicht zurande und hab nun endgültig den Hut drauf geschmissen.
Nach dem PR werde ich wohl wieder schlauer sein und nächste Woche sollte ich mal bei der Vorlesung vorbeischauen, vielleicht hilfts :)

Hier übrigens das Übungsblatt für alle diejenigen die es mal selbst versuchen wollen
<blockquote><a href="http://www.tigraine.at/wp-content/uploads/2007/10/blatt03.pdf">Übungsblatt 3</a></blockquote>
Ach ja, und für jeden der glaubt sein eigenes Skript ist Mist hab ich unseres mal hochgeladen gestellt.
Zweifelsohne das wohl schlechteste Skript das ich jemals gelesen habe.
<blockquote><a href="http://www.tigraine.at/wp-content/uploads/2007/10/grundlagen.pdf">Skript - Grundlagen</a></blockquote>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>75</wp:post_id>
<wp:post_date>2007-10-18 02:32:37</wp:post_date>
<wp:post_date_gmt>2007-10-18 00:32:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wer-macht-sowas</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>cod4-packshot.jpg</title>
<link>http://www.tigraine.at/2007/10/18/geladen-und-entsichert/cod4-packshotjpg/</link>
<pubDate>Thu, 18 Oct 2007 14:37:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/cod4-packshot.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>78</wp:post_id>
<wp:post_date>2007-10-18 16:37:43</wp:post_date>
<wp:post_date_gmt>2007-10-18 14:37:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod4-packshotjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>79</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/cod4-packshot.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/cod4-packshot.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:186;s:6:"height";i:266;s:14:"hwstring_small";s:22:"height='96' width='67'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/cod4-packshot.jpg";s:5:"thumb";s:27:"cod4-packshot.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Geladen und entsichert!</title>
<link>http://www.tigraine.at/2007/10/18/geladen-und-entsichert/</link>
<pubDate>Thu, 18 Oct 2007 14:37:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Call of Duty]]></category>

		<category domain="tag" nicename="call-of-duty"><![CDATA[Call of Duty]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[Demo]]></category>

		<category domain="tag" nicename="demo"><![CDATA[Demo]]></category>

		<category domain="tag"><![CDATA[Screen]]></category>

		<category domain="tag" nicename="screen"><![CDATA[Screen]]></category>

		<category domain="tag"><![CDATA[Shooter]]></category>

		<category domain="tag" nicename="shooter"><![CDATA[Shooter]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/18/geladen-und-entsichert/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/cod4-packshot.jpg" alt="Cod4 Packshot" style="border-width: 0px; float: left; margin-bottom: 10px; margin-right: 10px" id="id" border="0" height="266" width="186" /> Habe ich eigentlich schon erwähnt dass die <a href="http://www.gamershell.com/news/42407.html" target="_blank">Demo von Call of Duty 4</a> heraußen ist?

Nein? Könnte daran liegen dass ich seitdem damit beschäftigt bin in meiner Freizeit durch den Schlamm zu kriechen und virtuelle Feinde ins ebenso virtuelle Jenseits zu befördern.

Und nachdem ich nun doch schon knapp 10x durchs Demo durch bin kann ich wohl sagen: <strong>GEIL!!!!!!</strong>

Mit CoD4 erwartet uns am 6. November  der wohl hochkarätigste Shooter der letzten 2-3 Jahre. Grafisch absolut top, stimmungsvoll und eben CoD.

Und warum liebe ich Call of Duty so sehr?
Einfach weil die Entwickler nicht versuchen die allerbeste KI, Grafik oder sonstwas zu schaffen, sondern einfach darauf achten dass die gescripteten Ereignisse perfekt ins Spiel passen und dem ganzen Atmosphäre geben.
So war bereits CoD1 unübertroffen mit seinen hunderten namenlosen Kameraden die im Dienste der Atmosphäre gefallen sind :).

Ich werd mich jedenfalls gleich mal um meine Vorbestellung von CoD4 kümmern :)

Screenshots gibts unter more :)
<!--more-->

<a href="http://www.tigraine.at/wp-content/uploads/2007/10/cod4-screen.jpg" title="Call of Duty 4 Screen"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/cod4-screen.thumbnail.jpg" alt="Call of Duty 4 Screen" /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>79</wp:post_id>
<wp:post_date>2007-10-18 16:37:43</wp:post_date>
<wp:post_date_gmt>2007-10-18 14:37:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>geladen-und-entsichert</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>24</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Unreal Tournament 3!]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/10/19/unreal-tournament-3/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-10-19 18:18:21</wp:comment_date>
<wp:comment_date_gmt>2007-10-19 16:18:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] &laquo; Geladen und entsichert! [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Call of Duty 4 Screen</title>
<link>http://www.tigraine.at/2007/10/18/geladen-und-entsichert/call-of-duty-4-screen/</link>
<pubDate>Thu, 18 Oct 2007 15:24:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/cod4-screen.jpg</guid>
<description></description>
<content:encoded><![CDATA[Screenshot von der Lagebesprechung]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>80</wp:post_id>
<wp:post_date>2007-10-18 17:24:56</wp:post_date>
<wp:post_date_gmt>2007-10-18 15:24:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>call-of-duty-4-screen</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>79</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/cod4-screen.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/cod4-screen.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/cod4-screen.jpg";s:5:"thumb";s:25:"cod4-screen.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ut3.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/ut3jpg/</link>
<pubDate>Fri, 19 Oct 2007 16:18:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ut3.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>81</wp:post_id>
<wp:post_date>2007-10-19 18:18:06</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:18:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ut3jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ut3.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut3.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:177;s:6:"height";i:250;s:14:"hwstring_small";s:22:"height='96' width='67'";s:4:"file";s:64:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut3.jpg";s:5:"thumb";s:17:"ut3.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Unreal Tournament 3!</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/</link>
<pubDate>Fri, 19 Oct 2007 16:18:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[Demo]]></category>

		<category domain="tag" nicename="demo"><![CDATA[Demo]]></category>

		<category domain="tag"><![CDATA[Multiplayer]]></category>

		<category domain="tag" nicename="multiplayer"><![CDATA[Multiplayer]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Screen]]></category>

		<category domain="tag" nicename="screen"><![CDATA[Screen]]></category>

		<category domain="tag"><![CDATA[Shooter]]></category>

		<category domain="tag" nicename="shooter"><![CDATA[Shooter]]></category>

		<category domain="tag"><![CDATA[Unreal Tournament]]></category>

		<category domain="tag" nicename="unreal-tournament"><![CDATA[Unreal Tournament]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/19/unreal-tournament-3/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/ut3.jpg" id="id" style="border-width: 0px; float: left; margin-bottom: 10px; margin-right: 10px" alt="ut3" border="0" height="250" width="177" />Wow! Nachdem ich gestern den ganzen Tag vom <a href="http://www.tigraine.at/2007/10/18/geladen-und-entsichert/" target="_blank">CoD4 Demo begeistert</a> war hat mich heute das Unreal Tournament 3 Demo aus den Socken gehauen.

Den Download der Demo gibts übrigens auf <a href="http://www.4players.de/4players.php/download_info/PC-CDROM/Download/46447.html" target="_blank">4Players.de</a> und mit 750 mb hält sich die größe sehr stark im Rahmen.
Verwunderlich wenn man bedenkt dass 2 Deathmatch Maps und eine Capture the Flag Maps verfügbar sind. Und auf besagten Maps darf man gleich mal DM, TDM, CTF und Vehicle-CTF spielen.

Und dann hab ich gespielt. :)
Fazit: <strong>Gott spiele ich schlecht!</strong>

Im ersten Deathmatch bin ich direkt neben der Sniper Rifle gespawnt und habe gleich mal feststellen müssen dass ich absolut garnichts mehr treffe. Von ehemaligem CS und UT99 spieler keine Spur. Blutiger Anfänger triffts momentan wohl am allerbesten!
Dann hab ich die Minigun und die Link Gun gefunden und schon ging die Post ab (nix zielen, einfach draufhalten!).

Auch der Vehicle Capture the Flag Modus macht extrem Bock, das herumfliegen/fahren mit den Fahrzeugen ist schnell gelernt und macht danach auch extrem viel Spaß, auch wenn man sich in den meisten Fahrzeugen wie gutes Kanonenfutter fühlt weil die Bots einfach sukzessiv besser waren als ich.

So.. ich muss mal mit meinem Gamestop Verkäufer sprechen ob er nicht ein Exemplar für mich reservieren will...

Nach dem Jump gibts Screenshots

<!--more-->

<a href="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen11.jpg" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen1-thumb1.jpg" id="id" style="border-width: 0px" alt="utscreen1" border="0" height="116" width="145" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2007/10/ut21.jpg" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/ut2-thumb1.jpg" id="id" style="border-width: 0px" alt="ut2" border="0" height="116" width="145" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen31.jpg" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen3-thumb1.jpg" id="id" style="border-width: 0px" alt="utscreen3" border="0" height="116" width="145" /></a><a href="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen41.jpg" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/utscreen4-thumb1.jpg" id="id" style="border-width: 0px" alt="utscreen4" border="0" height="116" width="145" /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>90</wp:post_id>
<wp:post_date>2007-10-19 18:18:17</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:18:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unreal-tournament-3</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>utscreen1.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen1jpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen11.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>91</wp:post_id>
<wp:post_date>2007-10-19 18:19:44</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen1jpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen11.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen11.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen11.jpg";s:5:"thumb";s:24:"utscreen11.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>utscreen1-thumb.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen1-thumbjpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen1-thumb1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>92</wp:post_id>
<wp:post_date>2007-10-19 18:19:44</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen1-thumbjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen1-thumb1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen1-thumb1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:145;s:6:"height";i:116;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen1-thumb1.jpg";s:5:"thumb";s:30:"utscreen1-thumb1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ut2.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/ut2jpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ut21.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>93</wp:post_id>
<wp:post_date>2007-10-19 18:19:51</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ut2jpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ut21.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut21.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut21.jpg";s:5:"thumb";s:18:"ut21.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ut2-thumb.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/ut2-thumbjpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ut2-thumb1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>94</wp:post_id>
<wp:post_date>2007-10-19 18:19:52</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ut2-thumbjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ut2-thumb1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut2-thumb1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:145;s:6:"height";i:116;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ut2-thumb1.jpg";s:5:"thumb";s:24:"ut2-thumb1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>utscreen3.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen3jpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen31.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>95</wp:post_id>
<wp:post_date>2007-10-19 18:19:57</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen3jpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen31.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen31.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen31.jpg";s:5:"thumb";s:24:"utscreen31.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>utscreen3-thumb.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen3-thumbjpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:19:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen3-thumb1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>96</wp:post_id>
<wp:post_date>2007-10-19 18:19:57</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:19:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen3-thumbjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen3-thumb1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen3-thumb1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:145;s:6:"height";i:116;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen3-thumb1.jpg";s:5:"thumb";s:30:"utscreen3-thumb1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>utscreen4.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen4jpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:20:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen41.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>97</wp:post_id>
<wp:post_date>2007-10-19 18:20:02</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:20:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen4jpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen41.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen41.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen41.jpg";s:5:"thumb";s:24:"utscreen41.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>utscreen4-thumb.jpg</title>
<link>http://www.tigraine.at/2007/10/19/unreal-tournament-3/utscreen4-thumbjpg-2/</link>
<pubDate>Fri, 19 Oct 2007 16:20:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/utscreen4-thumb1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>98</wp:post_id>
<wp:post_date>2007-10-19 18:20:02</wp:post_date>
<wp:post_date_gmt>2007-10-19 16:20:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>utscreen4-thumbjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>90</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/utscreen4-thumb1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen4-thumb1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:145;s:6:"height";i:116;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/utscreen4-thumb1.jpg";s:5:"thumb";s:30:"utscreen4-thumb1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>reifen.jpg</title>
<link>http://www.tigraine.at/2007/10/21/winterreifen-alle-jahre-wieder/reifenjpg/</link>
<pubDate>Sun, 21 Oct 2007 15:43:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/reifen.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>99</wp:post_id>
<wp:post_date>2007-10-21 17:43:56</wp:post_date>
<wp:post_date_gmt>2007-10-21 15:43:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>reifenjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>100</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/reifen.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/reifen.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:400;s:6:"height";i:300;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/reifen.jpg";s:5:"thumb";s:20:"reifen.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Winterreifen - Alle Jahre wieder</title>
<link>http://www.tigraine.at/2007/10/21/winterreifen-alle-jahre-wieder/</link>
<pubDate>Sun, 21 Oct 2007 15:43:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Auto]]></category>

		<category domain="tag" nicename="auto"><![CDATA[Auto]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/21/winterreifen-alle-jahre-wieder/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.flickr.com/photos/10207184@N00/297532080/" target="_blank"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/reifen.jpg" alt="image by aslmusl on flickr" style="border-width: 0px" id="id" border="0" height="300" width="400" /></a>

Also alle Jahre wieder kommt der Winter.
Und alle Jahre wieder kommt der Tag an dem ich zum Händler fahren muss und die Reifen montieren lasse.

Bis auf dieses Jahr, bis vor wenigen Stunden war ich fest davon überzeugt dass es das klügste wäre die Reifen selbst zu wechseln.
Ich meine, ich habe den Vormittag mit MIPS Assembler verbracht und in Stochastik zu meiner Formel unendlich addiert, da kann es doch nicht so schwer sein 4 Reifen zu wechseln oder?

Falsch gedacht! Beim <a href="http://en.wikipedia.org/wiki/Image:Toyota_Estima_%28second_generation%29_%28front%29%2C_Serdang.jpg" target="_blank">Previa</a> bin ich überhaupt schon am Abnehmen der Radkappen gescheitert. Und als ich dann beschlossen habe erstmal beim <a href="http://de.wikipedia.org/wiki/Bild:Renault_Espace_front_20070520.jpg" target="_blank">Espace</a> anzufangen gings richtig los: Weil seit Jahren nur mehr beim Händler Reifen gewechselt wird gibt es im ganzen Haus kein passendes Werkzeug für die Reifen vom Renault. Weder ein Drehkreuz, noch einen ordentlichen Wagenheber.

Nach einigem herumtelephonieren hab ich dann doch einen Wagenheber aufgetrieben, nur um feststellen zu müssen dass es mit dem mir zur Verfügung stehenden Werkzeug unmöglich ist die Radmuttern abzumachen (Drehmomentschlüssel).

Jedenfalls sind die Reifen jetzt wieder im Auto und morgen wird der Mechaniker meine Reifen wechseln dürfen :)

<strong>Update: </strong>Praktisch wenn der Nachbar eine <a href="http://www.adautodienst.at/1265_DE-Autodienst-Partnerseiten-AutoDienst-Muench-Klagenfurt.52B98557829720e9b98726db0282a4e451ea5f0">Werkstatt </a>besitzt :).
Beide Autos hingebracht und innerhalb von 2 Tagen waren die Reifen gewechselt.
Danke an dieser Stelle noch an Robert der mich chauffiert hat :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>100</wp:post_id>
<wp:post_date>2007-10-21 17:43:57</wp:post_date>
<wp:post_date_gmt>2007-10-21 15:43:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>winterreifen-alle-jahre-wieder</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Gemein!</title>
<link>http://www.tigraine.at/2007/10/24/gemein/</link>
<pubDate>Wed, 24 Oct 2007 11:25:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Sinnlos]]></category>

		<category domain="tag" nicename="sinnlos"><![CDATA[Sinnlos]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/24/gemein/</guid>
<description></description>
<content:encoded><![CDATA[Wie gemein ist das denn?
Der <a href="http://de.wikipedia.org/wiki/Nationalfeiertag_%28%C3%96sterreich%29">26. Oktober</a> fällt auf einen Freitag :(

Und so sehr ich mich auf für die Erwerbstätigen freue die das Wochenende so ein wenig verlängert haben, so finde ich es ultimativ gemein dass ich am Freitag garkeine Uni habe und somit keine Kurse ausfallen :(

Ich wäre für eine Petition den 25ten auch zu einem Feiertag zu machen.
Und wenn wir schon dabei sind, wie wärs mit dem gesamten November?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>101</wp:post_id>
<wp:post_date>2007-10-24 13:25:52</wp:post_date>
<wp:post_date_gmt>2007-10-24 11:25:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>gemein</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The Beast in UBRS</title>
<link>http://www.tigraine.at/2007/10/24/the-beast-within/the-beast-in-ubrs/</link>
<pubDate>Wed, 24 Oct 2007 20:44:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/beast.jpg</guid>
<description></description>
<content:encoded><![CDATA[Image from WoWHead]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>104</wp:post_id>
<wp:post_date>2007-10-24 22:44:26</wp:post_date>
<wp:post_date_gmt>2007-10-24 20:44:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-beast-in-ubrs</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>102</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/beast.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/beast.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:489;s:6:"height";i:233;s:14:"hwstring_small";s:23:"height='60' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/beast.jpg";s:5:"thumb";s:19:"beast.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rechnerorganisation Übungsblatt 2</title>
<link>http://www.tigraine.at/2007/10/24/the-beast-within/rechnerorganisation-ubungsblatt-2/</link>
<pubDate>Wed, 24 Oct 2007 20:48:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ueb2.pdf</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>105</wp:post_id>
<wp:post_date>2007-10-24 22:48:13</wp:post_date>
<wp:post_date_gmt>2007-10-24 20:48:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rechnerorganisation-ubungsblatt-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>102</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ueb2.pdf</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ueb2.pdf</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rechneroganisation Lösung Blatt 2</title>
<link>http://www.tigraine.at/2007/10/24/the-beast-within/rechneroganisation-losung-blatt-2/</link>
<pubDate>Wed, 24 Oct 2007 20:51:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/blatt-2.zip</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>106</wp:post_id>
<wp:post_date>2007-10-24 22:51:08</wp:post_date>
<wp:post_date_gmt>2007-10-24 20:51:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rechneroganisation-losung-blatt-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>102</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/blatt-2.zip</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/blatt-2.zip</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The Beast within</title>
<link>http://www.tigraine.at/2007/10/24/the-beast-within/</link>
<pubDate>Wed, 24 Oct 2007 21:03:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Google]]></category>

		<category domain="tag" nicename="google"><![CDATA[Google]]></category>

		<category domain="tag"><![CDATA[Rechnerorganisation]]></category>

		<category domain="tag" nicename="rechnerorganisation"><![CDATA[Rechnerorganisation]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/24/the-beast-within/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.wowhead.com/?screenshot=view&amp;1.10430#741"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/beast.jpg" alt="The Beast in UBRS" /></a>

Mein Gott, eigentlich sollte ich mich seit knapp 4 Stunden mit Einführung in die Theoretische Informatik beschäftigen, anstatt dessen surfe ich durch die weite Welt und lese mir allen möglichen Mist über Weblogs und deren Technik durch.

Nun, verbinden wir das sinnlose mit dem noch sinnvollen: Ich dachte ich Poste mal die Lösungen zum Übungsblatt 2 von Rechnerorganisation:
<ul>
	<li><a href="http://www.tigraine.at/wp-content/uploads/2007/10/ueb2.pdf">Rechnerorganisation Übungsblatt2</a></li>
	<li><a href="http://www.tigraine.at/wp-content/uploads/2007/10/blatt-2.zip">Rechnerorganisation Lösungen Blatt 2</a></li>
</ul>
Außerdem habe ich meine Blogroll aktualisiert :).
Blogroll ist übrigens die Liste der Blogs die ich momentan abonniert habe und regelmäßig lese.

Und da wären wir auch schon bei meiner nächsten Neuentdeckung:
<a href="http://www.google.com/reader/">Google Reader</a>
Warum ich jetzt auf Google Reader umgestiegen bin sprengt jetzt aber ein wenig den Rahmen des Posts, und ich werde dem Thema morgen einen eigenen Post widmen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>102</wp:post_id>
<wp:post_date>2007-10-24 23:03:55</wp:post_date>
<wp:post_date_gmt>2007-10-24 21:03:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-beast-within</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ubuntu Desktop CD!</title>
<link>http://www.tigraine.at/2007/10/25/ubuntu-desktop-cd/</link>
<pubDate>Wed, 24 Oct 2007 23:44:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Linux]]></category>

		<category domain="tag" nicename="linux"><![CDATA[Linux]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/25/ubuntu-desktop-cd/</guid>
<description></description>
<content:encoded><![CDATA[Wow, die Welt ist voller Überraschungen.
Eigenltich wollte ich ja schon vor ewigen Zeiten im Bett sein, aber irgendwie hab ichs doch nicht ganz bis dahin geschafft und mir seitdem alles mögliche rund um Open Source, Wordpress und Linux reingezogen.

Unter anderem gings bei der ganzen Sucherei darum dass ich seit fast 2 Jahren keine Linux Distro mehr installiert habe und mir gern wiedermal anschauen würde was die momentan so alles drauf haben.

Problem hierbei ist leider dass mein schöner Windows Vista PC nicht angegriffen wird weil ich keine Lust hab dann irgendwie kompliziert das Linux und seinen Bootloader von meinem System zu kratzen (von der mangelnden Partition mal abgesehen). Und mein Windows XP Rechner ist eigentlich für Freundin und Brüder reserviert die darauf täglich WC3 und anderes Zeugs spielen.
Und man mag ja den Kindern den Spaß nicht verderben oder?

Nun, die Lösung war die ganze Zeit da draußen und hat auf ihre Entdeckung gewartet!

Es gibt von <a href="http://releases.ubuntu.com/7.10/">Ubuntu 7.10 (Gutsy Gibbon)</a> eine Desktop CD.
Also quasi ein lauffähiges Linux das von CD booten kann und das mir ermöglicht mal vorab ins neue Ubuntu reinzugucken.

Coole Sache, download läuft natürlich schon.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>107</wp:post_id>
<wp:post_date>2007-10-25 01:44:10</wp:post_date>
<wp:post_date_gmt>2007-10-24 23:44:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ubuntu-desktop-cd</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Ubuntu Boot Screen</title>
<link>http://www.tigraine.at/2007/10/25/109/ubuntu-boot-screen/</link>
<pubDate>Thu, 25 Oct 2007 16:12:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>108</wp:post_id>
<wp:post_date>2007-10-25 18:12:16</wp:post_date>
<wp:post_date_gmt>2007-10-25 16:12:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ubuntu-boot-screen</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>109</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:324;s:6:"height";i:176;s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ubuntu.JPG";s:5:"thumb";s:20:"ubuntu.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ubuntu.JPG</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ubuntu und meine neue Festplatte</title>
<link>http://www.tigraine.at/2007/10/25/109/</link>
<pubDate>Thu, 25 Oct 2007 16:20:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Harddrive]]></category>

		<category domain="tag" nicename="harddrive"><![CDATA[Harddrive]]></category>

		<category domain="tag"><![CDATA[Linux]]></category>

		<category domain="tag" nicename="linux"><![CDATA[Linux]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/25/109/</guid>
<description></description>
<content:encoded><![CDATA[<center><a href="http://de.wikipedia.org/wiki/Bild:Ubuntu-Logo.svg" title="Ubuntu Boot Screen"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu.JPG" alt="Ubuntu Boot Screen" /></a></center>So, auch wenn heute Stress pur angesagt ist musste es einfach sein.
Ich hab Ubuntu 7.10 mal wenigstens gebootet und mir die Desktop CD mal angeschaut.Wirklich schick muss man sagen. Auch wenns etwas schräg rüberkommt wenn das Teil da komplett im Ram läuft hat es doch irgendwie hervorragend funktioniert und zu meinem Entsetzen hat <a href="http://www.openoffice.org/">Openoffice.org </a>sogar docx Dokumente lesen können.Nun, der Test hat auch nur 5 Minuten gedauert bevor ich schnell entschlossen losgedüst bin um noch vor dem Nationalfeiertag eine neue <a href="http://www.ditech.at/view.aspx?sid=2716618P16P5485P127P3P2125P10P2007from&amp;pid=SA40W4&amp;kat=083&amp;menge=1">400gb Festplatte von Western Digital </a>zu kaufen.

Eigentlich bin ich ja fast sicher dass Linux sich nicht lang genug auf meiner Festplatte halten wird um wirklich eine Investition in eine neue 400gb Festplatte zu rechtfertigen. Aber andererseits, Festplattenplatz kann man nie genug kriegen oder?
Jedenfalls plane ich momentan maximal 50 Gigabyte für Ubuntu und die Swap Partition herzugeben und den Rest mit NTFS für Daten aus Windows zu formatieren.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>109</wp:post_id>
<wp:post_date>2007-10-25 18:20:50</wp:post_date>
<wp:post_date_gmt>2007-10-25 16:20:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>109</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ubuntu Installation</title>
<link>http://www.tigraine.at/2007/10/26/os-installation-und-mir-ist-nicht-langweilig/ubuntu-installation/</link>
<pubDate>Thu, 25 Oct 2007 22:17:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu-install.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>110</wp:post_id>
<wp:post_date>2007-10-26 00:17:17</wp:post_date>
<wp:post_date_gmt>2007-10-25 22:17:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ubuntu-installation</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>111</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu-install.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ubuntu-install.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:448;s:6:"height";i:167;s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/ubuntu-install.png";s:5:"thumb";s:28:"ubuntu-install.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>OS Installation und mir ist nicht langweilig!</title>
<link>http://www.tigraine.at/2007/10/26/os-installation-und-mir-ist-nicht-langweilig/</link>
<pubDate>Thu, 25 Oct 2007 22:19:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Installation]]></category>

		<category domain="tag" nicename="installation"><![CDATA[Installation]]></category>

		<category domain="tag"><![CDATA[Linux]]></category>

		<category domain="tag" nicename="linux"><![CDATA[Linux]]></category>

		<category domain="tag"><![CDATA[Live-CD]]></category>

		<category domain="tag" nicename="live-cd"><![CDATA[Live-CD]]></category>

		<category domain="tag"><![CDATA[Ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/26/os-installation-und-mir-ist-nicht-langweilig/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/ubuntu-install.png" alt="Ubuntu Installation" />

Ich hab ja schon 2 Posts über das Thema mit Ubuntu und Linux usw geschrieben. Aber dass ich einen Blogpost verfasse während ich grad mein Betriebssystem installiere hätte ich mir nicht gedacht.

Die Sache mit der Live-CD bringt echt verdammt viele Vorteile, und auch wenns nur bedeutet dass ich nebenher so sinnlose Dinge tun kann wie drüber schreiben und Internet Surfen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>111</wp:post_id>
<wp:post_date>2007-10-26 00:19:20</wp:post_date>
<wp:post_date_gmt>2007-10-25 22:19:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>os-installation-und-mir-ist-nicht-langweilig</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>27</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Ubuntu 7.10 läuft]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/10/27/ubuntu-710-lauft/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-10-27 03:03:52</wp:comment_date>
<wp:comment_date_gmt>2007-10-27 01:03:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] &laquo; OS Installation und mir ist nicht langweilig! [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Ubuntu 7.10 Tigraine Desktop</title>
<link>http://www.tigraine.at/2007/10/27/ubuntu-710-lauft/ubuntu-710-tigraine-desktop/</link>
<pubDate>Sat, 27 Oct 2007 00:50:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/bildschirmfoto.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>113</wp:post_id>
<wp:post_date>2007-10-27 02:50:46</wp:post_date>
<wp:post_date_gmt>2007-10-27 00:50:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ubuntu-710-tigraine-desktop</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>112</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/bildschirmfoto.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/bildschirmfoto.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/bildschirmfoto.jpg";s:5:"thumb";s:28:"bildschirmfoto.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ubuntu 7.10 läuft</title>
<link>http://www.tigraine.at/2007/10/27/ubuntu-710-lauft/</link>
<pubDate>Sat, 27 Oct 2007 01:03:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Installation]]></category>

		<category domain="tag" nicename="installation"><![CDATA[Installation]]></category>

		<category domain="tag"><![CDATA[Linux]]></category>

		<category domain="tag" nicename="linux"><![CDATA[Linux]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/27/ubuntu-710-lauft/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.tigraine.at/wp-content/uploads/2007/10/bildschirmfoto.jpg" title="Ubuntu 7.10 Tigraine Desktop"><img src="http://www.tigraine.at/wp-content/uploads/2007/10/bildschirmfoto.thumbnail.jpg" alt="Ubuntu 7.10 Tigraine Desktop" style="float: left; margin-right: 10px; margin-bottom: 10px" /></a>Gut, ich muss zugeben: Dass Ubuntu so kinderleicht zu installieren war hätte ich nicht im Traum gedacht. Nach der <a href="http://www.tigraine.at/2007/10/26/os-installation-und-mir-ist-nicht-langweilig/">tollen Installation</a> habe ich mich mal einige Stunden mit dem System vertraut gemacht und es mir heimelig gemacht.

Tollerweise gibt es da eine echt sehr hilfreiche Deutsche Wiki zu Ubuntu in der fast alle Infos rund um Ubuntu Software und deren installation zu finden ist. Wer sich also in nächster Zeit mit Ubuntu beschäftigen will sollte auf jeden fall bei <a href="http://wiki.ubuntuusers.de/">ubuntuusers.de</a> vorbeischauen.

Zum System muss ich sonst eigentlich sagen: Gut.
7.10 präsentiert sich dank Compiz sehr anschaulich und nach ein paar Stunden fühlt man sich recht wohl mit dem System.
An Software gibts eigentlich sogut wie alles was das Herz begehrt, wobei es mir das Paketsystem ganz besonders angetan hat.
So simpel und einfach installiert sich sonst nichtmal Windows Software :).

Gute Nachrichten gibts übrigens auch: Apache und MySQL rennen schon auf der Maschine und ich kann dann endlich anfangen das neue Template zu schreiben ohne andauernd die Website offline schalten zu müssen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>112</wp:post_id>
<wp:post_date>2007-10-27 03:03:48</wp:post_date>
<wp:post_date_gmt>2007-10-27 01:03:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ubuntu-710-lauft</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Boogie-Wii Review</title>
<link>http://www.tigraine.at/2007/10/27/wii-boogie/boogie-wii-review/</link>
<pubDate>Sat, 27 Oct 2007 10:42:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/boogie-review.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>114</wp:post_id>
<wp:post_date>2007-10-27 12:42:32</wp:post_date>
<wp:post_date_gmt>2007-10-27 10:42:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>boogie-wii-review</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>115</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/boogie-review.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/boogie-review.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:120;s:6:"height";i:130;s:14:"hwstring_small";s:22:"height='96' width='88'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/boogie-review.jpg";s:5:"thumb";s:27:"boogie-review.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Wii: Boogie</title>
<link>http://www.tigraine.at/2007/10/27/wii-boogie/</link>
<pubDate>Sat, 27 Oct 2007 11:17:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Multiplayer]]></category>

		<category domain="tag" nicename="multiplayer"><![CDATA[Multiplayer]]></category>

		<category domain="tag"><![CDATA[Review]]></category>

		<category domain="tag" nicename="review"><![CDATA[Review]]></category>

		<category domain="tag"><![CDATA[Wii]]></category>

		<category domain="tag" nicename="wii"><![CDATA[Wii]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/27/wii-boogie/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/boogie-review.jpg" alt="Boogie-Wii Review" style="float: left; margin-right: 10px; margin-bottom: 10px" />

Gestern holte ich mir aus langeweile aus der Videothek das neue <a href="http://www.ea.com/boogie/">Boogie</a> für die Wii ausgeborgt. Eigentlich dachte ich zuerst es wäre ein reines Tanz-Spiel doch an der Theke wurde ich dann gefragt ob ich ein Mikro dazu haben will.

Zuhause wurde sofort das Mikro angesteckt und wir wollten loslegen.
Nach einem kleinen relativ unsinnigen Tutorial konnten wir im Duell Modus gegeneinander Tanzen was folgendermaßen abläuft:

Jeder Spieler hat einen Charakter mit dem er möglichst im Takt der Musik tanzen muss. Dabei gibt es genau 4 Moves, nämlich Controller nach oben, unten, rechts und links. Desto öfter man in folge den Takt trifft desto mehr Punkte kriegt man und man lädt sein Boogie Meter auf.
Schlimm ists schon beim Takt, denn der hat nicht immer 100%ig was mit dem Song zu tun sondern richtet sich nach einem Balken der anzeigt wann getanzt werden will. Teils etwas unverständlich, und dank des Boogie Meters komplett sinnlos.
Denn: Sobald man mal 15 Sekunden getanzt hat sollte man genug Boogie-Power haben um einen Combo-Dance hinzulegen. Läuft dann folgendermaßen: Man drückt B und kriegt eine Kombination Moves vorgegeben die man ausführen soll. In der Zeit da man das versucht verliert mann Boogie-Power und wenn die aus ist muss man durch normales Tanzen das Meter wieder füllen.
Sobald man aber ein wenig geübt hat sind die Combos  lächerlich einfach und während der Combo lädt sich das Boogie-Meter wieder auf und man kann unendlich lang Combos machen (sofern mans nicht voll verhaut).
Mit genau dieser Technik schafft man auch auf Anhieb sämtliche Highscores im Spiel und vom lustigen Schunkeln ist nichts mehr übrig.
Einziger Pluspunkt ist dass man nicht zum Singleplayer gezwungen wird um neue Lieder und Outfits freizuschaltend sondern seine Tokens auch im Multiplayer verdiehnen kann.

Das wars aber auch schon an der Multiplayer Front. Außer dem Tanzen kann man nichts zu zweit spiele.
Übrig bleiben der Sing Modus und wohl ein Karriere-Modus zum freischalten neuer Outfits und Songs etc.

Der Sing Modus konnte dann aber auch nicht wirklich überzeugen, auch wenn es möglich ist gleichzeitig zu singen und zu tanzen. Das Geheule beschränkt sich im Grunde auf das singen zur richtigen Zeit. Ob ich wirklich den Text mitsinge oder nur die Wortlänge summe macht kaum einen unterschied.
Und auch hier schaffte ich nach 2 Songs bereits über eine Million Punkte (bei vorgegebener Highscore von 300k).

Der Suchtfaktor hält sich folglich wohl in Grenzen. Für lustiges Partygehoppel ist das ganze nämlich eindeutig zu eintönig.

<strong>Fazit</strong>: Wers probieren will sollte es aus der Videothek ausborgen, 60&euro; ist das  Spiel nämlich auf keinen Fall wert.
Insgesamt als 45 von 100 Punkten.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>115</wp:post_id>
<wp:post_date>2007-10-27 13:17:03</wp:post_date>
<wp:post_date_gmt>2007-10-27 11:17:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wii-boogie</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Metroid Prime Header</title>
<link>http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/metroid-prime-header/</link>
<pubDate>Mon, 29 Oct 2007 08:25:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/metroid-prime.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>118</wp:post_id>
<wp:post_date>2007-10-29 10:25:05</wp:post_date>
<wp:post_date_gmt>2007-10-29 08:25:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>metroid-prime-header</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>119</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/metroid-prime.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/metroid-prime.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:420;s:6:"height";i:300;s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/metroid-prime.jpg";s:5:"thumb";s:27:"metroid-prime.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Metroid Prime Header2</title>
<link>http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/metroid-prime-header2/</link>
<pubDate>Mon, 29 Oct 2007 08:39:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/10/metroid-title.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>120</wp:post_id>
<wp:post_date>2007-10-29 10:39:08</wp:post_date>
<wp:post_date_gmt>2007-10-29 08:39:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>metroid-prime-header2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>119</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/10/metroid-title.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/metroid-title.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:420;s:6:"height";i:272;s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/10/metroid-title.jpg";s:5:"thumb";s:27:"metroid-title.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Metroid Prime 3: Corruption</title>
<link>http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/</link>
<pubDate>Tue, 30 Oct 2007 17:03:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Metroid Prime]]></category>

		<category domain="tag" nicename="metroid-prime"><![CDATA[Metroid Prime]]></category>

		<category domain="tag"><![CDATA[Review]]></category>

		<category domain="tag" nicename="review"><![CDATA[Review]]></category>

		<category domain="tag"><![CDATA[Wii]]></category>

		<category domain="tag" nicename="wii"><![CDATA[Wii]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/10/metroid-title.jpg" alt="Metroid Prime Header2" />

Und es gibt sie doch! Die Einhörner unter den Wii-Spielen, die Meisterwerke die einen den Konsolenkauf nicht bereuen lassen!

<strong>Metroid Prime 3: Corruption ist da.</strong>

Metroid, Metroid, Metroid .. überall liest und hört man davon.
Gut, wenn man bisher weder einen GC noch einen anderen Nintendo hatte versteht man die Aufregung um den neuesten Spross der Serie eigentlich überhaupt nicht.
Aber irgendwie hat die ganze Propaganda mich dann doch dazu gebracht es zu versuchen. Und schockierenderweise .. Sie hatten recht!<!--more-->

<img src="http://www.tigraine.at/wp-content/uploads/2007/10/metroid-prime.jpg" alt="Metroid Prime Header" />

Alles stimmt. Grafik, Gameplay, Sound, Steuerung.
Mein Gott, wann habe ich zuletzt so geschwärmt?
Garnicht oder? Na ja, doch. Vielleicht beim Burning Crusade Launch.

Aber was bleibt einem auch anderes übrig wenn man nur grafische Schlaftabletten von Nintendo wie Mario Party und schlechte XBox Ports (CoD3, PoP3) gespielt hat.
Und dann kommt die Bombe! Metroid Prime mit einer absoluten Hammer-Grafik und einem sofort fesselnden Gameplay.

Das wichtigste aber.
<strong>Das Spiel macht nach mittlerweile wohl 10 Stunden played noch immer massiv Spaß!</strong>

Und ich bin scheinbar nicht in der Lage ein umfassendes Review zu schreiben solange ich nicht komplett durch bin :).
Also geh ich mal lieber weiterspielen!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>119</wp:post_id>
<wp:post_date>2007-10-30 19:03:45</wp:post_date>
<wp:post_date_gmt>2007-10-30 17:03:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>metroid-prime-3-corruption</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>29</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Fast durch]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/11/03/fast-durch/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-11-03 05:27:15</wp:comment_date>
<wp:comment_date_gmt>2007-11-03 03:27:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] &laquo; Metroid Prime 3: Corruption [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>42</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Einhorn gesichtet und erlegt!]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2007-11-10 15:34:14</wp:comment_date>
<wp:comment_date_gmt>2007-11-10 13:34:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] habe schon einmal von Einhörnern geredet und das war kurz nachdem ich Metroid Prime 3 zu spielen begonnen habe. Aber Infinity Ward konnte das ganze nicht nur toppen - ein neuer Maßstab [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Samus Aran</title>
<link>http://www.tigraine.at/2007/11/03/fast-durch/samus-aran/</link>
<pubDate>Sat, 03 Nov 2007 03:11:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/metroid.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>122</wp:post_id>
<wp:post_date>2007-11-03 05:11:21</wp:post_date>
<wp:post_date_gmt>2007-11-03 03:11:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>samus-aran</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>123</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/metroid.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/metroid.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:140;s:6:"height";i:281;s:14:"hwstring_small";s:22:"height='96' width='47'";s:4:"file";s:68:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/metroid.jpg";s:5:"thumb";s:21:"metroid.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Fast durch</title>
<link>http://www.tigraine.at/2007/11/03/fast-durch/</link>
<pubDate>Sat, 03 Nov 2007 03:27:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[Metroid Prime]]></category>

		<category domain="tag" nicename="metroid-prime"><![CDATA[Metroid Prime]]></category>

		<category domain="tag"><![CDATA[Review]]></category>

		<category domain="tag" nicename="review"><![CDATA[Review]]></category>

		<category domain="tag"><![CDATA[Shooter]]></category>

		<category domain="tag" nicename="shooter"><![CDATA[Shooter]]></category>

		<category domain="tag"><![CDATA[Wii]]></category>

		<category domain="tag" nicename="wii"><![CDATA[Wii]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/03/fast-durch/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/11/metroid.jpg" alt="Samus Aran" style="margin-right: 10px; margin-bottom: 10px; float: left" />

Dass Metroid Prime 3 meiner Meinung nach wohl zu den besten Wii Spielen seit der Einführung der Konsole gehört dürfte nach meinem euphorischen<a href="http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/"> ersten Posting</a> zu dem Thema wohl bekannt sein.

Dass das Spiel aber gleich so gut ist dass ich mich 3 Tage lang fast garnicht vor den PC setze ist dann aber trotzdem ein Novum.

Und richtig, das Spiel ist wirklich gut. Auch wenn der Spaß gerade gegen Ende meiner Meinung nach ein wenig nachlässt. Immerhin habe ich jetzt sämtliche Equipment Upgrades, alle fähigkeiten und eigentlich auch alle Welten durchgespielt.
Einzig und allein der Endboss hat sich noch nicht ergeben, aber es wäre auch ein wenig zuviel verlangt gewesen wenn er direkt im 3ten Versuch umgekippt wäre oder?

Wenn man bedenkt dass ich für den ersten Boss fast 40 Minuten gebraucht habe bis ich wusste wie der zu töten ist so erscheinen einem die Gegner danach alle eher mickrig. Momentan spiele ich das Spiel auf normal und habe eigentlich keinerlei Probleme mit den Bossen gehabt. Fast alle gingen im ersten Anlauf und dank des Scan-Visors kriegt man auch innerhalb von 2 Sekunden immer ne hübsche Anleitung wie man denn nun genau den Tod des Bösewichts herbeiführt.

Klar, der Visor gehört zu Metroid, immerhin kann man fast jeden Mist anvisiren und der Scan spuckt alle möglichen Sinnfreien Background-Infos zu dem Teil aus. Aber dass durch den Scan sämtliche Bosse und Gegner trivial werden ist dann doch nicht so cool.

Außerdem muss man wohl sagen dass die Bossfights ein wenig eintönig werden. Man muss ja immerhin gleich fast 10 Stück davon in die ewigen Jagdgründe schicken. Schlimm sind vor allem die Leviathan Endgegner die sich alle im selben Raum befinden und im Grunde relativ ähnlich sind. Bissl draufhauen, Schachstelle freilegen -&gt; mit Phazon grillen und gut ist.
Vor allem bei der immer gleichen Zwischensequenz in den Leviathan Bosskills hätten die Grafiker sich ruhig etwas cooleres einfallen lassen können. Das erste mal raubt einem den Atem, keine Frage. Aber die gleiche Sequenz 4x zu sehen nervt schon fast.

Und zum Endboss muss ich sagen: Bösartig.
Auch wenn ich gleich beim ersten mal in Phase 3 war ist der Junge echt kein Zuckerschlecken. Vor allem weils nach einem Tod direkt an den Anfang zurückgeht. Speicherpunkt vorm Boss gibts auch keinen, d.h. ich muss mich nochmal 10 Minuten zum Boss vorkämpfen um dann dort durch einen 3 Phasen Fight (wobei Phase 1 super nervig ist) zu kommen.

Auch hier, mehr Speicherpunkte hätten nicht geschadet.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>123</wp:post_id>
<wp:post_date>2007-11-03 05:27:12</wp:post_date>
<wp:post_date_gmt>2007-11-03 03:27:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fast-durch</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Cashgames are fun!</title>
<link>http://www.tigraine.at/2007/11/04/cashgames-are-fun/</link>
<pubDate>Sun, 04 Nov 2007 16:33:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Cashgame]]></category>

		<category domain="tag" nicename="cashgame"><![CDATA[Cashgame]]></category>

		<category domain="tag"><![CDATA[Poker]]></category>

		<category domain="tag" nicename="poker"><![CDATA[Poker]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/04/cashgames-are-fun/</guid>
<description></description>
<content:encoded><![CDATA[Wer ernsthaft online Poker spielt kennt sie, die zermürbende Langeweile die einen fast auffrisst während man auf den Bildschirm starrt auf der Suche nach Action.
Nicht dass online die Gegner besser wären oder ich mir sonst irgendwie schwer tun würde. Mein größter Feind online  bin nämlich ich selbst.
Anstatt sich mit seinen Mitspielern unterhalten zu können starrt man einfach nur auf den Bildschirm und lauscht seiner Lieblingsmusik während man eine Hand nach der anderen folded.

Disziplin ist das Zauberwort in Poker. Wenn man nicht die Geduld hat auf spielbare Karten zu warten so wird man garantiert verlieren. Leider spiele ich Poker aber mit der Intention Spaß zu haben, und Stundenlang vor dem Computer zu hocken und nichts zu tun ist mehr als nur langweilig, es ist sogar super-langweilig.
Und dann zahlt es sich finanziell auch noch absolut nicht aus. Man spielt Stunden um Stunden und entweder man hat monströse Pots mit hohem Risiko (und ein wenig Glück) oder man spielt für einen Stundenlohn von 10-20 cent die Stunde.
Und meist endet es damit dass man einmal seine Chancen überschätzt und die 20c sind wieder beim Teufel.

Und so ist es kaum verwunderlich dass ich mit der Zeit die Lust an Poker verloren habe.

Bis gestern, als wir aus einer spontanen Aktion heraus wiedermal eine Poker Runde einberufen haben (um 22:00).
Gespielt wurde 1/2 cent Cashgame und ehe ich mich versah hatte ich meinen Stack von 2&euro; auf knapp 10&euro; vergrößert.

Und irgendwie wars dann auch plötzlich 6 Uhr morgens als ich die Gäste an die Luft gesetzt habe und mit einem ordentlichen Gewinn ins Bett ging. Die Zeit verging wie im Flug, es wurde gelacht und geflucht, und das wichtigste, es hat einfach nur extrem viel Spaß gemacht zu spielen!
Heute morgen habe ich die Pokerstars Software deinstalliert und plane das nächste Cashgame für das kommende Wochenende.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>124</wp:post_id>
<wp:post_date>2007-11-04 18:33:09</wp:post_date>
<wp:post_date_gmt>2007-11-04 16:33:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cashgames-are-fun</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248024219</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ÖH Demo</title>
<link>http://www.tigraine.at/2007/11/05/parkplatz-demo-an-der-uni/oh-demo/</link>
<pubDate>Mon, 05 Nov 2007 15:01:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/oehdemo.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>126</wp:post_id>
<wp:post_date>2007-11-05 17:01:04</wp:post_date>
<wp:post_date_gmt>2007-11-05 15:01:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>oh-demo</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>125</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/oehdemo.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/oehdemo.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:440;s:6:"height";i:292;s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:68:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/oehdemo.jpg";s:5:"thumb";s:21:"oehdemo.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Parkplatz Demo an der Uni</title>
<link>http://www.tigraine.at/2007/11/05/parkplatz-demo-an-der-uni/</link>
<pubDate>Mon, 05 Nov 2007 15:02:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/05/parkplatz-demo-an-der-uni/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.oeh-klagenfurt.at/node/606"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/oehdemo.jpg" alt="ÖH Demo" /></a>

Juhu, endlich was interessantes zu berichten dachte ich mir gestern als ich das Infomail der ÖH-Klagenfurt bekam mit der Ankündigung der Demo gegen die Parkplatzgebühren und für mehr Parkplätze.

Heute war ich dort, wollte meine Liebste abliefern und mal schauen was los ist.
Folgendes Bild bot sich mir:

5 Polizeiautos, 8 Polizisten und 3 Demonstranten standen am Westparkplatz der Uni Klagenfurt.

Von den 3 verzweifelten Demonstranten wurde ein Schild hochgehalten und der Parkplatz war mit Absperrband versperrt.
Und das alles um 8:30! Als ich um 12 nochmal zur Uni musste war von Demo nichts mehr zu sehen.

Witzig ist vor allem dass die ÖH jetzt im Newsletter die Aktion als vollen Erfolg preist :). Ich weiß zwar nicht was daran erfolgreich ist wenn mehr Polizisten als Demonstranten auf der Demo waren.. aber trotzdem Respekt an die wenigen die mitgemacht haben!

<strong>Update:</strong> Ich habe zufällig noch ein <a href="http://www.flickr.com/photos/mathias_l/1869957128/">besseres Photo</a> von der Demo bei <a href="http://www.semanticmetadata.net/2007/11/05/demo-at-klagenfurt-university/">SemanticMetadata</a> gefunden, dem Blog meines Rechnernetze LV-Leiters.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>125</wp:post_id>
<wp:post_date>2007-11-05 17:02:00</wp:post_date>
<wp:post_date_gmt>2007-11-05 15:02:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>parkplatz-demo-an-der-uni</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tigraine Page design proposal</title>
<link>http://www.tigraine.at/2007/11/07/tigraine-v2-im-entstehen/tigraine-page-design-proposal/</link>
<pubDate>Wed, 07 Nov 2007 00:53:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/tigrainev2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>129</wp:post_id>
<wp:post_date>2007-11-07 02:53:03</wp:post_date>
<wp:post_date_gmt>2007-11-07 00:53:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tigraine-page-design-proposal</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>128</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/tigrainev2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/tigrainev2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/tigrainev2.png";s:5:"thumb";s:24:"tigrainev2.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tigraine v2 im entstehen</title>
<link>http://www.tigraine.at/2007/11/07/tigraine-v2-im-entstehen/</link>
<pubDate>Wed, 07 Nov 2007 00:55:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[Photoshop]]></category>

		<category domain="tag" nicename="photoshop"><![CDATA[Photoshop]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Webdesign]]></category>

		<category domain="tag" nicename="webdesign"><![CDATA[Webdesign]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/07/tigraine-v2-im-entstehen/</guid>
<description></description>
<content:encoded><![CDATA[Ha! Es geht doch weiter.

Auch wenn meine Photoshop Künste wohl absolut das letzte sind so hab ich heute wiedermal einiges an Zeit in dem Programm verbracht um ein neues Design für diese Seite hier zu schaffen.

Klar, ich hab schon Stunden um Stunden mit php und Artikeln über Wordpress Plugins etc verbracht, aber außer einiger <a href="http://www.gnu.org/fun/jokes/helloworld.html">Hello World</a> Seiten ist bisher noch nicht dabei herausgekommen.

Natürlich gibts aber auch schon was zu gucken:

<a href="http://www.tigraine.at/wp-content/uploads/2007/11/tigrainev2.png" title="Tigraine Page design proposal"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/tigrainev2.png" alt="Tigraine Page design proposal" /></a>

Hilfe.. das geht schief, da bin ich mir ganz sicher.

Unsicher hingegen bin ich mir ob ich wirklich solch ein fast schon Standard Web 2.0 Blog haben will oder eher etwas ausgefalleneres?
Ausgefallener andererseits geht einfach nicht weil ich der wohl mieseste Designer der Welt bin und weder Gefühl noch Geschmack besitze.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>128</wp:post_id>
<wp:post_date>2007-11-07 02:55:03</wp:post_date>
<wp:post_date_gmt>2007-11-07 00:55:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tigraine-v2-im-entstehen</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>35</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2007-11-07 10:14:18</wp:comment_date>
<wp:comment_date_gmt>2007-11-07 08:14:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[...würde ja meinen das ganze hätte viel mehr cs-style wenn Du auf die blauen ränder verzichten und das ganze in diese wunderschöne straßenlandschaft einbetten würdest...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Java Source Code of Packet Spec</title>
<link>http://www.tigraine.at/2007/11/08/interessanter-ansatz-fur-ein-server-protokoll/java-source-code-of-packet-spec/</link>
<pubDate>Thu, 08 Nov 2007 00:24:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/javaserver.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>131</wp:post_id>
<wp:post_date>2007-11-08 02:24:44</wp:post_date>
<wp:post_date_gmt>2007-11-08 00:24:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>java-source-code-of-packet-spec</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>130</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/javaserver.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/javaserver.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:468;s:6:"height";i:226;s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/javaserver.JPG";s:5:"thumb";s:24:"javaserver.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Interessanter Ansatz für ein Server-Protokoll</title>
<link>http://www.tigraine.at/2007/11/08/interessanter-ansatz-fur-ein-server-protokoll/</link>
<pubDate>Thu, 08 Nov 2007 00:35:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Protokoll]]></category>

		<category domain="tag" nicename="protokoll"><![CDATA[Protokoll]]></category>

		<category domain="tag"><![CDATA[Server]]></category>

		<category domain="tag" nicename="server"><![CDATA[Server]]></category>

		<category domain="tag"><![CDATA[Studium]]></category>

		<category domain="tag" nicename="studium"><![CDATA[Studium]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/08/interessanter-ansatz-fur-ein-server-protokoll/</guid>
<description></description>
<content:encoded><![CDATA[Ich glaube mir ist aus Versehen was interessantes gelungen.

Im Rechnernetze Kurs an der Uni war von uns gefragt ein eigenes Protokoll für einen Socket Server unter Java zu entwerfen.

Im Grunde wollten man wohl ein relativ simples HTTP ähnliches Protokoll mit GET, POST und LIST von uns. Ich musste aber natürlich über das Ziel hinwegballern.

Rausgekommen ist ein IMAP ähnlicher Socket-Server der nicht nur für jedes Socket einen Thread öffnet sondern auch für jeden Command einen weiteren startet um nie zu blockieren.
Und auch wenn das jetzt ziemlich brutal klingt, der tiefere Sinn dahinter war der dass man dadurch Befehle aneinanderreihen kann und das im Server sehr simpel über Thread.join() gelöst wird.

Spezielles zum Konzept und der Paket Syntax gibts unter more.

<!--more--><a href="http://www.tigraine.at/wp-content/uploads/2007/11/javaserver.JPG" title="Java Source Code of Packet Spec"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/javaserver.JPG" alt="Java Source Code of Packet Spec" /></a>

Sämtliche Befehle werden mit einem Token prefixed (wie in <a href="http://www.faqs.org/rfcs/rfc3501.html">IMAP</a>) und dieser Token wird vom ClientHandler (der eigene Thread für jeden Client) in einer Hashtable als Key angelegt während der zu launchende Thread (CommandExecution) die Value ist. Existiert der Key bereits in der Hashtable so wird der alte Thread durch den gerade neuen ersetzt und der neue macht Thread.join() auf den alten. Dadurch wird der neue erst ausgeführt wenn der alte Befehl abgearbeitet ist, also dessen run() Methode durch ist.
Der Token diehnt auch dazu dass der Client die Response vom Server zuordnen kann (wie in IMAP).

Was auf jeden Fall noch verändert werden muss bevor man damit irgendwas bauen kann ist dass alles auf Threadpools umgebaut werden muss (Das andauernde Threads starten frisst enorm Ressourcen). Außerdem ist der Server momentan sehr verwundbar gegen <a href="http://de.wikipedia.org/wiki/Denial_of_Service">DoS</a> Attacken.

Ich werde versuchen bis nächste Woche mal den Java Code soweit aufzubereiten dass ich ihn ohne mir Spott und Hohn einzuhandeln hier unter der GPL herzeigen kann.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>130</wp:post_id>
<wp:post_date>2007-11-08 02:35:11</wp:post_date>
<wp:post_date_gmt>2007-11-08 00:35:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>interessanter-ansatz-fur-ein-server-protokoll</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Bild aus dem CoD4 Epilog</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/bild-aus-dem-cod4-epilog/</link>
<pubDate>Sat, 10 Nov 2007 11:57:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/cod-outro.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>132</wp:post_id>
<wp:post_date>2007-11-10 13:57:57</wp:post_date>
<wp:post_date_gmt>2007-11-10 11:57:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bild-aus-dem-cod4-epilog</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/cod-outro.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/cod-outro.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:993;s:6:"height";i:568;s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/cod-outro.jpg";s:5:"thumb";s:23:"cod-outro.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Anflug auf das Zielgebiet mit Hubschraubern</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/anflug-auf-das-zielgebiet-mit-hubschraubern/</link>
<pubDate>Sat, 10 Nov 2007 12:05:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/2.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>134</wp:post_id>
<wp:post_date>2007-11-10 14:05:47</wp:post_date>
<wp:post_date_gmt>2007-11-10 12:05:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>anflug-auf-das-zielgebiet-mit-hubschraubern</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/2.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/2.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:62:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/2.JPG";s:5:"thumb";s:15:"2.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Call of Duty4: Chernobyl Schwimmbad</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/call-of-duty4-chernobyl-schwimmbad/</link>
<pubDate>Sat, 10 Nov 2007 12:32:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/10.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>135</wp:post_id>
<wp:post_date>2007-11-10 14:32:54</wp:post_date>
<wp:post_date_gmt>2007-11-10 12:32:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>call-of-duty4-chernobyl-schwimmbad</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/10.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/10.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:63:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/10.JPG";s:5:"thumb";s:16:"10.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CoD4: Cpt. Price mit Scharfschütze</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/cod4-cpt-price-mit-scharfschutze/</link>
<pubDate>Sat, 10 Nov 2007 12:40:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/12.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>136</wp:post_id>
<wp:post_date>2007-11-10 14:40:25</wp:post_date>
<wp:post_date_gmt>2007-11-10 12:40:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod4-cpt-price-mit-scharfschutze</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/12.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/12.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:63:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/12.JPG";s:5:"thumb";s:16:"12.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CoD: Scharfschütze in Chernobyl</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/cod-scharfschutze-in-chernobyl/</link>
<pubDate>Sat, 10 Nov 2007 13:24:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/11.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>137</wp:post_id>
<wp:post_date>2007-11-10 15:24:56</wp:post_date>
<wp:post_date_gmt>2007-11-10 13:24:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod-scharfschutze-in-chernobyl</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/11.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/11.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:63:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/11.JPG";s:5:"thumb";s:16:"11.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CoD4: Atomexplosion</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/cod4-atomexplosion/</link>
<pubDate>Sat, 10 Nov 2007 13:27:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/4.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>138</wp:post_id>
<wp:post_date>2007-11-10 15:27:58</wp:post_date>
<wp:post_date_gmt>2007-11-10 13:27:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod4-atomexplosion</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/4.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/4.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:62:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/4.JPG";s:5:"thumb";s:15:"4.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CoD4: Tod durch Atomexplosion</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/cod4-tod-durch-atomexplosion/</link>
<pubDate>Sat, 10 Nov 2007 13:28:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/6.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>139</wp:post_id>
<wp:post_date>2007-11-10 15:28:22</wp:post_date>
<wp:post_date_gmt>2007-11-10 13:28:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod4-tod-durch-atomexplosion</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/6.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/6.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:62:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/6.JPG";s:5:"thumb";s:15:"6.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CoD4: AC-130 Spectre Mission</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/cod4-ac-130-spectre-mission/</link>
<pubDate>Sat, 10 Nov 2007 13:33:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/cod4.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>140</wp:post_id>
<wp:post_date>2007-11-10 15:33:20</wp:post_date>
<wp:post_date_gmt>2007-11-10 13:33:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cod4-ac-130-spectre-mission</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>133</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/cod4.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/cod4.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/cod4.JPG";s:5:"thumb";s:18:"cod4.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Einhorn gesichtet und erlegt!</title>
<link>http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/</link>
<pubDate>Sat, 10 Nov 2007 13:34:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Call of Duty]]></category>

		<category domain="tag" nicename="call-of-duty"><![CDATA[Call of Duty]]></category>

		<category domain="tag"><![CDATA[Computerspiel]]></category>

		<category domain="tag" nicename="computerspiel"><![CDATA[Computerspiel]]></category>

		<category domain="tag"><![CDATA[Film]]></category>

		<category domain="tag" nicename="film"><![CDATA[Film]]></category>

		<category domain="tag"><![CDATA[Google]]></category>

		<category domain="tag" nicename="google"><![CDATA[Google]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Review]]></category>

		<category domain="tag" nicename="review"><![CDATA[Review]]></category>

		<category domain="tag"><![CDATA[Screen]]></category>

		<category domain="tag" nicename="screen"><![CDATA[Screen]]></category>

		<category domain="tag"><![CDATA[Shooter]]></category>

		<category domain="tag" nicename="shooter"><![CDATA[Shooter]]></category>

		<category domain="tag"><![CDATA[Video]]></category>

		<category domain="tag" nicename="video"><![CDATA[Video]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/10/einhorn-gesichtet-und-erlegt/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.tigraine.at/wp-content/uploads/2007/11/cod-outro.jpg" title="Bild aus dem CoD4 Epilog"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/cod-outro.jpg" alt="Bild aus dem CoD4 Epilog" /></a>

Ich habe schon einmal von Einhörnern geredet und das war kurz nachdem ich <a href="http://www.tigraine.at/2007/10/30/metroid-prime-3-corruption/">Metroid Prime 3</a> zu spielen begonnen habe.
Aber Infinity Ward konnte das ganze nicht nur toppen - ein neuer Maßstab für Shooter wurde gesetzt!

Shooter? Von was rede ich da eigentlich. CoD4 ist eigentlich garkein Spiel sondern ein verflucht guter Film in dem man Zufällig die Hauptrolle spielt!

Mehr über meine Marathon-gaming Session und auch ein paar (sehr sehenswerte) Screenshots und Spoiler gibts unter more.

<!--more-->

<a href="http://www.tigraine.at/wp-content/uploads/2007/11/2.JPG" title="Anflug auf das Zielgebiet mit Hubschraubern"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/2.thumbnail.JPG" alt="Anflug auf das Zielgebiet mit Hubschraubern" style="float: left; margin-bottom: 10px; margin-right: 10px" /></a> Eines vorweg: Grafisch ist CoD4 über sämtliche Zweifel erhaben. Nicht nur die Landschaft sieht einfach super-realistisch aus. Auch die Gegner sehen dank Bump Mapping wundervoll aus, und die Effekte im Kampf suchen wohl momentan ihresgleichen.
Alles in allem könnte CoD4 sicherlich grafisch noch einiges mehr, doch Infinity Ward hat dem Drang nach der besten Grafik zum Glück nicht nachgegeben und das Spiel läuft selbst auf meinem Rechner absolut hervorragend mit 4x <a href="http://de.wikipedia.org/wiki/Antialiasing">Anti-Aliasing</a> und mittel-hohen Details. (Core Duo2 E6600 2x 2.4 GhZ, 3 GB Ram und EVGA Geforce 7950 GT/KO). Hilfreich dabei sind vor allem die ganzen 2d Grafiken die Infinity auf geniale Art und Weise benutzt um ohne kostbare Grafikressourcen zu verschwenden Tiefe zu suggerieren. Absolut atemberaubend!

<a href="http://www.tigraine.at/wp-content/uploads/2007/11/10.JPG" title="Call of Duty4: Chernobyl Schwimmbad"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/10.thumbnail.JPG" alt="Call of Duty4: Chernobyl Schwimmbad" style="float: right; margin-bottom: 10px; margin-left: 10px" /></a>Spielerisch ist Call of Duty trotz des modernen Settings immer noch Call of Duty! Die Atmosphäre steht klar im Vordergrund, man ist mitten drin statt nur dabei.
Auch wenn es Anfangs ein wenig gewöhnungsbedüftig ist, langweilig wird einem bei CoD sicherlich nicht. Dafür ist stellenweise durch endlose Spawns und zeitbeschränkte Missionen gesorgt.

Neben dem andauernden Stress und Druck den man von den Missionen aufgezwungen bekommt schafft Infinity es auch auf wohl einzigartige Weise eine glaubhafte und fesselnde Story zu erzählen. Und das komplett ohne Cutscenes. Sämtliche Zwischensequenzen werden aus der Ego-Perspektive erzählt, auch wenn das bedeutet dass man für kurze Zeit zum Präsidenten eines Nahost Staates wird um der eigenen Hinrichtung beizuwohnen.

<a href="http://www.tigraine.at/wp-content/uploads/2007/11/12.JPG" title="CoD4: Cpt. Price mit Scharfschütze"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/12.thumbnail.JPG" alt="CoD4: Cpt. Price mit Scharfschütze" style="float: left; margin-bottom: 10px; margin-right: 10px" /></a>Abwechslung ist auch durch die verschiedenen Missionsprofile gegeben. Nicht immer ist man der arme Drechschlucker der am Boden ein Gebäude nach dem anderen ausräuchert! Mal ist man Granatwerfer Operator in einem Blackhawk (auf dem Flug aus dem Kampfgebiet), mal wird man zum Bordschützen eines <a href="http://en.wikipedia.org/wiki/Lockheed_AC-130">AC-130 Spectre</a> (Militärische Version des Hercules Transportflugzeugs). Und als ob das nicht schon reichen würde - Scharfschütze wird man dann auch noch.

<a href="http://www.tigraine.at/wp-content/uploads/2007/11/11.JPG" title="CoD: Scharfschütze in Chernobyl"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/11.thumbnail.JPG" alt="CoD: Scharfschütze in Chernobyl" style="float: right; margin-bottom: 10px; margin-left: 10px" /></a>Absolut genial in Szene gesetzt ist auch die Mission in der man als Cpt. Price 15 Jahre vor der eigentlichen Handlung in Chernobyl als Scharfschütze eine Zielperson eliminieren muss. Die Tarnung ist absolut glaubhaft (Ich musste auf der Map meinen Partner suchen), und die gesamte Mission läuft ab wie der Film <a href="http://www.imdb.com/title/tt0822854/">"Shooter"</a> mit Mark Whalberg.
Das ganze geht soweit dass man während man gerade den tödlichen Schuss setzen will (nach einem die <a href="http://www.google.at/url?sa=t&amp;ct=res&amp;cd=1&amp;url=http%3A%2F%2Fde.wikipedia.org%2Fwiki%2FCorioliskraft&amp;ei=-681R8KxA4mY-gKerbWACw&amp;usg=AFQjCNFF7SFT4JG7Ct0f7zXF2LiKFCHh-Q&amp;sig2=vqgShIIAxW9_3YyeZAxyOQ">Corioliskraft</a> ins Gedächtnis gerufen wird) plötzlich ein Helikopter ins Schussfeld fliegt (Fast 1:1 so wie in Shooter).
Und dann heißts rennen, bis der Partner verletzt wird und er auch noch getragen werden muss. Eine wohl denkwürdige Spielszene wenn man den verletzten Partner absetzt, er einen deckt während man vorrückt.
Und das ganze endet dann in einem Gemetzel während man auf die Evakuierung wartet und von allen Seiten Gegner über das Feld stürmen vor denen man sich schützen muss (2 Patronen hatte ich noch übrig als ich an Bord ging).

<p style="float: left; margin-bottom: 10px; width: 150px; margin-right: 10px"><a href="http://www.tigraine.at/wp-content/uploads/2007/11/4.JPG" title="CoD4: Atomexplosion"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/4.thumbnail.JPG" alt="CoD4: Atomexplosion" /></a>
Die Explosion verfolgt den Hubschrauber
<a href="http://www.tigraine.at/wp-content/uploads/2007/11/6.JPG" title="CoD4: Tod durch Atomexplosion"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/6.thumbnail.JPG" alt="CoD4: Tod durch Atomexplosion" /></a>
Tödlich verletzt kriecht man aus dem Heli und verendet

Wohl eines der Highlights der Story ist dass man selbst mehrere male dem eigenen Tod beiwohnt (auf dem Bild bei einer Atomexplosion). Der Sprunghafte wechsel zwischen verschiedenen Personen und Handlungssträngen macht das Spiel absolut empfehlenswert und die Story absolut Filmreif (vor allem die Endszene!).
<p style="clear: left"><a href="http://www.tigraine.at/wp-content/uploads/2007/11/cod4.JPG" title="CoD4: AC-130 Spectre Mission"><img src="http://www.tigraine.at/wp-content/uploads/2007/11/cod4.thumbnail.JPG" alt="CoD4: AC-130 Spectre Mission" style="float: right; margin-bottom: 10px; margin-left: 10px" /></a>Einzig zu weit geht meiner Meinung nach die Spielszene mit dem AC-130 Spectre. Das ganze ist so absolut realistisch dargestellt dass man meint man würde CNN schauen. Solche Bilder waren einem sonst eigentlich nur aus dem Fernsehen bekannt und dann wartet Infinity Ward mit eben genau solchen Effekten auf (Wärmebild Kamera etc).</p>

<p style="clear: left">Update: Ich habe es geschafft mit der Fraps Demo ein Video von der Filmreifen Endsequenz zu machen und bei <a href="http://video.google.de/videoplay?docid=1679554686855152912&amp;hl=de">Google Video hochzuladen</a>.
Da Google Video jedoch scheinbar verdammt mies ist beim Abspielen habe ich es außerdem noch bei YouTube geuppt und den embedded Player von YouTube genommen.
<br />
<object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/JtxwrhiyZIE&rel=1"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/JtxwrhiyZIE&rel=1" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></embed></object>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>133</wp:post_id>
<wp:post_date>2007-11-10 15:34:11</wp:post_date>
<wp:post_date_gmt>2007-11-10 13:34:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>einhorn-gesichtet-und-erlegt</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Guter Support kann zum Problem werden</title>
<link>http://www.tigraine.at/2007/11/12/guter-support-kann-zum-problem-werden/</link>
<pubDate>Mon, 12 Nov 2007 16:30:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Drivers]]></category>

		<category domain="tag" nicename="drivers"><![CDATA[Drivers]]></category>

		<category domain="tag"><![CDATA[Forceware]]></category>

		<category domain="tag" nicename="forceware"><![CDATA[Forceware]]></category>

		<category domain="tag"><![CDATA[Grafikkarte]]></category>

		<category domain="tag" nicename="grafikkarte"><![CDATA[Grafikkarte]]></category>

		<category domain="tag"><![CDATA[nVidia]]></category>

		<category domain="tag" nicename="nvidia"><![CDATA[nVidia]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/12/guter-support-kann-zum-problem-werden/</guid>
<description></description>
<content:encoded><![CDATA[Nun, meine Grafikkarte mag mich unter Vista irgendwie nicht.
Sobald ich den neuesten Nvidia Forceware treiber installieren will sehe ich am Schirm absolut garnichts mehr.

Nun, unter XP und Linux funktioniert nach wie vor alles super. Also dachte ich mir ich schreibe mal den EVGA Support an und Frage ob die mir helfen können. Komischerweise habe ich nämlich nirgends im Internet etwas zu dem Problem gefunden.

Nachdem ich mein Problem lang und breit geschildert habe und übers Wochenende noch einige Rückfragen hin und her gingen gabs dann heute die löbliche Meldung von EVGA: "Auch wenns unter XP und Linux geht, das mit Vista ist inakzeptabel und wir versuchen die Karte zu tauschen"

Tolle Sache, wäre da nicht ein Haken: Ohne Grafikkarte ist mein PC relativ nutzlos oder?

Und mit der Pixelpoint Schulung am 26ten und den ganzen Klausuren und Abgaben für die Uni nächste Woche ist ein verzicht auf die Grafikkarte für ne Woche momentan absolut inakzeptabel.

Mal sehen vielleicht kann ich das so drehen dass die mir zuerst die Karte senden und ich danach erst meine abschicke.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>141</wp:post_id>
<wp:post_date>2007-11-12 18:30:26</wp:post_date>
<wp:post_date_gmt>2007-11-12 16:30:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>guter-support-kann-zum-problem-werden</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>eBooks und der Bildschirm</title>
<link>http://www.tigraine.at/2007/11/14/ebooks-und-der-bildschirm/</link>
<pubDate>Wed, 14 Nov 2007 18:34:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[eBooks]]></category>

		<category domain="tag" nicename="ebooks"><![CDATA[eBooks]]></category>

		<category domain="tag"><![CDATA[Gadget]]></category>

		<category domain="tag" nicename="gadget"><![CDATA[Gadget]]></category>

		<category domain="tag"><![CDATA[Handheld]]></category>

		<category domain="tag" nicename="handheld"><![CDATA[Handheld]]></category>

		<category domain="tag"><![CDATA[PDA]]></category>

		<category domain="tag" nicename="pda"><![CDATA[PDA]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/14/ebooks-und-der-bildschirm/</guid>
<description></description>
<content:encoded><![CDATA[Nachdem ich heute wohl fast den ganzen Vormittag verzweifelt auf Amazon verbracht habe auf der Suche nach einigen guten Büchern für meine <a href="http://www.amazon.de/gp/registry/registry.html/ref=em-si-html_viewall?id=2V37YXUKEHELK">Weihnachtswunschliste</a> sind mir wieder die guten alten eBooks eingefallen von denen man irgendwie immer weniger hört.

Einer der Gründe dafür wird wohl daran liegen dass keiner gerne am Bildschirm seine Bücher liest. Ergo, ich machte mich auf die Suche nach neuen Geräten die eBooks mobil machen.

Die Suche war zuerstmal ziemlich erfolglos, 90% beschäftigen sich mit Handhelds wie PocketPCs und Palms. Die Restlichen Artikel waren teils aus dem Jahr 2005 und beschäftigten sich mit <a href="http://www.dottocomu.com/b/archives/002571.html">Sony's Libre</a>.

Nun, Palm ist für mich zwar keine Alternative, aber Windows Mobile 6 PocketPCs sind absolut im Trend und auch ich muss gestehen schon einige male darüber nachgedacht zu haben mir einen zuzulegen.
Dagegen gesprochen hat dann aber doch dass ich für das Teil keine Anwendung hätte außer eBooks und maximal noch MP3s. Also bliebe da nur die Kombination aus PocketPC und Handy, sowas wie der <a href="http://shop.t-mobile.at/2116010010/1_1_3_5/10011/index.html&amp;intTab=1">MDA Touch </a>von T-Mobile.

Der Haken an den Kombinationsgeräten ist aber der Tarif. Außer T-Mobile bietet kein Handybetreiber Windows Mobile 6 Geräte an, und auch A1 und One bieten einfach keine sinnige Vertragsalternative zu meinem momentanen Tele.Ring Tarif. Somit würde ein neuer Windows Mobile PDA also nicht nur 100-300 &euro; in der Anschaffung kosten sondern auch noch knapp 20&euro; im Monat über den Handyvertrag.

Damit fällt also der PDA weg, und wir sind zurück beim Buch aus Papier.
Und selbst da wurde es abenteuerlich! Perl scripts zum entfernen der Zeilenumbrüche und Anleitungen zum Ausdrucken von eBooks auf möglichst wenig Papier sind eindeutig nicht das was ich mir unter sinnigem eBook lesen vorgestellt hatte.
Und nachdem eBook ausdrucken dann doch keine so clevere Idee ist fand ich mich wieder bei diversen eBook Reading Devices die allesamt mit komischen DRM und ziemlich mickrigem Format Support das Bild trüben.

Und dann fand ich da Bookeen, einen scheinbar französischen Hersteller der einen relativ hübschen e-Ink eBook Reader namens <a href="http://www.bookeen.com/shop/productdetails.aspx?ProductID=417">Cybook </a>auf den Markt gebracht hat.

Wäre da nicht der verdammt hohe Preis. Immerhin gibts um 350&euro; schon relativ gute gebrauchte Laptops, fast eine PS3, einen Nintendo DS und eine PSP, eine XBoX360 und sogar einen neuen eeePC von Asus.

Schade also, aber wenn der Preis nicht auf mindestens 150&euro; fällt wird sich das Cybook wohl kaum ernsthaft durchsetzen.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>142</wp:post_id>
<wp:post_date>2007-11-14 20:34:20</wp:post_date>
<wp:post_date_gmt>2007-11-14 18:34:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ebooks-und-der-bildschirm</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>51</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.20.179.158</wp:comment_author_IP>
<wp:comment_date>2007-11-15 21:22:23</wp:comment_date>
<wp:comment_date_gmt>2007-11-15 19:22:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[vollen hsdpa empfang in bkk ...verdammt ist unsere welt verstrahlt :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>RSS Feed Icon</title>
<link>http://www.tigraine.at/2007/11/19/google-toolkit-google-reader/rss-feed-icon/</link>
<pubDate>Mon, 19 Nov 2007 13:57:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/11/feed-icon-28x28.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>144</wp:post_id>
<wp:post_date>2007-11-19 15:57:00</wp:post_date>
<wp:post_date_gmt>2007-11-19 13:57:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rss-feed-icon</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>143</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/11/feed-icon-28x28.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/feed-icon-28x28.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:28;s:6:"height";i:28;s:14:"hwstring_small";s:22:"height='28' width='28'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/11/feed-icon-28x28.png";s:5:"thumb";s:29:"feed-icon-28x28.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Google Toolkit - Google Reader</title>
<link>http://www.tigraine.at/2007/11/19/google-toolkit-google-reader/</link>
<pubDate>Mon, 19 Nov 2007 14:25:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[Feed]]></category>

		<category domain="tag" nicename="feed"><![CDATA[Feed]]></category>

		<category domain="tag"><![CDATA[Google]]></category>

		<category domain="tag" nicename="google"><![CDATA[Google]]></category>

		<category domain="tag"><![CDATA[RSS]]></category>

		<category domain="tag" nicename="rss"><![CDATA[RSS]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/19/google-toolkit-google-reader/</guid>
<description></description>
<content:encoded><![CDATA[Ist eigentlich irgendwem von euch der kleine RSS Button im Browser aufgefallen? Der kleine hübsche orange Knubbel <img src="http://www.tigraine.at/wp-content/uploads/2007/11/feed-icon-28x28.png" alt="RSS Feed Icon" /> der eigentlich mehr nach W-Lan als nach RSS aussieht.

<strong>Nun, was ist RSS eigentlich?</strong>

RSS steht für "Really Simple Syndication" und diehnt zur leichteren Publikation von Content.
Soll heißen, lese ich regelmäßig 10 Blogs könnte ich nacheinander 10 Websites aufrufen und frustriert feststellen dass auf 8 davon nix neues zu finden ist. Oder ich benutze einen sogenannten "Feed Reader" der gleichzeitig alle 10 RSS Feeds auf neuigkeiten durchsucht und nur mit den 2 neuen Artikeln aufwartet.
Vor allem wenn man Blogs und Newssites mit geringer Post-Frequenz liest ist RSS eindeutig das bevorzugte Format.

Außerdem benutzen mittlerweile auch fast alle größeren Suchmaschinen die RSS Feeds um an den puren Content der Blogs ranzukommen.

<strong>Warum Google Reader?</strong>

Man stelle sich vor, man liest seine Feeds in der Arbeit und wenn man heimkommt sind genau die selben Nachrichten am heimischen Computer als ungelesen markiert. Nervig da jetzt alle als gelesen zu markieren oder?.
Genau das ist der Grund warum ich nach einigem hin und her auf den Google Reader umgestiegen bin.
Eigentlich waren alle normalen Reader ziemlicher müll. Abgesehen von IE7 und Firefox wo sowas schon integriert ist (und trotzdem nicht so toll ist) gibt es eigentlich kein Programm das gut aussieht (Ich liebe bunte Icons!), halbwegs was kann und simpel zu bedienen ist.

Und dann kam ich über einen witzigen Vortrag zu <a href="http://gears.google.com/">Google Gears</a> zu Google Reader.
Nachdem ich schon vorbelastet bin durch Gmail und Google Kalender fand ich Reader sofort sympathisch.
Denn nun hatte ich alles: Mobil, aktuell (mein größtes Problem beim IE7 war dass die update Intervalle 3 Jahre dauerten), leicht zu bediehnen, schnell.

Einige Sachen stören noch das schöne Bild des Readers (für was die Tags nun wirklich da sind bleibt ein Rätsel), umständliche Ordnersteuerung, versteckter "Alle als gelesen markieren" Button etc..

Aber sonst kann man damit wirklich sehr elegant seine Nachrichten lesen (ohne dabei wie vorher 20 Websites ansteuern zu müssen).

Übrigens, meine Blogroll hier rechts repräsentiert meine Google Reader Abos.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>143</wp:post_id>
<wp:post_date>2007-11-19 16:25:03</wp:post_date>
<wp:post_date_gmt>2007-11-19 14:25:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>google-toolkit-google-reader</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Visual Studio 2008 und .NET 3.5 Release!</title>
<link>http://www.tigraine.at/2007/11/20/visual-studio-2008-und-net-35-release/</link>
<pubDate>Mon, 19 Nov 2007 22:38:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET 3.5]]></category>

		<category domain="tag" nicename="net-35"><![CDATA[.NET 3.5]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Orcas]]></category>

		<category domain="tag" nicename="orcas"><![CDATA[Orcas]]></category>

		<category domain="tag"><![CDATA[ScottGu]]></category>

		<category domain="tag" nicename="scottgu"><![CDATA[ScottGu]]></category>

		<category domain="tag"><![CDATA[Visual Studio 2008]]></category>

		<category domain="tag" nicename="visual-studio-2008"><![CDATA[Visual Studio 2008]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/20/visual-studio-2008-und-net-35-release/</guid>
<description></description>
<content:encoded><![CDATA[Tadaaa.. Es ist da..

Nach einigem Warten ist es endlich soweit..

<a href="http://weblogs.asp.net/scottgu/archive/2007/11/19/visual-studio-2008-and-net-3-5-released.aspx">Scott Guthrie verkündet,</a> dass VS2008 und .NET 3.5 endlich released wurden!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>145</wp:post_id>
<wp:post_date>2007-11-20 00:38:56</wp:post_date>
<wp:post_date_gmt>2007-11-19 22:38:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>visual-studio-2008-und-net-35-release</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Seiten Update</title>
<link>http://www.tigraine.at/2007/11/20/seiten-update/</link>
<pubDate>Tue, 20 Nov 2007 21:37:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[News]]></category>

		<category domain="tag" nicename="news"><![CDATA[News]]></category>

		<category domain="tag"><![CDATA[Plugin]]></category>

		<category domain="tag" nicename="plugin"><![CDATA[Plugin]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Tags]]></category>

		<category domain="tag" nicename="tags"><![CDATA[Tags]]></category>

		<category domain="tag"><![CDATA[Wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[Wordpress]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/20/seiten-update/</guid>
<description></description>
<content:encoded><![CDATA[Nun, auch wenn ich mit dem neuen Template für die Seite nicht weiterkomme, ein neues Plugin habe ich dann aber doch noch installieren können.

Jeder Post kriegt nun Tags und diese werden auch in einer Tag-Cloud organisiert.
Anhand der Tags werden auch zu jedem Post ähnliche Artikel angeboten.

Der Wordpress Plugin der das ganze ermöglicht heißt <a href="http://www.herewithme.fr/wordpress-plugins/simple-tags">Simple-Tags</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>146</wp:post_id>
<wp:post_date>2007-11-20 23:37:22</wp:post_date>
<wp:post_date_gmt>2007-11-20 21:37:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>seiten-update</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Support Hotlines</title>
<link>http://www.tigraine.at/2007/11/28/support-hotlines/</link>
<pubDate>Wed, 28 Nov 2007 13:36:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[ADSL]]></category>

		<category domain="tag" nicename="adsl"><![CDATA[ADSL]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Hotline]]></category>

		<category domain="tag" nicename="hotline"><![CDATA[Hotline]]></category>

		<category domain="tag"><![CDATA[Internet]]></category>

		<category domain="tag" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Support]]></category>

		<category domain="tag" nicename="support"><![CDATA[Support]]></category>

		<category domain="tag"><![CDATA[Telephone]]></category>

		<category domain="tag" nicename="telephone"><![CDATA[Telephone]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/11/28/support-hotlines/</guid>
<description></description>
<content:encoded><![CDATA[Mathias hat mich mit seinem Blogeintrag auf <a href="http://www.semanticmetadata.net/2007/11/27/category-answers-to-questions-which-have-never-been-asked/">SemanticMetadata.net </a>wieder daran erinnert wie lustig gewisse Gespräche mit Support Hotlines werden können.

Warum ich das ganze jetzt gleich hier erörtere liegt daran dass meine Bankomatkarte von einem Bankomaten eingezogen wurde.
Natürlich hab ich sofort die Sperrhotline angerufen und wurde dort nach 15 Minuten Gespräch erleuchtet.
Nicht so sehr durch die Antworten die mir die Telephonistin geliefert hat sondern eher deshalb weil sie mich fragte: "Könnten sie den exakten Wortlaut der Fehlermeldung wiederholen?" ...
Natürlich dämmerte mir bei dieser Frage sofort: Sie hat keine Ahnung und sucht grade in ihrem Handbuch nach meinem Problem.

Gleiches passiert eigentlich auch jedesmal wenn ich bei irgendwelchen Support Hotlines  von ISPs hier anrufe.
Meist lande ich bei irgendeiner inkompetenten Dame die versucht mit mir ihre Standard Prozeduren zu durchlaufen.
Natürlich haben diese Standard Prozeduren einen gewissen tieferen Sinn, doch verliert das ganze seinen Reiz wenn solche Gespräche fast 40 Minuten in Anspruch nehmen. Vor allem wenn man nach knapp 2 Minuten ganz sicher ist dass man sich keine Hilfe erwarten kann und eigentlich nur zum Chef weiterverbunden werden will.
Die Dame hingegen ist instruiert dich erst zum Chef durchzustellen wenn sie ihren Fragenkatalog durch hat.

<!--more-->Und dadurch kommt es teils auch zu eskapaden wie folgender vor 3 Jahren bei der Telekom Austria
<blockquote><strong> Ich:</strong> Mein Internet ist seit 15 Minuten ausgefallen. Mein Router und meine PC Configuration ist aber in Ordnung
<strong>Hotline: </strong>Gehen sie bitte auf Start, Programme, Systemsteuerung und wählen Sie ihre ....
<strong>Ich (falle ins Wort):</strong> Meine Konfiguration ist in Ordnung!
<strong>Hotline:</strong> Bitte öffnen Sie den Netzwerkverbindungs Dialog...
<strong>Ich: </strong>Nein, sicher nicht. Ich bin nicht ausgebildeter Cisco CCNA damit sie mir hier erzählen wollen dass mein System schuld ist. Ihre Leitung ist im Moment im Eimer und ich erwarte mir dass sie das entweder jetzt sofort richten oder mir sagen wann damit zu rechnen ist!
<em>(Hotline Dame legt einfach so auf)</em></blockquote>
Ich war natürlich fassungslos, von einer Hotline aus der Leitung geschmissen zu werden ist mir noch nie passiert.
Natürlich hab ich erbost sofort nochmal angerufen und einen anderen Mitarbeiter erwischt der sich sofort brav entschuldigt hat und mir nachdem er bei der Technik nachgefragt hat mitteilen konnte dass die Telekom Austria momentan einen Österreichweiten Netz-Ausfall hatte!!

Hilfe, wenn die Support Hotline nicht weiß dass grad ganz Österreich vom Netz ist sollte man sich Sorgen machen oder?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>147</wp:post_id>
<wp:post_date>2007-11-28 15:36:37</wp:post_date>
<wp:post_date_gmt>2007-11-28 13:36:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>support-hotlines</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Asus 8400 GS</title>
<link>http://www.tigraine.at/2007/12/03/geforce-8400gs-mein-pc-im-wachkoma/asus-8400-gs/</link>
<pubDate>Mon, 03 Dec 2007 11:28:35 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/asus_8400_gs.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>149</wp:post_id>
<wp:post_date>2007-12-03 13:28:35</wp:post_date>
<wp:post_date_gmt>2007-12-03 11:28:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>asus-8400-gs</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>148</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/asus_8400_gs.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/asus_8400_gs.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:200;s:6:"height";i:200;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/asus_8400_gs.jpg";s:5:"thumb";s:26:"asus_8400_gs.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Geforce 8400GS: Mein PC im Wachkoma</title>
<link>http://www.tigraine.at/2007/12/03/geforce-8400gs-mein-pc-im-wachkoma/</link>
<pubDate>Mon, 03 Dec 2007 11:29:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Forceware]]></category>

		<category domain="tag" nicename="forceware"><![CDATA[Forceware]]></category>

		<category domain="tag"><![CDATA[GeForce]]></category>

		<category domain="tag" nicename="geforce"><![CDATA[GeForce]]></category>

		<category domain="tag"><![CDATA[Grafikkarte]]></category>

		<category domain="tag" nicename="grafikkarte"><![CDATA[Grafikkarte]]></category>

		<category domain="tag"><![CDATA[Linux]]></category>

		<category domain="tag" nicename="linux"><![CDATA[Linux]]></category>

		<category domain="tag"><![CDATA[nVidia]]></category>

		<category domain="tag" nicename="nvidia"><![CDATA[nVidia]]></category>

		<category domain="tag"><![CDATA[PC]]></category>

		<category domain="tag" nicename="pc"><![CDATA[PC]]></category>

		<category domain="tag"><![CDATA[Support]]></category>

		<category domain="tag" nicename="support"><![CDATA[Support]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/03/geforce-8400gs-mein-pc-im-wachkoma/</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://www.tigraine.at/wp-content/uploads/2007/12/asus_8400_gs.jpg" alt="Asus 8400 GS" style="float: left" />Die Geschichte beginnt damit dass meine EVGA Geforce 7950 GT unter Windows Vista Probleme mit dem Treiber hatte die auch der EVGA Support sich nicht erklären konnte.
Also wurde ich instruiert die Grafikkarte einzuschicken.

Glücklicherweise hat mir ein ehemaliger Arbeitskollege eine Geforce 8400 GS geborgt sodass ich nicht ganz ohne PC sein muss.

Frohne Mutes habe ich also die Geforce <strong>8 </strong>in den PC geschraubt und eigentlich damit gerechnet dass (weils ja ne 8er ist) der PC genausogut laufen sollte wie vorher. Wenn nicht besser.
Eigentlich hatte ich mir sogar bessere Performance als mit der Geforce 7 erhofft.

Weit gefehlt!
Erster Schock: Compiz ruckelt!.
Zuerst hab ichs auf den Treiber unter Linux geschoben, kann ja sein dass es da irgendwelche Probleme gibt.
Aber unter Windows wars genauso. Trotz neuester Forceware Treiber läuft Aero nicht so richtig rund..

Also kontrollierte Testumgebung gestartet: World of Warcraft 2.3 ohne Addons.
Und da hats mich dann aus den Latschen gehauen. WoW, das wohl  anspruchsloseste Spiel das ich neben Baldurs Gate 2 und Warcraft 3 im Regal stehen habe RUCKELT!.
WoW kann ich auf meinem alten Computer (3,5 Ghz AMD 64, 1 GB Ram, Geforce 6800) mit allen Details auf maximum perfekt spielen. Aber auf meinem Core Duro E6600 mit 3 GB Ram und der GF 8400GS ruckelt das Spiel auf low details!
Das kanns doch irgendwie nicht sein oder?

Also hab ich nachgeforscht und bin einen Grafikkartenvergleich von <a href="http://www.hardware-infos.com/grafikkarten_nvidia.php">Hardware-Infos</a> gestoßen. Und als ich zum ersten mal mit den technischen Eckdaten der Grafikkarte Bekanntschaft machte wurde mir einiges klar.
Die Karte ist mit 64 Bit angebunden, und der GPU und Speicher Takt sind auch absolut sub-optimal.

Dann erschließt sich einem aber auch gleich mal der Sinn und  Zweck der Karte.
Zum spielen ist sie nämlich eindeutig nicht gedacht, da eignet sich wohl eine Geforce 3 besser. Dafür kann die 8400GS aber mit DirectX 10 und Unified Shader aufwarten und eignet sich für Windows Vista Aero eigentlich hervorragend.
Die Karte ist so niedrig getaktet dass es von Asus sogar eine Variante mit passiver Kühlung gibt, also ideal für einen Multimedia oder Office PC.
Und das zum fast unschlagbaren Preis von 39&euro;.

So, ich werde jetzt mal den Support bei EVGA anklingeln und fragen wann ich wieder eine richtige Grafikkarte besitzen werde]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>148</wp:post_id>
<wp:post_date>2007-12-03 13:29:47</wp:post_date>
<wp:post_date_gmt>2007-12-03 11:29:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>geforce-8400gs-mein-pc-im-wachkoma</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Pirates of the Burning Sea</title>
<link>http://www.tigraine.at/2007/12/08/pirates-of-the-burning-sea-sony-hats-nicht-drauf/pirates-of-the-burning-sea/</link>
<pubDate>Sat, 08 Dec 2007 13:19:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/piratesoftheburningsea.JPG</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>151</wp:post_id>
<wp:post_date>2007-12-08 15:19:15</wp:post_date>
<wp:post_date_gmt>2007-12-08 13:19:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pirates-of-the-burning-sea</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>150</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/piratesoftheburningsea.JPG</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/piratesoftheburningsea.JPG</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:281;s:6:"height";i:125;s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:83:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/piratesoftheburningsea.JPG";s:5:"thumb";s:36:"piratesoftheburningsea.thumbnail.JPG";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Pirates of the Burning Sea - Sony hats nicht drauf</title>
<link>http://www.tigraine.at/2007/12/08/pirates-of-the-burning-sea-sony-hats-nicht-drauf/</link>
<pubDate>Sat, 08 Dec 2007 13:38:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Beta]]></category>

		<category domain="tag" nicename="beta"><![CDATA[Beta]]></category>

		<category domain="tag"><![CDATA[MMORPG]]></category>

		<category domain="tag" nicename="mmorpg"><![CDATA[MMORPG]]></category>

		<category domain="tag"><![CDATA[Pirates]]></category>

		<category domain="tag" nicename="pirates"><![CDATA[Pirates]]></category>

		<category domain="tag"><![CDATA[Sony]]></category>

		<category domain="tag" nicename="sony"><![CDATA[Sony]]></category>

		<category domain="tag"><![CDATA[World of Warcraft]]></category>

		<category domain="tag" nicename="world-of-warcraft"><![CDATA[World of Warcraft]]></category>

		<category domain="tag"><![CDATA[WoW]]></category>

		<category domain="tag" nicename="wow"><![CDATA[WoW]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/08/pirates-of-the-burning-sea-sony-hats-nicht-drauf/</guid>
<description></description>
<content:encoded><![CDATA[Seit World of Warcraft hat eigentlich kein MMORPG mehr wirklich meinen Horizont gestreift.
Zweifellos waren es auch nicht viele die ernsthaft versucht haben gegen das 10 Millionen Spieler Bollwerk von Blizzard anzurennen.

Lange Zeit warens eigentlich nur die alten bekannten: EQ2, FFX, EVE und DAoC die da neben WoW noch existierten. Und das Teils mit verschwindenden Marktanteilen je älter WoW wurde.
Klar, die Publisher haben WoW nicht die Stirn bieten können und viele ihrer geplanten MMO Titel eingestampft (wie Midgard von Microsoft).

Nun, das ist mittlerweile wohl vorbei. Neue MMO Ankündigungen häufen sich und schicken sich an WoW abzulösen (was meiner Meinung nach nicht klappen wird). Aber neben all den echt aussichtsreichen Titeln wie Age of Conan, Warhammer Age of Reckoning etc versuchts dann Sony Online Entertainment (Everquest) auch nochmal mit "Pirates of the Burning Sea"

<img src="http://www.tigraine.at/wp-content/uploads/2007/12/piratesoftheburningsea.JPG" alt="Pirates of the Burning Sea" style="float: left; margin-bottom: 10px; margin-right: 10px" /> Und SOE hat nun auch eine Open Beta gelauncht. Der Link fiel mir zufällig in die Hände und ich hab mir natürlich sofort einen Beta Key geholt.

Und ab hier wirds peinlich. Im Jahr 2007 sieht die <a href="http://piratesoftheburningsea.station.sony.com/openbeta/index.vm">Beta Announcement Page</a> mit den lächerlichen Renderfiguren einfach nur schlecht aus (Vergleiche <a href="http://beta.ageofconan.com/beta_application/">AoC</a>).
Aber über ein paar Grafische Schnitzer kann man hinwegsehen oder? Sonst wäre keiner auf meiner Seite..
Absolut lächerlich macht sich Sony die Verteilung der Beta nicht selbst übernimmt sondern jedes in jedem Land eine Portalseite wie z.B. onlinewelten.de den Signup Prozess und die Downloads bereitstellt.
Wirklich peinlich ist es dann wenn der Österreich Link zu Gamers.at führt wo von einer Open Beta noch keiner was gehört hat!
Natürlich bin ich dann auf den Germany Mirror ausgewichen wo onlinewelten.de wenigstens eine <a href="http://www.onlinewelten.com/news,id36209,pirates_burning_sea_onlinewelten_verlost_10000_beta_keys.html">kleine Seite </a>dazu online gestellt hat (welche aber nicht direkt Verlinkt ist von der offiziellen Seite). Und jetzt kommts.
Seitdem sauge ich 5 Dateien mit jeweils 1 GB per HTTP Download mit jeweils Geschwindigkeiten zwischen 10 und 50 Kb/s.
Wenn man da an den WoW Downloader denkt der die Dateien per Bittorrent herunterlädt fühlt man sich fast in die Steinzeit versetzt.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>150</wp:post_id>
<wp:post_date>2007-12-08 15:38:02</wp:post_date>
<wp:post_date_gmt>2007-12-08 13:38:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pirates-of-the-burning-sea-sony-hats-nicht-drauf</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>observer-subject.jpg</title>
<link>http://www.tigraine.at/?attachment_id=152</link>
<pubDate>Wed, 12 Dec 2007 00:02:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>152</wp:post_id>
<wp:post_date>2007-12-12 02:02:23</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>observer-subjectjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-subject.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:369;s:6:"height";i:480;s:14:"hwstring_small";s:22:"height='96' width='73'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-subject.jpg";s:5:"thumb";s:30:"observer-subject.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>observer-subject-thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=153</link>
<pubDate>Wed, 12 Dec 2007 00:02:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>153</wp:post_id>
<wp:post_date>2007-12-12 02:02:24</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>observer-subject-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-subject-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:409;s:6:"height";i:532;s:14:"hwstring_small";s:22:"height='96' width='73'";s:4:"file";s:83:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-subject-thumb.jpg";s:5:"thumb";s:36:"observer-subject-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>event-subject.jpg</title>
<link>http://www.tigraine.at/?attachment_id=154</link>
<pubDate>Wed, 12 Dec 2007 00:02:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/event-subject.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>154</wp:post_id>
<wp:post_date>2007-12-12 02:02:25</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>event-subjectjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/event-subject.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-subject.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:278;s:6:"height";i:190;s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-subject.jpg";s:5:"thumb";s:27:"event-subject.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>event-subject-thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=155</link>
<pubDate>Wed, 12 Dec 2007 00:02:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/event-subject-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>155</wp:post_id>
<wp:post_date>2007-12-12 02:02:25</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>event-subject-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/event-subject-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-subject-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:278;s:6:"height";i:190;s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:80:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-subject-thumb.jpg";s:5:"thumb";s:33:"event-subject-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>observer-observer.jpg</title>
<link>http://www.tigraine.at/?attachment_id=156</link>
<pubDate>Wed, 12 Dec 2007 00:02:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>156</wp:post_id>
<wp:post_date>2007-12-12 02:02:31</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>observer-observerjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-observer.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:405;s:6:"height";i:241;s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:78:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-observer.jpg";s:5:"thumb";s:31:"observer-observer.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>observer-observer-thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=157</link>
<pubDate>Wed, 12 Dec 2007 00:02:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>157</wp:post_id>
<wp:post_date>2007-12-12 02:02:32</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>observer-observer-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-observer-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:405;s:6:"height";i:241;s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:84:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/observer-observer-thumb.jpg";s:5:"thumb";s:37:"observer-observer-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>event-observer.jpg</title>
<link>http://www.tigraine.at/?attachment_id=158</link>
<pubDate>Wed, 12 Dec 2007 00:02:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/event-observer.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>158</wp:post_id>
<wp:post_date>2007-12-12 02:02:33</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>event-observerjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/event-observer.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-observer.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:367;s:6:"height";i:411;s:14:"hwstring_small";s:22:"height='96' width='85'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-observer.jpg";s:5:"thumb";s:28:"event-observer.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>event-observer-thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=159</link>
<pubDate>Wed, 12 Dec 2007 00:02:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/event-observer-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>159</wp:post_id>
<wp:post_date>2007-12-12 02:02:34</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>event-observer-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>160</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/event-observer-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-observer-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:367;s:6:"height";i:411;s:14:"hwstring_small";s:22:"height='96' width='85'";s:4:"file";s:81:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/event-observer-thumb.jpg";s:5:"thumb";s:34:"event-observer-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Observer Pattern in Java and C#</title>
<link>http://www.tigraine.at/?p=160</link>
<pubDate>Wed, 12 Dec 2007 00:02:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[C#]]></category>

		<category domain="tag" nicename="c"><![CDATA[C#]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Event Pattern]]></category>

		<category domain="tag" nicename="event-pattern"><![CDATA[Event Pattern]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Observer Pattern]]></category>

		<category domain="tag" nicename="observer-pattern"><![CDATA[Observer Pattern]]></category>

		<category domain="tag"><![CDATA[Pattern]]></category>

		<category domain="tag" nicename="pattern"><![CDATA[Pattern]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/12/observer-pattern-in-java-and-c/</guid>
<description></description>
<content:encoded><![CDATA[Since yesterday I am reading my brand new <a href="http://www.amazon.de/Head-First-Design-Patterns/dp/0596007124/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books-intl-de&amp;qid=1197412858&amp;sr=8-1">Head First - Design Patterns</a> and really enjoy doing so. The book is funny, informative and it's quite unique style really ... works.
Most articles I read on Design Patterns where (while informative) really hard to understand and made them a pain to read. So I was thrilled to find a book that was entertaining and informative.

So, I tried some of that stuff out. Obviously I didn't make it past Chapter 2 till now and am still working on the <em>Observer Pattern</em>.
The samples in the book are all in Java, so I immediately tried to translate them to C#.

I looked for the Observable-Class in the .NET Framework, no clue.
I searched the Web, and it looked like C# has no built-in support for the <em>Observer Pattern</em>. Even Wikipedia has a C# Example on their <a href="http://www.tigraine.at/wp-admin/even%20Wikipedia%20is%20completely%20wrong."><em>Observer Pattern</em></a><em> </em>page that is just a plain rewrite of the standard Java Examples. But still no sign of something like an Observable-Class.

Until I figured out that the Observer Pattern is hardcoded into the C# Language as part of their Event System using an Event Pattern!

<!--more-->
<h2>Implementation</h2>
While writing this Article I assumed that you are already familiar with the <em>Observer Pattern</em>!

First of all, the standard implementation works both in C# and Java. So if the <em>Event Pattern</em> in C# isn't applicable, you can still fallback to the standard implementation.

So, let's get into things.
As always told, we start off by defining our Subject Class (You should always program towards an Interface, but for simplicity I used a Class in this Article):

<a href="http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject.jpg"><img border="0" width="409" src="http://www.tigraine.at/wp-content/uploads/2007/12/observer-subject-thumb.jpg" alt="Observer_Subject" height="532" style="border: 0px" /></a>

This is the usual Observeable Class. 3 Methods (Attach, Detach and Notify) and one function to send out the Notification (In Java it would set the Observeable.setChanged-Method and should also change a State)

Now, this is the Implementation for our Subject I came up with after applying the Event Pattern:

<a href="http://www.tigraine.at/wp-content/uploads/2007/12/event-subject.jpg"><img border="0" width="278" src="http://www.tigraine.at/wp-content/uploads/2007/12/event-subject-thumb.jpg" alt="Event_Subject" height="190" style="border: 0px" /></a>

So, hell yes this looks simpler doesn't it?
The only catch is that you can't fire the Notify event if there are no subscribers because in that case it is null. That's why you need to check it before firing.
But how does this thing work for our Observer (Subscriber)?

Here is the Code that would Observe the standard Java-like Observer:

<a href="http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer.jpg"><img border="0" width="405" src="http://www.tigraine.at/wp-content/uploads/2007/12/observer-observer-thumb.jpg" alt="Observer_Observer" height="241" style="border: 0px" /></a>

Note that this Class uses .Attach to subscribe to our Subject.
While the C# implementation just hooks up an event to a function.
That function doesn't need be called update() as the above, it has only to match the delegate we defined in our subject!

<a href="http://www.tigraine.at/wp-content/uploads/2007/12/event-observer.jpg"><img border="0" width="367" src="http://www.tigraine.at/wp-content/uploads/2007/12/event-observer-thumb.jpg" alt="Event_Observer" height="411" style="border: 0px" /></a>

So. The implementation of an <em>Observer Pattern</em> in C# is basically 3 lines of code.
<h2>Limitations</h2>
At the beginning of this article I said this <em>Event Pattern </em>comes with limitations. So, here are some of them:

The <em>Observer Pattern</em> has two Interfaces you program with, the <em>Event Pattern </em>depends on a delegate type that can't be defined in an interface. You need a class to hold that delegate besides the interface.

You also miss a collection that holds your subscribed clients. So you can find out how many clients you have (through: "this.Notify.GetInvocationList().Length;"), but you can't directly access their instances (the Java-like implementation allows this).

Besides these two? I can't think of any problems this very simple approach C# takes may cause.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>160</wp:post_id>
<wp:post_date>2007-12-12 02:02:34</wp:post_date>
<wp:post_date_gmt>2007-12-12 00:02:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>observer-pattern-in-java-and-c</wp:post_name>
<wp:status>pending</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1243377256</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Get your labels in place!</title>
<link>http://www.tigraine.at/2007/12/14/get-your-labels-in-place/</link>
<pubDate>Fri, 14 Dec 2007 17:21:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[Internet]]></category>

		<category domain="tag" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[label-tag]]></category>

		<category domain="tag" nicename="label-tag"><![CDATA[label-tag]]></category>

		<category domain="tag"><![CDATA[Tags]]></category>

		<category domain="tag" nicename="tags"><![CDATA[Tags]]></category>

		<category domain="tag"><![CDATA[Webdesign]]></category>

		<category domain="tag" nicename="webdesign"><![CDATA[Webdesign]]></category>

		<category domain="tag"><![CDATA[xhtml]]></category>

		<category domain="tag" nicename="xhtml"><![CDATA[xhtml]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/14/get-your-labels-in-place/</guid>
<description></description>
<content:encoded><![CDATA[While surfing the web I sometimes think that people don't really know or use the &lt;label&gt; tag in XHTML.

Obviously, &lt;label&gt; isn't well known and it's usefulness is limited.
But whenever I have to click a combo-button directly I remind myself to not forget that label next time I do something similar!

Here an example:
<blockquote><input CHECKED="true" type="radio" />Option1<input type="radio" />Option2</blockquote>
Try selecting Option2 by clicking on it's text instead of trying to give a headshot to that small bullet in front of it :).

And here labels come in.
By using &lt;label for="&lt;ElementId&gt;"&gt;Text&lt;/label&gt; you can link the control (Everything, Textboxes, Checkboxes etc) to your description text.

Obviously this als helps search engines to not mix up Form data with real content on your page!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>161</wp:post_id>
<wp:post_date>2007-12-14 19:21:39</wp:post_date>
<wp:post_date_gmt>2007-12-14 17:21:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-your-labels-in-place</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>get-set-java.jpg</title>
<link>http://www.tigraine.at/2007/12/14/c-talk/get-set-javajpg/</link>
<pubDate>Fri, 14 Dec 2007 17:53:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/get-set-java.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>162</wp:post_id>
<wp:post_date>2007-12-14 19:53:50</wp:post_date>
<wp:post_date_gmt>2007-12-14 17:53:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-set-javajpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>165</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/get-set-java.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-java.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:305;s:6:"height";i:112;s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-java.jpg";s:5:"thumb";s:26:"get-set-java.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>get-set-c.jpg</title>
<link>http://www.tigraine.at/2007/12/14/c-talk/get-set-cjpg/</link>
<pubDate>Fri, 14 Dec 2007 17:53:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/get-set-c.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>163</wp:post_id>
<wp:post_date>2007-12-14 19:53:50</wp:post_date>
<wp:post_date_gmt>2007-12-14 17:53:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-set-cjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>165</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/get-set-c.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-c.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:291;s:6:"height";i:127;s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-c.jpg";s:5:"thumb";s:23:"get-set-c.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>get-set-35.jpg</title>
<link>http://www.tigraine.at/2007/12/14/c-talk/get-set-35jpg/</link>
<pubDate>Fri, 14 Dec 2007 17:53:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/get-set-35.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>164</wp:post_id>
<wp:post_date>2007-12-14 19:53:50</wp:post_date>
<wp:post_date_gmt>2007-12-14 17:53:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-set-35jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>165</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/get-set-35.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-35.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:271;s:6:"height";i:40;s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/get-set-35.jpg";s:5:"thumb";s:24:"get-set-35.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>C# Talk</title>
<link>http://www.tigraine.at/2007/12/14/c-talk/</link>
<pubDate>Fri, 14 Dec 2007 17:53:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[.NET 3.5]]></category>

		<category domain="tag" nicename="net-35"><![CDATA[.NET 3.5]]></category>

		<category domain="tag"><![CDATA[C#]]></category>

		<category domain="tag" nicename="c"><![CDATA[C#]]></category>

		<category domain="tag"><![CDATA[Coding]]></category>

		<category domain="tag" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[Java]]></category>

		<category domain="tag" nicename="java"><![CDATA[Java]]></category>

		<category domain="tag"><![CDATA[Programmiersprache]]></category>

		<category domain="tag" nicename="programmiersprache"><![CDATA[Programmiersprache]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/14/c-talk/</guid>
<description></description>
<content:encoded><![CDATA[Now and then I delve through some Java tutorials or Java applications for my studies.
And everytime I do so I immediately lack the getter/setter language features of C#.

To make myself clear (to non-C# Developers).
Java has either <em>Public </em>or <em>Private</em> properties, but no way to add validation Logic etc to those.
It is usually considered bad coding technique to expose instance variables outside of the class so almost everything has to be accessed through functions.
So to expose a integer variable called <strong><em>State </em></strong>you would have to create something similar to this:

<img border="0" width="305" src="http://www.tigraine.at/wp-content/uploads/2007/12/get-set-java.jpg" alt="get_set_Java" height="112" style="border: 0px" /> 

It works and once you're used to it you will create setter/getter methods in your sleep.
But, when pulling up your IntelliSense (ok, you don't have that in Java, but you know what I mean) on that class you will be somewhat overwhelmed by get/set functions :).

So, how did C# handle this?
They borrowed a bit from Delphi and C# and created properties with get/set blocks (nothing new).
So our code from above would look like:

<font color="#333333"><img border="0" width="291" src="http://www.tigraine.at/wp-content/uploads/2007/12/get-set-c.jpg" alt="get_set_C" height="127" style="border: 0px" /> </font>

The great thing: Intellisense gets easier, you have something clearly marked as <strong>property</strong> not as function (that's used to access a property).
Usability for your API has just increased :).

But, despite the awesomeness of this function (already in the .NET Framework since 1.0) in .NET 3.5 they managed to improve this feature a bit.
How? Imagine all those cases where you don't have any validator logic on your properties, you just want a simple public field in your class.
In older Frameworks you'd have to create get/set Blocks for this Field although you don't want any logic there (exposing Instance-Variables is stupid no matter how you do it).

So, 3.5 Introduced this:

<img border="0" width="271" src="http://www.tigraine.at/wp-content/uploads/2007/12/get-set-35.jpg" alt="get_set_35" height="40" style="border: 0px" />

Great, we came down to 1 line of code, and what happened?
.NET creates the private instance-variable automatically and handles the simple get/set stuff for us. When we decide we need validation or something in the get/set blocks we can just come back and expand those blocks without having to change any code outside the class (it was a get/set property all the time)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>165</wp:post_id>
<wp:post_date>2007-12-14 19:53:51</wp:post_date>
<wp:post_date_gmt>2007-12-14 17:53:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>c-talk</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsc01389.jpg</title>
<link>http://www.tigraine.at/2007/12/19/wiederstand-ist-zwecklos/dsc01389jpg/</link>
<pubDate>Wed, 19 Dec 2007 10:37:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>166</wp:post_id>
<wp:post_date>2007-12-19 12:37:59</wp:post_date>
<wp:post_date_gmt>2007-12-19 10:37:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dsc01389jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>168</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/dsc01389.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:527;s:6:"height";i:480;s:14:"hwstring_small";s:23:"height='96' width='105'";s:4:"file";s:69:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/dsc01389.jpg";s:5:"thumb";s:22:"dsc01389.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsc01389-thumb.jpg</title>
<link>http://www.tigraine.at/2007/12/19/wiederstand-ist-zwecklos/dsc01389-thumbjpg/</link>
<pubDate>Wed, 19 Dec 2007 10:38:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>167</wp:post_id>
<wp:post_date>2007-12-19 12:38:00</wp:post_date>
<wp:post_date_gmt>2007-12-19 10:38:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dsc01389-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>168</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/dsc01389-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:244;s:6:"height";i:223;s:14:"hwstring_small";s:23:"height='96' width='105'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2007/12/dsc01389-thumb.jpg";s:5:"thumb";s:28:"dsc01389-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Wiederstand ist zwecklos</title>
<link>http://www.tigraine.at/2007/12/19/wiederstand-ist-zwecklos/</link>
<pubDate>Wed, 19 Dec 2007 10:38:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

		<category domain="tag"><![CDATA[Bildschirm]]></category>

		<category domain="tag" nicename="bildschirm"><![CDATA[Bildschirm]]></category>

		<category domain="tag"><![CDATA[Gadged]]></category>

		<category domain="tag" nicename="gadged"><![CDATA[Gadged]]></category>

		<category domain="tag"><![CDATA[HP]]></category>

		<category domain="tag" nicename="hp"><![CDATA[HP]]></category>

		<category domain="tag"><![CDATA[Monitor]]></category>

		<category domain="tag" nicename="monitor"><![CDATA[Monitor]]></category>

		<category domain="tag"><![CDATA[Widescreen]]></category>

		<category domain="tag" nicename="widescreen"><![CDATA[Widescreen]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/19/wiederstand-ist-zwecklos/</guid>
<description></description>
<content:encoded><![CDATA[<p><a style="float: left; margin-bottom: 10px; margin-right: 10px" href="http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389.jpg"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="223" alt="DSC01389" src="http://www.tigraine.at/wp-content/uploads/2007/12/dsc01389-thumb.jpg" width="244" border="0" /></a> Ich muss mir selbst zugute halten dass ich es immerhin 2 Monate lang ausgehalten habe.     <br />Und obwohl ich schonmal <a href="http://www.tigraine.at/2007/10/17/doch-kein-24-widescreen-bildschirm/">festgestellt</a> habe dass ich ihn eigentlich nicht brauche hab ich mir doch einen 24&quot; Widescreen von HP gekauft!</p>  <p>Und auch wenn meine Kamera das nicht richtig einfangen kann, sobald man sich daran gew&#246;hnt hat sind 24&quot; eine absolute Wohltat.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>168</wp:post_id>
<wp:post_date>2007-12-19 12:38:00</wp:post_date>
<wp:post_date_gmt>2007-12-19 10:38:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wiederstand-ist-zwecklos</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Allies &amp; Axis</title>
<link>http://www.tigraine.at/2007/12/22/allies-axis/</link>
<pubDate>Sat, 22 Dec 2007 01:18:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[2. Weltkrieg]]></category>

		<category domain="tag" nicename="2-weltkrieg"><![CDATA[2. Weltkrieg]]></category>

		<category domain="tag"><![CDATA[Brettspiele]]></category>

		<category domain="tag" nicename="brettspiele"><![CDATA[Brettspiele]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Spiele]]></category>

		<category domain="tag" nicename="spiele"><![CDATA[Spiele]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/22/allies-axis/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.amazon.de/Avalon-Hill-934824-Revised-Updates/dp/B00028X3HW/ref=sr_1_1?ie=UTF8&amp;s=toys&amp;qid=1198286211&amp;sr=1-1"><img src="http://ecx.images-amazon.com/images/I/517ct5uEYpL._AA240_.jpg" alt="Axis &amp; Allies Revised" style="float: left; margin-bottom: 10px; margin-right: 10px" /></a> Weihnachtsferien beginnen und wie jedes mal trudeln so schön langsam die ganzen Exil-Studenten wieder in Klagenfurt ein.

Wie immer startet damit natürlich auch die Brettspiele Saison :).
Da die Meute aber auch noch anspruchsvoll ist wurde es immer schwerer ein halbwegs gutes Brettspiel zu finden das auch gespielt wurde.

Auch wenn sehr schöne Spiele wie: <a href="http://www.amazon.de/Queen-Games-6045-Shogun/dp/B000KF0EH4/ref=sr_1_1?ie=UTF8&amp;s=toys&amp;qid=1198286051&amp;sr=1-1">Shogun</a>, <a href="http://www.amazon.de/World-of-Warcraft-englische-Version/dp/1589942388/ref=sr_1_1?ie=UTF8&amp;s=toys&amp;qid=1198286067&amp;sr=1-1">World of Warcraft</a>, <a href="http://www.amazon.de/Hasbro-14575100-Parker-Risiko-Classic/dp/B000MRTLSI/ref=sr_1_2?ie=UTF8&amp;s=toys&amp;qid=1198286095&amp;sr=1-2">Risiko</a> und <a href="http://www.amazon.de/Siedler-Catan-Ausgabe-Spiel-Jahres/dp/3440693015/ref=sr_1_1?ie=UTF8&amp;s=toys&amp;qid=1198286115&amp;sr=1-1">Siedler von Catan</a> zur Auswahl stehen. So richtig konnte keines davon überzeugen in letzter Zeit.

Nachschub musste her, also habe ich wieder mal beim Spielehändler meines Vertrauens nachgeschaut und habe ein neues Prunkstück für meine Sammlung gefunden:
<h4><a href="http://www.amazon.de/Avalon-Hill-934824-Revised-Updates/dp/B00028X3HW/ref=sr_1_1?ie=UTF8&amp;s=toys&amp;qid=1198285331&amp;sr=1-1">Axis &amp; Allies</a></h4>
Wer sich für Strategiespiele interessiert und genug hat vom alten Risiko-Glücksspiel wird in A&amp;A eine absolut geniale Simulation finden.
Das Spiel bietet alles, von liebevoll gestalteten Spielfiguren bis hin zu genialer Balance. Keine der 2 Fraktionen ist eindeutig im Vorteil, keine ist eindeutig im Nachteil.
Sieg oder Niederlage entscheidet sich fast ausschließlich durch strategische Finesse, ohne dabei den Faktor Glück vollständig zu eliminieren und somit die Spannung in den Kämpfen aufrechtzuerhalten.

<!--more-->

<strong>Worum es geht?</strong>
Die Welt im Jahre 1942: Die Achsenmächte auf dem Höhepunkt ihrer Macht. Russland schwer in Bedrängnis durch ein starkes Deutschland im Westen und Japan im Osten. Amerika steht kurz vor dem Kriegseintritt und England kämpft an mehreren Fronten um das Kolonial-Reich vor den Achsenmächten zu verteidigen.
Und das ist auch schon die Handlung. Alliierte kämpfen gegen die Achsenmächte. Die Seite die zuerst eine gewisse Anzahl an Sieges-Städten erobert hat und hält gewinnt das Spiel.

Warum das ganze soviel Spaß macht?
Ganz einfach, im Gegensatz zu Risiko beginnen die Fraktionen an fixen Startpositionen mit festgelegten Start-Einheiten und unterschiedlicher Wirtschaft. Dadurch ergibt dass sich jedes Volk grundlegend anders spielt und auch extrem viele taktische Möglichkeiten gegeben sind.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>169</wp:post_id>
<wp:post_date>2007-12-22 03:18:31</wp:post_date>
<wp:post_date_gmt>2007-12-22 01:18:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>allies-axis</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Frohe Weihnachten!</title>
<link>http://www.tigraine.at/2007/12/24/frohe-weihnachten/</link>
<pubDate>Mon, 24 Dec 2007 16:49:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Video]]></category>

		<category domain="tag" nicename="video"><![CDATA[Video]]></category>

		<category domain="tag"><![CDATA[Weihnachten]]></category>

		<category domain="tag" nicename="weihnachten"><![CDATA[Weihnachten]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2007/12/24/frohe-weihnachten/</guid>
<description></description>
<content:encoded><![CDATA[Ha! Habe ich doch noch was gefunden um den Placeholder zu ersetzen.
Hier ein sehr lustiges Video von Jeff Dunham mit "<a href="http://www.youtube.com/watch?v=1uwOL4rB-go">Achmed The Dead Terrorist</a>" zu Weihnachten:

<object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/QzzhM5e5bU8&rel=1"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/QzzhM5e5bU8&rel=1" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></embed></object>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>170</wp:post_id>
<wp:post_date>2007-12-24 18:49:51</wp:post_date>
<wp:post_date_gmt>2007-12-24 16:49:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>frohe-weihnachten</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Changes incoming!</title>
<link>http://www.tigraine.at/2008/01/02/changes-incoming/</link>
<pubDate>Wed, 02 Jan 2008 03:22:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Site-News]]></category>

		<category domain="tag" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/02/changes-incoming/</guid>
<description></description>
<content:encoded><![CDATA[As some of you may have noticed, I recently started to use this blog to share some of my views on C# programming topics and wrote those posts in English.

I chose English instead of German because obviously everything I am reading on those topics is kept in English (just browse my Blogroll and you'll see what I mean).
Now that I recently realized that buying my technical books from Amazon.com saves me quite a penny over doing so at Amazon.de, I am literally breathing articles in English.
I also had to realize that while being (somehow) perfectly fluent in English while talking and reading, my written skills seem to have deteriorated.
This is something I really hope to be able to improve through this blog and work.

So, apparently this will be the first change: <strong>All future posts will be written in (more or less good) English.</strong>

I am currently trying to clean up the site, meaning that I will re-think Categories and Tags to fit.

I am also planning to focus a bit more on software development and .NET programming. So expect more on-topic and less off-topic posts in the future.

This is just one of many changes I currently plan to execute over the next weeks.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>177</wp:post_id>
<wp:post_date>2008-01-02 05:22:49</wp:post_date>
<wp:post_date_gmt>2008-01-02 03:22:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>changes-incoming</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2061</wp:comment_id>
<wp:comment_author><![CDATA[You have to know English to be a Programmer! | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/11/21/you-have-to-know-english-to-be-a-programmer/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-21 18:29:15</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 16:29:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I switched my blog to English almost a year ago because I felt that blogging in German created a barrier for me. I couldn’t [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>feedburner.jpg</title>
<link>http://www.tigraine.at/2008/01/02/new-rss-feed/feedburnerjpg/</link>
<pubDate>Wed, 02 Jan 2008 03:53:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/feedburner.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>178</wp:post_id>
<wp:post_date>2008-01-02 05:53:43</wp:post_date>
<wp:post_date_gmt>2008-01-02 03:53:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>feedburnerjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>179</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/feedburner.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/feedburner.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:166;s:6:"height";i:56;s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/feedburner.jpg";s:5:"thumb";s:24:"feedburner.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>New RSS Feed!</title>
<link>http://www.tigraine.at/2008/01/02/new-rss-feed/</link>
<pubDate>Wed, 02 Jan 2008 03:53:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

		<category domain="tag"><![CDATA[FeedBurner]]></category>

		<category domain="tag" nicename="feedburner"><![CDATA[FeedBurner]]></category>

		<category domain="tag"><![CDATA[RSS]]></category>

		<category domain="tag" nicename="rss"><![CDATA[RSS]]></category>

		<category domain="tag"><![CDATA[Site]]></category>

		<category domain="tag" nicename="site"><![CDATA[Site]]></category>

		<category domain="tag"><![CDATA[Site-News]]></category>

		<category domain="tag" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/02/new-rss-feed/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://www.feedburner.com"><img border="0" width="166" src="http://www.tigraine.at/wp-content/uploads/2008/01/feedburner.jpg" alt="feedburner" height="56" style="border-width: 0px" /></a>

One thing that was on my checklist for some months now was getting my RSS Syndication right.

I was thinking about using Feedburner before, but stuck to the Wordpress default Syndication, believing that the Wordpress built-in Feed could do just as good.

I was obviously wrong and finally corrected this mistake today and did set up my <a href="http://feeds.feedburner.com/Tigraine">new FeedBurner feed</a>!

By clicking on the new Link in the sidebar you will find the new Feed that will not only syndicate this Blog and it's posts, but also my <a href="http://www.tigraine.at/wp-admin/del.icio.us%20Links">del.icio.us Links</a>.

For all people who where using my old RSS Feed<strong> please update your subscription</strong> to the new URL.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>179</wp:post_id>
<wp:post_date>2008-01-02 05:53:44</wp:post_date>
<wp:post_date_gmt>2008-01-02 03:53:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-rss-feed</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Gotchas on your way to the Clipboard</title>
<link>http://www.tigraine.at/2008/01/06/gotchas-on-your-way-to-the-clipboard/</link>
<pubDate>Sun, 06 Jan 2008 20:36:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[C# Clipboard STAThread]]></category>

		<category domain="tag" nicename="c-clipboard-stathread"><![CDATA[C# Clipboard STAThread]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/06/gotchas-on-your-way-to-the-clipboard/</guid>
<description></description>
<content:encoded><![CDATA[<p>We all know that lovely thing nobody can live without: Clipboard.    <br />Have you ever tried to read the clipboard from your C# code?</p>  <p>Your code may have looked like this:</p>  <pre class="code"><span style="color: #2b91af">Clipboard</span>.GetDataObject();</pre>

<p>Ok, this code works perfectly fine whenever you try it from a normal Windows-Forms Application Template. 
  <br />Now, go try accessing the Clipboard from within an Console-Application!</p>

<p>Ok, I know you didn't try, that's why I'm writing this anyway. 
  <br />Clipboard isn't accessible as long as your Main() isn't looking like this:</p>

<pre class="code">[<span style="color: #2b91af">STAThread</span>]
        <span style="color: blue">public static void </span>Main()
        {
            
        }</pre>

<p>Why? All the magic lies in the <strong>STAThread</strong> Attribute! 

  <br />The STAThread Attribute changes the appartment state of the current thread to be single-threaded. This is necessary for some features especially of Windows Forms (where Clipboard resides in). Why? 

  <br />Mainly because those features are done through COM-Interop and need to be single-threaded.</p>

<p>Great, my whole application relies on <strong>MTAThread</strong>, now I'm screwed?? 

  <br />No! Thanks to threading you can always fire up a new thread that is using STA.</p>

<pre class="code">[<span style="color: #2b91af">MTAThread</span>]
        <span style="color: blue">public static void </span>Main()
        {
            <span style="color: #2b91af">Thread </span>newThread = <span style="color: blue">new </span><span style="color: #2b91af">Thread</span>(<span style="color: blue">new </span><span style="color: #2b91af">ThreadStart</span>(StartingPoint));
            newThread.SetApartmentState(<span style="color: #2b91af">ApartmentState</span>.STA);
            newThread.Start();
        }

        <span style="color: blue">public static void </span>StartingPoint()
        {
            <span style="color: #2b91af">Clipboard</span>.GetDataObject();
        }</pre>

<p>Voila, now we have a new Thread that can access the Clipboard without having to change the apartment state of our old thread. 
  <br />Just remember to set the ApartmentState through the <em>SetApartmentState()</em> function before hitting <em>Start()</em>!</p>

<p>You could also just stick the [MTAThread] attribute ontop of your ThreadStart-Method (but that would be too simple wouldn't it?)</p>

<p>So.. be warned, I had an hour of headaches because of this!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>180</wp:post_id>
<wp:post_date>2008-01-06 22:36:44</wp:post_date>
<wp:post_date_gmt>2008-01-06 20:36:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>gotchas-on-your-way-to-the-clipboard</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>I&#039;m so stupid</title>
<link>http://www.tigraine.at/2008/01/07/im-so-stupid/</link>
<pubDate>Mon, 07 Jan 2008 00:23:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/07/im-so-stupid/</guid>
<description></description>
<content:encoded><![CDATA[<p>Hey! I just wanted to let you know that I was searching for about 20 minutes for the meaning an @!</p>  <p>E.g. in this code:</p>  <pre class="code"><span style="color: #2b91af">Regex </span>r2 = <span style="color: blue">new </span><span style="color: #2b91af">Regex</span>(<span style="color: #a31515">@&quot;([\{a-z]+)([0-9]*) &quot;</span>);</pre>

<p>You may notice that the @ in this Regex is <strong>outside </strong>the actual String and that has to mean somethign.

  <br />Stupid me found the answer!</p>

<p>Placing an @ before a string in C# tells the compiler to <strong>NOT </strong>use escape sequences within the string.

  <br />So you don't need to do stuff like \\ for a single \ etc.</p>

<p>Man why didn't I found out earlier!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>181</wp:post_id>
<wp:post_date>2008-01-07 02:23:48</wp:post_date>
<wp:post_date_gmt>2008-01-07 00:23:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>im-so-stupid</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>CES 2008 Keynote</title>
<link>http://www.tigraine.at/2008/01/07/ces-2008-keynote/</link>
<pubDate>Mon, 07 Jan 2008 02:22:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[bill gates]]></category>

		<category domain="tag" nicename="bill-gates"><![CDATA[bill gates]]></category>

		<category domain="tag"><![CDATA[keynote]]></category>

		<category domain="tag" nicename="keynote"><![CDATA[keynote]]></category>

		<category domain="tag"><![CDATA[mediaroom]]></category>

		<category domain="tag" nicename="mediaroom"><![CDATA[mediaroom]]></category>

		<category domain="tag"><![CDATA[Microsoft]]></category>

		<category domain="tag" nicename="microsoft"><![CDATA[Microsoft]]></category>

		<category domain="tag"><![CDATA[silverlight]]></category>

		<category domain="tag" nicename="silverlight"><![CDATA[silverlight]]></category>

		<category domain="tag"><![CDATA[surface]]></category>

		<category domain="tag" nicename="surface"><![CDATA[surface]]></category>

		<category domain="tag"><![CDATA[xbox360]]></category>

		<category domain="tag" nicename="xbox360"><![CDATA[xbox360]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/07/ces-2008-keynote/</guid>
<description></description>
<content:encoded><![CDATA[<p><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-bottom: 10px; margin-right: 10px; border-right-width: 0px" height="191" alt="billgates" src="http://www.tigraine.at/wp-content/uploads/2008/01/billgates.png" width="178" border="0" /> You know that you have some serious affinity toward Microsoft software and technologies when you live in Austria (being GMT+1) and stay up waiting to watch Bill Gates deliver his <a href="http://www.microsoft.com/events/executives/billgates.mspx">keynote speech</a> at 6:30 PM Pacific Time (GMT-8) (that's only 9 hours of difference, meaning it's been 3:30 AM here in Austria) at the <a href="http://www.sandsexpo.com/">Sands Expo and Convention Center</a> in Las Vegas!</p>  <p>And hey, I really really regret it!</p>  <ul style="margin-left: 10px; list-style-type: disc">   <li>Now I need to get myself a ugly Fiat or Ford to have Microsoft Auto on my car. </li>    <li>They made some vague assumptions that the Zune will launch in Europe someday (man I didn't want to spend those 300&#8364;). </li>    <li>They made me even more eager to buy an XBox360 (man, my girlfriend almost had talked me out of this!). </li>    <li>I now seriously need to get myself a Windows Mobile powered cell. </li> </ul>  <p>So, frankly - I loved this keynote.    <br />I mean, I've seen most of this stuff somewhere before. There is a reason most of my friends ask whether I am paid by Microsoft for talking about their newest technologies all the time.     <br />But still, Gates and Robbie Bach somehow managed to deliver their message.</p> 
<!--more-->
  <p><strong>Good, but short!</strong></p>  <p>Whoever looked upon the <a href="http://www.silverlight.net">Silverlight</a> technology and it's uses, knows that to showcase <a href="http://www.silverlight.net">Silverlight</a> you clearly need the full keynote, not only some 3 minute spot from NBC.</p>  <p>If you've ever heard word from <a href="http://www.microsoft.com/surface/">Microsoft Surface</a> knows that that one technology alone is so freaking great that Steve Jobs would need 2 keynotes to promote it.     <br />You should definitely check out the Videos on the offial Page as well as some on Youtube (like <a href="http://youtube.com/watch?v=-9j_tYP-kzc">this one</a>, or <a href="http://youtube.com/watch?v=FlZxuqjJDgk">this one</a>).</p>  <p>Something that also fell short was Microsoft Auto.    <br />Although I didn't knew too much about this service before the keynote, I am very sure that they showed it wrong.     <br />So, basically: Microsoft Auto is your new board-computer in your car. You have access to devices like your Zune, your Cellphone (running Windows Mobile) etc etc.. And that through voice recognition and integration into the car.     <br />So, what did they do wrong? First off, they showed the Zune connected to car through a simple cable. - Heck, I know that the Zune has WiFi, and I am pretty sure it can't be so fucking difficult to build WiFi into my brand-new car! So why do they need that cable? Cables are for iPhones, I've got my Zune to get rid of those cables. They managed to connect my phone through Bluetooth, why not my Zune.     <br />The way they showcased that stuff it looked like the presentation for some built-in hands-free device to control your Zune, not a entertainment and media-system that makes my car more fun!     <br />(They only briefly mentioned a new service that's calling 911 when your airbag goes off and you don't interrupt the car's cry for help.)</p>  <p>On the XBox360, I am very pleased to hear that it's features will go way beyond gaming so that I may have some leverage in my ongoing discussion with my beloved one about buying an XBox360.    <br />The XBox360 will start selling as a set-top box for Microsoft Mediaroom (their new IPTV Service) and in the near future start to broadcast (on the normal XBox360) shows from Disney and abc (Lost, Grey's Anatomy, Desperate Housewives) through XBox Live. So maybe buying an XBox360 is a key to getting my digital home-entertainment system (after Intel failed me with their Viiv technology).</p>  <p>&#160;</p>  <p>Oh, and by the way, you can watch the Keynote <a href="http://www.microsoft.com/events/executives/billgates.mspx">here</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>183</wp:post_id>
<wp:post_date>2008-01-07 06:22:45</wp:post_date>
<wp:post_date_gmt>2008-01-07 02:22:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ces-2008-keynote</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>billgates.png</title>
<link>http://www.tigraine.at/2008/01/07/ces-2008-keynote/billgatespng/</link>
<pubDate>Mon, 07 Jan 2008 04:23:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/billgates.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>182</wp:post_id>
<wp:post_date>2008-01-07 06:23:17</wp:post_date>
<wp:post_date_gmt>2008-01-07 04:23:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>billgatespng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>183</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/billgates.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/billgates.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:178;s:6:"height";i:191;s:14:"hwstring_small";s:22:"height='96' width='89'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/billgates.png";s:5:"thumb";s:23:"billgates.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>mslivelogo.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/mslivelogopng/</link>
<pubDate>Sat, 12 Jan 2008 01:25:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/mslivelogo.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>184</wp:post_id>
<wp:post_date>2008-01-12 03:25:11</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:25:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mslivelogopng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/mslivelogo.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/mslivelogo.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:261;s:6:"height";i:52;s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/mslivelogo.png";s:5:"thumb";s:24:"mslivelogo.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wlw.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/wlwpng/</link>
<pubDate>Sat, 12 Jan 2008 01:25:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/wlw.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>185</wp:post_id>
<wp:post_date>2008-01-12 03:25:15</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:25:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wlwpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/wlw.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/wlw.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:379;s:6:"height";i:236;s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:64:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/wlw.png";s:5:"thumb";s:17:"wlw.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>writer-screenshot.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/writer-screenshotpng/</link>
<pubDate>Sat, 12 Jan 2008 01:25:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>186</wp:post_id>
<wp:post_date>2008-01-12 03:25:24</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:25:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>writer-screenshotpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/writer-screenshot.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:977;s:6:"height";i:974;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:78:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/writer-screenshot.png";s:5:"thumb";s:31:"writer-screenshot.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>writer-screenshot-thumb.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/writer-screenshot-thumbpng/</link>
<pubDate>Sat, 12 Jan 2008 01:25:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>187</wp:post_id>
<wp:post_date>2008-01-12 03:25:29</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:25:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>writer-screenshot-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/writer-screenshot-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:481;s:6:"height";i:480;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:84:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/writer-screenshot-thumb.png";s:5:"thumb";s:37:"writer-screenshot-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>windows-live-photo-gallery-logo-thumb.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/windows-live-photo-gallery-logo-thumbpng/</link>
<pubDate>Sat, 12 Jan 2008 01:25:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/windows-live-photo-gallery-logo-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>189</wp:post_id>
<wp:post_date>2008-01-12 03:25:30</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:25:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-live-photo-gallery-logo-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/windows-live-photo-gallery-logo-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/windows-live-photo-gallery-logo-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:100;s:6:"height";i:100;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:98:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/windows-live-photo-gallery-logo-thumb.png";s:5:"thumb";s:51:"windows-live-photo-gallery-logo-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>panorama2-thumb.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/panorama2-thumbpng/</link>
<pubDate>Sat, 12 Jan 2008 01:26:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/panorama2-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>191</wp:post_id>
<wp:post_date>2008-01-12 03:26:31</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:26:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>panorama2-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/panorama2-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panorama2-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:210;s:6:"height";i:177;s:14:"hwstring_small";s:23:"height='96' width='113'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panorama2-thumb.png";s:5:"thumb";s:29:"panorama2-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>panorama1-thumb.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/panorama1-thumbpng/</link>
<pubDate>Sat, 12 Jan 2008 01:27:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/panorama1-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>193</wp:post_id>
<wp:post_date>2008-01-12 03:27:18</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:27:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>panorama1-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/panorama1-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panorama1-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:210;s:6:"height";i:178;s:14:"hwstring_small";s:23:"height='96' width='113'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panorama1-thumb.png";s:5:"thumb";s:29:"panorama1-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>panoramic3-thumb.png</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/panoramic3-thumbpng/</link>
<pubDate>Sat, 12 Jan 2008 01:28:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/panoramic3-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>195</wp:post_id>
<wp:post_date>2008-01-12 03:28:52</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:28:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>panoramic3-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>196</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/panoramic3-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panoramic3-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:640;s:6:"height";i:448;s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/panoramic3-thumb.png";s:5:"thumb";s:30:"panoramic3-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Windows Live!</title>
<link>http://www.tigraine.at/2008/01/12/windows-live/</link>
<pubDate>Sat, 12 Jan 2008 01:28:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[Microsoft]]></category>

		<category domain="tag" nicename="microsoft"><![CDATA[Microsoft]]></category>

		<category domain="tag"><![CDATA[Windows Live]]></category>

		<category domain="tag" nicename="windows-live"><![CDATA[Windows Live]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/12/windows-live/</guid>
<description></description>
<content:encoded><![CDATA[How many of you know Windows Live?

<a href="http://www.live.com"><img border="0" width="261" src="http://www.tigraine.at/wp-content/uploads/2008/01/mslivelogo.png" alt="Microsoft Windows Live" height="52" style="border-width: 0px" /></a>

Windows Live is Microsofts new way of doing online applications. They changed almost every one of their services to match the Windows Live brand. Hotmail, MSN Search, MSN Messenger etc, all of those are now called Windows Live Search/Hotmail/Messenger.

And while at it Microsoft also released two cool new desktop applications called <strong>Windows Live Writer</strong> and <strong>Windows Live Photogallery! </strong>(You can get them at: <a target="_blank" href="http://get.live.com/">get.live.com</a>)

<img border="0" width="379" src="http://www.tigraine.at/wp-content/uploads/2008/01/wlw.png" alt="Windows Live Writer" height="236" />

How do you write your blog posts? Most people do so in their browser using those incredibly bad WYSIWYG inline HTML editors their blog software came packed with. When they post Images they do so after resizing it in Photoshop etc etc.

Now, that somehow works. I mean, most blog engines have some AJAX in place to save your drafts every few seconds and uploading works mainly through the browser. So how could this really be improved?

By installing Live Writer, handing over your blog address and login credentials and being set to go. Live Writer downloads the blog styles from the web, automatically checks for supported stuff on the blog engine and presents you with a perfectly intuitive and great interface for writing your blog posts. You can easily drag and drop, insert tables, images, links without any need to ever get down to the HTML source.
And of course you can insert images, but instead of firing up Photoshop and doing the resizing yourself, Live Writer is doing it for you (while being able to add blur, shadows, border, watermarks etc).

You can even use Live Writer to edit already published content or create/edit new pages (if your blog engine supports that). To be honest, since I've been using Live Writer I haven't seen my wp-admin page for anything else than deleting Askismet spam!

Here Screenshot of Windows Live Writer while writing this post:

<a href="http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot.png"><img border="0" width="481" src="http://www.tigraine.at/wp-content/uploads/2008/01/writer-screenshot-thumb.png" alt="Windows Live Writer Screenshot" height="480" style="margin: 0px; border: 0px" /></a>

<img border="0" align="left" width="100" src="http://www.tigraine.at/wp-content/uploads/2008/01/windows-live-photo-gallery-logo-thumb.png" alt="Windows_Live_Photo_Gallery_logo" height="100" />

<strong>Windows Live Photo Gallery</strong> is the other great new app coming with Windows Live. Although it's not completely new, it's just a better version of the Windows Vista photo gallery. It does the same thing, it watches the filesystem for changes and shows them in a very clean intuitive way.

What's changed from the Vista default version is built-in support for uploading photos to Flickr or Live Spaces. And, that's why I started using it: It comes with a great new feature called "Create panoramic"!

It's so damn simple, take two pictures and click one button. Voila, you get a panoramic view like this:

<a href="http://www.tigraine.at/wp-content/uploads/2008/01/panorama2.jpg"><img border="0" width="210" src="http://www.tigraine.at/wp-content/uploads/2008/01/panorama2-thumb.png" alt="panorama2" height="177" /></a> + <a href="http://www.tigraine.at/wp-content/uploads/2008/01/panorama1.jpg"><img border="0" width="210" src="http://www.tigraine.at/wp-content/uploads/2008/01/panorama1-thumb.png" alt="panorama1" height="178" /></a> 

<strong>Result:</strong> <a href="http://www.tigraine.at/wp-content/uploads/2008/01/panoramic3.png"><img border="0" width="640" src="http://www.tigraine.at/wp-content/uploads/2008/01/panoramic3-thumb.png" alt="panoramic3" height="448" /></a>

The final image still needs cropping, but that's something Live Photo Gallery learned since it's appearance in Windows Vista. Simple fixing like red eye removal, cropping, color adjustments or sharpness can easily be done from within Photo Gallery.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>196</wp:post_id>
<wp:post_date>2008-01-12 03:28:53</wp:post_date>
<wp:post_date_gmt>2008-01-12 01:28:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-live</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>593</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Windows Live SkyDrive could be smarter]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/05/15/windows-live-skydrive-could-be-smarter/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-05-15 10:38:41</wp:comment_date>
<wp:comment_date_gmt>2008-05-15 08:38:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] one of the cooler things Microsoft released lately under their Live.com brand has somehow replaced my private FTP server for sharing files with myself and [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Computer Programming Quotes</title>
<link>http://www.tigraine.at/2008/01/12/computer-programming-quotes/</link>
<pubDate>Sat, 12 Jan 2008 16:41:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category domain="tag"><![CDATA[Computer]]></category>

		<category domain="tag" nicename="computer"><![CDATA[Computer]]></category>

		<category domain="tag"><![CDATA[Funny]]></category>

		<category domain="tag" nicename="funny"><![CDATA[Funny]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category domain="tag"><![CDATA[Quotes]]></category>

		<category domain="tag" nicename="quotes"><![CDATA[Quotes]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/12/computer-programming-quotes/</guid>
<description></description>
<content:encoded><![CDATA[<p>Oh god, I am still laughing after having read this brilliant list of <a href="http://www.devtopics.com/101-great-computer-programming-quotes/" target="_blank">101 Great Computer Programming Quotes</a> I found on <a href="http://www.dotnetkicks.com/other/101_Great_Computer_Programming_Quotes_1" target="_blank">DotNetKicks</a>.</p>  <p>Here are some of my favorites, although I would recommend the whole list to anyone with some spare time!</p>  <ol>   <li>&#8220;Saying that Java is nice because it works on all OSes is like saying that anal sex is nice because it works on all genders.&#8221;     <br />(Alanna)</li>    <li>&#8220;Computers are like bikinis. They save people a lot of guesswork.&#8221;     <br />(Sam Ewing)</li>    <li>&#8220;Programming is like sex: one mistake and you&#8217;re providing support for a lifetime.&#8221;     <br />(Michael Sinz)</li>    <li>&#8220;Programmers are in a race with the Universe to create bigger and better idiot-proof programs, while the Universe is trying to create bigger and better idiots.&#160; So far the Universe is winning.&#8221;     <br />(Rich Cook)</li>    <li>&#8220;It&#8217;s ridiculous to live 100 years and only be able to remember 30 million bytes.&#160; You know, less than a compact disc.&#160; The human condition is really becoming more obsolete every minute.&#8221;     <br />(Marvin Minsky)</li>    <li>&#8220;Hardware: The parts of a computer system that can be kicked.&#8221;     <br />(Jeff Pesis)</li>    <li>&#8220;I&#8217;ve finally learned what &#8216;upward compatible&#8217; means.&#160; It means we get to keep all our old mistakes.&#8221;     <br />(Dennie van Tassel)</li>    <li>&#8220;There are two major products that come out of Berkeley: LSD and UNIX.&#160; We don&#8217;t believe this to be a coincidence.&#8221;     <br />(Jeremy S. Anderson)</li>    <li>&#8220;There are two ways of constructing a software design.&#160; One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies.&#8221;     <br />(C.A.R. Hoare)</li>    <li>&#8220;Software suppliers are trying to make their software packages more &#8216;user-friendly&#8217;&#8230;&#160; Their best approach so far has been to take all the old brochures and stamp the words &#8216;user-friendly&#8217; on the cover.&#8221;     <br />(Bill Gates)</li>    <li>&#8220;There&#8217;s an old story about the person who wished his computer were as easy to use as his telephone.&#160; That wish has come true, since I no longer know how to use my telephone.&#8221;     <br />(Bjarne Stroustrup)</li>    <li>&#8220;The use of COBOL cripples the mind; its teaching should therefore be regarded as a criminal offense.&#8221;     <br />(E.W. Dijkstra)</li>    <li>&#8220;There is no programming language&#8211;no matter how structured&#8211;that will prevent programmers from making bad programs.&#8221;     <br />(Larry Flon)</li> </ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>201</wp:post_id>
<wp:post_date>2008-01-12 18:41:02</wp:post_date>
<wp:post_date_gmt>2008-01-12 16:41:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>computer-programming-quotes</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Enumerators in C#</title>
<link>http://www.tigraine.at/2008/01/12/enumerators-in-c/</link>
<pubDate>Sat, 12 Jan 2008 17:37:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[C#]]></category>

		<category domain="tag" nicename="c"><![CDATA[C#]]></category>

		<category domain="tag"><![CDATA[Computer]]></category>

		<category domain="tag" nicename="computer"><![CDATA[Computer]]></category>

		<category domain="tag"><![CDATA[Iterator]]></category>

		<category domain="tag" nicename="iterator"><![CDATA[Iterator]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/12/enumerators-in-c/</guid>
<description></description>
<content:encoded><![CDATA[<p>I am still trying to figure out if what I did was useful or not.</p>  <p>Based on the assumption that sometimes you may need a variable typed IEnumerable&lt;T&gt; to hold a value that only implements IEnumerable I wrote this adapter class (you find it after the jump).</p>  <blockquote>   <p><strong>What's IEnumerator?</strong>       <br />IEnumerator it the old non-generic implementation of the Iterator pattern, while IEnumerator&lt;T&gt; is the strongly-typed generic version introduced in .NET 2.0.</p> </blockquote>  <p>IEnumerable&lt;T&gt; implements IEnumerable, but there is no way to cast IEnumerable to IEnumerable&lt;T&gt;. So I wondered how you could comply to the <a href="http://en.wikipedia.org/wiki/Iterator" target="_blank">Iterator pattern</a>. </p>  <p>My first suspicion came when I tried foreach on both IEnumerables. Foreach has no problem with both of them, so I dug out my C# language spec and discovered that foreach has to use two different methods for either IEnumerable or IEnumerable&lt;T&gt; (That's not really clear there, anyone to falsify my assumption?).    <br />They could have gone the other way and use the non-generic IEnumerable for the iteration, but that would need an implicit typecast on every iteration (and that would slow things down I guess).</p>  <p>In a scenario like the following one you can't pass the Enumerator created by an Array.GetEnumerator() because it uses IEnumerator instead of the generic version IEnumerator&lt;T&gt;.</p>  <p><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> PrintList(</span><span style="color: #2b91af">IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #2b91af">String</span><span style="color: #000000">&gt; MyList)      <br />{       <br />&#160;&#160; </span><span style="color: #0000ff">foreach</span><span style="color: #000000"> (</span><span style="color: #2b91af">String</span><span style="color: #000000"> Entry</span><span style="color: #0000ff">in</span><span style="color: #000000"> MyList)      <br />&#160;&#160;&#160; {       <br />&#160;&#160;&#160;&#160;&#160;&#160; </span><span style="color: #2b91af">Console</span><span style="color: #000000">.WriteLine(</span><span style="color: #a31515">&quot;{0}&quot;</span><span style="color: #000000">, Entry);      <br />&#160;&#160;&#160; }       <br />}</span></p>  <p>Because IEnumerable&lt;T&gt; implements IEnumerable you could just switch back to the non-generic version, but that's something I don't really like (although it may be more practical).</p> 
<!--more-->
  <p></p>  <p>So here are 2 (very simple) adapter classes that will provide upward-compatibility to your IEnumerable and IEnumerator needs:</p>  <p></p>  <pre><span color="black">
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> </span><span style="color: #2b91af">GenericEnumerableAdapter</span><span style="color: #000000">&lt;T&gt; : </span><span style="color: #2b91af">IEnumerable</span><span style="color: #000000">&lt;T&gt;
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #2b91af">IEnumerable</span><span style="color: #000000"> _Old;
    
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> GenericEnumerableAdapter(</span><span style="color: #2b91af">IEnumerable</span><span style="color: #000000"> OldEnumerable)
    {
        </span><span style="color: #0000ff">this</span><span style="color: #000000">._Old = OldEnumerable;
    }

</span><span style="color: #0000ff">    #region</span><span style="color: #000000"> IEnumerable&lt;T&gt; Members

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000">&lt;T&gt; GetEnumerator()
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> </span><span style="color: #2b91af">GenericEnumeratorAdapter</span><span style="color: #000000">&lt;T&gt;(_Old.GetEnumerator());
    }

</span><span style="color: #0000ff">    #endregion

    #region</span><span style="color: #000000"> IEnumerable Members

    </span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000"> </span><span style="color: #2b91af">IEnumerable</span><span style="color: #000000">.GetEnumerator()
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> _Old.GetEnumerator();
    }

</span><span style="color: #0000ff">    #endregion
</span><span style="color: #000000">}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> </span><span style="color: #2b91af">GenericEnumeratorAdapter</span><span style="color: #000000">&lt;T&gt; : </span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000">&lt;T&gt;
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000"> _OldEnum;
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> GenericEnumeratorAdapter(</span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000"> OldEnumerator)
    {
        _OldEnum = OldEnumerator;
    }

</span><span style="color: #0000ff">    #region</span><span style="color: #000000"> IDisposable Members

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Dispose()
    {
        </span><span style="color: #0000ff">this</span><span style="color: #000000">._OldEnum = </span><span style="color: #0000ff">null</span><span style="color: #000000">;
    }

</span><span style="color: #0000ff">    #endregion

    #region</span><span style="color: #000000"> IEnumerator&lt;T&gt; Members

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> T Current
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> (T)_OldEnum.Current; }
    }

    </span><span style="color: #0000ff">object</span><span style="color: #000000"> </span><span style="color: #2b91af">IEnumerator</span><span style="color: #000000">.Current
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _OldEnum.Current; }
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> MoveNext()
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> _OldEnum.MoveNext();
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Reset()
    {
        _OldEnum.Reset();
    }

</span><span style="color: #0000ff">    #endregion
</span><span style="color: #000000">}</span></pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>202</wp:post_id>
<wp:post_date>2008-01-12 19:37:36</wp:post_date>
<wp:post_date_gmt>2008-01-12 17:37:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>enumerators-in-c</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>.NET Framework Library Source Code released</title>
<link>http://www.tigraine.at/2008/01/17/net-framework-library-source-code-released/</link>
<pubDate>Thu, 17 Jan 2008 01:15:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[.NET 3.5]]></category>

		<category domain="tag" nicename="net-35"><![CDATA[.NET 3.5]]></category>

		<category domain="tag"><![CDATA[Microsoft]]></category>

		<category domain="tag" nicename="microsoft"><![CDATA[Microsoft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/17/net-framework-library-source-code-released/</guid>
<description></description>
<content:encoded><![CDATA[<p>Wow! Scott Guthrie just <a href="http://weblogs.asp.net/scottgu/archive/2008/01/16/net-framework-library-source-code-now-available.aspx" target="_blank">announced on his blog</a> that the source servers are ready and that they just released most of their .NET source code to the public.</p>  <p>This means that you are able to download the debug symbols and actually debug the .NET classes if you want to. Or you can just drool over the framework and try to learn a thing or two.</p>  <p>Go check out Shawn Burke's blog post about <a href="http://blogs.msdn.com/sburke/archive/2008/01/16/configuring-visual-studio-to-debug-net-framework-source-code.aspx" target="_blank">how to set things up</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>203</wp:post_id>
<wp:post_date>2008-01-17 03:15:20</wp:post_date>
<wp:post_date_gmt>2008-01-17 01:15:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>net-framework-library-source-code-released</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Alive and kicking</title>
<link>http://www.tigraine.at/2008/01/27/alive-and-kicking/</link>
<pubDate>Sun, 27 Jan 2008 18:14:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/27/alive-and-kicking/</guid>
<description></description>
<content:encoded><![CDATA[<p>I know I haven't posted for some time, mainly due to the fact that I'm in the middle of exams right now. </p>  <p>While I should be learning Computer Organization &amp; Design for next week's exams (besides some other stuff I should be doing right now), I started off reading my new book <a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1201456007&amp;sr=8-1" target="_blank">Code Complete: A Practical Handbook of Software Construction by Steve McConnell</a>.</p>  <p>While I'm not fully happy with Amazon's delivery (a week late, both books got damaged during the lift), I am very happy with the book itself. Unfortunately it isn't that easy to read, so due to a lack of piece and quiet I haven't read past chapter 4. </p>  <p>McConnell laid out in his first chapter that real Software Development Ideas won't be addressed before chapter 5, so I was pretty much reading through common problems during project inception and the differences between sequential and iterative programming.</p>  <p>Besides reading and learning I also started some ASP.NET MVC experiments, but I think I'll back up on that for now and try to make myself familiar with the pattern behind MVC.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>204</wp:post_id>
<wp:post_date>2008-01-27 20:14:11</wp:post_date>
<wp:post_date_gmt>2008-01-27 18:14:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>alive-and-kicking</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>idontcare.jpg</title>
<link>http://www.tigraine.at/2008/01/28/buying-yourself-an-apple/idontcarejpg/</link>
<pubDate>Mon, 28 Jan 2008 13:50:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/idontcare.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>205</wp:post_id>
<wp:post_date>2008-01-28 15:50:11</wp:post_date>
<wp:post_date_gmt>2008-01-28 13:50:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>idontcarejpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>206</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/idontcare.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/idontcare.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:440;s:6:"height";i:255;s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/idontcare.jpg";s:5:"thumb";s:23:"idontcare.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Buying yourself an Apple</title>
<link>http://www.tigraine.at/2008/01/28/buying-yourself-an-apple/</link>
<pubDate>Mon, 28 Jan 2008 13:50:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/28/buying-yourself-an-apple/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/lockergnome/193238415/"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="255" alt="iDontcare" src="http://www.tigraine.at/wp-content/uploads/2008/01/idontcare.jpg" width="440" border="0" /></a></p>  <p>Did you snicker when you first saw this picture above? If not you are either one of the blessed people out there who don't know Apple or one of those ignorant's who will flame anybody who doesn't think &quot;the Apple way&quot;&#174;.    <br />Personally I think most of my readers will be neither nor.</p>  <p>First things first: My brother wants to buy an iPod.    <br />And, as much as I would love to talk him out of it, I can't.     <br />I simply can't because there is no other device currently available in Austria except for the iPod.</p>  <p>Ok, now you know I hate Apple products. (Flame me!)    <br />I personally don't like the i&lt;SomeProductName&gt; design Apple has been doing for the last years (just personal taste!). But I think I could overlook the design if I wouldn't dislike the message Apple has been delivering together with their products (lifestyle isn't something I define through my mp3-player or laptop). And foremost, I don't like their pricing policy.</p>  <p>But that's all me. Now if you aren't already biased: What mp3 player should you buy if those assumptions hold true:</p>  <ul>   <li>You hear lots of music (&gt;8 gigabyte) </li>    <li>You hear music depending on your mood </li>    <li>You don't see the price of 250&#8364; as a problem </li>    <li>You like the iPod design </li>    <li>You like using iTunes (my brother does) </li> </ul>  <p>So, let's assume you want an 80 gigabyte mp3-player. And you look at the market and find: Creative, Apple, Sony and some other nonames (that obviously wouldn't be noname anymore if you should consider them).    <br />You see? Something is missing in that list. Something that's a real alternative to the iPod.     <br />I mean, hell yeah, you can buy an Creative ZEN and be happy with it. But the software is and has always been really awful (so they made it compatible to iTunes). So, you're buying a ZEN that you will be using through iTunes: Does it ring a bell? Why bother with ZEN altogether if your iPod works with iTunes much better than ZEN?     <br />And on the Sony side of things: They didn't get their player right imo. While the ZEN shines as a great mp3-player with good sound, Sony just messed up the whole usability concept (and their desktop software sucks too). </p>  <p>So what's left? Some crappy mp3-player that unfortunately is the only choice you are currently presented: iPod.</p>  <p>I am still hoping Microsoft is going to release the Zune in Austria someday soon. Until then, there simply is no viable alternative to the iPod.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>206</wp:post_id>
<wp:post_date>2008-01-28 15:50:11</wp:post_date>
<wp:post_date_gmt>2008-01-28 13:50:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>buying-yourself-an-apple</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>191</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.68.73</wp:comment_author_IP>
<wp:comment_date>2008-01-28 18:39:24</wp:comment_date>
<wp:comment_date_gmt>2008-01-28 16:39:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Right, I thought about the obvious PSP/NDS options too, but they are just too big for everyday use. And uploading your music through Filemanagers still sucks (either you do it for the ZEN or the PSP).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>190</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>143.205.122.226</wp:comment_author_IP>
<wp:comment_date>2008-01-28 18:30:17</wp:comment_date>
<wp:comment_date_gmt>2008-01-28 16:30:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'd vote for a Sony Playstation Portable (PSP): Put in a 4 GB card and you can watch videos, listen to MP3s and you have a fine little thingy to play games with. The battery life is good enough and the whole system is (in this state) usable and easy. Though there is one thing: It doesn't fit in many pockets.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>201</wp:comment_id>
<wp:comment_author><![CDATA[Cblacklions]]></wp:comment_author>
<wp:comment_author_email>b.leit66@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-01-30 08:58:43</wp:comment_date>
<wp:comment_date_gmt>2008-01-30 06:58:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[GO APPLE! - I vote for an Iphone! Nice Toy :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Live Writer and it&#039;s transparency</title>
<link>http://www.tigraine.at/2008/01/30/live-writer-and-its-transparency/</link>
<pubDate>Wed, 30 Jan 2008 01:35:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/30/live-writer-and-its-transparency/</guid>
<description></description>
<content:encoded><![CDATA[<p>Since I got my 24&quot; HP monitor I really started to fancy the new Vista Aero glass effects that let my desktop shine through borders and stuff.    <br />Although I usually stockpile window upon window, that little blur effect on the windows is something I definitely like about Vista.</p>  <p>Due to all this common Vista look'n'feel I never really noticed that Windows Live Writer is a .NET 2.0 application using Windows Forms <strong>AND</strong> (&amp;&amp;) having a transparency effect on it's splash screen!</p>  <p><img alt="Windows Live Writer" src="http://www.tigraine.at/wp-content/uploads/2008/01/wlw.png" /></p>  <p>So, why this never came to my mind is something I don't know, but today I closed a background window while starting up WLW and found out that my desktop and the WLW splash where out of sync.</p>  <p>Basically, Windows Live Writer has no transparency of it's own. It just takes a screenshot and handles the transparency effect in it's form.    <br />If the screen behind WLW splash is changing, changes don't reflect onto the slash page (as they do in Vista aero).</p>  <p>Funny stuff, but definitely something I'd keep in mind when it gets to fancy looks on pre-WPF projects.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>207</wp:post_id>
<wp:post_date>2008-01-30 03:35:33</wp:post_date>
<wp:post_date_gmt>2008-01-30 01:35:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>live-writer-and-its-transparency</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>killepson.png</title>
<link>http://www.tigraine.at/2008/01/31/the-modern-age-of-printing/killepsonpng/</link>
<pubDate>Thu, 31 Jan 2008 00:43:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/01/killepson.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>208</wp:post_id>
<wp:post_date>2008-01-31 02:43:23</wp:post_date>
<wp:post_date_gmt>2008-01-31 00:43:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>killepsonpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>209</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/01/killepson.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/killepson.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:492;s:6:"height";i:500;s:14:"hwstring_small";s:22:"height='96' width='94'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/01/killepson.png";s:5:"thumb";s:23:"killepson.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The modern age of printing!</title>
<link>http://www.tigraine.at/2008/01/31/the-modern-age-of-printing/</link>
<pubDate>Thu, 31 Jan 2008 00:43:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/01/31/the-modern-age-of-printing/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/rachic/218724843/"><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="500" alt="killepson" src="http://www.tigraine.at/wp-content/uploads/2008/01/killepson.png" width="492" border="0" /></a> Tomorrow is an important exam on computer organization and design and I was learning. We are allowed to use our records during the exam, so I went through the whole bunch of documentation our professor supplied and searched for helpful stuff I could carry with me tomorrow. Obviously, taking 150 pages of notes with you won't help so I got down to about 25 pages with some meaningful information on them.</p>  <p>So, usually I'd just hit CTRL + P on any page that I think is worth it and print that one page out.   <br />But: Epson managed to totally screw up their drivers (for any OS) so I finally ended up printing everything to XPS, copying it over to the machine where my printer is installed and printing it out manually!    <br />Yes, right: I physically went to another computer that's interconnected through a 100mbit Ethernet to print out 25 pages! (Am I the only one feeling like stone age here?)</p> 
<!--more-->
  <p>So, what went wrong?   <br />I have a <a href="http://www.epson.at/product/printer/epl_6100l/index.htm">Epson EPL-6100L</a> sitting on a Windows XP Professional computer connected through USB.     <br />Drivers and everything are setup and the printer is working.     <br />Only problem? In case you run your printer over the network windows is installing the printer drivers locally to your machine and creates a virtual adapter for that printer to communicate over the network.     <br />I admit, that's not the best possible solution I can think of, but it usually works.     <br />Only that Epson built those stupid monitoring applications into their driver, so whenever I try to print something the printer driver is trying to poll the printer for it's cartridge status and stuff (That printer isn't connected to this computer, so the poll times out). Great stuff about this? During this 10-20 second timeout the application you're using to print freezes completely (read: not responding in taskmanager) until the driver gets over it's problems and finally sends off the doc.     <br />Note that the driver first almost crashes your app, then after printing out something stupid as &quot;Can't find printer status information&quot; it starts sending off my document.    <br />And there are times where the driver completely crashes and I can't print anything. </p>  <p>But, yet I had lived through the above problem on XP. But on Windows Vista it looks like the OS is doing something to the printer driver when you just bring up the printing dialog. So my app freezes for like 5 seconds whenever I start a print dialog.   <br />Taking my user experience to the next level of pain:    <br />Print -&gt; (5 sec wait) -&gt; hit OK -&gt; (30-60 seconds wait) -&gt; clicking stupid messagebox -&gt; (wait 5 secs for the printer to start) -&gt; get printout.</p>  <p>Man was I pissed when I had to go through this tedious process for like the 3rd time. So I lost it and did the XPS -&gt; copy stuff to get it done in a reasonable amount of time. </p>  <p>So yes, Epson really really screwed this one!   <br />Yeah, they really did. And rest assured that I'll never ever buy another Epson printer in my whole life!</p>  <p>But now to you guys, any suggestions on buying a new printer?    <br />I am absolutely sure that I don't need color printing (got another printer for that), I want a fast printer, I want it directly connected to my network (own IP) and that I want all of that pricey!    <br />Suggestions are welcome.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>209</wp:post_id>
<wp:post_date>2008-01-31 02:43:24</wp:post_date>
<wp:post_date_gmt>2008-01-31 00:43:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-modern-age-of-printing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>208</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2008-02-01 01:38:48</wp:comment_date>
<wp:comment_date_gmt>2008-01-31 23:38:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[could it be that someone trying to get involved with consulting for improving the efficiency of computer-aided tasks was to lazy (to use this word instead of stupid) to move from his screen to the thing connected with this stone age 100mbit ethernet which sits approximately 2m meters away from him to get the files there and print it without any hassle (24" are no argument at all as long as you use it for running over a single word file)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>713</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Don&#8217;t bother with sharing a printer]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/06/28/dont-bother-with-sharing-a-printer/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-06-28 22:55:31</wp:comment_date>
<wp:comment_date_gmt>2008-06-28 20:55:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] complained about that before, but I didn&#8217;t need too much printing lately so I forgot. Until today when I found the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>New job!</title>
<link>http://www.tigraine.at/2008/02/11/new-job/</link>
<pubDate>Sun, 10 Feb 2008 23:53:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/11/new-job/</guid>
<description></description>
<content:encoded><![CDATA[<p>Yes, I'm going back to work.</p>  <p>I accepted to work on a new ASP.NET web project as CTO and developer for my previous employer <a href="http://www.pixelpoint.at">pixelpoint</a>.</p>  <p>So expect to hear new stuff about ASP.NET and AJAX.NET here on my blog during the next weeks.</p>  <p>The project is called <a href="http://www.pizza.at">Pizza.at</a> and will be a online food delivery service.    <br />I had been working on a previous version that didn't make it to a release while I was working for pixelpoint. Due to time constraints and poor planning the project failed and I was approached some weeks ago to try to get it done during these holidays.</p>  <p>I accepted the deal, mainly because I was offered complete freedom on development (so I can abandon the old codebase).   <br />So, this time around I'm the one to blame if the project goes wrong, because I'm the guy doing all the planning.     <br />I have chosen an agile development process and am currently working on the requirement analysis and some basic design stuff.    <br />Because I want this project to be done fast I decided not to use any fancy new stuff like MVC or Silverlight. The whole project will be done on a SQL 2000 database with normal ASP.NET. Regardless, I'll be using C# 3.5 and some LinQ queries will surely make it into the application.</p>  <p>The whole thing will start later this week after I did another training course at pixelpoint for their employees.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>223</wp:post_id>
<wp:post_date>2008-02-11 01:53:43</wp:post_date>
<wp:post_date_gmt>2008-02-10 23:53:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-job</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>262</wp:comment_id>
<wp:comment_author><![CDATA[Cblacklions]]></wp:comment_author>
<wp:comment_author_email>b.leit66@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-02-11 09:03:42</wp:comment_date>
<wp:comment_date_gmt>2008-02-11 07:03:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hey buddie!

you'r coming back? when?



have a good one,

bernd]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>263</wp:comment_id>
<wp:comment_author><![CDATA[Horst]]></wp:comment_author>
<wp:comment_author_email>zerok@zerokspot.com</wp:comment_author_email>
<wp:comment_author_url>http://zerokspot.com</wp:comment_author_url>
<wp:comment_author_IP>143.205.175.173</wp:comment_author_IP>
<wp:comment_date>2008-02-11 09:20:14</wp:comment_date>
<wp:comment_date_gmt>2008-02-11 07:20:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[w00t, so I guess Pizza.at will finally make its return :D Always having to call the Koschat Pizzeria the "traditional" way really sucks ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>264</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>143.205.122.226</wp:comment_author_IP>
<wp:comment_date>2008-02-11 10:22:35</wp:comment_date>
<wp:comment_date_gmt>2008-02-11 08:22:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hope that he'll convert to Java is vanishing. It might well be that we lost him to the dark side. Sounds like the double light abre of MS SQL Server and Active Server Pages is too powerful on a first glance. 

But be warned! Only the purest (e.g. J2ME of course) will survive!

:-D

Grats, mathias]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>266</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.23</wp:comment_author_IP>
<wp:comment_date>2008-02-11 13:50:29</wp:comment_date>
<wp:comment_date_gmt>2008-02-11 11:50:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@Bernd: I'll be there on Wednesday for the training and on thursday I'll start working. 

@Horst: We are currently aiming for a release in October (if anything works out perfectly maybe in 8 weeks), hope you can bear with the "traditional" way for a few more months ;)

For Mathias, the hopes I'd switch back to Java have never been very high. Luckily Java syntax strongly resembles to C# so that I could fake some Java knowledge to pass your class :).
But I don't think I can really judge what works better, I've been so involved with the .NET side of things that I simply don't know what equivalents exist in the Java world. And due to Java being so spread out (many different projects in different places) I am pretty shure I'd be busy for some time finding my way through things. 

So for now, I'll just stick to C# 3.5 and hopefully the training course on Wednesday works. Yesterday I tried to do some of the VB code samples and had to find out I didn't remember how to declare a variable.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>A busy day</title>
<link>http://www.tigraine.at/2008/02/13/a-busy-day/</link>
<pubDate>Wed, 13 Feb 2008 19:21:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/13/a-busy-day/</guid>
<description></description>
<content:encoded><![CDATA[<p>At first I didn't want to post this. I'm completely exhausted after 8 hours of doing training at <a href="http://www.pixelpoint.at">pixelpoint</a> and some computer administration stuff for a friend afterwards. </p>  <p>But, because I talked like 3 hours about the Web 2.0 phenomenon and kept repeating &quot;You should blog&quot; I forced myself into blogging about it.</p>  <p>Although I didn't plan to stay for so long I actually enjoyed the day. I was doing a course on .NET programming in VB.NET and people were very interested and doing very well. Afterwards we had an open discussion (after I showed off some Web 2.0 stuff) about Web 2.0 and how it can be used for various things in the carinthian context.</p>  <p>The Web 2.0 actually got out of hand after we covered <a href="http://www.wordpress.com">WordPress</a> and <a href="http://www.feedburner.com/">FeedBurner</a> in detail and we spent like an hours discussing the pro's and con's of WordPress as a CMS system for smaller web sites.</p>  <p>The programming session was far more enjoyable for myself. I think they actually did learn something from the whole thing, although they are still hesitating to write code themselves (I had to force them into writing a small sample application). But I think they now understand the .NET syntax much better and will be more efficient on doing ASP.NET web sites in the future.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>234</wp:post_id>
<wp:post_date>2008-02-13 21:21:10</wp:post_date>
<wp:post_date_gmt>2008-02-13 19:21:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-busy-day</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>sqldb.jpg</title>
<link>http://www.tigraine.at/2008/02/15/sql-server-2005-gui-complexity/sqldbjpg/</link>
<pubDate>Fri, 15 Feb 2008 12:39:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/sqldb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>235</wp:post_id>
<wp:post_date>2008-02-15 14:39:04</wp:post_date>
<wp:post_date_gmt>2008-02-15 12:39:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sqldbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>236</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/sqldb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/sqldb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:324;s:6:"height";i:78;s:14:"hwstring_small";s:23:"height='30' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/sqldb.jpg";s:5:"thumb";s:19:"sqldb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>SQL Server 2005 GUI complexity</title>
<link>http://www.tigraine.at/2008/02/15/sql-server-2005-gui-complexity/</link>
<pubDate>Fri, 15 Feb 2008 12:39:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/15/sql-server-2005-gui-complexity/</guid>
<description></description>
<content:encoded><![CDATA[<p>You know what?    <br />I really love SQL Server 2005, just because it got rid of the Enterprise Manager stuff and introduced SQL Server Management Studio. </p>  <p>What's bugging me now is that although the Management Studio is great to work with most of the time, there are some tiny little things I really hate whenever I create new databases!</p>  <p><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="78" alt="sqldb" src="http://www.tigraine.at/wp-content/uploads/2008/02/sqldb.jpg" width="324" border="0" /> </p>  <p>Whenever I want a field to be a primary key id field I need to go to declare it as primary key, and then define the identity specification.</p>  <p>And there is the design flaw. You can't just double click Identity Specification to change it from No to Yes, you actually have to first click the + to expand the section in the property grid before I can set the Yes/No value.    <br />I see the added complexity in some points where the increment or seed aren't appropriate, but to be honest, most of our ids start at 1 and increment by 1. So in 99,9% of the cases you don't need the extra complexity.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>236</wp:post_id>
<wp:post_date>2008-02-15 14:39:05</wp:post_date>
<wp:post_date_gmt>2008-02-15 12:39:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sql-server-2005-gui-complexity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linq1.jpg</title>
<link>http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/linq1jpg/</link>
<pubDate>Mon, 18 Feb 2008 13:16:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/linq1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>237</wp:post_id>
<wp:post_date>2008-02-18 15:16:13</wp:post_date>
<wp:post_date_gmt>2008-02-18 13:16:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq1jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>241</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/linq1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:435;s:6:"height";i:329;s:14:"hwstring_small";s:23:"height='96' width='126'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq1.jpg";s:5:"thumb";s:19:"linq1.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linq1-thumb.jpg</title>
<link>http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/linq1-thumbjpg/</link>
<pubDate>Mon, 18 Feb 2008 13:16:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/linq1-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>238</wp:post_id>
<wp:post_date>2008-02-18 15:16:13</wp:post_date>
<wp:post_date_gmt>2008-02-18 13:16:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq1-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>241</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/linq1-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq1-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:435;s:6:"height";i:329;s:14:"hwstring_small";s:23:"height='96' width='126'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq1-thumb.jpg";s:5:"thumb";s:25:"linq1-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linq2.jpg</title>
<link>http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/linq2jpg/</link>
<pubDate>Mon, 18 Feb 2008 13:16:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/linq2.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>239</wp:post_id>
<wp:post_date>2008-02-18 15:16:14</wp:post_date>
<wp:post_date_gmt>2008-02-18 13:16:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq2jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>241</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/linq2.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq2.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:394;s:6:"height";i:41;s:14:"hwstring_small";s:23:"height='13' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq2.jpg";s:5:"thumb";s:19:"linq2.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linq2-thumb.jpg</title>
<link>http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/linq2-thumbjpg/</link>
<pubDate>Mon, 18 Feb 2008 13:16:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/linq2-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>240</wp:post_id>
<wp:post_date>2008-02-18 15:16:14</wp:post_date>
<wp:post_date_gmt>2008-02-18 13:16:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq2-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>241</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/linq2-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq2-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:394;s:6:"height";i:41;s:14:"hwstring_small";s:23:"height='13' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/linq2-thumb.jpg";s:5:"thumb";s:25:"linq2-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Strange LinQ to SQL oddity</title>
<link>http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/</link>
<pubDate>Mon, 18 Feb 2008 13:16:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/18/strange-linq-to-sql-oddity/</guid>
<description></description>
<content:encoded><![CDATA[<p>I'm still in the process of doing some research on the tools I'm going to use over the next weeks to build the <a href="http://www.pizza.at">Pizza.at</a> web app.     <br />So today I tried some LinQ to SQL so I can get used to it a bit. And while doing so I started out with reading through ScottGu's <a href="http://weblogs.asp.net/scottgu/archive/2007/09/07/linq-to-sql-part-9-using-a-custom-linq-expression-with-the-lt-asp-linqdatasource-gt-control.aspx">LinQ to SQL series</a>.</p>  <p>I had already some parts of the database schema in place and so I imported it to the ORM, giving me the following model:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/02/linq1.jpg"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="329" alt="linq1" src="http://www.tigraine.at/wp-content/uploads/2008/02/linq1-thumb.jpg" width="435" border="0" /></a></p>  <p>So, this all worked perfectly and I immediately started doing some select statements (while learning how to use and write Lambda expressions - I'll blog about this later).</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/02/linq2.jpg"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="41" alt="linq2" src="http://www.tigraine.at/wp-content/uploads/2008/02/linq2-thumb.jpg" width="394" border="0" /></a></p>  <p>And yippie! It worked, although I was very confused that this statement would return a InvalidOperationException in case the Lambda didn't return something. Although I like the fact that it returns an exception, I think the exception given here is too generic. They could have done better in giving the exception a stronger name.</p>  <p>But, after getting over the exception name, everything went smooth from there. Except for me not seeing one thing:   <br />The C and D in <a href="http://en.wikipedia.org/wiki/Create%2C_read%2C_update_and_delete">CRUD</a>!</p>  <p>ScottGu showed off in his series that doing a simple Categories.Add and an afterwards call to dbContext.SubmitChanges() should do.    <br />In my version of Visual Studio and LinQ I simply don't find this method. All lists I get from the ORM are IQueryable and don't incorporate any Add and Delete Methods.</p>  <p>I'm getting a bit confused, I must be missing something at this point, there must be something I have overlooked. Any thoughts?</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>241</wp:post_id>
<wp:post_date>2008-02-18 15:16:14</wp:post_date>
<wp:post_date_gmt>2008-02-18 13:16:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>strange-linq-to-sql-oddity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>444</wp:comment_id>
<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
<wp:comment_author_email>me@chrisjsmith.me.uk</wp:comment_author_email>
<wp:comment_author_url>http://www.chrisjsmith.me.uk/</wp:comment_author_url>
<wp:comment_author_IP>78.86.23.245</wp:comment_author_IP>
<wp:comment_date>2008-03-23 11:00:20</wp:comment_date>
<wp:comment_date_gmt>2008-03-23 09:00:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Try using dbContext.Categories.SingleOrDefault(s=&gt;s.....);

You will get a null then.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>445</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.213</wp:comment_author_IP>
<wp:comment_date>2008-03-23 13:02:33</wp:comment_date>
<wp:comment_date_gmt>2008-03-23 11:02:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment!
I have been using SingleOrDefaults from time to time since, but never thought about using it to do error correction.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>I&#039;m frightening!</title>
<link>http://www.tigraine.at/2008/02/22/im-frightening/</link>
<pubDate>Fri, 22 Feb 2008 14:49:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/22/im-frightening/</guid>
<description></description>
<content:encoded><![CDATA[<p>Today I really scared the hell out of my co-workers.   <br />Although I don't officially work for pixelpoint I am currently working at their office, and so my fellow co-workers had to witness one of my scarce &quot;I jump up and dance through the room in ecstasy because it works&quot; moments.     <br />No need to say that they where completely shocked and came running with water and tranquilizers :).</p>  <p>Why I am a full of joy currently is because my first prototype of my online food-ordering application works!    <br />I was fighting the whole day with validation and data-binding issues on ASP.NET and finally got it to work.</p>  <p>I'll blog on my experiences with LinQ2SQL and ASP.NET in the future. For now I'll just say that I am very very happy with LinQ2SQL and I am absolutely sure that it saved me almost 3 weeks of development. </p>  <p>The whole application is completely functional after 7 days of development (still lacking a GUI)! I mean, obviously you need to be a programmer to order a pizza through the exposed model, but shopping cart, order checkout and product view functionality is already there. </p>  <p>I will spend next week working on a admin application and meeting with the design guys to get the front-end out.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>242</wp:post_id>
<wp:post_date>2008-02-22 16:49:05</wp:post_date>
<wp:post_date_gmt>2008-02-22 14:49:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>im-frightening</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>337</wp:comment_id>
<wp:comment_author><![CDATA[Askhari]]></wp:comment_author>
<wp:comment_author_email>tarisznyas@pixelpoint.at</wp:comment_author_email>
<wp:comment_author_url>http://nephilistic.com</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-02-22 16:52:46</wp:comment_date>
<wp:comment_date_gmt>2008-02-22 14:52:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'm still terrified... is it okay if I hide under my desk for a few minutes?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ASP.NET Security</title>
<link>http://www.tigraine.at/2008/02/27/aspnet-security/</link>
<pubDate>Tue, 26 Feb 2008 22:52:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/27/aspnet-security/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, reinventing the wheel every time you build an application works great, as long as you aren't on a very very tight schedule. So due to time constraints (and my reluctance for spending time) I figured out this time I'll stick to standard ASP.NET role based security.</p>  <p>I never really bothered with trying, mainly because I usually had complex security built into my data structure (like individual access rights for different records).    <br />So, obviously there is a way to do this with custom ASP.NET security providers, but doing security on my own saved me messing around with doing custom ASP.NET security.</p>  <p>So, this time I figured out, doing custom ASP.NET security isn't going to happen. Obviously there is only one administration website that needs authentication all over the place with no special roles and other fancy stuff. Just some plain .htaccess like security on a file-level basis.    <br />.htaccess isn't the most scaleable solution (and quite impractical on IIS ;)) so I just started off by following the quite simple <a href="http://msdn2.microsoft.com/en-us/library/879kf95c.aspx">walkthrough on MSDN</a>. </p>  <p>Now, after doing the user-creation you just need to drag the Login-Control onto your design surface and the user is presented with a pretty nice looking login form:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/02/login.jpg"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="144" alt="login" src="http://www.tigraine.at/wp-content/uploads/2008/02/login-thumb.jpg" width="236" align="left" border="0" /></a> So, obviously this saves time. I don't need to drag 5 controls to the surface, I don't need to build some fancy cookie-login stuff for my application and the whole thing works. Great isn't it?</p>  <p>&#160;</p>  <p>Now, where this really shines is when you try to access a folder that ASP.NET security was configured to deny. You get redirected to the Login.aspx file and the Log In control automatically handles redirection to the previously requested page etc.</p>  <p>Now, that's it basically. ASP.NET comes packed with loads of great tools that do authentication for you. Like <a href="http://msdn2.microsoft.com/en-us/library/t92zy5x0.aspx">password recovery</a> dialogs, <a href="http://msdn2.microsoft.com/en-us/library/s1xhe282.aspx">change password</a> dialogs, <a href="http://msdn2.microsoft.com/en-us/library/6s8b6814.aspx">create user wizard</a>, <a href="http://msdn2.microsoft.com/en-us/library/5ayek5k0.aspx">login name</a> display etc.     <br />This all combined gives you a very solid toolset to work on from a programming and security perspective.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>244</wp:post_id>
<wp:post_date>2008-02-27 00:52:00</wp:post_date>
<wp:post_date_gmt>2008-02-26 22:52:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>aspnet-security</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1212933383</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>login.jpg</title>
<link>http://www.tigraine.at/2008/02/27/aspnet-security/loginjpg/</link>
<pubDate>Wed, 27 Feb 2008 13:18:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/login.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>245</wp:post_id>
<wp:post_date>2008-02-27 15:18:07</wp:post_date>
<wp:post_date_gmt>2008-02-27 13:18:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>loginjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>244</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/login.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/login.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:216;s:6:"height";i:124;s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/login.jpg";s:5:"thumb";s:19:"login.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>login-thumb.jpg</title>
<link>http://www.tigraine.at/2008/02/27/aspnet-security/login-thumbjpg/</link>
<pubDate>Wed, 27 Feb 2008 13:18:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/02/login-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>246</wp:post_id>
<wp:post_date>2008-02-27 15:18:08</wp:post_date>
<wp:post_date_gmt>2008-02-27 13:18:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>login-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>244</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/02/login-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/login-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:236;s:6:"height";i:144;s:14:"hwstring_small";s:23:"height='78' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/02/login-thumb.jpg";s:5:"thumb";s:25:"login-thumb.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Unfortunate news...</title>
<link>http://www.tigraine.at/2008/02/27/unfortunate-news/</link>
<pubDate>Wed, 27 Feb 2008 17:44:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/02/27/unfortunate-news/</guid>
<description></description>
<content:encoded><![CDATA[<p>I've been very happy with my project's progress over the last week, so I was totally shocked to hear that a similar project just launched in Germany and appears to be pretty competitive.</p>  <p>It's called <a href="http://www.pizza.de" rel="nofollow">pizza.de</a> and is doing pretty much the same thing we were hoping to do. Providing a platform for online food delivery for a whole country.     <br />So, the first design meeting today started with something along the lines of &quot;Why didn't I know&quot;.     <br />The research on competitors we did is now almost 3 or 4 months old, and apparently pizza.de launched 3 months ago, slipping through.</p>  <p>They are providing a pretty good platform for online food delivery and service, are using some AJAX to spice up the user experience while providing great branding support for corporations (like <a href="http://www.pizzahut.de/">PizzaHut</a>, <a href="http://www.subway-nb.de/">Subway</a> etc... Everything looks pretty solid and it's pretty clear they are working on a far bigger budget than my team currently.</p>  <p>So I had some doubts if we'd carry on our project pizza.at, mainly because pizza.de is almost exactly what we thought we'd have to deliver and we were hoping to be able to expand to Germany in the future. </p>  <p>So, because we can't compete with pizza.de in Germany, we brought up another issue: <a href="http://en.wikipedia.org/wiki/I18n#Alternative_names">i18n</a>. Austria is far too small to be the only place where we want pizza.at to be available, so after the initial Austria launch we will be looking into expanding to the east and south.</p>  <p>Now, because of our tight schedule (that just got tighter) hopes are high we'll be launching at the end of march so we'll be first to hit the Austrian market with our site.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>247</wp:post_id>
<wp:post_date>2008-02-27 19:44:21</wp:post_date>
<wp:post_date_gmt>2008-02-27 17:44:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unfortunate-news</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>440</wp:comment_id>
<wp:comment_author><![CDATA[Eol Ruin]]></wp:comment_author>
<wp:comment_author_email>eol@thew4.org</wp:comment_author_email>
<wp:comment_author_url>http://www.thew4.org</wp:comment_author_url>
<wp:comment_author_IP>80.109.227.166</wp:comment_author_IP>
<wp:comment_date>2008-03-21 15:12:39</wp:comment_date>
<wp:comment_date_gmt>2008-03-21 13:12:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[pizza.at schaut ja gut aus - leider ist meine Lieblingspizzeria nicht dabei :(
Schickt mir eine Mail wenn der Umbau fertig ist :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>441</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.213</wp:comment_author_IP>
<wp:comment_date>2008-03-21 18:05:54</wp:comment_date>
<wp:comment_date_gmt>2008-03-21 16:05:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Das design wird radikal umgebaut und online wird die neue Seite im Laufe des nächsten Monats gehen.
Je nachdem wie schnell die Entwicklung geht und vor allem wie es mit den Pizzaservices die mitmachen aussieht.

Ich werde auf jeden fall darüber bloggen wenn wir online gehen ;)

grüße Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>673</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.36</wp:comment_author_IP>
<wp:comment_date>2008-06-11 12:19:20</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 10:19:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Nun, das Projekt wird momentan nicht mehr weiter entwickelt und über die Gründe dafür darf ich momentan nicht schreiben da ich noch einige Zeit an eine Geheimhaltungsvereinbarung gebunden bin.

grüße Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>672</wp:comment_id>
<wp:comment_author><![CDATA[Hansi]]></wp:comment_author>
<wp:comment_author_email>hansin@mailinator.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.127.3.52</wp:comment_author_IP>
<wp:comment_date>2008-06-11 09:55:42</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 07:55:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[und? und? und?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>linq1.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linq1png/</link>
<pubDate>Fri, 07 Mar 2008 20:05:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linq1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>248</wp:post_id>
<wp:post_date>2008-03-07 22:05:38</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq1png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linq1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linq1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:446;s:6:"height";i:287;s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linq1.png";s:5:"thumb";s:19:"linq1.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linq1-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linq1-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linq1-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>249</wp:post_id>
<wp:post_date>2008-03-07 22:05:39</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq1-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linq1-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linq1-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:446;s:6:"height";i:287;s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linq1-thumb.png";s:5:"thumb";s:25:"linq1-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselectpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>250</wp:post_id>
<wp:post_date>2008-03-07 22:05:39</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselectpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:422;s:6:"height";i:77;s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect.png";s:5:"thumb";s:24:"linqselect.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselect-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>251</wp:post_id>
<wp:post_date>2008-03-07 22:05:40</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselect-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:422;s:6:"height";i:77;s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect-thumb.png";s:5:"thumb";s:30:"linqselect-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect2.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselect2png/</link>
<pubDate>Fri, 07 Mar 2008 20:05:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>252</wp:post_id>
<wp:post_date>2008-03-07 22:05:40</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselect2png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:424;s:6:"height";i:103;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect2.png";s:5:"thumb";s:25:"linqselect2.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect2-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselect2-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>253</wp:post_id>
<wp:post_date>2008-03-07 22:05:40</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselect2-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect2-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:424;s:6:"height";i:103;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:78:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect2-thumb.png";s:5:"thumb";s:31:"linqselect2-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect3.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselect3png/</link>
<pubDate>Fri, 07 Mar 2008 20:05:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>254</wp:post_id>
<wp:post_date>2008-03-07 22:05:41</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselect3png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:382;s:6:"height";i:75;s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect3.png";s:5:"thumb";s:25:"linqselect3.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqselect3-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqselect3-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>255</wp:post_id>
<wp:post_date>2008-03-07 22:05:41</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqselect3-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect3-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:382;s:6:"height";i:75;s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:78:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqselect3-thumb.png";s:5:"thumb";s:31:"linqselect3-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsqlgui.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsqlguipng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>256</wp:post_id>
<wp:post_date>2008-03-07 22:05:42</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsqlguipng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsqlgui.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:214;s:6:"height";i:134;s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsqlgui.png";s:5:"thumb";s:24:"linqsqlgui.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsqlgui-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsqlgui-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>257</wp:post_id>
<wp:post_date>2008-03-07 22:05:42</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsqlgui-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsqlgui-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:214;s:6:"height";i:134;s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:77:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsqlgui-thumb.png";s:5:"thumb";s:30:"linqsqlgui-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsql.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsqlpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsql.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>258</wp:post_id>
<wp:post_date>2008-03-07 22:05:43</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsqlpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsql.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:418;s:6:"height";i:151;s:14:"hwstring_small";s:23:"height='46' width='128'";s:4:"file";s:68:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql.png";s:5:"thumb";s:21:"linqsql.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsql-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsql-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsql-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>259</wp:post_id>
<wp:post_date>2008-03-07 22:05:43</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsql-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsql-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:418;s:6:"height";i:151;s:14:"hwstring_small";s:23:"height='46' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql-thumb.png";s:5:"thumb";s:27:"linqsql-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsql2.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsql2png/</link>
<pubDate>Fri, 07 Mar 2008 20:05:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>260</wp:post_id>
<wp:post_date>2008-03-07 22:05:44</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsql2png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:559;s:6:"height";i:51;s:14:"hwstring_small";s:23:"height='11' width='128'";s:4:"file";s:69:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql2.png";s:5:"thumb";s:22:"linqsql2.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>linqsql2-thumb.png</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/linqsql2-thumbpng/</link>
<pubDate>Fri, 07 Mar 2008 20:05:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>261</wp:post_id>
<wp:post_date>2008-03-07 22:05:44</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linqsql2-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>262</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql2-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:559;s:6:"height";i:51;s:14:"hwstring_small";s:23:"height='11' width='128'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/03/linqsql2-thumb.png";s:5:"thumb";s:28:"linqsql2-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>LinQ, LinQ to SQL etc explained</title>
<link>http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/</link>
<pubDate>Fri, 07 Mar 2008 20:05:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/03/07/linq-linq-to-sql-etc-explained/</guid>
<description></description>
<content:encoded><![CDATA[<p>I've been talking to a lot of people about LinQ and LinQ to SQL lately and always had trouble explaining them the difference between those concepts. So, obviously I could simply point you to ScottGu's posts on <a href="http://weblogs.asp.net/scottgu/archive/2007/04/21/new-orcas-language-feature-query-syntax.aspx">LinQ</a> and <a href="http://weblogs.asp.net/scottgu/archive/2007/05/19/using-linq-to-sql-part-1.aspx">Linq to SQL</a>, but that would be cheap wouldn't it?</p>  <p>So, what is LinQ in the first place? People usually mix it up with LinQ to SQL and see it as a new syntax to query databases (but that's LinQ to SQL). </p>  <p>In a nutshell, LinQ stands for <strong>L</strong>anguage <strong>in</strong>tegrated <strong>Q</strong>uery and is a great way to retrieve objects from lists, arrays etc.     <br />Basically, LinQ works an everything that implements IEnumerable, so it's quite safe to say that it works with every .NET collection out there ;).</p>  <p>So, the magic?    <br />LinQ consists of 2 things.</p>  <h4>Extension methods</h4>  <p>First: By importing the System.LinQ namespace you get some <a href="http://weblogs.asp.net/scottgu/archive/2007/03/13/new-orcas-language-feature-extension-methods.aspx">extension methods</a> for your collections. </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linq1.png"><img height="287" alt="linq1" src="http://www.tigraine.at/wp-content/uploads/2008/03/linq1-thumb.png" width="446" border="0" /></a></p>  <p>The above screenshot shows some of the extension methods you get by importing System.LinQ.    <br />Those methods are very useful when working with collections and have become something I won't want to miss.     <br />Here are my most used ones:</p>  <p><strong><u>Select</u></strong>: Takes a <a href="http://weblogs.asp.net/scottgu/archive/2007/04/08/new-orcas-language-feature-lambda-expressions.aspx">lambda</a> and returns an IEnumerable&lt;&gt; of all items that match the lambda.     <br />Example:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect.png"><img height="77" alt="linqselect" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect-thumb.png" width="422" border="0" /></a></p>  <p>This statement will only return an IEnumerable with Tigraine and Tig.</p>  <p><strong><u>Single</u></strong>: I love this one! Takes a lambda and returns the single item matching the lambda (failing if there is more than one).     <br />This really shines when doing stuff with unique id's.     <br />Example:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2.png"><img height="103" alt="linqselect2" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect2-thumb.png" width="424" border="0" /></a></p>  <p><strong><u>Any and All</u></strong>: Any checks if one or more items of the collection match the lambda, and All returns true if all items in the collection match the lambda. </p>  <h4>Query syntax</h4>  <p>So, besides all those great overloads the LinQ namespace provides the real magic is a query like this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3.png"><img height="75" alt="linqselect3" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqselect3-thumb.png" width="382" border="0" /></a></p>  <p>Needless to say that this query syntax works on every collection of objects and provides a great strongly typed query syntax for objects.</p>  <h4>LinQ to SQL</h4>  <p>So, now that we know what LinQ is we could easily go ahead and write tons of boilerplate code that maps objects to database tables etc etc.. And then use LinQ to query all those objects we created.</p>  <p>But that wouldn't ever work, because having the whole database in memory won't work on any fairly large db. So LinQ to SQL jumps in on this.</p>  <p>LinQ to SQL consists mainly of a graphical OR/M designer in Visual Studio 2008 that allows you to simply drag and drop tables from your database to create the mappings. </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui.png"><img height="134" alt="linqsqlgui" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqsqlgui-thumb.png" width="214" align="left" border="0" /></a>Once the mappings are created LinQ to SQL provides you with a DataContext class that represent the objects in your database.     <br />The Users table from my database to the left result in a new collection in your data context called Users that can be queried either through extension methods or through the query syntax.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqsql.png"><img height="151" alt="linqsql" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqsql-thumb.png" width="418" border="0" /></a> </p>  <p>What happens under the hood is that LinQ to SQL translates your LinQ query into SQL. The generated queries can be viewed while debugging:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2.png"><img height="51" alt="linqsql2" src="http://www.tigraine.at/wp-content/uploads/2008/03/linqsql2-thumb.png" width="559" border="0" /></a></p>  <p>The difference to normal LinQ is that LinQ to SQL gets executed once you are using the query data, not when doing the query. The query definition is just the generation of the SQL, while a foreach(var u in users) would actually trigger the query.</p>  <p>And, obviously LinQ to SQL also handles changes to the database through transactions. You just need to modify a value and hit dbContext.SubmitChanges() and LinQ packs any changes back into your database.</p>  <p><strong>Conclusion:      <br /></strong>LinQ is a clever way to query objects in memory.    <br />LinQ to SQL is a new strong OR/M that takes advantage of the new query syntax and extending it to a database.</p>  <p>This post was never intended to be an exhaustive write-up about LinQ and LinQ to SQL, if you want to know more about those two please refer to ScottGu's posts.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>262</wp:post_id>
<wp:post_date>2008-03-07 22:05:44</wp:post_date>
<wp:post_date_gmt>2008-03-07 20:05:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq-linq-to-sql-etc-explained</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Reading suggestion</title>
<link>http://www.tigraine.at/2008/04/04/reading-suggestion/</link>
<pubDate>Thu, 03 Apr 2008 23:19:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/04/04/reading-suggestion/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.codinghorror.com/blog/"><img src="http://www.codinghorror.com/blog/images/coding-horror-official-logo-small.png" align="left" /></a> Sorry for me being so silent for the last weeks. I've been quite busy and for a week or so I am just trying to get my unread feeds back to under 100 again.</p>  <p>That's also why I thought about writing this post.   <br />After I marked 2 consecutive posts as <a href="http://www.google.com/reader/shared/06565692252982019118">shared</a> on my <a href="http://www.google.com/reader">Google Reader</a> I really had the urge to say this out loud:</p>  <p><strong>Thank you Jeff Atwood for your blog!</strong></p>  <p>I have been following the blog for quite some time now, and I have to admit that there is hardly any other blog I enjoyed reading as much as <a href="http://www.codinghorror.com/blog/">codinghorror</a>. </p>  <p>It's not really the most informative blog if you are searching for any solid programming hints, but Jeff manages to really keep his focus on geeky - interesting tech topics that can't easily be put in niche like .NET, Java, Ruby, SOA etc.. </p>  <p>So, for anyone interested in a really great read you can find <a href="http://www.codinghorror.com/blog/">Jeff's blog here</a>.</p>  <p>Oh, and the book he derived the term &quot;codinghorror&quot; from, <a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1207264717&amp;sr=8-1">Code Complete by Steve McConnel</a> is a very good read too!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>263</wp:post_id>
<wp:post_date>2008-04-04 01:19:05</wp:post_date>
<wp:post_date_gmt>2008-04-03 23:19:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>reading-suggestion</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>485</wp:comment_id>
<wp:comment_author><![CDATA[Eol Ruin]]></wp:comment_author>
<wp:comment_author_email>eol@thew4.org</wp:comment_author_email>
<wp:comment_author_url>http://www.thew4.org</wp:comment_author_url>
<wp:comment_author_IP>80.109.227.166</wp:comment_author_IP>
<wp:comment_date>2008-04-04 07:38:17</wp:comment_date>
<wp:comment_date_gmt>2008-04-04 05:38:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Jeff Atwood ist immer gut ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>607</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Quote of the Day: On PHP]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/05/21/quote-of-the-day-on-php/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-05-21 15:47:51</wp:comment_date>
<wp:comment_date_gmt>2008-05-21 13:47:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] you are following Jeff Atwood at CodeHorror.com you may have already read it. But the statement is so true I really need to [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>calendar-sm2-en.gif</title>
<link>http://www.tigraine.at/2008/04/22/offline-web-applications/calendar-sm2-engif/</link>
<pubDate>Tue, 22 Apr 2008 10:09:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en.gif</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>264</wp:post_id>
<wp:post_date>2008-04-22 12:09:43</wp:post_date>
<wp:post_date_gmt>2008-04-22 10:09:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>calendar-sm2-engif</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>266</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en.gif</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/04/calendar-sm2-en.gif</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:143;s:6:"height";i:59;s:14:"hwstring_small";s:23:"height='52' width='128'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/04/calendar-sm2-en.gif";s:5:"thumb";s:29:"calendar-sm2-en.thumbnail.gif";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>calendar-sm2-en-thumb.gif</title>
<link>http://www.tigraine.at/2008/04/22/offline-web-applications/calendar-sm2-en-thumbgif/</link>
<pubDate>Tue, 22 Apr 2008 10:09:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en-thumb.gif</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>265</wp:post_id>
<wp:post_date>2008-04-22 12:09:43</wp:post_date>
<wp:post_date_gmt>2008-04-22 10:09:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>calendar-sm2-en-thumbgif</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>266</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en-thumb.gif</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/04/calendar-sm2-en-thumb.gif</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:143;s:6:"height";i:59;s:14:"hwstring_small";s:23:"height='52' width='128'";s:4:"file";s:82:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/04/calendar-sm2-en-thumb.gif";s:5:"thumb";s:35:"calendar-sm2-en-thumb.thumbnail.gif";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Offline Web Applications</title>
<link>http://www.tigraine.at/2008/04/22/offline-web-applications/</link>
<pubDate>Tue, 22 Apr 2008 10:09:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/04/22/offline-web-applications/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en.gif"><img style="float: left; margin-bottom: 10px; margin-right: 10px" height="59" alt="calendar_sm2_en" src="http://www.tigraine.at/wp-content/uploads/2008/04/calendar-sm2-en-thumb.gif" width="143" border="0" /></a> I've stumbled across several discussions on offline web apps lately and thought I'd share my view on these things.</p>  <p>As a heavy user of GMail, Google Calendar and Goodle Reader I really depend on having a internet connection most of the time. I especially am one of those guys who forgets his timetable the second it gets changed, so whenever I need to make an appointment I either have to search for a computer or postpone the making of the appointment. </p>  <p>So, I find myself too often in the middle of a chat digging out my laptop to look at my timetable.    <br />But although my laptop is starting up quite fast, till I get connected to a wireless (if any at all) I usually have spent 3-5 minutes with meaningless smalltalk and cursing about WIFI and my ubuntu (my laptop is now 4 years, can't prove that the machine got slower over time, but reinstalling XP simply wasn't an option any more).</p>  <p>And then, I stumble across an article by <a href="http://en.wikipedia.org/wiki/David_Heinemeier_Hansson">DHH</a> (the guy behind <a href="http://en.wikipedia.org/wiki/Ruby_on_Rails">RoR</a>) called: <a href="http://www.37signals.com/svn/posts/347-youre-not-on-a-fucking-plane-and-if-you-are-it-doesnt-matter">You're not on a fucking plane (and if you are, it doesn't matter)!</a>     <br />So, halfway through I was ready to agree that being able to access web apps all the time isn't necessarily a good thing till I remembered all the hassle I go through when I'm trying to look up my schedule.</p>  <p>For time being, Google did a pretty good job on replacing all my mail/calendar/reading needs by their web applications, and although there are some nice tools like <a href="http://www.google.com/support/calendar/bin/answer.py?hl=en&amp;answer=89955">Google Calendar Sync</a>, I really can't use it if there is no network connection available. (Calendar Sync isn't syncing all my calendars, only the main calendar that I only use for personal stuff, university and business calendars are what matters and those don't get synced).     <br />So, Google Gears might be the right way in the right direction, although I still doubt that it's clever to install liteSQL on a client's machine, making all SQL calls through AJAX so that Gears can swap out the real server if disconnected. That's just too much crappy Javascript that needs to be written and executed on the client's side. </p>  <p>Finally, I think DHH has a point in &quot;we're way too online&quot;. But there are applications that really need 24/7 availability and those need to be made accessible offline. And while we're at, why not just create something that will work for more than one site?</p>  <p>By the way, my solution to the current calendar problem is already in the works, by June 30th I'll be owning an iPhone, that's gonna be synced with Outlook (that will be synced with my Google Calendar) so that I don't need to get out my laptop any more while also having the calendar offline!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>266</wp:post_id>
<wp:post_date>2008-04-22 12:09:44</wp:post_date>
<wp:post_date_gmt>2008-04-22 10:09:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>offline-web-applications</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/05/15/windows-live-skydrive-could-be-smarter/imagepng/</link>
<pubDate>Thu, 15 May 2008 08:38:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/05/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>267</wp:post_id>
<wp:post_date>2008-05-15 10:38:36</wp:post_date>
<wp:post_date_gmt>2008-05-15 08:38:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>269</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/05/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:301;s:6:"height";i:57;s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/image.png";s:5:"thumb";s:19:"image.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/05/15/windows-live-skydrive-could-be-smarter/image-thumbpng/</link>
<pubDate>Thu, 15 May 2008 08:38:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/05/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>268</wp:post_id>
<wp:post_date>2008-05-15 10:38:36</wp:post_date>
<wp:post_date_gmt>2008-05-15 08:38:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>269</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/05/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:261;s:6:"height";i:49;s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/image-thumb.png";s:5:"thumb";s:25:"image-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Windows Live SkyDrive could be smarter</title>
<link>http://www.tigraine.at/2008/05/15/windows-live-skydrive-could-be-smarter/</link>
<pubDate>Thu, 15 May 2008 08:38:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/05/15/windows-live-skydrive-could-be-smarter/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2008/05/image.png"><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/05/image-thumb.png" width="261" height="49" /></a> </p>  <p><a href="http://skydrive.live.com/">Skydrive</a>, one of the cooler things Microsoft released lately under their <a href="http://www.tigraine.at/2008/01/12/windows-live/">Live.com brand</a> has somehow replaced my private FTP server for sharing files with myself and others. </p>  <p>It's cool, it's easy and it's free. You get 5 gigs of free storage with your Live.com Id that you can use to upload data to the cloud.    <br />You then get a quite neat folder view online where you can download those files, set their permissions etc.     <br />So, if I want to share some files with a friend I can add them to the folder's permission list and they can see them with their Live.com Ids. If anyone should be able to see something I just add it to my globally shared folder. </p>  <p>So, whenever I need data at university I just upload it to SkyDrive instead of emailing it to myself as I used to do. It's usually just boring university assignments but after a few weeks things start to get messy. I started out by creating one folder for every course, not dividing up into assignments. So now I have 20 files in my dbtec course folder, all called &quot;Dbt_AssX.doc&quot; accompanied by some .sql and .txt files. </p>  <p>I then tried to correct that mistake, created a new folder to split up stuff, and - voila, there is no way to move a file from folder a to folder b! <strong>That sucks!     <br /></strong>I was already concerned about the missing API (uploading stuff through the browser isn't cool!), but being unable to move stuff around is quite annoying. </p>  <p>If we're at it, I'd really appreciate some sort of slightly more accessible UI. Deleting a folder isn't as easy as clicking the folder and hitting delete, no, you need to click the folder, access it's properties through clicking on it's name and then pressing delete. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>269</wp:post_id>
<wp:post_date>2008-05-15 10:38:37</wp:post_date>
<wp:post_date_gmt>2008-05-15 08:38:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-live-skydrive-could-be-smarter</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Klagenfurt University could use a Campus</title>
<link>http://www.tigraine.at/2008/05/15/klagenfurt-university-could-use-a-campus/</link>
<pubDate>Thu, 15 May 2008 16:47:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/05/15/klagenfurt-university-could-use-a-campus/</guid>
<description></description>
<content:encoded><![CDATA[<p>Don't get me wrong, I love studying at Klagenfurt University, but whenever the weather gets more and more appealing I start dreaming of some cool cafe's and other stuff on the university campus. </p>  <p>Currently the only caf&#233; that is really located inside the university is the iQ. And that's ok, but the university is lacking more open space. Maybe you get what I mean by this picture.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/05/university2.jpg"><img border="0" alt="university" src="http://www.tigraine.at/wp-content/uploads/2008/05/university-thumb2.jpg" width="450" height="352" /></a> (click to enlarge picture) </p>  <p>The red area is university property, while the yellow stuff is parking and the blue stuff is streets (with parking).</p>  <p>What happens is that whenever you step outside the building after 10 meters or so you happen to either reach a parking lot or a street.    <br />If you follow this <a href="http://maps.live.de//LiveSearch.LocalLive?cp=46.617256623371524~14.264722466468795&amp;scene=22973956&amp;style=a&amp;lvl=17">geo-link</a> you might find that there is plenty of green around the university, but when you are there the perception is that there is only cars :). </p>  <p>So here it comes, cut down some roads and open up the area. Remove the front parking (eastern parking lot) and make it a nice little park for students. Also I'd like to see the road in the east closed down and some nice caf&#233;s opened up. Giving so much space to parking is just a waste.</p>  <p>On the parking side: Before you can get anywhere near planning a cooler campus we need to get public transport in Klagenfurt up to speed. There should be a frequent shuttle bus from the nearby train station that may also take students to the W&#246;rthersee in summer, so more people would consider the train a viable alternative to the car. The STW bus should come every 15 minutes at least, having 2 buses per hour is simply unacceptable. </p>  <p>Klagenfurt university may be one of the few universities in Austria that isn't directly located inside the city so you could make something out of the place without having to redesign transportation for a whole city. But as it's currently more space is wasted than really used. It all feels too small and not really comfortable.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>272</wp:post_id>
<wp:post_date>2008-05-15 18:47:36</wp:post_date>
<wp:post_date_gmt>2008-05-15 16:47:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>klagenfurt-university-could-use-a-campus</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>595</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2008-05-16 22:24:07</wp:comment_date>
<wp:comment_date_gmt>2008-05-16 20:24:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[...the sad thing about dreams concerning klagenfurt university (KU) is that it is just too obvious that any big change will come into effect as this would need something like an overall concept and this has and will never exist in the city planning of celovec. so if ever only fragments will be realised. but the fascinating thing about this issue is that there could be really great improvements made and the results might be worth a lot of effort. 
so as you said there is too much space donated to parking and streets. 
so what should be done:
- the car parking east of KU is just attracting cars into the should be campus area. to replace it (as there many students arriving by car as not only klagenfurt public transport is terrible but as well is the transport to klagenfurt) the existing big parking in west should be toped with another layer. this could be done with a very cheap steal structure, as it is situated lower than the südring (city bypass left of the parking in the west) the existing inlet to lakesidepark could be used and no ramps would be needed. 
- the universitätsstraße between the mensa (red  colored building in the east) and the südring should be closed for traffic and be reduced to pedestrian and bike ways (continuing on to the lake) as well as a one way bus lane. 
- the existing and already funded project of a tram from europapark via loretto to strandbad with the further plan for an extension aside the existing railway trac to the mentioned station some kilometers east should be constructed and extended to university so that the line would then go from university to strandbad and from there one the train station klagenfurt lend. there could be four to five stations between the end stops and with the right train system the link from KU to the train station could be done in less than seven minutes.
the bus connection to viktring should be improved and stop directly at KU
all post/öbb buses arriving to klagenfurt from the west should stop at KU
KU should be linked with the bike lane network of klagenfurt (with facts like these, that even very basic things like this haven't been done yet you can see that klagenfurt really lacks of any city planning)
- the street crossing universitätsstraße leading north-south should be pedestrian area as it has no necessary transport function. this should make the walk from KU to minimundus more attractive and could be combined with a roofing. at minimundus another inner city bus line has its stops as well as buses going in and out of klagenfurt. with an extension of student tickets to this buses for innercity transport the existing bus network could (with changes in the shedules) serve KU every ten minutes or less which should be minimum level of service for making public traffic attractive. the pricing policy for students has to be changed none the less.
- the yard between the new and old university building has to be closed to any cars (delivery limited to certain hours). there could be concerts held there in the evening and it would be a lunch and outside studying area during day time. there should be some kind of winter garden (that can be opened in summer) for using part of this area during the cold months.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>596</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.47</wp:comment_author_IP>
<wp:comment_date>2008-05-17 00:28:46</wp:comment_date>
<wp:comment_date_gmt>2008-05-16 22:28:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree on the fact that the university lacks open space for recreation and relaxing. The Mensa Café in the Aula is simply a mess :-D However in my opinion the campus - in its compact size - has benefits. In Graz for instance both, the University as well the University of Technology, are spread over a rather wide area. Without bike you are lost. So even last week - where there was a rather big conference in Klagenfurt - people from outside mentioned that they liked the way the campus in KLU is organized :-)
 
The bad thing however is that in between main entrance and bus station there will be a new building next year .. that's Uni-Klu's solution to "open spaces" ;(

- mathias]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>597</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.36</wp:comment_author_IP>
<wp:comment_date>2008-05-17 02:11:01</wp:comment_date>
<wp:comment_date_gmt>2008-05-17 00:11:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[New building between main entrance and bus station... tbh this is currently completely dead space, except for that little dirt track to the bus station it has no real use right now. 
But removing it isn't gonna beautify the campus. 

I think the campus should be more open. 
When I (as a student) have never even remotely considered to visit the campus for other reasons than learning and working, the whole planning thing went completely wrong. 
University should be for students, not only their work.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>university.jpg</title>
<link>http://www.tigraine.at/2008/05/15/klagenfurt-university-could-use-a-campus/universityjpg-2/</link>
<pubDate>Thu, 15 May 2008 16:52:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/05/university2.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>277</wp:post_id>
<wp:post_date>2008-05-15 18:52:55</wp:post_date>
<wp:post_date_gmt>2008-05-15 16:52:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>universityjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>272</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/05/university2.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/university2.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:761;s:6:"height";i:595;s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/university2.jpg";s:5:"thumb";s:25:"university2.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>university-thumb.jpg</title>
<link>http://www.tigraine.at/2008/05/15/klagenfurt-university-could-use-a-campus/university-thumbjpg-2/</link>
<pubDate>Thu, 15 May 2008 16:52:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/05/university-thumb2.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>278</wp:post_id>
<wp:post_date>2008-05-15 18:52:58</wp:post_date>
<wp:post_date_gmt>2008-05-15 16:52:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>university-thumbjpg-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>272</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/05/university-thumb2.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/university-thumb2.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:450;s:6:"height";i:352;s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:78:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/05/university-thumb2.jpg";s:5:"thumb";s:31:"university-thumb2.thumbnail.jpg";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Quote of the Day: On PHP</title>
<link>http://www.tigraine.at/2008/05/21/quote-of-the-day-on-php/</link>
<pubDate>Wed, 21 May 2008 13:47:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/05/21/quote-of-the-day-on-php/</guid>
<description></description>
<content:encoded><![CDATA[<p>If you are <a href="http://www.tigraine.at/2008/04/04/reading-suggestion/">following Jeff Atwood</a> at <a href="http://www.codinghorror.com/blog/">CodeHorror.com</a> you may have already read it. But the statement is so true I really need to repost this quote by <a href="http://www.tbray.org/ongoing/When/200x/2006/02/17/PHP">Tim Bray</a>:</p>  <blockquote>   <p>So here's my problem, based on my limited experience with PHP (deploying a couple of free apps to do this and that, and debugging a site for a non-technical friend here and there): all the PHP code I've seen in that experience has been messy, unmaintainable crap. Spaghetti SQL wrapped in spaghetti PHP wrapped in spaghetti HTML, replicated in slightly-varying form in dozens of places.</p> </blockquote>  <p>Spaghetti-code is the main thing that always comes to my mind when I try to sit down and do a template for this website.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>279</wp:post_id>
<wp:post_date>2008-05-21 15:47:47</wp:post_date>
<wp:post_date_gmt>2008-05-21 13:47:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>quote-of-the-day-on-php</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Working till late...</title>
<link>http://www.tigraine.at/2008/05/26/working-till-late/</link>
<pubDate>Mon, 26 May 2008 01:14:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/05/26/working-till-late/</guid>
<description></description>
<content:encoded><![CDATA[<p>The weather has been pretty great the last days, and I used the last weekend for some relaxing and even some bathing in W&#246;rthersee.    <br />I also discovered my new favorite relax location (although it doesn't serve coffee) and I also managed to make some photos (click the image for the flickr photo gallery):</p>  <p><a title="Oberkreuth von Tigraine bei Flickr" href="http://www.flickr.com/photos/15594453@N02/sets/72157605251417084/"><img alt="Unterkreuth" src="http://farm3.static.flickr.com/2105/2523065356_7b7f058100.jpg" width="500" height="198" /></a></p>  <p>But after coming home today (chilled to the bone, W&#246;rthersee is still way too cold for bathing!), I figured out I need to do an java assignment for university till Tuesday.</p>  <p>Needless to say that I thought I'd be done in 2 hours doing some simple hash table implementations.    <br />What happened? They managed to throw 10 pages of mostly meaningless gibberish that specifies how my classes should behave and how the underlying algorithms work. While detailed instructions isn't something bad per se, omitting the UML diagram <strong>IS BAD!</strong> After going through the doc 2-3 times I still haven't identified all of the &quot;added complexity&quot; that should be teaching us OO-design and am searching the course forums for answers to questions that aren't answered by a 10 page long assignment paper :(. </p>  <p>So, yeah: I started at 21:00 and now it's 3 in the morning and my concentration has hit rock bottom so I am reading through specs and their explanation without being able to see the sense in it. </p>  <p><em>If you can't remember what word preceded the one you just read - go to bed.</em></p>  <p>And while we're at it. If you bother with Visual Paradigm: Get yourself a real-edition. Doing everything twice (in code and in UML) really sucks. Especially since code stubs can be exactly derived from UML and vice-versa it sucks doing it in a so terribly clumsy tool as Visual Paradigm for UML. (VP works great, it's just a lengthy process to create a damn operation (public void main(String args[]) is easier to type than to click 30 check boxes and drop downs!)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>280</wp:post_id>
<wp:post_date>2008-05-26 03:14:11</wp:post_date>
<wp:post_date_gmt>2008-05-26 01:14:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>working-till-late</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2639</wp:comment_id>
<wp:comment_author><![CDATA[New office feels liberating &ndash; outside is still better | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/03/new-office-feels-liberating-outside-is-still-better/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-03 00:48:16</wp:comment_date>
<wp:comment_date_gmt>2009-07-02 22:48:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] but 3G reception is very good. Another place I love to go to when in need of piece and quiet is Unterkreuth. A very nice bar on the top of a mountain usually frequented by paragliding enthusiasts, since they [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>delicious.png</title>
<link>http://www.tigraine.at/2008/06/01/disabling-delicious-on-the-feed/deliciouspng/</link>
<pubDate>Sun, 01 Jun 2008 18:13:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/delicious.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>281</wp:post_id>
<wp:post_date>2008-06-01 20:13:47</wp:post_date>
<wp:post_date_gmt>2008-06-01 18:13:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>deliciouspng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>283</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/delicious.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/delicious.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:45;s:6:"height";i:46;s:14:"hwstring_small";s:22:"height='46' width='45'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/delicious.png";s:5:"thumb";s:23:"delicious.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>delicious-thumb.png</title>
<link>http://www.tigraine.at/2008/06/01/disabling-delicious-on-the-feed/delicious-thumbpng/</link>
<pubDate>Sun, 01 Jun 2008 18:13:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/delicious-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>282</wp:post_id>
<wp:post_date>2008-06-01 20:13:48</wp:post_date>
<wp:post_date_gmt>2008-06-01 18:13:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>delicious-thumbpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>283</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/delicious-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/delicious-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:45;s:6:"height";i:46;s:14:"hwstring_small";s:22:"height='46' width='45'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/delicious-thumb.png";s:5:"thumb";s:29:"delicious-thumb.thumbnail.png";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Disabling del.icio.us on the feed?</title>
<link>http://www.tigraine.at/2008/06/01/disabling-delicious-on-the-feed/</link>
<pubDate>Sun, 01 Jun 2008 18:13:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/01/disabling-delicious-on-the-feed/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2008/06/delicious.png"><img style="float: left; margin-bottom: 10px; margin-right: 15px" border="0" alt="delicious" src="http://www.tigraine.at/wp-content/uploads/2008/06/delicious-thumb.png" width="45" height="46" /></a> I have been using feedburner for a pretty long time now, and one thing I thought is particularly handy is that you can let it incorporate your del.icio.us bookmarks into the feed as daily updates.     <br />This removed the necessity of doing a blog post every week that boils down to a link-collection of the most interesting stuff I read across the web that week.</p>  <p>So the main thing is that due to the great Firefox3 Addon for del.icio.us I started to use del.icio.us more and more as a bookmark tool, so that I am &quot;polluting&quot; my feed with sometimes unnecessary stuff that you may or may not be interested in. This has led to the fact that sometimes there are 3-4 link flares from del.icio.us in between 2 of my blog posts. </p>  <p>So this is one question to my dear feed-subscribers: Should I remove my del.icio.us link splicer from my feed?</p>  <p>Ps: By the way, if you are using del.icio.us too and want to add me to your network feel free to do so through my <a href="http://del.icio.us/Tigraine">profile</a>, oh, and if you aren't already subscribed to the feed. You can find it easily to the right or through <a href="http://feeds.feedburner.com/Tigraine">this link</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>283</wp:post_id>
<wp:post_date>2008-06-01 20:13:48</wp:post_date>
<wp:post_date_gmt>2008-06-01 18:13:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>disabling-delicious-on-the-feed</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>641</wp:comment_id>
<wp:comment_author><![CDATA[Horst]]></wp:comment_author>
<wp:comment_author_email>zerok@zerokspot.com</wp:comment_author_email>
<wp:comment_author_url>http://zerokspot.com/</wp:comment_author_url>
<wp:comment_author_IP>143.205.176.60</wp:comment_author_IP>
<wp:comment_date>2008-06-01 22:36:24</wp:comment_date>
<wp:comment_date_gmt>2008-06-01 20:36:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi :-)

IMO yes, esp. since del.icio.us has its own networking-feature and there are services like friendfeed around. I simply think that automated posts somehow distract from the core content of a weblog :-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>646</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>143.205.122.226</wp:comment_author_IP>
<wp:comment_date>2008-06-02 09:09:15</wp:comment_date>
<wp:comment_date_gmt>2008-06-02 07:09:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In contrast to Horst I think of putting in the del.icio.us as valuable addition as it is in my opinion a kind of micro-blogging. :-D]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>logo.gif</title>
<link>http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/logogif/</link>
<pubDate>Wed, 04 Jun 2008 22:47:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/logo.gif</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>284</wp:post_id>
<wp:post_date>2008-06-05 00:47:59</wp:post_date>
<wp:post_date_gmt>2008-06-04 22:47:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logogif</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>286</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/logo.gif</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/logo.gif</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:260;s:6:"height";i:42;s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/logo.gif";s:5:"thumb";s:18:"logo.thumbnail.gif";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>logo-thumb.gif</title>
<link>http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/logo-thumbgif/</link>
<pubDate>Wed, 04 Jun 2008 22:48:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/logo-thumb.gif</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>285</wp:post_id>
<wp:post_date>2008-06-05 00:48:00</wp:post_date>
<wp:post_date_gmt>2008-06-04 22:48:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo-thumbgif</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>286</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/logo-thumb.gif</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/logo-thumb.gif</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:260;s:6:"height";i:42;s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/logo-thumb.gif";s:5:"thumb";s:24:"logo-thumb.thumbnail.gif";}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Setting up Cruise Control .NET</title>
<link>http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/</link>
<pubDate>Wed, 04 Jun 2008 22:48:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://ccnet.thoughtworks.com"><img src="http://www.tigraine.at/wp-content/uploads/2008/06/logo-thumb.gif" alt="logo" width="260" border="0" height="42" /></a>

Wow, what a day!
After starting a new project today (I'll discuss that in another post) I decided that it is time to get serious with <a href="http://svnbook.red-bean.com/nightly/en/svn.intro.whatis.html">source control</a> and <a href="http://www.martinfowler.com/articles/continuousIntegration.html">continous integration</a>.
This time I thought I'd skip the java stuff and pass on <a href="http://www.jetbrains.com/teamcity/">JetBrains Teamcity</a>, and instead went for the <a href="http://ccnet.thoughtworks.com/">SourceControl.NET</a> by <a href="http://confluence.public.thoughtworks.org/dashboard.action">ThoughtWorks</a> that I heard of on <a href="http://hanselminutes.com/default.aspx?showID=131">Hanselminutes</a>.

First things first: I am totally stunned of how great this has turned out. If you don't have a CI server yet, go get yourself one immediately.
Even if you are programming by yourself, having someone run the build process and all unit tests for you never hurts and will save you time in the long run.
Set-up of CruiseControl and the whole stuff was quite time-consuming (meaning 3 hours), but doing it on another project now really is a piece of cake, once you're done it feels quite natural.

So, to get started you should set up <a href="http://subversion.tigris.org/">Subversion</a> by simply installing <a href="http://www.visualsvn.com/">VisualSVN</a>, the server is running in less than 30 seconds, your users and repositories are in place after a mere minute. I can't think of any easier way to install Subversion, kudos to the VisualSVN team!

Now, this isn't quite standard, but really helps: Create a file called <strong>svn.bat </strong>in your <em>C:\WINDOWS\system32\ </em>folder with the following content:
<pre>@echo off
"C:\Programme\VisualSVN Server\bin\svn.exe" %*</pre>
Cool huh? Now you've got svn in your %PATH% without having to edit the variable itself. This will save you some time on the CCnet configuration.

The next thing was to install the newest CCnet version, and here I suggest you get the latest and hottest stuff directly from the svn. I ran into some troubles with some msbuild reports in version 1.3. Updating to 1.4 worked wonders.

Now that everything is set up (you can now access the WebDashboard through the http://&lt;yourserver&gt;/ccnet/ url), you need to get the whole thing configured. (The only painful thing in this installation).

A good starting point is the <a href="http://confluence.public.thoughtworks.org/display/CCNET/Configuring+the+Server">documentation</a> that explains almost everything.

I won't go through everything in the ccnet.config file, just some things I want to point out:
<ul>
	<li>Make sure to either run the latest CCnet build or use the doc that came with your binaries. New not used settings will stop the server from running.</li>
	<li>While testing your build process go ahead and try to run the same commands from a shell. Especially with msbuild it took some time to sort out the quirks :)</li>
	<li>Don't forget to blindly incorporate the whole list of &lt;publishers&gt;. I can't think of a scenario where I don't want almost all of those running, and if you skip some (like xmllogger and statistics) you will get some broken links on your dashboard.</li>
	<li>VisualSVN sets up a https server. CCnet runs svn with the --non-interactive switch, so it will quietly break due to a unsigned SSL certificate. To bypass this simply run a <i>svn list &lt;repo&gt;</i> from a shell and accept the certificate permanently. And make sure the CCnet service is running under your login credentials, svn stores the certificate setting per user.</li>
</ul>
So, enough wisdom from my part on CCnet. I really had a blast in setting it up, and I can only recommend it. After the break I've postet my ccnet.config if you want to have a look.

<!--more-->
<pre class="xml" name="code">&lt;cruisecontrol&gt;
      &lt;project name="Valet"&gt;
        &lt;workingDirectory&gt;valet/WorkingDirectory&lt;/workingDirectory&gt;
        &lt;artifactDirectory&gt;valet/ArtifactDirectory&lt;/artifactDirectory&gt;
        &lt;webURL&gt;<a href="http://plato/ccnet/server/local/project/Valet/ViewProjectReport.aspx">http://plato/ccnet/server/local/project/Valet/ViewProjectReport.aspx</a>&lt;/webURL&gt;
        &lt;modificationDelaySeconds&gt;10&lt;/modificationDelaySeconds&gt;
        &lt;sourcecontrol type="svn"&gt;
            &lt;trunkUrl&gt;<a href="https://plato:8443/svn/valet/trunk/">https://plato:8443/svn/valet/trunk/</a>&lt;/trunkUrl&gt;
            &lt;username&gt;ccnet&lt;/username&gt;
            &lt;password&gt;xEs6S-uW&lt;/password&gt;
            &lt;autoGetSource&gt;true&lt;/autoGetSource&gt;
            &lt;!--&lt;tagOnSuccess&gt;true&lt;/tagOnSuccess&gt;--&gt;
        &lt;/sourcecontrol&gt;
        &lt;state type="state" /&gt;
        &lt;labeller type="defaultlabeller"&gt;
            &lt;prefix&gt;Valet-alpha-0.&lt;/prefix&gt;
            &lt;incrementOnFailure&gt;false&lt;/incrementOnFailure&gt;
        &lt;/labeller&gt;
        &lt;triggers&gt;
          &lt;intervalTrigger name="continuous" seconds="30" /&gt;
        &lt;/triggers&gt;
        &lt;tasks&gt;
            &lt;msbuild&gt;
              &lt;executable&gt;C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.exe&lt;/executable&gt;
              &lt;projectFile&gt;Valet.sln&lt;/projectFile&gt;
              &lt;buildArgs&gt;/noconsolelogger /p:Configuration=Debug /v:diag&lt;/buildArgs&gt;
              &lt;targets&gt;Build&lt;/targets&gt;
              &lt;timeout&gt;900&lt;/timeout&gt;
              &lt;logger&gt;C:\Programme\CruiseControl.NET\server\ThoughtWorks.CruiseControl.MsBuild.dll&lt;/logger&gt;
            &lt;/msbuild&gt;
            &lt;nunit path="C:\Programme\NUnit 2.4.7\bin\nunit-console.exe"&gt;
                &lt;assemblies&gt;
                  &lt;assembly&gt;C:\Programme\CruiseControl.NET\server\valet\WorkingDirectory\ValetServerTest\bin\Debug\ValetServerTest.dll&lt;/assembly&gt;
                &lt;/assemblies&gt;
            &lt;/nunit&gt;
        &lt;/tasks&gt;
        &lt;publishers&gt;
          &lt;xmllogger /&gt;
          &lt;statistics /&gt;
          &lt;modificationHistory  onlyLogWhenChangesFound="true" /&gt;
          &lt;rss/&gt;
          &lt;modificationWriter /&gt;
        &lt;/publishers&gt;
    &lt;/project&gt;
&lt;/cruisecontrol&gt;</pre>
Man, I hate my blog theme. I need to get this thing wider sometimes soon!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>286</wp:post_id>
<wp:post_date>2008-06-05 00:48:00</wp:post_date>
<wp:post_date_gmt>2008-06-04 22:48:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>setting-up-cruise-control-net</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1212770133</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>651</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.36</wp:comment_author_IP>
<wp:comment_date>2008-06-05 01:39:58</wp:comment_date>
<wp:comment_date_gmt>2008-06-04 23:39:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh and by the way: I know that I left the password to my svn server in the post. 
The server isn't accessible from the net and the password is completely random generated for a specific ci-user.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1103</wp:comment_id>
<wp:comment_author><![CDATA[Another take on Contiuous Integration | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-10-08 10:52:19</wp:comment_date>
<wp:comment_date_gmt>2008-10-08 08:52:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] since my last post where I tried out CruiseControl.NET some time has [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>wordpress.jpg</title>
<link>http://www.tigraine.at/2008/06/05/major-site-rehaul/wordpressjpg/</link>
<pubDate>Thu, 05 Jun 2008 17:38:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/wordpress.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>287</wp:post_id>
<wp:post_date>2008-06-05 19:38:09</wp:post_date>
<wp:post_date_gmt>2008-06-05 17:38:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wordpressjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>289</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/wordpress.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/wordpress.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:67;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:70:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/wordpress.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"wordpress-150x67.jpg";s:5:"width";i:150;s:6:"height";i:67;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wordpress-thumb.jpg</title>
<link>http://www.tigraine.at/2008/06/05/major-site-rehaul/wordpress-thumbjpg/</link>
<pubDate>Thu, 05 Jun 2008 17:38:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/wordpress-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>288</wp:post_id>
<wp:post_date>2008-06-05 19:38:10</wp:post_date>
<wp:post_date_gmt>2008-06-05 17:38:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wordpress-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>289</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/wordpress-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/wordpress-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:186;s:6:"height";i:52;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:76:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/wordpress-thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"wordpress-thumb-150x52.jpg";s:5:"width";i:150;s:6:"height";i:52;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Major site rehaul</title>
<link>http://www.tigraine.at/2008/06/05/major-site-rehaul/</link>
<pubDate>Thu, 05 Jun 2008 17:38:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/05/major-site-rehaul/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2008/06/wordpress.jpg"><img border="0" alt="wordpress" src="http://www.tigraine.at/wp-content/uploads/2008/06/wordpress-thumb.jpg" width="186" height="52" /></a></p>  <p>After doing yesterday's post on CruiseControl.NET it bit me that I really really needed a new theme for my blog. Posting sourcecode on a constrained surface doesn't really work, and after seeing the XML posted yesterday I decided I need to do something about it.</p>  <p>So I went to <a href="http://themes.wordpress.net">themes.wordpress.net</a> and found the theme you are currently looking at. It's nothing really special, but I like the clean look and it has no fixed width. The theme came with no widget support so I followed this <a href="http://www.blogherald.com/2007/05/17/enabling-sidebar-widgets-for-your-wordpress-theme/">handy guide</a> and hacked them into the theme myself. It really isn't that hard after all, although I found this php-html mix quite disturbing.</p>  <p>After being done with the new design, I decided that source is horribly unreadable, and I'm not really happy with my previous solution of doing screenshots (not indexable, not copyable). So I found this really cool <a href="http://code.google.com/p/syntaxhighlighter/">JavaScript library</a> by Alex Gorbatchev called SyntaxHighlighter that highlights &lt;pre&gt; tags and adds some very nice formatting to your code.     <br />Here's an example:</p>  <pre name="code" class="c-sharp">static class Program
  <br />&#160;&#160;&#160; {
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; /// &lt;summary&gt;
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; /// The main entry point for the application.
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; /// &lt;/summary&gt;
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; [STAThread]
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; static void Main()
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; {
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Application.EnableVisualStyles();
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Application.SetCompatibleTextRenderingDefault(false);
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Application.Run(new Form1());
  <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }
  <br />&#160;&#160;&#160; }</pre>

<p>
  <br />And while being at it I also updated to the most current version of WordPress. So if you encounter any oddities (especially with the feed), please tell me about it so I can fix it.</p>

<p>Oh and by the way, while being at it I installed <a href="http://iwphone.contentrobot.com/">iWPhone</a> so that any user who visits <a href="http://tigraine.at">http://tigraine.at</a> with an iPhone or iPod touch will get a stripped down site without too much clutter that's been optimized for the iPhone resolution. Images get removed from the front-page but everything still looks cool. :)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>289</wp:post_id>
<wp:post_date>2008-06-05 19:38:10</wp:post_date>
<wp:post_date_gmt>2008-06-05 17:38:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>major-site-rehaul</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1223402746</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>685</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Post Code with Dignity]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/06/16/post-code-with-dignity/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-06-16 20:38:31</wp:comment_date>
<wp:comment_date_gmt>2008-06-16 18:38:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] The Plugin assumes you are using the same syntax highlighting script as I do and will put your code into a &lt;pre class=&quot;c-sharp&quot; name=&quot;code&quot;&gt; [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>658</wp:comment_id>
<wp:comment_author><![CDATA[foxx21]]></wp:comment_author>
<wp:comment_author_email>b.leit66@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-06-06 07:52:10</wp:comment_date>
<wp:comment_date_gmt>2008-06-06 05:52:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'll give your blog a chance with the iphone when I'm back at home!

take care
b.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>675</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2008-06-11 21:40:19</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 19:40:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[very unübersichtlich. blocksatz!! und vielleicht eine andere schriftart ?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>676</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.36</wp:comment_author_IP>
<wp:comment_date>2008-06-11 22:26:05</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 20:26:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Also mit der Schrift bin ich auch noch nicht so 100%ig glücklich. Das mit dem Blocksatz ist ein guter Einwurf. Ich werd mal sehen was ich da tun kann.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Am I an island?</title>
<link>http://www.tigraine.at/2008/06/08/am-i-an-island/</link>
<pubDate>Sun, 08 Jun 2008 01:07:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/08/am-i-an-island/</guid>
<description></description>
<content:encoded><![CDATA[<p>Due to the fact that most of university of klagenfurt's curriculum is biased towards Java sometimes makes it hard for a .NET developer to be able to go up to someone and say: &quot;Hey, look what I did yesterday&quot;.    <br />Either you just ran into one of those guys who just managed to get the last proprietary driver off his debian-unstable laptop and will chase you down some hallway by even saying the word Microsoft near his ears.     <br />Or you will meet some insensible guy who's not into the study at all but decided that doing computer science after high-school is the right thing because he used to be playing computer a lot (people around here often use their studies as an excuse for not wanting to do real work).     <br />Or there is that honest guy who just focuses on his studies and therefore is stuck in a world of Java :).</p>  <p>So, sometimes I read all those blogs out there from overseas about communities, ALT.NET, open spaces conferences and stuff, and start to feel a little lonely around here in carinthia.    <br />I mean, there are plenty of people I really love to talk about tech, I even sometimes try bend my mind around to talk to some of the hardcore Linux guys around here. But there is nobody to whom I can talk about what I am up to lately (in .NET), nobody who is actually working with .NET (besides me) that I can call up to ask for advice on ... let's say WPF.</p>  <p>So today I decided to throw the words <em>usergroup </em>and <em>Klagenfurt</em> at my Google and I somehow ended up at <a href="http://europe.ineta.org">ineta.org</a>, short for International .NET Association.     <br />After doing their usergroup search for Austria I found out that there ought to be two groups here around Klagenfurt university. Both of which seem to have disbanded (websites down etc).     <br />Now what really struck me was that even the back of beyond (namely Vorarlberg) has a .NET user group, while Vienna and Graz having plenty of them.     <br />Didn't they tell me when I signed up for my study that Klagenfurt is one of the major universities when it comes to computer science?     <br />And now I'd like to know, if Klagenfurt is that good, why we can't have a .NET user group. </p>  <p>So is there an audience for a .NET user group in Klagenfurt? Or do I need to pony up the 60 euros per month for a bus ride and go to Graz if I want to meet like-minded people?   <br />So it boils down to the initial question: <em>Am I an .NET island?</em></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>290</wp:post_id>
<wp:post_date>2008-06-08 03:07:12</wp:post_date>
<wp:post_date_gmt>2008-06-08 01:07:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>am-i-an-island</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>693</wp:comment_id>
<wp:comment_author><![CDATA[Horst Pichler]]></wp:comment_author>
<wp:comment_author_email>horst.pichler@uni-klu.ac.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>143.205.114.139</wp:comment_author_IP>
<wp:comment_date>2008-06-20 17:13:13</wp:comment_date>
<wp:comment_date_gmt>2008-06-20 15:13:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hallo Daniel,

ich bin mir zwar nicht sicher, nehme aber an, dass Du beim http://www.imagineclub.at/ ein paar Microsoft/.Net-ler antreffen kannst.

Meines Wissens gibt es eine Klagenfurter/Kärntner MS User Group - oder evtl. inzwischen nicht mehr(??). Der damalige Ansprechpartner war Rudolf Ball (siehe http://www.aspheute.com/autoren/rudolfball.htm bzw. https://www.xing.com/app/profile?op=profile_details;name=Rudolf_Ball). 

Würde mich freuen, wenn Dir diese Informationen dabei helfen Deiner Insel zu entfliehen :)

lg Horst.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>694</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.160</wp:comment_author_IP>
<wp:comment_date>2008-06-20 17:48:11</wp:comment_date>
<wp:comment_date_gmt>2008-06-20 15:48:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Danke dir auf jeden fall für die Infos.
Vom Imageine Club wusste ich wohl, ein paar Freunde von mir sin da weil man dadurch billig an MSDN Academic Lizenzen rankommt, aber außer den besagten Lizenzen lief da (bei denen) scheinbar nicht viel. Muss ich mich auf jeden fall erkundigen.
Die Kärnter MS User Group bei INETA gibts nicht mehr, deshalb auch der post. Aber ich werd mal Rudolf Ball anschreiben, eventuell gibts ja doch was.

danke auf jeden fall,
lg, Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2469</wp:comment_id>
<wp:comment_author><![CDATA[AHK]]></wp:comment_author>
<wp:comment_author_email>ahk@avanguide.org</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>81.94.53.66</wp:comment_author_IP>
<wp:comment_date>2009-03-20 15:11:50</wp:comment_date>
<wp:comment_date_gmt>2009-03-20 20:11:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<a href="http://www.imagineclub.at" rel="nofollow">www.imagineclub.at</a> welcomes you!!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>daniel-8x6.jpg</title>
<link>http://www.tigraine.at/about-me/daniel-8x6jpg/</link>
<pubDate>Sun, 08 Jun 2008 13:52:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/daniel-8x6.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>294</wp:post_id>
<wp:post_date>2008-06-08 15:52:56</wp:post_date>
<wp:post_date_gmt>2008-06-08 13:52:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>daniel-8x6jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>296</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/daniel-8x6.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/daniel-8x6.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:692;s:6:"height";i:800;s:14:"hwstring_small";s:22:"height='96' width='83'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/daniel-8x6.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"daniel-8x6-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"daniel-8x6-259x300.jpg";s:5:"width";i:259;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>daniel.png</title>
<link>http://www.tigraine.at/about-me/danielpng/</link>
<pubDate>Sun, 08 Jun 2008 13:53:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/daniel.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>295</wp:post_id>
<wp:post_date>2008-06-08 15:53:00</wp:post_date>
<wp:post_date_gmt>2008-06-08 13:53:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>danielpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>296</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/daniel.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/daniel.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:242;s:6:"height";i:292;s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/daniel.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"daniel-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>About me</title>
<link>http://www.tigraine.at/about-me/</link>
<pubDate>Sun, 08 Jun 2008 13:53:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/about-me/</guid>
<description></description>
<content:encoded><![CDATA[<div style="padding-bottom: 10px; margin: 0px; padding-left: 10px; display: inline; float: right; padding-top: 0px" id="scid:887EC618-8FBE-DEAD-BEEF-2339AF2EC721:1c08ef67-1c9b-4cd0-b372-ad3df7c32a73" class="wlWriterSmartContent"><a title="Daniel" href="http://www.tigraine.at/wp-content/uploads/2008/06/daniel-8x6.jpg" rel="thumbnail"><img border="0" src="http://www.tigraine.at/wp-content/uploads/2008/06/daniel.png" /></a></div>  <p>Hi, thanks for visiting my Blog! My name is Daniel Hoelbling and I am currently studying computer science at the <a href="http://www.uni-klu.ac.at">University of Klagenfurt</a>. </p>  <p>While broadly interested in anything technology related my primary focus is .NET development, best practices, test-driven-development, oo-design and&#160; software architecture. </p>  <p>In the past I have been CTO of pixelpoint multimedia to help them architect and implement the <a href="http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/">kaernten.at</a> tourism platform for Carinthia. </p>  <h1>Contact</h1>  <p>You can contact me through email at: <a href="mailto:tigraine@tigraine.at">tigraine@tigraine.at</a>.     <br />Or follow me on <a href="http://twitter.com/tigraine">twitter</a> / <a href="http://friendfeed.com/tigraine">friendfeed</a>.     <br />You can also contact me through MSN (email above)     <br />or Skype: illuvatan</p>  <p>You can also find me at <a href="http://www.facebook.com/Tigraine">Facebook</a> or <a href="http://www.linkedin.com/in/danielhoelbling">LinkedIn</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>296</wp:post_id>
<wp:post_date>2008-06-08 15:53:03</wp:post_date>
<wp:post_date_gmt>2008-06-08 13:53:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>about-me</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>2</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_wp_page_template</wp:meta_key>
<wp:meta_value>default</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248127458</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3369</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Introducing ELMS-Connector v.1 Beta]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/09/29/introducing-elms-connector-v-1-beta/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-17 23:10:22</wp:comment_date>
<wp:comment_date_gmt>2009-10-17 21:10:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] About me [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3385</wp:comment_id>
<wp:comment_author><![CDATA[Its not fair, Ruby can do it, so why can&#8217;t I? &laquo; Chris J Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://enginechris.wordpress.com/2009/11/02/its-not-fair-ruby-can-do-it-so-why-cant-i/</wp:comment_author_url>
<wp:comment_author_IP>72.233.96.151</wp:comment_author_IP>
<wp:comment_date>2009-11-02 16:45:48</wp:comment_date>
<wp:comment_date_gmt>2009-11-02 14:45:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] do it, so why can&#8217;t&nbsp;I?  Posted on November 2, 2009 by enginechris   While reading one of Daniel Hoelbling&#8217;s great posts I noticed a strong warning he makes saying: The GAC is your [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Exporting Data to CVS in ASP.NET</title>
<link>http://www.tigraine.at/2008/06/16/exporting-data-to-cvs-in-aspnet/</link>
<pubDate>Mon, 16 Jun 2008 17:18:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=298</guid>
<description></description>
<content:encoded><![CDATA[<p>So, today I tried the ASP.NET Wiki that's currently in Beta and thought, best way to do so is to expand an article. I'll blog about my Wiki experience later, but for now I'd like to share my code on this one.</p>  <p>I started out with the Wiki Article <a href="http://wiki.asp.net/page.aspx/401/export-to-csv-file/">Export to CSV file</a> (<a href="http://wiki.asp.net/page.aspx/401/export-to-csv-file/rev/3">revision 3</a>) and thought on how to improve it.</p>  <p>As you may have noticed, the topic at hand is so simple, it doesn't really need improving, except for the main flaw where you have to specify all column headers in code.</p>  <p>My take on this was to use the DataBinder API from the System.Web.UI namespace and remove the whole HttpContext.Current stuff to an instance variable so it's easier to test the stuff and you can put it into a class library (if you want that).</p>  <p>Let's assume I have a list of type Person I want to write to CSV</p>  <div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3867c41b-69e5-42a3-8d27-9a7bb052187d" class="wlWriterSmartContent"><pre name="code" class="csharp">
public class Person
{
&#160;&#160;&#160;&#160;public String Name
&#160;&#160;&#160;&#160;{ get; set; }
&#160;&#160;&#160;&#160;public String Family
&#160;&#160;&#160;&#160;{ get; set; }
&#160;&#160;&#160;&#160;public int Age
&#160;&#160;&#160;&#160;{ get; set; }
&#160;&#160;&#160;&#160;public decimal Salary
&#160;&#160;&#160;&#160;{ get; set; }
}
</pre></div>

<p>Now here's the CVSExporter class that you just need to pass 3 things: Your List&lt;Person&gt;, your HttpContext.Current and a List&lt;String&gt; that specifies what columns you want printed out (eg. Name, Family).</p>

<div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a9cd5d82-8fa9-4b9e-b723-0b1e52ee0843" class="wlWriterSmartContent"><pre name="code" class="csharp">
public class CSVExporter
{
&#160;&#160;&#160;&#160;public static void WriteToCSV(List&lt;Object&gt; dataList, HttpContext httpContext, List&lt;String&gt; columnNames)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;InitializeHeaders(httpContext);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;WriteColumnNames(httpContext, columnNames);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foreach (Object data in dataList)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;WriteData(data, httpContext, columnNames);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.End(); //Everything has to end.. 
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void InitializeHeaders(HttpContext httpContext)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;string attachment = "attachment; filename=PersonList.csv";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.Clear();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.ClearHeaders();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.ClearContent();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.AddHeader("content-disposition", attachment);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.ContentType = "text/csv";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.AddHeader("Pragma", "public");
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void WriteData(Object data, HttpContext httpContext, List&lt;String&gt; columnNames)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;StringBuilder stringBuilder = new StringBuilder();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foreach (String column in columnNames)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AddComma(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.Web.UI.DataBinder.Eval(data, column).ToString(), 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stringBuilder);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.Write(stringBuilder.ToString());
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.Write(Environment.NewLine);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void AddComma(string value, StringBuilder stringBuilder)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stringBuilder.AppendFormat("{0}, ", value.Replace(',', ' '));
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void WriteColumnNames(HttpContext httpContext, List&lt;String&gt; columnNames)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;StringBuilder stringBuilder = new StringBuilder();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foreach (String column in columnNames)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stringBuilder.AppendFormat("{0}, ", column);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.Write(stringBuilder.ToString());
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;httpContext.Response.Write(Environment.NewLine);
&#160;&#160;&#160;&#160;}

}
</pre></div>

<p>So that's it for now. I guess there is still room for improvement, and if you need performance you should go with the original solution, DataBinder.Eval does some type-casting internally so it won't run at lightning speeds, but you get the idea of what can be done with the DataBinder control :).</p>

<p>And now I'm off to writing a Windows Live Writer Plugin that will allow me to paste longer code without jumping through loops like a madman (I posted the code in my Wordpress admin-gui because doing it from wlv simply didn't work!)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>298</wp:post_id>
<wp:post_date>2008-06-16 19:18:07</wp:post_date>
<wp:post_date_gmt>2008-06-16 17:18:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>exporting-data-to-cvs-in-aspnet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1213639621</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>702</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; ASP.NET Wiki - An unpleasant experience]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/06/23/aspnet-wiki-an-unpleasant-experience/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-06-23 22:25:47</wp:comment_date>
<wp:comment_date_gmt>2008-06-23 20:25:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] time (just before I went mad at Windows Live Writer), I posted some modified code from the ASP.NET Wiki that I thought isn&#8217;t worth posting to the Wiki, while still being worth [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Post Code With Dignity</title>
<link>/postcodewithdignity/</link>
<pubDate>Mon, 16 Jun 2008 18:35:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/postcodewithdignity.rar</guid>
<description></description>
<content:encoded><![CDATA[A Windows Live Writer Plugin to post code to your blog post.]]></content:encoded>
<excerpt:encoded><![CDATA[Post Code With Dignity]]></excerpt:encoded>
<wp:post_id>302</wp:post_id>
<wp:post_date>2008-06-16 20:35:43</wp:post_date>
<wp:post_date_gmt>2008-06-16 18:35:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>postcodewithdignity</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/postcodewithdignity.rar</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/postcodewithdignity.rar</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Post Code with Dignity</title>
<link>http://www.tigraine.at/2008/06/16/post-code-with-dignity/</link>
<pubDate>Mon, 16 Jun 2008 18:38:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/16/post-code-with-dignity/</guid>
<description></description>
<content:encoded><![CDATA[<p>After finally getting really really fed up with Windows Live Writer about the way it tries to tidy up your HTML code I decided that I need to do something about it.</p>  <p>So I did, writing a Live Writer plugin is very easy and straight forward, so I did a plugin that will take your clipboard, replace typical things like &lt; &gt; through &amp;lt; &amp;gt; and replace every 2 spaces through 2 &amp;nbsp;.    <br />So make sure you are using a even number of spaces for source indentation in your IDE.</p>  <p>The plugin is far away from perfect, and I think I'll make it a bit more configurable tomorrow. I also think I'll put it up on Google code and maybe release it to the Windows Live Gallery.</p>  <p>They key? Windows Live Writer fucks up your markup no matter what you do. So I simply departet from posting pure text as a ContentSource, yet the plugin is treating HTML as a SmartContentSource that will appear as a block inside Windows Live Writer, saving it from it's catastrophic markup-killing html-tidy algorithm.</p>  <p><strong>Update: </strong>I already released the source at CodePlex and you can get the most up to date binary from there:</p>  <p>CodePlex Project Page: <a title="http://www.codeplex.com/wlwPostCode" href="http://www.codeplex.com/wlwPostCode">http://www.codeplex.com/wlwPostCode</a></p>  <p>Installation:    <br />Simply put the dll into your Live\Writer\Plugins directory and start WLV!     <br />It will now show up in your Insert-List as Insert Code.. </p>  <p>Btw: The Plugin assumes you are using the same <a href="http://www.tigraine.at/2008/06/05/major-site-rehaul/">syntax highlighting script</a> as I do and will put your code into a &lt;pre&gt; tag.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>303</wp:post_id>
<wp:post_date>2008-06-16 20:38:29</wp:post_date>
<wp:post_date_gmt>2008-06-16 18:38:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>post-code-with-dignity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>686</wp:comment_id>
<wp:comment_author><![CDATA[Joe Cheng [MSFT] ]]></wp:comment_author>
<wp:comment_author_email>joe.cheng@microsoft.com</wp:comment_author_email>
<wp:comment_author_url>http://jcheng.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>131.107.0.106</wp:comment_author_IP>
<wp:comment_date>2008-06-17 03:07:34</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 01:07:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi, I'm one of the developers on WLW. I'd like to hear more about what WLW is doing to your markup by default that you don't like--please shoot me an e-mail when you get a chance.

Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>687</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.160</wp:comment_author_IP>
<wp:comment_date>2008-06-17 12:45:13</wp:comment_date>
<wp:comment_date_gmt>2008-06-17 10:45:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks Joe, I've just sent you an email with my issues.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/06/23/aspnet-wiki-an-unpleasant-experience/imagepng-2/</link>
<pubDate>Mon, 23 Jun 2008 20:25:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>308</wp:post_id>
<wp:post_date>2008-06-23 22:25:40</wp:post_date>
<wp:post_date_gmt>2008-06-23 20:25:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>310</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:592;s:6:"height";i:126;s:14:"hwstring_small";s:23:"height='27' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x126.png";s:5:"width";i:150;s:6:"height";i:126;}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x63.png";s:5:"width";i:300;s:6:"height";i:63;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/06/23/aspnet-wiki-an-unpleasant-experience/image-thumbpng-2/</link>
<pubDate>Mon, 23 Jun 2008 20:25:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>309</wp:post_id>
<wp:post_date>2008-06-23 22:25:43</wp:post_date>
<wp:post_date_gmt>2008-06-23 20:25:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>310</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:592;s:6:"height";i:126;s:14:"hwstring_small";s:23:"height='27' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/image-thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb-150x126.png";s:5:"width";i:150;s:6:"height";i:126;}s:6:"medium";a:3:{s:4:"file";s:22:"image-thumb-300x63.png";s:5:"width";i:300;s:6:"height";i:63;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ASP.NET Wiki - An unpleasant experience</title>
<link>http://www.tigraine.at/2008/06/23/aspnet-wiki-an-unpleasant-experience/</link>
<pubDate>Mon, 23 Jun 2008 20:25:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/23/aspnet-wiki-an-unpleasant-experience/</guid>
<description></description>
<content:encoded><![CDATA[<p>Last time (just before I went mad at Windows Live Writer), I <a href="http://www.tigraine.at/2008/06/16/exporting-data-to-cvs-in-aspnet/">posted some modified code</a> from the ASP.NET Wiki that I thought isn't worth posting to the Wiki, while still being worth a post in this blog (it was out of scope for the Wiki article). </p>  <p>But what I also had to note that the Wiki System is far far away from perfect.   <br />So let's get to the nitty gritty details at the example of the good article on <a href="http://wiki.asp.net/page.aspx/285/reading-file-content-from-different-webserver-using-httpwebrequest/">HttpWebRequest</a>. </p>  <p>Click the edit button and get a standard (really nothing special) WYSYWIG editor that completely hides the markup from you.    <br />Maybe somebody sees this as a good thing (editing MediaWiki isn't that great after all due to WikiText), but I think WYSIWYG is absolutely lame!</p>  <p>Let's get to the source. To get this look</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/06/image.png"><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/06/image-thumb.png" width="592" height="126" /></a> </p>  <p>The HTML code looks like this:</p>  <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:997ea643-c3ef-4b2a-8c54-3380e4e5fd8d" class="wlWriterSmartContent"><pre name="code" class="xml">
&lt;div style="border: 1px dotted rgb(204, 204, 204); padding: 5px; background: rgb(239, 239, 239) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-family: Courier New;"&gt;
&lt;p style="margin: 0px;"&gt;&lt;span style="color: blue;"&gt;If&lt;/span&gt; &lt;span style="color: blue;"&gt;Not&lt;/span&gt; (IsPostBack) &lt;span style="color: blue;"&gt;Then&lt;/span&gt;&lt;/p&gt;

&lt;p style="margin: 0px;"&gt;&nbsp;&nbsp;&nbsp; &lt;span style="color: blue;"&gt;Try&lt;/span&gt;&lt;/p&gt;

&lt;p style="margin: 0px;"&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;span style="color: blue;"&gt;Dim&lt;/span&gt; fr &lt;span style="color: blue;"&gt;As&lt;/span&gt; System.Net.HttpWebRequest&lt;/p&gt;

&lt;p style="margin: 0px;"&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;span style="color: blue;"&gt;Dim&lt;/span&gt; targetURI &lt;span style="color: blue;"&gt;As&lt;/span&gt; &lt;span style="color: blue;"&gt;New&lt;/span&gt; Uri(&lt;span style="color: rgb(163, 21, 21);"&gt;"http://weblogs.asp.net/farazshahkhan"&lt;/span&gt;)&lt;/p&gt;
&lt;/div&gt;
</pre></div>

<p>I hope this has just raised some eyebrows, it sure did when I saw it first. Hell that's the way Microsoft wants us to post code??</p>

<p>After all, ASP.NET is about code. It's about ASP.NET, so there will be code everywhere. And we're supposed to somehow (still don't know how) do the syntax highlighting manually, copy everything to the HTML surface in the shitty WYSYWIG editor and then let others come in and edit this crap?</p>

<p>Oh my god, man.. Wiki is all about editing, not about posting in the first place. If I want to write a new story on something I'd go off and post it to this blog. 
  <br />But to edit just one line of code, you'd have to copy the whole code sample into some kind of IDE, edit it, export it in HTML, repost it to the Wiki's HTML view.</p>

<p>No way anyone would ever go through this hassle just to increase the readability of some sample. I mean, if I'm in for a 20 minute edit job just because I think the variable <em>int x</em> should be named <em>double y_</em>, I'd never even think about editing.</p>

<p>So, concluding: Sorry Microsoft, but try harder next time. 
  <br />Posting Code to a Wiki about code should be as seamless as possible, and not providing the tools to do so is a shame! 

  <br />There is a &quot;Format option&quot; called &quot;Source code&quot; in the WYSYWIG, but it doesn't do a damn thing, so we see people posting their code from Word (like in the <a href="http://wiki.asp.net/page.aspx/401/export-to-csv-file/">CSVExport</a> article), do some other weird stuff (look above!).</p>

<p>Get your act together Microsoft, create a &lt;code&gt; block that will get syntax-highlighted at the server or something like that. But don't depend on your users to put even more effort into their contributions!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>310</wp:post_id>
<wp:post_date>2008-06-23 22:25:44</wp:post_date>
<wp:post_date_gmt>2008-06-23 20:25:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>aspnet-wiki-an-unpleasant-experience</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>plakat</title>
<link>/plakat/</link>
<pubDate>Tue, 24 Jun 2008 18:08:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/plakat.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>311</wp:post_id>
<wp:post_date>2008-06-24 20:08:41</wp:post_date>
<wp:post_date_gmt>2008-06-24 18:08:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>plakat</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/plakat.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/plakat.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:781;s:6:"height";i:898;s:14:"hwstring_small";s:22:"height='96' width='83'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/plakat.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"plakat-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"plakat-260x300.jpg";s:5:"width";i:260;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>hl-2140.jpg</title>
<link>http://www.tigraine.at/2008/06/28/dont-bother-with-sharing-a-printer/hl-2140jpg/</link>
<pubDate>Sat, 28 Jun 2008 20:55:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>312</wp:post_id>
<wp:post_date>2008-06-28 22:55:28</wp:post_date>
<wp:post_date_gmt>2008-06-28 20:55:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>hl-2140jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>314</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/hl-2140.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:150;s:6:"height";i:106;s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:68:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/hl-2140.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>hl-2140-thumb.jpg</title>
<link>http://www.tigraine.at/2008/06/28/dont-bother-with-sharing-a-printer/hl-2140-thumbjpg/</link>
<pubDate>Sat, 28 Jun 2008 20:55:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>313</wp:post_id>
<wp:post_date>2008-06-28 22:55:29</wp:post_date>
<wp:post_date_gmt>2008-06-28 20:55:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>hl-2140-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>314</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/hl-2140-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:150;s:6:"height";i:106;s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:74:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/06/hl-2140-thumb.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Don&#039;t bother with sharing a printer</title>
<link>http://www.tigraine.at/2008/06/28/dont-bother-with-sharing-a-printer/</link>
<pubDate>Sat, 28 Jun 2008 20:55:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/06/28/dont-bother-with-sharing-a-printer/</guid>
<description></description>
<content:encoded><![CDATA[<p style="float: left"><a href="http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140.jpg"><img border="0" alt="HL-2140" src="http://www.tigraine.at/wp-content/uploads/2008/06/hl-2140-thumb.jpg" width="150" height="106" /></a> </p>  <p>If you've ever ran a home network before you may have noticed that installing and running a printer over the network usually works great and pretty seamless.</p>  <p>Except for those rare conditions where your printer drivers sucks, the host where you connect your printers is old and slow, and the fastest way to your printout is copying the doc to the host computer to print it locally.</p>  <p style="clear: both;">I've <a href="http://www.tigraine.at/2008/01/31/the-modern-age-of-printing/">complained about that before</a>, but I didn't need too much printing lately so I forgot. Until today when I found the wonderful <a href="http://www.brother.de/g3.cfm/s_page/65190/s_level/24330/s_product/HL2150NG1">Brother HL-2150 N</a> printer that costs just 130&#8364; and sports its own <a href="http://en.wikipedia.org/wiki/Network_card">NIC</a>.     <br />So instead of bothering with network share and stuff like that I just had to plug in the printer to the LAN and run the driver install locally at my machine.</p>  <p>Everything was up and running in about 30 seconds and I'm relieved of the ever daring &quot;is this stupid computer up or not&quot; question (The status LEDs on the host aren't connected).</p>  <p>If you need a cheap black and white network printer, I'd definitely suggest this one here.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>314</wp:post_id>
<wp:post_date>2008-06-28 22:55:29</wp:post_date>
<wp:post_date_gmt>2008-06-28 20:55:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-bother-with-sharing-a-printer</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/01/clickonce-and-vista-uac/imagepng-2/</link>
<pubDate>Tue, 01 Jul 2008 15:15:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>315</wp:post_id>
<wp:post_date>2008-07-01 17:15:39</wp:post_date>
<wp:post_date_gmt>2008-07-01 15:15:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>317</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:585;s:6:"height";i:389;s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x199.png";s:5:"width";i:300;s:6:"height";i:199;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/01/clickonce-and-vista-uac/image-thumbpng-2/</link>
<pubDate>Tue, 01 Jul 2008 15:15:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>316</wp:post_id>
<wp:post_date>2008-07-01 17:15:40</wp:post_date>
<wp:post_date_gmt>2008-07-01 15:15:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>317</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:585;s:6:"height";i:389;s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb-300x199.png";s:5:"width";i:300;s:6:"height";i:199;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ClickOnce and Vista UAC</title>
<link>http://www.tigraine.at/2008/07/01/clickonce-and-vista-uac/</link>
<pubDate>Tue, 01 Jul 2008 15:15:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/01/clickonce-and-vista-uac/</guid>
<description></description>
<content:encoded><![CDATA[<p>So far I've been using Windows Vista since day 1 it's been released here in Austria and I have been very pleased with the system. Imo Vista has a far worse reputation than it deserves. I really can't think of myself using XP any more .</p>  <p>Also I think that UAC is a very very good think in Windows Vista and really helps secure the computer against malicious programs. If you get over it popping up every 3 clicks while you set up the machine, in running state you hardly see the question any more (except for administrative tasks).   <br />So, I never ever disabled UAC until now.</p>  <p>Why? Because ClickOnce is giving me a hard time.    <br />ClickOnce is automagically working perfectly in XP because it just starts up IE and starts to bootstrap the program. But if the program requires admin rights you're out of luck in Windows Vista.</p>  <p>But, I've found a workaround for ClickOnce when you download the ClickOnce application.</p>  <p>Just start IE as administrator (right click -&gt; run as administrator) and the ClickOnce bootstrapper will eventually use the running instance of IE that has elevated rights. </p>  <p>I haven't had a way to identify why this isn't working 100% of the time, but sometimes this doesn't work either, so your only way out is to temporally disable UAC. Here's how to do it:</p>  <p>First you need to start <strong>msconfig</strong> through the run dialog (Windows-Key + R -&gt; msconfig -&gt; O)    <br />Now you select the Tools tab and need to scroll down until you find disable User Account Control (or something similar, I'm running a German Windows).</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/07/image.png"><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb.png" width="585" height="389" /></a></p>  <p>Once you've found the line simply press &quot;Launch&quot; / &quot;Starten&quot; and reboot the machine. UAC will be disabled and you can run your ClickOnce application. </p>  <p>I strongly advise you to turn UAC back on once you're done, because running in admin mode compromises your computer's security!</p>  <p>Bottomline:&#160; Try to avoid older ClickOnce applications (newly compiled ones don't have this problem) that require administrative rights to run.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>317</wp:post_id>
<wp:post_date>2008-07-01 17:15:41</wp:post_date>
<wp:post_date_gmt>2008-07-01 15:15:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>clickonce-and-vista-uac</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Source Control, Open Source and Microsoft</title>
<link>http://www.tigraine.at/2008/07/02/source-control-open-source-and-microsoft/</link>
<pubDate>Wed, 02 Jul 2008 18:11:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/02/source-control-open-source-and-microsoft/</guid>
<description></description>
<content:encoded><![CDATA[<p>Something hit me today when I went into the &quot;Team Synchronization Perspective&quot; in <a href="http://www.eclipse.org/">Eclipse</a>/<a href="http://subclipse.tigris.org/">Subclipse</a> while trying to merge some changes a colleague made with my repository:</p>  <p><font style="background-color: #ffffff"><strong>Visual Studio 2008 doesn't sport ANY source control of ANY kind that's for free!</strong></font></p>  <p>If this isn't true I'm eager to hear about it.    <br />But I only know about <a href="http://en.wikipedia.org/wiki/Visual_Studio_Team_System">Visual Studio Team System</a>, and that's not free:</p>  <blockquote>   <p>Typically, customers purchase an <a href="http://en.wikipedia.org/wiki/MSDN">MSDN</a> Premium subscription when licensing the Team Editions and Team Suite, which provides <a href="http://www.microsoft.com/licensing/programs/sa/default.mspx">Software Assurance</a> that entitles users to product updates over the life of the subscription. This includes Team Foundation Server Workgroup Edition, development licenses of many <a href="http://en.wikipedia.org/wiki/Microsoft_Windows">Microsoft Windows</a> versions, <a href="http://en.wikipedia.org/wiki/Visual_Foxpro">Visual Foxpro</a> 9, Visual Studio 2005 Tools for Microsoft Office, development licenses of many server-side offerings, <a href="http://en.wikipedia.org/wiki/SDK">SDKs</a> and <a href="http://en.wikipedia.org/wiki/Driver_development_kit">DDKs</a>, a large amount of documentation, and more. The Team Edition and Team Suite products can not be purchased without an MSDN Premium subscription.</p> </blockquote>  <p>Last time I checked, MSDN Premium costs $2,499 and additional $1,999 every following year.</p>  <p>I also used Visual Source Safe before (VSS 2005), and it was a huge pain in the ass trying to work with it due to the &quot;one-guy-check-out&quot; policy it enforces. So if you need some field/method in another class to continue working on your class, you'll be running circles through the office trying to get others to check the file back in (resulting in half-broken check-ins etc).</p>  <p>So I wonder, with all that commitment Microsoft has been showing to supporting and promoting open source (<a href="http://www.codeplex.com/">CodePlex</a>, <a href="http://code.msdn.microsoft.com/">CodeGallery</a>), why in the hell do they keep all the tools that would support open source development away from their users? I think that even Visual Studio Express edition should at least come with decent support for source control <strong>inside </strong>the IDE that is actually able to connect to CodePlex! (There is a SVN bridge, a command line client and the suggestion to get the team edition of VS.).     <br />So, bottom line my CodePlex source control experience has been &quot;lacking&quot;, while I'm getting more and more fond of subversion combined with subclipse.</p>  <p>While I'm seeing subversion becoming more and more &quot;standard&quot; among open source projects (if not THE standard), I wonder why Microsoft is making it intentionally hard to work with Visual Studio on shared projects. </p>  <p>So, as I already hinted at in my post about ASP.NET Wiki, Microsoft seriously needs to get more consistent in their efforts. <strong>Either support OSS and developer collaboration, or don't. But don't try to do so badly. </strong>The way they try right now isn't really going anywhere.</p>  <p><strong>Update: </strong>Btw, Eclipse just released a new version called ganymede that really rocks!</p>  <p><strong>Update2</strong>: Apparently I didn't find this info last time I used Codeplex, but it looks like there is a way to integrate a Team System client into VS called <a href="http://www.codeplex.com/CodePlex/Wiki/View.aspx?title=Obtaining%20the%20Team%20Explorer%20Client&amp;referringTitle=Source%20control%20clients">Team Explore 2008</a>. I'll be looking at this tomorrow.</p>  <p><strong>Update3</strong>: Mark Phippard just pointed me at <a href="http://ankhsvn.open.collab.net/">AnkhSVN</a> for Visual Studio that seems to be a pretty decent SVN client integrated into Visual Studio. Thanks for this link.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>318</wp:post_id>
<wp:post_date>2008-07-02 20:11:44</wp:post_date>
<wp:post_date_gmt>2008-07-02 18:11:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>source-control-open-source-and-microsoft</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>726</wp:comment_id>
<wp:comment_author><![CDATA[Mark Phippard]]></wp:comment_author>
<wp:comment_author_email>markphip@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>70.20.48.219</wp:comment_author_IP>
<wp:comment_date>2008-07-04 18:29:20</wp:comment_date>
<wp:comment_date_gmt>2008-07-04 16:29:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[There is AnkhSVN for Visual Studio.  It is trying to close the gap with Subclipse and is a pretty decent product.

http://ankhsvn.open.collab.net/

FWIW, Microsoft's open-source group led by Sam Ramji have helped us (CollabNet) re-ignite this project so that Visual Studio would have a good free open source intergation for SVN.

I agree it would be better if Microsoft would allow these clients to run in the Express versions.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>727</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tig@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.239.38</wp:comment_author_IP>
<wp:comment_date>2008-07-04 18:38:10</wp:comment_date>
<wp:comment_date_gmt>2008-07-04 16:38:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Mark,
thanks for the link, I just updated the post.
But this still doesn't change the fact that CodePlex has no SVN option.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>728</wp:comment_id>
<wp:comment_author><![CDATA[Peter]]></wp:comment_author>
<wp:comment_author_email>someguy@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.17.121.19</wp:comment_author_IP>
<wp:comment_date>2008-07-04 21:35:03</wp:comment_date>
<wp:comment_date_gmt>2008-07-04 19:35:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well it's a feature that people would pay for. Why should they allow/integrate it in "Express" editions. Those are meant as smart demos lacking the advanced features (like version control, lol).
They are a corporation after all. And they want to make money from developers as well.

Microsoft support of SVN? That wouldn't quite fit in MS history. Implementing the same thing with a big assed name would.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>736</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Custom ASP.NET Membership provider]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-07-08 01:08:46</wp:comment_date>
<wp:comment_date_gmt>2008-07-07 23:08:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] been ranting too much lately, so I guess it&#8217;s time to get back into [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>729</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tig@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.239.38</wp:comment_author_IP>
<wp:comment_date>2008-07-04 22:13:55</wp:comment_date>
<wp:comment_date_gmt>2008-07-04 20:13:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I don't regard version control as something special any more. The whole point was that version control should be built into ANY IDE. 

Team system is much more, the version control is only a small part of the whole Team System Server and I am pretty sure it wouldn't hurt their sales if they'd give this to all their users.

SVN support is something they may never ever do (especially since the community is moving on to Git and Mercurial), but some kind of source control should be there..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1089</wp:comment_id>
<wp:comment_author><![CDATA[AnkhSVN 2.0 Subversion client for Visual Studio | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/09/04/ankhsvn-20-subversion-client-for-visual-studio/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-09-04 02:16:36</wp:comment_date>
<wp:comment_date_gmt>2008-09-04 00:16:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] complained before that Visual Studio has no built in support for Subversion, as SVN is currently one of the most [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/aspnet-httpmodule-that-detects-debug-mode-on-production-servers/imagepng-2/</link>
<pubDate>Thu, 03 Jul 2008 22:02:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>319</wp:post_id>
<wp:post_date>2008-07-04 00:02:50</wp:post_date>
<wp:post_date_gmt>2008-07-03 22:02:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>321</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:504;s:6:"height";i:141;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x141.png";s:5:"width";i:150;s:6:"height";i:141;}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x83.png";s:5:"width";i:300;s:6:"height";i:83;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/aspnet-httpmodule-that-detects-debug-mode-on-production-servers/image-thumbpng-2/</link>
<pubDate>Thu, 03 Jul 2008 22:02:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>320</wp:post_id>
<wp:post_date>2008-07-04 00:02:50</wp:post_date>
<wp:post_date_gmt>2008-07-03 22:02:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>321</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:504;s:6:"height";i:141;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x141.png";s:5:"width";i:150;s:6:"height";i:141;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb1-300x83.png";s:5:"width";i:300;s:6:"height";i:83;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ASP.NET HttpModule that detects debug mode on production servers</title>
<link>http://www.tigraine.at/2008/07/04/aspnet-httpmodule-that-detects-debug-mode-on-production-servers/</link>
<pubDate>Thu, 03 Jul 2008 22:02:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/04/aspnet-httpmodule-that-detects-debug-mode-on-production-servers/</guid>
<description></description>
<content:encoded><![CDATA[<p>So, after reading some stuff about HttpModules lately I thought it would be fun to create one myself. And, so I came up with something that might be useful in some scenarios.</p>  <p>A HttpModule that will cry foul when you try to put up a ASP.NET website with debug=&quot;true&quot; onto a production server.    <br />It is actually rather simple. Just a standard HttpModule that will check wether the request is local and wether debug is enabled. The local request check is done to make the module transparent to you while developing the app on cassini, while you'll see it instantly when you copy it over to your web server.</p>  <p>The code is rather simple:</p>  <div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e91377a4-a7ee-4e6c-ac7e-85bbf9f217e7" class="wlWriterSmartContent"><pre name="code" class="csharp">
public class DebugWarner : IHttpModule
{

&#160;&#160;&#160;&#160;public void Dispose()
&#160;&#160;&#160;&#160;{&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Init(HttpApplication context)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context.BeginRequest += new EventHandler(context_BeginRequest);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;void context_BeginRequest(object sender, EventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!HttpContext.Current.Request.IsLocal && 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HttpContext.Current.IsDebuggingEnabled)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HttpContext.Current.Response.Write(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"&lt;div style=\"background: #ea999d; border: 1px solid black; width: 500px; text-align: center;\"&gt;\n" +
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"&lt;h1&gt;Debug Mode is enabled!&lt;/h1&gt;&lt;p&gt;This severely impacts Webserver performance&lt;br /&gt;" +
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"Set &lt;compilation debug=&quot;false&quot;&gt; in your web.config&lt;/p&gt;" +
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"&lt;/div&gt;");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Making this work is quite easy too, simply put the above class in your App_Code directory and add this line to your &lt;httpModules&gt; (or &lt;modules&gt; on IIS7) section:</p>

<p>
  <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:cdc62c30-c834-4d09-905b-6d8c0f40f2bb" class="wlWriterSmartContent"><pre name="code" class="xml">
&lt;add name="DebugWarner" type="DebugWarner"/&gt;
</pre></div>
</p>

<p>If you now try to access the page with debug=&quot;true&quot; you'll get:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2008/07/image1.png"><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb1.png" width="504" height="141" /></a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>321</wp:post_id>
<wp:post_date>2008-07-04 00:02:51</wp:post_date>
<wp:post_date_gmt>2008-07-03 22:02:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>aspnet-httpmodule-that-detects-debug-mode-on-production-servers</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Del.icio.us dissappears from the feed</title>
<link>http://www.tigraine.at/2008/07/04/delicious-dissappears-from-the-feed/</link>
<pubDate>Thu, 03 Jul 2008 22:14:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/04/delicious-dissappears-from-the-feed/</guid>
<description></description>
<content:encoded><![CDATA[<p>After some thought I finally dragged myself to make a decision on the <a href="http://del.icio.us/Tigraine">del.icio.us links</a> in my <a href="http://feeds.feedburner.com/Tigraine">RSS feed</a>:</p>  <p>I finally decided to remove the links from the feed, most of my del.icio.us links aren't just that relevant to my blog posts that I really need to share them with you.    <br />If you still want to recieve my del.icio.us links you can simply subscribe to my <a href="http://feeds.delicious.com/rss/Tigraine">del.icio.us feed</a> or add me to your network in del.icio.us.     <br />Another way to stay informed on my del.icio.us (and all my other activities, wether you like it or not *gg*) would be to simply follow me on <a href="http://friendfeed.com/tigraine">friendfeed</a> (although I still haven't really grasped the concept of the site).</p>  <p>Hope the feed just got more enjoyable for you :)</p>  <p>Cheers!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>322</wp:post_id>
<wp:post_date>2008-07-04 00:14:34</wp:post_date>
<wp:post_date_gmt>2008-07-03 22:14:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>delicious-dissappears-from-the-feed</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>725</wp:comment_id>
<wp:comment_author><![CDATA[Tommy]]></wp:comment_author>
<wp:comment_author_email>daluxe@inode.at</wp:comment_author_email>
<wp:comment_author_url>http://www.seo-rookies.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-07-04 13:59:21</wp:comment_date>
<wp:comment_date_gmt>2008-07-04 11:59:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Juhuu... endlich ist dein Feed wieder schön übersichtlich :)

Mit den ganzen Nerd-Links kann ich eh selten was anfangen :)

lg
Tommy]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Skype security and multiple logins</title>
<link>http://www.tigraine.at/2008/07/04/skype-security-and-multiple-logins/</link>
<pubDate>Fri, 04 Jul 2008 14:51:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/04/skype-security-and-multiple-logins/</guid>
<description></description>
<content:encoded><![CDATA[<p>When talking about Skype I usually mention that Skype is one of the few IM clients out there that has great encryption built into it. Due to it's peer to peer hybrid structure encrypting data while sending it through the p2p network is very important, and Skype has some pretty advanced encryption algorithms in use.</p>  <p>But, guess what?    <br />You won't notice that somebody is spying on your Skype conversations if your Skype login information has been disclosed. :)</p>  <p>I noticed this after leaving my computer running while going to university today, and the IM conversation I had with <a href="http://www.semanticmetadata.net/">Mathias</a> was not only delivered to my laptop but also to my home computer. Completely unnoticeable (from the laptop) my home PC received the whole conversation, so a 2 way IM session could have been a 3 person chat session with only 2 nicknames. Weird isn't it? </p>  <p>This behavior is especially dangerous if you think about how most users pick and protect their passwords.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>323</wp:post_id>
<wp:post_date>2008-07-04 16:51:12</wp:post_date>
<wp:post_date_gmt>2008-07-04 14:51:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>skype-security-and-multiple-logins</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>735</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Custom ASP.NET Membership provider]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-07-08 01:06:41</wp:comment_date>
<wp:comment_date_gmt>2008-07-07 23:06:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] been ranting too much lately, so I guess it&#8217;s time to get back into [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2552</wp:comment_id>
<wp:comment_author><![CDATA[edwin sounderajan  sundaresan]]></wp:comment_author>
<wp:comment_author_email>e.sundaresan@gmx.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.119.31.215</wp:comment_author_IP>
<wp:comment_date>2009-06-08 07:29:15</wp:comment_date>
<wp:comment_date_gmt>2009-06-08 05:29:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[friends at skype,
i have registerd myself with skype manytimes
and i have lost all my contacts ,it took me years to get them. i will be very greatful to you if you can help me 
my email address has always been the same.
e.sundaresan@gmx.at]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2553</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>143.205.215.29</wp:comment_author_IP>
<wp:comment_date>2009-06-08 12:57:43</wp:comment_date>
<wp:comment_date_gmt>2009-06-08 10:57:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sorry to hear that, but I am in no way affiliated with Skype.
I'd suggest you try contacting Skype's support to get your contacts back. I can't help you with that.

greetings Tigraine]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/imagepng-2/</link>
<pubDate>Fri, 04 Jul 2008 15:39:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>324</wp:post_id>
<wp:post_date>2008-07-04 17:39:16</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:39:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:816;s:6:"height";i:636;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image2-300x233.png";s:5:"width";i:300;s:6:"height";i:233;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image2.png</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/image-thumbpng-2/</link>
<pubDate>Fri, 04 Jul 2008 15:39:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>325</wp:post_id>
<wp:post_date>2008-07-04 17:39:18</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:39:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:187;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/imagepng-3/</link>
<pubDate>Fri, 04 Jul 2008 15:39:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>326</wp:post_id>
<wp:post_date>2008-07-04 17:39:29</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:39:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:816;s:6:"height";i:636;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image3-300x233.png";s:5:"width";i:300;s:6:"height";i:233;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/image-thumbpng-3/</link>
<pubDate>Fri, 04 Jul 2008 15:39:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>327</wp:post_id>
<wp:post_date>2008-07-04 17:39:32</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:39:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:187;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/imagepng-4/</link>
<pubDate>Fri, 04 Jul 2008 15:39:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>328</wp:post_id>
<wp:post_date>2008-07-04 17:39:57</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:39:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:816;s:6:"height";i:636;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x233.png";s:5:"width";i:300;s:6:"height";i:233;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/image-thumbpng-4/</link>
<pubDate>Fri, 04 Jul 2008 15:40:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>329</wp:post_id>
<wp:post_date>2008-07-04 17:40:00</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:187;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/imagepng-5/</link>
<pubDate>Fri, 04 Jul 2008 15:40:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>330</wp:post_id>
<wp:post_date>2008-07-04 17:40:05</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:816;s:6:"height";i:636;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image5-300x233.png";s:5:"width";i:300;s:6:"height";i:233;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/image-thumbpng-5/</link>
<pubDate>Fri, 04 Jul 2008 15:40:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>331</wp:post_id>
<wp:post_date>2008-07-04 17:40:07</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:187;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb5.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/imagepng-6/</link>
<pubDate>Fri, 04 Jul 2008 15:40:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>332</wp:post_id>
<wp:post_date>2008-07-04 17:40:31</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-6</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:816;s:6:"height";i:636;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image6-300x233.png";s:5:"width";i:300;s:6:"height";i:233;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/image-thumbpng-6/</link>
<pubDate>Fri, 04 Jul 2008 15:40:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>333</wp:post_id>
<wp:post_date>2008-07-04 17:40:32</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-6</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>334</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:187;s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IT-Camp at Klagenfurt University</title>
<link>http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/</link>
<pubDate>Fri, 04 Jul 2008 15:40:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/</guid>
<description></description>
<content:encoded><![CDATA[<p>As <a href="http://www.semanticmetadata.net/2008/07/04/games-implementation-week-for-high-school-students/">Mathias</a> has already hinted, today was the final presentation of the ongoing computer games implementation week I was instructing at klagenfurt university. During the last week I and Christian where working together with a small group of 7 high school students (of age 15-17) on some pretty amazing computer games with Microsoft's XNA framework. </p>  <p>We started out with some basic talk about computer games in general and introduced the students to Microsoft XNA on the second day. Most of them had some basic Java experience and absolutely no knowledge of C# or XNA. After pointing out some syntax differences between Java and C# we started with a very <a href="http://creators.xna.com/en-us/tutorial/collision2drectangle">basic boulder game tutorial</a> from the XNA creators club website that should teach <a href="http://creators.xna.com/en-us/tutorial/collision2drectangle">2D rectangle collision detection</a> with XNA. Afterwards the students were asked to expand on this idea and create their own 2D computer game.</p>  <p>And now I am very happy to show some of their great work they did during the last 4 days!</p>  <p>This is where we started out:    <br /><img src="http://creators.xna.com/assets/cms/images/XNA_Collision1_2D_Rectangle_01_small.jpg" /> </p>  <p>And these are screen shots from our student's projects (click to get the full view):</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/07/image2.png"><img border="0" alt="Argon" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb2.png" width="240" height="187" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2008/07/image3.png"><img border="0" alt="Abwechslungsreiche Ein&#246;de" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb3.png" width="240" height="187" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2008/07/image4.png"><img border="0" alt="Block Fighters" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb4.png" width="240" height="187" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2008/07/image5.png"><img border="0" alt="Space Impact" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb5.png" width="240" height="187" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2008/07/image6.png"><img border="0" alt="Sweet Sattelites" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb6.png" width="240" height="187" /></a> </p>  <p>&#160;</p>  <p>I also promised Mathias to create videos from the projects that we did so he can show them at future computer games courses, I'll post these videos on YouTube once I've recorded them.    <br />We will also be releasing the games source code, but I am still trying to figure out the license for some of them.</p>  <p>I've had a great time with those talented kids and hope they enjoyed learning as much as I did enjoy teaching!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>334</wp:post_id>
<wp:post_date>2008-07-04 17:40:32</wp:post_date>
<wp:post_date_gmt>2008-07-04 15:40:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>it-camp-at-klagenfurt-university</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2669</wp:comment_id>
<wp:comment_author><![CDATA[My new toy: Wacom Bamboo | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-09 20:09:52</wp:comment_date>
<wp:comment_date_gmt>2009-07-09 18:09:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I was preparing for this years summer-camp at the University (I’m instructing some kids on XNA game programming again) I used a CintiQ 21UX we have sitting at [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2683</wp:comment_id>
<wp:comment_author><![CDATA[IT-Camp 2009 at Klagenfurt University | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-13 13:16:12</wp:comment_date>
<wp:comment_date_gmt>2009-07-13 11:16:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] last year’s IT-Camp the University of Klagenfurt decided to continue the project where 15-17 year old teenagers are [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/07/polluting-userspace/image-thumbpng-2/</link>
<pubDate>Mon, 07 Jul 2008 14:50:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>336</wp:post_id>
<wp:post_date>2008-07-07 16:50:59</wp:post_date>
<wp:post_date_gmt>2008-07-07 14:50:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>337</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:667;s:6:"height";i:457;s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb7-300x205.png";s:5:"width";i:300;s:6:"height";i:205;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Polluting Userspace</title>
<link>http://www.tigraine.at/2008/07/07/polluting-userspace/</link>
<pubDate>Mon, 07 Jul 2008 14:51:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/07/polluting-userspace/</guid>
<description></description>
<content:encoded><![CDATA[<p>Once in a while I actually use the &quot;My Documents&quot; folder to retrieve files I've put there. Or worse, I sometimes store files there!    <br />Gosh, impossible? Hell yes! Impossible due to the shitload of folders all sorts of software vendors think I need in MY user space! Who in the hell allowed ICQ to start storing received files in there? Do I really want that? Did they ask me?     <br />Who actually decided that every damn game out there you install has the right to just go into your &quot;My Documents&quot; and place it's save games in there? If I open up my documents I get a almost 100% accurate view of what I've been playing over the last few months or so. </p>  <p>That's unacceptable! Sorry to say that, but I have 3 folders in there where I &quot;dare&quot; to put my data, while the total folder count in my &quot;My Documents&quot; is 19! So that's 16 folders I didn't create and I don't need in there. </p>  <p><em>But why did it get that bad?</em></p>  <p>The answer is simple: Because backup is painful.    <br />Even an IT pro has a hard time collecting all those config files from the various C:\Program Files\config folders, imagine a home user going through those steps. So software vendors thought: Users may know how to back up their &quot;My Documents&quot; folder, if we put our stuff in there we're safe! </p>  <p>Guess what? They made the opposite true: Users simply don't use this folder any more, most people I know keep their data on locations like &quot;D:\&quot; or some other place where they can access them conveniently without seeing unwanted folders pop up.    <br />And, I'm inclined to do the same. Screening through 16 unknown/irrelevant folders isn't something I want to be doing in a folder I thought was for my private use only!</p>  <p><em>But where to put those files?</em></p>  <p>By far the most convenient location for configuration files imo is the program directory where you've installed the application. But to be honest, I don't think the average end-user app should really need a config file. Most applications we currently use just work out of the box with very little need for configuration.</p>  <p>Secondly, there's still the AppData folder that's intended to hold application data, and by definition config files are application data. Why in the hell didn't they use this??    <br />AppData is also located in the users's profile folder so it might get backed up.</p>  <p><strong>PLEASE:</strong></p>  <p>If you're writing software, either omit configuration files (best solution!) or keep them out of my user space and save them in a location that actually makes sense!</p>  <p>Oh, and by the way. With user space I don't mean only the &quot;My Documents&quot; folder. I really can't understand why some applications (namely eclipse, oracle, visual paradigm, virtual box) decided that it's ok to put them in my C:\users\&lt;username&gt;\ instead! That folder was intended to give me quick access to my Documents, Desktop, Favorites, Downloads, Images, Music, Videos. Not to scan through those .eclipse/.sqldeveloper etc etc folders. Please guys out there, understand that windows isn't hiding folders that start with a dot from the user! That's linux and we Windows users don't want those folders to be in the root of our profile!</p>  <p><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb7.png" width="667" height="457" /></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>337</wp:post_id>
<wp:post_date>2008-07-07 16:51:00</wp:post_date>
<wp:post_date_gmt>2008-07-07 14:51:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>polluting-userspace</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215442445</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>734</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Custom ASP.NET Membership provider]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-07-08 01:05:55</wp:comment_date>
<wp:comment_date_gmt>2008-07-07 23:05:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] been ranting too much lately, so I guess it&#8217;s time to get back into [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Custom ASP.NET Membership provider</title>
<link>http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/</link>
<pubDate>Mon, 07 Jul 2008 23:05:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/</guid>
<description></description>
<content:encoded><![CDATA[I've been <a href="http://www.tigraine.at/2008/07/07/polluting-userspace/">ranting</a> <a href="http://www.tigraine.at/2008/07/04/skype-security-and-multiple-logins/">too</a> <a href="http://www.tigraine.at/2008/07/02/source-control-open-source-and-microsoft/">much</a> lately, so I guess it's time to get back into coding.

This time around I've been challenged with a new project that involves a legacy database, while my task is to rewrite the ASP.NET application that runs ontop of that database without actually touching the database.

<em>So first: What is ASP.NET Membership?</em>

Simple answer: A great way to build authentication with little to zero coding effort with very cool draggy-droppy developer experience :).
You simply drag a Login control to your ASP.NET page and your application just learned how to authenticate and keep the session of users.

To achieve this on a already existing database you simply need to do one thing:

Implement the abstract class <a href="http://msdn.microsoft.com/en-us/library/system.web.security.membershipprovider.aspx">MembershipProvider</a> and implement just one method: <a href="http://msdn.microsoft.com/en-us/library/system.web.security.membershipprovider.validateuser.aspx">ValidateUser</a>
<div id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:72124b95-496a-4b73-a208-8c4f6910374f" class="wlWriterSmartContent" style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline">
<pre class="csharp" name="code">public override bool ValidateUser(string username, string password)
{
    if (username == "tigraine" &amp;&amp; password == "tigraine")
        return true;
    return false;
}
</pre>
</div>
You see where I'm going here, you basically just need to return true or false given a username and a password. How you do it is entirely up to you as long as you return either true or false.

To make the magic actually work you need to add the new MembershipProvider (i've called it DBMembershipProvider) to your root web.config:
<div id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d4763d2b-ae15-4afd-911b-00f6a70be802" class="wlWriterSmartContent" style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline">
<pre class="xml" name="code">&lt;authentication mode="Forms"&gt;
	&lt;forms loginUrl="Login.aspx"&gt;&lt;/forms&gt;
&lt;/authentication&gt;
&lt;membership defaultProvider="DBMembershipProvider"&gt;
	&lt;providers&gt;
		&lt;add name="DBMembershipProvider" type="DBMembershipProvider" /&gt;
	&lt;/providers&gt;
&lt;/membership&gt;
</pre>
</div>
The <em>&lt;authentication mode="Forms"&gt;</em> is quite important because it tells asp.net to actually use forms driven authentication instead of windows authentication or microsoft passport. I also defined the <em>loginUrl</em> attribute to tell the app where to redirect anonymous users, but that's optional.

The membership stuff now is important, because here we glue the new provider into our system.

We just add a new provider in the <em>&lt;providers&gt; </em>section and name it conveniently, and most important: we tell .net what type to instantiate.

The <em>defaultProvider</em> property then tells .net what provider to use (if you've got multiple providers to log into your website, eg: Windows and Forms auth)

And, that's it. As long as the ValidateUser method returns true/false, your users can now use a fancy Login form to authenticate and their login session will get stored in a cookie. You can now drag LoginStatus and LoginName controls to your form and watch the goodness work :).

<strong>Hey! How do you actually secure something with this?</strong>

Yeah, I was so happy with that login working so I almost forgot to do this part. Usually you want to protect some files or directories from unregistered users. This also happens at the web.config level and is quite easy.

In case of a folder, just put a blank web.config in there and add the following directives:
<div id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d27846c7-8a28-41be-ab80-a0a57f0a38a2" class="wlWriterSmartContent" style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline">
<pre class="xml" name="code">&lt;system.web&gt;
	&lt;authorization&gt;
		&lt;deny users="?"/&gt;
	&lt;/authorization&gt;
&lt;/system.web&gt;
</pre>
</div>
Now only registered users have access to this directory and you're done.

If you don't want to lock the whole directory but only some files in there you can do this through the <em>verb </em>attribute by either specifying a regex or a filename to be affected by your rule. (You could also use the <em>&lt;allow&gt;</em> tag to add exceptions to your deny tag I think)

Actually, if you look at the MembershipProvider, there's a ton more functionality I just skipped here. But this has been everything I needed to get login and user restriction for my current project, so I thought it's worth sharing how darn easy this actually is. If you want to delve deeper into the topic I'd suggest you either read <a href="http://www.4guysfromrolla.com/webtech/110701-1.shtml">4GuyFromRolla</a> or search through <a href="http://msdn.microsoft.com/en-us/library/tw292whz.aspx">MSDN</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>339</wp:post_id>
<wp:post_date>2008-07-08 01:05:53</wp:post_date>
<wp:post_date_gmt>2008-07-07 23:05:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>custom-aspnet-membership-provider</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215610358</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>How not to serve customers</title>
<link>http://www.tigraine.at/2008/07/13/how-not-to-serve-customers/</link>
<pubDate>Sun, 13 Jul 2008 13:26:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/13/how-not-to-serve-customers/</guid>
<description></description>
<content:encoded><![CDATA[<p>I decided some time ago that I don't want to blog about non technical stuff any more.    <br />But it's Sunday and I hope you'll excuse this one.</p>  <p>What happened? The-best-girlfriend-someone-can-imagine&#8482; just returned from a 2 week study trip to Slovenia while I've been holding up here in Klagenfurt. Upon returning I imagined it would be cool to celebrate her return with romantic dinner at a Mexican restaurant here in Klagenfurt. </p>  <p>The restaurant I'm referring to is the <a href="http://salud.at/">Salud</a> that usually serves truly great Mexican food. But while their food truly justifies the somewhat high price, their service is just ridiculous!</p>  <p>I've never seen service like this.    <br />In short it's been a really really unpleasant experience, but what really stood out was that the waitress tried to take away my plate while I was still chewing my last bite!     <br />And then she kept standing there for at last 5 seconds watching my girlfriend chew on her last bite too! </p>  <p>There is nothing I hate more than being interrupted while eating at a restaurant, except for being watched while eating. </p>  <p>So, just to compensate for the useless post, here a list of great places to eat (where I actually liked the service) in Klagenfurt:</p> 
<!--more-->
  <p></p>  <ul>   <li><a href="http://maps.google.com/maps?f=q&amp;hl=de&amp;geocode=&amp;q=+%09Villacher+Stra%C3%9Fe+221,+9020+Klagenfurt&amp;sll=36.031332,-95.712891&amp;sspn=55.840189,69.082031&amp;ie=UTF8&amp;ll=46.6203,14.270382&amp;spn=0.005917,0.008433&amp;t=h&amp;z=17&amp;iwloc=addr">Chinesischer Garten</a> </li>    <ul>     <li>Very good Chinese food, fast and very polite service. Very reasonable prices (with all you can eat etc)</li>   </ul>    <li><a href="http://maps.google.com/maps?f=q&amp;hl=de&amp;geocode=&amp;q=SANKT+VEITER+STRASSE+116,+9020+Klagenfurt&amp;sll=46.6203,14.270382&amp;sspn=0.005917,0.008433&amp;ie=UTF8&amp;ll=46.638609,14.313635&amp;spn=0.002958,0.004216&amp;t=h&amp;z=18&amp;iwloc=addr">Da Pietro</a> </li>    <ul>     <li>Not the cheapest Italian restaurant you'll find, but the food tastes great. And the waiters there are absolutely the best you'll find in Klagenfurt. </li>   </ul>    <li><a href="http://maps.google.com/maps?f=q&amp;hl=de&amp;geocode=&amp;q=Pfarrplatz+3+9020+Klagenfurt+K%C3%A4rnten&amp;sll=46.623616,14.310561&amp;sspn=0.002958,0.004216&amp;ie=UTF8&amp;ll=46.626077,14.306957&amp;spn=0.002958,0.004216&amp;t=h&amp;z=18&amp;iwloc=addr">Longhorn Saloon: Steakhouse</a> </li>    <ul>     <li>I don't like steak, but most of my friends have agreed that this has to be one of the best places to eat steak in the center of Klagenfurt. </li>   </ul> </ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>340</wp:post_id>
<wp:post_date>2008-07-13 15:26:43</wp:post_date>
<wp:post_date_gmt>2008-07-13 13:26:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-not-to-serve-customers</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>762</wp:comment_id>
<wp:comment_author><![CDATA[Tommy]]></wp:comment_author>
<wp:comment_author_email>daluxe@inode.at</wp:comment_author_email>
<wp:comment_author_url>http://www.seo-rookies.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-07-15 15:40:14</wp:comment_date>
<wp:comment_date_gmt>2008-07-15 13:40:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hmm... unsere Freundinnen sind vom selben Hersteller :D:D

Und ja... das kann ich... aufessen, aufstehen, zahlen und gehen lautet die Devise beim Salut... eigentlich traurig]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>752</wp:comment_id>
<wp:comment_author><![CDATA[Horst]]></wp:comment_author>
<wp:comment_author_email>zerok@zerokspot.com</wp:comment_author_email>
<wp:comment_author_url>http://zerokspot.com/</wp:comment_author_url>
<wp:comment_author_IP>143.205.176.60</wp:comment_author_IP>
<wp:comment_date>2008-07-13 19:48:49</wp:comment_date>
<wp:comment_date_gmt>2008-07-13 17:48:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Tech and restaurant recommendations IMO mix quite well ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>753</wp:comment_id>
<wp:comment_author><![CDATA[Klagenfurt]]></wp:comment_author>
<wp:comment_author_email>admin@klagenfurt.co.uk</wp:comment_author_email>
<wp:comment_author_url>http://www.klagenfurt.co.uk</wp:comment_author_url>
<wp:comment_author_IP>85.126.42.146</wp:comment_author_IP>
<wp:comment_date>2008-07-14 09:01:09</wp:comment_date>
<wp:comment_date_gmt>2008-07-14 07:01:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well I have never tried the Chinese restaurant in Klagenfurt. I always prefer Pizza Diavolo or Wiener Schnitzel. :-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Validation Controls in ASP.NET</title>
<link>http://www.tigraine.at/2008/07/15/validation-controls-in-aspnet/</link>
<pubDate>Tue, 15 Jul 2008 16:14:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/15/validation-controls-in-aspnet/</guid>
<description></description>
<content:encoded><![CDATA[<p>So, yesterday I noticed something funny while doing some data-driven ASP.NET programming.</p>  <p>There are those really great Validation controls that really reduce the amount of code you need to write on average input forms.</p>  <p>So, imagine you have quite usual code like this:</p>  <div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:890ede4d-3b1a-4e0e-8487-da100c692dff" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;asp:TextBox runat="server" ID="MyTextbox"&gt;&lt;/asp:TextBox&gt;&lt;br /&gt;
&lt;asp:RequiredFieldValidator ControlToValidate="MyTextbox" runat="server"&gt;&lt;br /&gt;
&#160;&#160;&#160;&#160;Textbox shouldn't be empty
&lt;/asp:RequiredFieldValidator&gt;

&lt;asp:Button runat="server" Text="Submit" OnClick="Submit_Click" /&gt;
</pre></div>

<p>This will result in a simple form with a textbox and a submit button. The handler code for the button looks like this:</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:94cf234c-c42b-4386-80bc-27d10f718463" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public void Submit_Click(object sender, EventArgs e)
{
&#160;&#160;&#160;&#160;this.Title = "Hello World";
}
</pre></div>

<p>Now, if you click on the button while leaving the textbox blank, you'll see the red message that the field needs to be filled.</p>

<p>If you disable Javascript in your browser, the handler code will get executed without getting validated!</p>

<p>Actually, the validation is done solely on the client if you don't manually check for the Page.isValid property on the Webform.</p>

<p>So, here is the revised handler code:</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9b394bb9-7ed0-4bc6-8937-d6302720bea4" style="padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public void Submit_Click(object sender, EventArgs e)
{
&#160;&#160;&#160;&#160;if (this.IsValid)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.Title = "Hello World";
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>This isn't something unknown, MSDN points it out on some occasions. But yet, something you might overlook too easily.</p>

<p>Keep this in mind when working with validator controls, hope this helps!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>341</wp:post_id>
<wp:post_date>2008-07-15 18:14:53</wp:post_date>
<wp:post_date_gmt>2008-07-15 16:14:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>validation-controls-in-aspnet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Session handling in ASP.NET</title>
<link>http://www.tigraine.at/2008/07/17/session-handling-in-aspnet/</link>
<pubDate>Wed, 16 Jul 2008 22:27:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/17/session-handling-in-aspnet/</guid>
<description></description>
<content:encoded><![CDATA[<p>Often you need to save data to a user-central location (something like a global variable <em>per user</em>) and you immediately think of the session as the perfect place to store that data.    <br />So you have this just retrieved user-id and you go:</p>  <p>   <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e759ddab-e086-4545-8268-16c951fc9700" class="wlWriterSmartContent"><pre name="code" class="csharp">
Session["userid"] = userid;
</pre></div>
</p>

<p>And this works perfectly fine, ASP.NET will take care of the cookie handling etc while you can conveniently read from this field from now on.
  <br />But, there is one catch (as always):</p>

<p>Accessing session data is a very error prone process and should never left to the business code itself. Whenever a session times out you'll get NullPointerExceptions cluttered throughout your application (because reading from Session[&quot;userid&quot;] will quietly return null if the session isn't there or got lost).
  <br />Working directly with the session also robs you of all the type-checking goodness we are all used to from .NET, so you may get some InvalidCastExceptions while accessing your objects too. 

  <br />And, whenever you call Session[&quot;useid&quot;] you're risking spelling mistakes what would lead to completely bogus data. </p>

<p>So, I hope you get my point, working with the session object directly is really nothing you'd want to do over and over again (and therefore risking errors every time). 
  <br />It's usually much better to centralize this in one spot and test that well. 

  <br />And centralizing this can be easily done through creating a custom class for this that will not only keep the session object away from you, but also provide you type-safe access to your data.</p>

<p>I suggest starting off with the session data object that we will use to store our data in:</p>

<div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4f1e44e4-5cd8-4a7d-b43c-358ae45ee51c" class="wlWriterSmartContent"><pre name="code" class="csharp">
[Serializable()]
public class UserSessionData
{
&#160;&#160;&#160;&#160;public int UserId
&#160;&#160;&#160;&#160;{ get; set; }
}
</pre></div>

<p>Notice that I've put the Serializable() attribute onto the class so if you want to store the session in a state server or in sql server the CLR knows how to serialize the object and store it.
  <br />The whole object is solely responsible for keeping our UserId, nothing more nothing less.</p>

<p>And now we need to store this object in the session, for that purpose we could just incorporate static methods into the class that would retrieve and set the object to the current session.
  <br />Because we're working with ASP.NET here we want this UserSessionData to be accessible from within our ASP.NET Webform so it's pretty cool to just subclass Web.UI.Page and use it afterwards as the base class for our Webforms:</p>

<div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:212c3ca8-17a0-49de-b856-f2f7e99af664" class="wlWriterSmartContent"><pre name="code" class="csharp">
public class SessionHandler : System.Web.UI.Page
{
&#160;&#160;&#160;&#160;private const string SESSION_NAME = "UserSession";
&#160;&#160;&#160;&#160;public UserSessionData SessionData
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UserSessionData sessionData = (UserSessionData)Session[SESSION_NAME];
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (sessionData != null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return sessionData;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new Exception("Could not retrieve session state");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;set
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Session[SESSION_NAME] = value;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now we only need to open our code-behind file and change it's superclass from Page to our SessionHandler (that just wraps Page):</p>

<div style="padding-right: 0px; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:be6aa766-1006-4706-ac4b-6b0cdeb5a21f" class="wlWriterSmartContent"><pre name="code" class="csharp">
public partial class _Default : SessionHandler
{
&#160;&#160;&#160;&#160;protected void Page_Load(object sender, EventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.Title = this.SessionData.UserId.ToString();
&#160;&#160;&#160;&#160;}&#160;&#160; 
}
</pre></div>

<p>Now whenever you need to read the UserId there is this neat property called SessionData that knows all about your user, while you don't need to do any is-null checks any more in your code, that's all handled by the SessionHandler class when accessing the session object :).</p>

<p>Hope this helps!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>342</wp:post_id>
<wp:post_date>2008-07-17 00:27:23</wp:post_date>
<wp:post_date_gmt>2008-07-16 22:27:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>session-handling-in-aspnet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rant: Visual Studio injecting Ids to absolutely everything!</title>
<link>http://www.tigraine.at/2008/07/18/rant-visual-studio-injecting-ids-to-absolutely-everything/</link>
<pubDate>Fri, 18 Jul 2008 12:14:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/18/rant-visual-studio-injecting-ids-to-absolutely-everything/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ha, the weekends almost in and I'm readying myself to get afk for some days.    <br />But not before I've complained about how stupid Visual Studio gets when you're handling ASP.NET Tables!</p>  <p>Whenever something has a runat=&quot;server&quot; tag Visual Studio wants to attach an ID to it.    <br />But there is no point to attach IDs to <u>every cell/row in table</u>!</p>  <p>So, if you're writing everything by hand, you don't need to specify the ID attribute, so everything is fine. But once you want to copy&amp;paste that code, Visual Studio will instantly attach IDs to everything (with meaningful names as &quot;Table1, TableRow1&quot; etc..), and that's something I find very annoying when having to create large forms or something like that.</p>  <p>I mean, you have code like this:</p>  <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e61e6cbb-e0bb-48c4-8041-fc93d09a3df0" class="wlWriterSmartContent"><pre name="code" class="xml">
&lt;asp:Table runat="server"&gt;
&#160;&#160;&#160;&#160;&lt;asp:TableRow runat="server"&gt;&lt;/asp:TableRow&gt;
&lt;/asp:Table&gt;
</pre></div>

<p>and once you hit CRTL+V it get's obscured like this:</p>

<p></p>

<div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f1ad9800-f343-4481-b047-af923158c388" class="wlWriterSmartContent"><pre name="code" class="xml">
&lt;asp:Table ID="Table1" runat="server"&gt;
&#160;&#160;&#160;&#160;&lt;asp:TableRow ID="TableRow1" runat="server"&gt;&lt;/asp:TableRow&gt;
&lt;/asp:Table&gt;
</pre></div>

<p></p>

<p>Now, being a thoughtful developer who likes tidy markup, I'm now going to remove these useless Ids from my code once again.</p>

<p>Oh, and did I mention that this also happens when you cut&amp;paste? Nothing is more annoying than getting IDs injected when you're reordering table rows.</p>

<p>There is merit to the idea when you are copy&amp;pasting real controls that have IDs attached, so you don't accidentally find yourself with multiple controls with the same ID. But when there is no ID attached to the code you're having in the clipboard, Visual Studio shouldn't be putting it in there.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>343</wp:post_id>
<wp:post_date>2008-07-18 14:14:26</wp:post_date>
<wp:post_date_gmt>2008-07-18 12:14:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rant-visual-studio-injecting-ids-to-absolutely-everything</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1087</wp:comment_id>
<wp:comment_author><![CDATA[ID injection can be stopped! | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/09/02/id-injection-can-be-stopped/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-09-02 10:28:11</wp:comment_date>
<wp:comment_date_gmt>2008-09-02 08:28:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] man, I was complaining about it and going nuts on this. But looks like I&#8217;ve found the solution (while having another more [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The comfort of not working with real data</title>
<link>http://www.tigraine.at/2008/07/28/the-comfort-of-not-working-with-real-data/</link>
<pubDate>Mon, 28 Jul 2008 09:19:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/28/the-comfort-of-not-working-with-real-data/</guid>
<description></description>
<content:encoded><![CDATA[<p>I am very fortunate to have been working on many projects that started from scratch, so I never had to deal with pre-existing databases and structures.   <br />Although this fact makes it easier to create a good architecture, you'll find yourself constantly inserting some bogus data into the database to be able to test the application.     <br />And usually you'll wipe your database clean once you're ready for release and forget all about that data.</p>  <p><strong>Don't do that</strong>. It won't cost you a thing to export the test data to a SQL and have it handy in case you're ever going back to the application to change something.</p>  <p>Let's say your app was performing great and you now have 2000 users using it. Going back brings forth some problems:</p>  <ul>   <li>User data is subject to privacy laws and cannot be handled freely.</li>    <li>Working on the real database is always stupid (remember when you didn't include a WHERE clause to a update statement?)</li>    <li>Washing real user data clean of all private information is sometimes quite difficult.</li>    <li>Huge amounts of data make detecting errors more difficult.</li> </ul>  <p>Privacy laws may be the most important point in the above list I think. If you're working on the real dataset you're in trouble once you want to outsource the development or bring in new people to the team. They'll have to sign a NDA and even under a NDA they could make the mistake of disclosing this information without their knowledge (most NDAs don't pass on liability in such cases, in that case you're now facing two legal problems. Sue your programmer and get sued by privacy advocates).</p>  <p>Not taking such risks is usually the better choice! By using your bogus development database you'll be easily able to verify behavior while having the luxury of being able to freely bring in new members to the team (mind your IP). </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>344</wp:post_id>
<wp:post_date>2008-07-28 11:19:47</wp:post_date>
<wp:post_date_gmt>2008-07-28 09:19:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-comfort-of-not-working-with-real-data</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Snappy Windows Recovery</title>
<link>http://www.tigraine.at/2008/07/29/snappy/</link>
<pubDate>Tue, 29 Jul 2008 18:14:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=345</guid>
<description></description>
<content:encoded><![CDATA[<p>Do you remember those times when you where reinstalling your OS every two weeks? Those dark Windows 98 times that have thankfully passed away?   <br />I don't shed tears when remembering the days of old, but mainly because Windows doesn't need reinstallation every two weeks any more.</p>  <p>To be honest, back when I was using Windows XP: I was rarely using any restore options, because they hardly ever worked the way I wanted them.   <br />Thankfully the system wasn't as easy to break as the 9x family (love NT for that), but still when something went terribly wrong I was pretty quick in digging up those XP cds and re-doing the system (guess that's what we were used to :)).</p>  <p>So, yesterday I unboxed my sweet new <a href="http://www.dell.com/content/products/productdetails.aspx/xpsnb_m1330?c=us&amp;cs=19&amp;l=en&amp;s=dhs">Dell XPS M1330</a> laptop and immediately started setting it up. Configuring Vista for the first time, getting Office, Windows Live and Visual Studio 2008 on the machine - all that stuff you don't want to be doing too often.    <br />I also immediately downloaded .NET 3.5 SP1 and VS2008 SP1 (both beta), because I really liked some of the new IDE features.</p>  <p>Upon .NET 3.5 SP1 installation things went bad.. I mean, really bad.</p>  <p>Visual Studio didn't start up any more, .NET programs compiled against the 2.0 runtime refused to work any more (my pre-installed Dell Dock application).   <br />I tried the obvious, uninstall SP1, repair 3.5.</p>  <p>Now, when even the setups don't start up any more, you usually flip out your OS Cds and think about reinstalling.</p>  <p>But, I thought, I could give Vista's recovery a try and searched for available recovery points.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2008/07/image7.png"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="467" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb8.png" width="584" border="0" /></a></p>  <p>And tada, there they where. Almost everything I installed added a recovery point to the system and I even had the luxury of choosing to what app I want to restore my system to - great!</p>  <p>10 Minutes after starting the recovery I was up and running again, having absolutely 0 problems! Perfect.   <br />I even reinstalled Visual Studio 2008 and everything works just fine.</p>  <p>So I guess reinstalling Windows is completely out for now. When there are restore options available like this, I don't think I'll be ever reinstalling anything any more.</p>  <p>Oh, and I think I won't try the .NET 3.5 SP1 beta again, let's see when it gets to final. The new additions to the framework are pretty minor, but the updates to the IDE are definitely worth it.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>345</wp:post_id>
<wp:post_date>2008-07-29 20:14:25</wp:post_date>
<wp:post_date_gmt>2008-07-29 18:14:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>snappy</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1217356410</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/07/29/snappy/imagepng-2/</link>
<pubDate>Tue, 29 Jul 2008 18:33:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>346</wp:post_id>
<wp:post_date>2008-07-29 20:33:00</wp:post_date>
<wp:post_date_gmt>2008-07-29 18:33:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>345</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:580;s:6:"height";i:463;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image7-300x239.png";s:5:"width";i:300;s:6:"height";i:239;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/07/29/snappy/image-thumbpng-2/</link>
<pubDate>Tue, 29 Jul 2008 18:33:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>347</wp:post_id>
<wp:post_date>2008-07-29 20:33:02</wp:post_date>
<wp:post_date_gmt>2008-07-29 18:33:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>345</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/07/image-thumb8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:584;s:6:"height";i:467;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/07/image-thumb8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb8-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb8-300x239.png";s:5:"width";i:300;s:6:"height";i:239;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Good design leads to problems</title>
<link>http://www.tigraine.at/2008/07/30/good-design-leads-to-problems/</link>
<pubDate>Wed, 30 Jul 2008 17:42:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/30/good-design-leads-to-problems/</guid>
<description></description>
<content:encoded><![CDATA[<p>Bad design is in most cases the result of people not knowing better, and while I am constantly struggling to learn more about good architecture design I sometimes feel like: How in the hell can I ever make this work inside of ASP.NET?</p>  <p>I mean, most &quot;good&quot; things like IOC, TDD, information hiding, separation of concerns etc all rely on you having total control over your classes.</p>  <p>But, that's something you can only achieve in ASP.NET by throwing a whole bunch of code at things that would have worked effortless without the &quot;good&quot; stuff.</p>  <p>Best example of this may be simple ASP.NET pages that come with Request, Response and Context objects that cannot be swapped out as easily.    <br />Now your usual course of action to keep your code testable would be to simply put the business code into underlying classes that then get called by the untestable ASP.NET page. But, this now leads to the problem that I can't really use the full power of ASP.NET any more, SqlDataSource has just gotten off limits, because we don't want to expose our data access layer to the application (or at least try to avoid that). </p>  <p>So, because comprehensive data binding just left the building, what did we get for our good design?    <br />We just got the even bigger task at hand to do databinding by hand. And now we are even more in trouble than we were with the untestable app, because now we will find ourselves writing even more code we need to test even more. </p>  <p>You see what I'm getting at? If we would have been using data binding, we could have just relied on working, well tested code (hey that's what Microsoft for!), without the hassle to reinvent the wheel again and being concerned with the wheel's quality.</p>  <p>So, I still can't offer a suitable solution for this dilemma, maybe use object-data-source a lot more? But what about update support? I'll be looking into this topic and when I've come up with something I'll let you know.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>348</wp:post_id>
<wp:post_date>2008-07-30 19:42:58</wp:post_date>
<wp:post_date_gmt>2008-07-30 17:42:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>good-design-leads-to-problems</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Do the simplest thing you can get away with</title>
<link>http://www.tigraine.at/2008/07/31/do-the-simplest-thing-you-can-get-away-with/</link>
<pubDate>Thu, 31 Jul 2008 11:45:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/31/do-the-simplest-thing-you-can-get-away-with/</guid>
<description></description>
<content:encoded><![CDATA[<p>So, yesterday I was talking to a customer about a new project I will be developing over the next month or so.    <br />And half way through the project (revamping a legacy system), I was asked if I could insert sorting into a statistical grid view. </p>  <p>I immediately started thinking about using a ASP.NET grid view control with sorting and paging capabilities enabled. But just before I could open my mouth, it hit me: Why in the heck should I do something that stupid? </p>  <p>My customer isn't only good at using Excel, these guys are traders! They probably know better how to do sorting in Excel than I know how to do it in ASP.NET!</p>  <p>So, because this grid was filled through some pretty complex selection criteria, why in the hell wasn't my first idea to simply give them a CSV list with <strong>all </strong>the data they need and let them do it themselves. </p>  <p>This solution isn't only superior for the customer, it's also much better for me because code you don't write can't break! Excel is giving my customer all the things he otherwise would demand from my application, with added benefits like pie charts and custom functions. Why should I even bother to take on this?</p>  <p><strong>The smartest code is no code at all!</strong></p>  <p>If you can get away without writing code, do it immediately. Every line you write less is one you don't have to care about later.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>349</wp:post_id>
<wp:post_date>2008-07-31 13:45:11</wp:post_date>
<wp:post_date_gmt>2008-07-31 11:45:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>do-the-simplest-thing-you-can-get-away-with</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Subnetting is good</title>
<link>http://www.tigraine.at/2008/07/31/subnetting-is-good/</link>
<pubDate>Thu, 31 Jul 2008 11:46:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/07/31/subnetting-is-good/</guid>
<description></description>
<content:encoded><![CDATA[<p>Still on the train from Vienna to Klagenfurt, I'm listening to RunAs radio (yeah, I'm running out of DNR episodes) and just listened to the talk about IPv6 and how the big address space can simplify networking by removing the need for subnetting as we know it today.</p>  <p>And, I'm really curious if this is a good thing from a simplicity perspective. I mean, ok maybe my ISP is giving me 4 bits of address space in the future so I don't need my own personal router and subnet, but that would also mean that every computer in my network is directly attached to the Internet making it a necessity to have all machines (ok, that should be standard anyway) run latest and best protection software, having all patches up and being just as secure as my DMZ servers would have been before.</p>  <p>And that's something I don't see happening any time soon. I trust myself to have my laptop and desktop patched and secure, but I simply don't want to waste the time to do so on my father's PC, my brothers etc..    <br />I simply want to rely on that they are somewhat secured through simply not being publicly available through the Internet because my router isn't forwarding any ports to them that could be exploited.</p>  <p>So, although I really think the new network stack in Vista and 2008 is a huge step forward and network performance for me has increased with the use of v6. I still don't think that subnets <em>should </em>go away anytime soon.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>350</wp:post_id>
<wp:post_date>2008-07-31 13:46:05</wp:post_date>
<wp:post_date_gmt>2008-07-31 11:46:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>subnetting-is-good</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/08/03/confusing-ui/imagepng-2/</link>
<pubDate>Sun, 03 Aug 2008 18:27:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/08/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>351</wp:post_id>
<wp:post_date>2008-08-03 20:27:11</wp:post_date>
<wp:post_date_gmt>2008-08-03 18:27:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>352</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/08/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:378;s:6:"height";i:109;s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x109.png";s:5:"width";i:150;s:6:"height";i:109;}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x86.png";s:5:"width";i:300;s:6:"height";i:86;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Confusing UI</title>
<link>http://www.tigraine.at/2008/08/03/confusing-ui/</link>
<pubDate>Sun, 03 Aug 2008 18:27:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/08/03/confusing-ui/</guid>
<description></description>
<content:encoded><![CDATA[<p>After getting myself a new Dell XPS M1330 laptop, I thought it would be cool to have a Bluetooth mouse that could also serve as a presenter. </p>  <p><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="109" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/08/image.png" width="378" border="0" /></p>  <p>So I got the Microsoft Presenter Mouse 8000. After opening the control panel I was presented with the above display.</p>  <p>It's in German so I'll translate:</p>  <blockquote>   <p>Current power source: Battery     <br />Remaining Energy for: 1%.</p> </blockquote>  <p>Ok I just unboxed the whole thing, why I ended up with a 1% charge - I don't know.&#160; </p>  <p>But, what really bugs me is: This UI is pretty meaningless to me. I mean, if my battery is low, why isn't anything red? Why in the hell doesn't the driver alert me that my battery is low? And, the top line has to be the most useless thing I've ever seen anywhere ever. This is a Bluetooth mouse that has only one way of getting power: battery. And they really tell me that it's running off battery?   <br />And the image of the battery doesn't help either. Does gray mean full, or maybe empty? Is the color for full green? I would expect it, but it's not obvious. </p>  <p>Finally, the accuracy and reception really sucks right now. I hope this is for the low battery, but still I don't understand why the driver isn't alerting me that I need to replace my battery.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>352</wp:post_id>
<wp:post_date>2008-08-03 20:27:12</wp:post_date>
<wp:post_date_gmt>2008-08-03 18:27:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>confusing-ui</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Precompiled deployment in ASP.NET</title>
<link>http://www.tigraine.at/2008/08/07/precompiled-deployment-in-aspnet/</link>
<pubDate>Thu, 07 Aug 2008 14:07:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=353</guid>
<description></description>
<content:encoded><![CDATA[<p>The usual deployment of as ASP.NET web app is just a basic FTP upload of everything you have in your solution. The whole aspx and aspx.cs stuff that you can then edit and change on the server.</p>  <p>All the source (except for class libraries) is fully available and visible on the server, so if your customer is like mine you're destined to see some self-patched applications appear over time.</p>  <p>This doesn't only hurt revenue, but it also brings some serious version issues when you get tasked with changes afterwards.</p>  <p>So, sometimes it's important to lock your customer out of their app (yeah, that sounds evil doesn't it?). And that is where ASP.NET has a neat feature in place called &quot;<strong>Precompiled deployment</strong>&quot;.</p>  <p><img style="float: left" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/08/image1.png" width="274" height="169" /> You just go into Visual Studio and select your Project, click Publish Web Site and follow the wizard.     <br />You can select to directly deploy the page to a server via FTP etc, or to just put it onto your file system. </p>  <p>If you open the folder afterwards you will see that some files have gone missing :).</p>  <p>&#160;</p> <div style="clear: both">&nbsp;</div>  <p><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/08/image2.png" width="410" height="103" /> </p>  <p>All .cs (or .vb) files are gone and a new (randomly named) library has appeared in your bin\ folder that contains a compiled version of your .cs files.</p>  <p>Also, you need to note that precompiling your application is something that will <strong>not </strong>significantly speed up your website performance. If you just deploy the .cs files to the server they will still get compiled to IL code and run just as fast as the precompiled version you deployed binary.     <br />What get's speeded up is the startup process of your application, because compilation takes place when the first request gets served.</p>  <p>I guess it's safe to say that if you see a somewhat significant improvement in performance through precompiling, your app is somewhere broken or should be broken into smaller chunks. Compiling code shouldn't take long on today's hardware, and if you end up with folders with thousands of thousands of files, you're in trouble anyway. (The server compiles your .cs files per folder when the first request gets served)</p>  <p>Finally, although there is a compiled library out there doesn't mean your customer can't change it at all. He could still go out and decompile your dll, change his stuff and recompile it. But if he's that smart, he probably deserves to change it anyway.    <br />(To really protect your IP you should look for Obfuscators)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>353</wp:post_id>
<wp:post_date>2008-08-07 16:07:11</wp:post_date>
<wp:post_date_gmt>2008-08-07 14:07:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>precompiled-deployment-in-aspnet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/08/07/precompiled-deployment-in-aspnet/imagepng-2/</link>
<pubDate>Thu, 07 Aug 2008 14:29:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/08/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>354</wp:post_id>
<wp:post_date>2008-08-07 16:29:56</wp:post_date>
<wp:post_date_gmt>2008-08-07 14:29:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>353</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/08/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:274;s:6:"height";i:169;s:14:"hwstring_small";s:23:"height='78' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/08/07/precompiled-deployment-in-aspnet/imagepng-3/</link>
<pubDate>Thu, 07 Aug 2008 14:29:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/08/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>355</wp:post_id>
<wp:post_date>2008-08-07 16:29:56</wp:post_date>
<wp:post_date_gmt>2008-08-07 14:29:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>353</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/08/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:410;s:6:"height";i:103;s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/08/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x103.png";s:5:"width";i:150;s:6:"height";i:103;}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x75.png";s:5:"width";i:300;s:6:"height";i:75;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Inline Styles aren&#039;t all that evil</title>
<link>http://www.tigraine.at/2008/08/21/inline-styles-arent-all-that-evil/</link>
<pubDate>Thu, 21 Aug 2008 13:05:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/08/21/inline-styles-arent-all-that-evil/</guid>
<description></description>
<content:encoded><![CDATA[<p>Everyone who did some web stuff and had to do some HTML had fun with the style=&quot;&quot; tag.   <br />It's the simplest way to change the appearance of something and also very intuitive (right at the point where you want the change to happen). So, everyone of us is sometimes hacking some style=&quot;&quot; stuff from time to time ;). </p>  <p>You usually continue to do so until the whole thing backlashes and you have absolutely unreadable code because every &lt;div&gt; tag is 3 lines long and you can't distinguish between style and markup.   <br />So, that's the point where we all learned: <strong>Inline Styles are evil!</strong></p>  <p>Now, while reading some RSS feeds today I discovered that inline styles aren't completely useless nowadays. Especially in times of RSS content syndication, sometimes it's very important to attach the style to the markup, so your markup remains readable at the external source.    <br />Most RSS readers don't strip the inline CSS markup, and you may very well use this to format your feed accordingly. E.g. images that should be floated don't look good in a feed reader if they break the article they should illustrate, so attaching the &quot;float: left; margin-right: 10px;&quot; isn't too obscuring, but helps your readers a lot.</p>  <p>So, although inline styles really contradicts the <a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY principle</a>, sometimes it's cool to use them for syndication reasons.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>356</wp:post_id>
<wp:post_date>2008-08-21 15:05:36</wp:post_date>
<wp:post_date_gmt>2008-08-21 13:05:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>inline-styles-arent-all-that-evil</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Visual Studio and .NET 3.5 SP1 released</title>
<link>http://www.tigraine.at/2008/08/26/visual-studio-and-net-35-sp1-released/</link>
<pubDate>Tue, 26 Aug 2008 10:36:27 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/08/26/visual-studio-and-net-35-sp1-released/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, this is old news to some. But mainly because the beta has been around for quite some time and Scott Guthrie didn't make an official announcement on this.    <br />So, although it slipped my attention (some Download Notification letter brought it to my attention), you should definitely check out the SP1.</p>  <p>It's more than just the usual bugfix SP1 that came out of Redmond this time. The feature list is pretty impressive, and they incorporated RTM versions of Astoria and Entity Framework!</p>  <p>For the feature list of the Visual Studio SP1 (<a href="http://msdn.microsoft.com/en-us/vstudio/products/cc533447.aspx">source</a>):</p>  <blockquote> <ul>   <ul>     <ul>       <li>Improved WPF designers </li>        <li>SQL Server 2008 support </li>        <li>ADO.NET Entity Designer </li>        <li>Visual Basic and Visual C++ components and tools (including an MFC-based Office 2007 style &#8216;Ribbon&#8217;) </li>        <li>Visual Studio Team System Team Foundation Server (TFS) addresses customer feedback on version control usability and performance, email integration with work item tracking and full support for hosting on SQL Server 2008 </li>        <li>Richer JavaScript support, enhanced AJAX and data tools, and Web site deployment improvements </li>     </ul>   </ul> </ul> </blockquote>  <p>And the features of .NET Framework 3.5 SP1:</p>  <blockquote> <ul>   <li>Performance increases between 20-45% for WPF-based applications &#8211; without having to change any code </li>    <li>WCF improvements that give developers more control over the way they access data and services </li>    <li>Streamlined installation experience for client applications </li>    <li>Improvements in the area of data platform, such as the ADO.NET Entity Framework, ADO.NET Data Services and support for SQL Server 2008&#8217;s new features </li> </ul> </blockquote>  <p>So, I've been using the beta for some time now, and can't live without it any more. Go and get SP1, it really delivers on many things (like the C# background compiler in Visual Studio):</p>  <p><a href="http://msdn.microsoft.com/de-de/vstudio/cc533448(en-us).aspx">Visual Studio 2008 Service Pack 1 and .NET Framework 3.5 SP1 Download</a></p>  <p>Btw: you don't need to download .NET 3.5 SP1 if you're already installing VS2008 SP1. The VS2008 SP1 setup installed .NET 3.5 with it.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>357</wp:post_id>
<wp:post_date>2008-08-26 12:36:27</wp:post_date>
<wp:post_date_gmt>2008-08-26 10:36:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>visual-studio-and-net-35-sp1-released</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>First steps with Ubiquity</title>
<link>http://www.tigraine.at/2008/08/27/first-steps-with-ubiquity/</link>
<pubDate>Wed, 27 Aug 2008 20:09:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/08/27/first-steps-with-ubiquity/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, I was bored and so I looked a bit into the <a href="https://wiki.mozilla.org/Labs/Ubiquity/Ubiquity_0.1_Author_Tutorial#Sharing_it_with_the_World">Ubiquity author tutorials</a>. The result is a pretty simple command that searches <a href="http://www.wowhead.com">WoWhead</a> for the given noun.</p>  <p>I don't think it's really ready yet. Live previews would be cool.   <br />Still, you can grab it here if you have <a href="http://www.google.com/url?sa=t&amp;source=web&amp;ct=res&amp;cd=6&amp;url=http%3A%2F%2Flabs.mozilla.com%2F2008%2F08%2Fintroducing-ubiquity%2F&amp;ei=2q-1SObIIpWi0gXshs3qCA&amp;usg=AFQjCNFPxWLQ04mkQjde7rY7uG7vGLoYcw&amp;sig2=GGaCJg_pxXVi65NWFbMOEw">Ubiquity</a>.</p>  <p>Download: <a href="http://www.tigraine.at/ubiquity/wowheadSearch.htm">WoWhead Search command</a>    <br />(please bear with the page, it's just a placeholder)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>358</wp:post_id>
<wp:post_date>2008-08-27 22:09:11</wp:post_date>
<wp:post_date_gmt>2008-08-27 20:09:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>first-steps-with-ubiquity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1084</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-08-28 22:53:56</wp:comment_date>
<wp:comment_date_gmt>2008-08-29 03:53:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Testcomment]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1106</wp:comment_id>
<wp:comment_author><![CDATA[gargouri2001]]></wp:comment_author>
<wp:comment_author_email>gargouri2001@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.90.233.107</wp:comment_author_IP>
<wp:comment_date>2008-10-14 18:49:14</wp:comment_date>
<wp:comment_date_gmt>2008-10-14 23:49:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Nice write up and blog , Thanks for sharing all those good info<br><br>best regards<br>John<br><a href="http://thenewsempire.com/Technologies/">http://thenewsempire.com/Technologies/</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/09/02/id-injection-can-be-stopped/imagepng-2/</link>
<pubDate>Tue, 02 Sep 2008 08:28:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>359</wp:post_id>
<wp:post_date>2008-09-02 10:28:07</wp:post_date>
<wp:post_date_gmt>2008-09-02 08:28:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>360</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:747;s:6:"height";i:428;s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x171.png";s:5:"width";i:300;s:6:"height";i:171;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ID injection can be stopped!</title>
<link>http://www.tigraine.at/2008/09/02/id-injection-can-be-stopped/</link>
<pubDate>Tue, 02 Sep 2008 08:28:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/09/02/id-injection-can-be-stopped/</guid>
<description></description>
<content:encoded><![CDATA[<p>Oh man, I was <a href="http://www.tigraine.at/2008/07/18/rant-visual-studio-injecting-ids-to-absolutely-everything/">complaining about it</a> and going nuts on this. But looks like I've found the solution (while having another more annoying problem):</p>  <p><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="428" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/09/image.png" width="747" border="0" /></p>  <p>See it? That box over there saying: Auto ID elements on paste in Source view? Man, I knew this setting has to be somewhere!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>360</wp:post_id>
<wp:post_date>2008-09-02 10:28:08</wp:post_date>
<wp:post_date_gmt>2008-09-02 08:28:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>id-injection-can-be-stopped</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/09/04/ankhsvn-20-subversion-client-for-visual-studio/imagepng-2/</link>
<pubDate>Thu, 04 Sep 2008 00:15:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>361</wp:post_id>
<wp:post_date>2008-09-04 02:15:48</wp:post_date>
<wp:post_date_gmt>2008-09-04 00:15:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>362</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:281;s:6:"height";i:301;s:14:"hwstring_small";s:22:"height='96' width='89'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image1-280x300.png";s:5:"width";i:280;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>AnkhSVN 2.0 Subversion client for Visual Studio</title>
<link>http://www.tigraine.at/2008/09/04/ankhsvn-20-subversion-client-for-visual-studio/</link>
<pubDate>Thu, 04 Sep 2008 00:15:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Subversion]]></category>

		<category domain="category" nicename="subversion"><![CDATA[Subversion]]></category>

		<category domain="tag"><![CDATA[AnkhSVN]]></category>

		<category domain="tag" nicename="ankhsvn"><![CDATA[AnkhSVN]]></category>

		<category domain="tag"><![CDATA[Open Source]]></category>

		<category domain="tag" nicename="open-source"><![CDATA[Open Source]]></category>

		<category domain="tag"><![CDATA[Source Control]]></category>

		<category domain="tag" nicename="source-control"><![CDATA[Source Control]]></category>

		<category domain="tag"><![CDATA[Subversion]]></category>

		<category domain="tag" nicename="subversion"><![CDATA[Subversion]]></category>

		<category domain="tag"><![CDATA[Visual Studio]]></category>

		<category domain="tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=362</guid>
<description></description>
<content:encoded><![CDATA[<p>I <a href="http://www.tigraine.at/2008/07/02/source-control-open-source-and-microsoft/">complained before</a> that Visual Studio has no built in support for Subversion, as SVN is currently one of the most common source control choices for open source projects.</p>  <p>One commenter pointed me towards AnkhSVN as a source control provider, but I wasn't working on anything involving SVN so I didn't install AnkhSVN right away - I should have done!</p>  <p><strong>AnkhSVN 2.0 is exactly what I was looking for!      <br /></strong>I installed it and it integrated itself very nicely with Visual Studio. Not acting as a AddIn but as a source control provider similar to Visual Source Safe. </p>  <p><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-bottom: 10px; margin-right: 10px; border-right-width: 0px" height="301" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/09/image1.png" width="281" border="0" /></p>  <p>So it hooks itself into your solution explorer, showing you the file status within Visual Studio</p>  <p>You can open projects directly from Subversion, and the Pending Changes window helps in keeping track of what changes need to be committed to the SVN (never forget to commit your .csproj file after adding files to your project ;)).</p>  <p>Overall, AnkhSVN works very well and the UI is clean and does what you'd expect from your Subversion client, and it's good integration into Visual Studio helps. No more exception list hacking for file-based clients like Tortoise SVN.</p>  <p style="clear: both">As with most open source software, AnkhSVN is still work in progress, and I've already found <a href="http://ankhsvn.open.collab.net/issues/show_bug.cgi?id=495">some bugs</a>. But if this project continues to evolve I think we have a really powerful tool at our hands!</p>  <p>So, if you want to try it for yourself (strongly suggested), go and grab the latest release (I suggest installing the daily build) from the <a href="http://ankhsvn.open.collab.net/">AnkhSVN project site</a>.     <br />If you find any bugs while using the tool, please make sure to tell the developers. Their <a href="http://ankhsvn.open.collab.net/servlets/ProjectIssues">issue tracker</a> sucks, you'll need to register and request access to the tracker (but they are pretty fast in granting access).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>362</wp:post_id>
<wp:post_date>2008-09-04 02:15:53</wp:post_date>
<wp:post_date_gmt>2008-09-04 00:15:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ankhsvn-20-subversion-client-for-visual-studio</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1220487380</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1327</wp:comment_id>
<wp:comment_author><![CDATA[Sourcecontrol and Databases, when ORM comes in handy | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/10/30/sourcecontrol-and-databases-when-orm-comes-in-handy/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-10-30 13:27:19</wp:comment_date>
<wp:comment_date_gmt>2008-10-30 11:27:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] encourage every one (even single developers) to use a Sourcecontrol system such as SVN and AnkhSVN to do development. Put all your project files (and external dependencies) under source control and [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3498</wp:comment_id>
<wp:comment_author><![CDATA[of mesothelioma]]></wp:comment_author>
<wp:comment_author_email>michaelbrooklyn@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://of-mesothelioma.info/</wp:comment_author_url>
<wp:comment_author_IP>202.164.211.10</wp:comment_author_IP>
<wp:comment_date>2010-08-01 21:49:46</wp:comment_date>
<wp:comment_date_gmt>2010-08-02 02:49:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[We appreciate the mention, Melanie. And bravo on a well-written article.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3500</wp:comment_id>
<wp:comment_author><![CDATA[bankruptcy lawyer new york]]></wp:comment_author>
<wp:comment_author_email>jimmyjenkinsray@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://storobinspodek.com/</wp:comment_author_url>
<wp:comment_author_IP>202.164.211.10</wp:comment_author_IP>
<wp:comment_date>2010-08-04 20:06:01</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 01:06:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I just want you to know that I am very thankful that I have read your post webmaster! Can you explain your theme further? So that I can fully understand it well. Well, some ideas of your post is familiar and just keep up the good work for making a nice post.Good kuck.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/09/09/what-i-like-about-windows-vista-sound-mixer/imagepng-2/</link>
<pubDate>Tue, 09 Sep 2008 14:59:27 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>363</wp:post_id>
<wp:post_date>2008-09-09 16:59:27</wp:post_date>
<wp:post_date_gmt>2008-09-09 14:59:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>366</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:489;s:6:"height";i:367;s:14:"hwstring_small";s:23:"height='95' width='127'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image2-300x225.png";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/09/09/what-i-like-about-windows-vista-sound-mixer/imagepng-3/</link>
<pubDate>Tue, 09 Sep 2008 14:59:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>364</wp:post_id>
<wp:post_date>2008-09-09 16:59:28</wp:post_date>
<wp:post_date_gmt>2008-09-09 14:59:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>366</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:126;s:6:"height";i:46;s:14:"hwstring_small";s:23:"height='46' width='126'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image3.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/09/09/what-i-like-about-windows-vista-sound-mixer/imagepng-4/</link>
<pubDate>Tue, 09 Sep 2008 14:59:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>365</wp:post_id>
<wp:post_date>2008-09-09 16:59:29</wp:post_date>
<wp:post_date_gmt>2008-09-09 14:59:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>366</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:248;s:6:"height";i:213;s:14:"hwstring_small";s:23:"height='96' width='111'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/image4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>What I like about Windows Vista: Sound Mixer</title>
<link>http://www.tigraine.at/2008/09/09/what-i-like-about-windows-vista-sound-mixer/</link>
<pubDate>Tue, 09 Sep 2008 14:59:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Windows Vista]]></category>

		<category domain="category" nicename="windows-vista"><![CDATA[Windows Vista]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/09/09/what-i-like-about-windows-vista-sound-mixer/</guid>
<description></description>
<content:encoded><![CDATA[<p>Welcome to my new (almost) infinite series about Windows Vista. The much hated, tiny little operating system Microsoft has released over a year ago and everybody loves to criticize.</p>  <p>So, what's in for a first post? Something not everybody is aware of: The new sound mixer with the new API behind it.</p>  <p><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/09/image2.png" width="489" height="367" /></p>  <p>In the dark days before Microsoft's new shiny OS, applications output volume was determined by the master volume control in Windows. This has led to almost all applications having some sort of volume control built in to let users fine tune their experience. </p>  <p>Some examples:</p>  <p>   <table border="0"><tbody>       <tr>         <td>Windows Media Player</td>          <td>World of Warcraft</td>       </tr>        <tr>         <td style="vertical-align: top"><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/09/image3.png" width="126" height="46" /></td>          <td><img border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/09/image4.png" width="248" height="213" /></td>       </tr>     </tbody></table> </p>  <p>Etc.. So everyone is searching for the right knobs to turn <strong>inside </strong>the application when it comes to sound. </p>  <p>Something, Vista has changed drastically, because now all applications have their own volume slider and you can control all of those (and tune them relative to each other) through the Windows Sound Mixer (available through the normal sound control in your system tray).</p>  <p>So, next time you do something with sound, make sure you don't try to access the master volume settings through the API but instead your settings. Here's a good article on how to do that: <a href="http://www.codeproject.com/KB/vista/CoreAudio.aspx">Vista Core Audio API Master Volume Control</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>366</wp:post_id>
<wp:post_date>2008-09-09 16:59:30</wp:post_date>
<wp:post_date_gmt>2008-09-09 14:59:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>what-i-like-about-windows-vista-sound-mixer</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1093</wp:comment_id>
<wp:comment_author><![CDATA[Eol]]></wp:comment_author>
<wp:comment_author_email>eol.ruin@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.115.68.8</wp:comment_author_IP>
<wp:comment_date>2008-09-12 11:45:43</wp:comment_date>
<wp:comment_date_gmt>2008-09-12 16:45:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Gibt es eigentlich eine Chance einer Applikation NACHTRÄGLICH eine andere Soundkarte zuzuweisen.<br>Ist immer lästig wenn man ein USB Headset anschließt ...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1094</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-09-12 12:05:13</wp:comment_date>
<wp:comment_date_gmt>2008-09-12 17:05:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Habe leider keine Ahnung. Ich hab nur eine Soundkarte von daher kann ich das nicht testen.<br>Aber ich glaube schon dass das geht.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1096</wp:comment_id>
<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
<wp:comment_author_email>alexander@seebacher-online.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>194.177.134.130</wp:comment_author_IP>
<wp:comment_date>2008-09-19 09:05:43</wp:comment_date>
<wp:comment_date_gmt>2008-09-19 14:05:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Kommt imo auf die Applikation drauf an, by sachen wie skype kannst das ja jederzeit umstellen, ansonsten wird sich das Programm wohl die "Default-Audio"-Einstellung nehmen. Es sollte aber auch erwähnt werden, dass dieser super W.S.M der TOD jeder EAX-fähigen Karte ist! Klar ist super, wenn alles über das schnöde Einbahnding läuft, aber das halt die CPU anstatt der SFX-Karte die arbeit macht, ist nach der Anschaffung einer ohnehin überteuerten Soundkarte dann schon eine herbe Enttäuschung.<br>Die Wahl der Qual vor allem für Gamer: DX9 + super Klang oder DX10 + M$-Gepiepse ;-(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Useful tools: Windows Installer Clean Up</title>
<link>http://www.tigraine.at/2008/09/15/useful-tools-windows-installer-clean-up/</link>
<pubDate>Mon, 15 Sep 2008 14:46:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/09/15/useful-tools-windows-installer-clean-up/</guid>
<description></description>
<content:encoded><![CDATA[<p>Although we all love the Windows Installer, sometimes it can give you a really hard time when it breaks (it does rarely, but it does).</p>  <p>That's the time when you need the <a href="http://support.microsoft.com/kb/290301/">Windows Installer Clean Up</a> tool that will remove all install related information from your database so you can start over with the install.</p>  <p>I strongly advice not to use this tool for software that's properly installed. You'll have to clean registry/filesystem by hand if you delete the installer information. It's only really helpful to remove stuff you may have already deleted on the filesystem or to recover from a broken install.</p>  <p>You can download the Windows Installer Clean Up <a href="http://support.microsoft.com/kb/290301/">here</a>, make sure to run it as administrator (Vista won't prompt you, it will just fail).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>367</wp:post_id>
<wp:post_date>2008-09-15 16:46:45</wp:post_date>
<wp:post_date_gmt>2008-09-15 14:46:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>useful-tools-windows-installer-clean-up</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Anatomy of a pattern: Singleton</title>
<link>http://www.tigraine.at/2008/09/23/anatomy-of-a-pattern-singleton/</link>
<pubDate>Tue, 23 Sep 2008 07:35:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

		<category domain="tag"><![CDATA[C#]]></category>

		<category domain="tag" nicename="c"><![CDATA[C#]]></category>

		<category domain="tag"><![CDATA[Patterns]]></category>

		<category domain="tag" nicename="patterns"><![CDATA[Patterns]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

		<category domain="tag"><![CDATA[Singleton]]></category>

		<category domain="tag" nicename="singleton"><![CDATA[Singleton]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/09/23/anatomy-of-a-pattern-singleton/</guid>
<description></description>
<content:encoded><![CDATA[<p>Singleton is one of the simplest patterns that does just one thing: Ensure that there is one object to rule them all, one object to bind... (Ok sorry got dragged away).</p>  <p>The idea is simple: Sometimes (especially when writing to disk with open file handles) you need to ensure that there is only <strong>ONE</strong> instance of a class going on at any time. And that's it. It's so simple, you could turn it into a 1-liner:</p>  <p></p>  <div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c25f657c-773e-42e9-b0e7-4cf4daae887f" style="padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static Singleton _Instance;
</pre></div>

<p></p>

<p>But things never are that simple ;). By using only a shared variable you may end up calling the constructor twice, resulting in 2 objects that may get used by two different clients. </p>

<p>To avoid this you'll need to get an exclusive lock of the Singleton to ensure it's really empty before you instance it. 
  <br />And that's how it's usually done</p>

<p></p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:446f4732-4aa2-439c-8334-78287acfca8c" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
private static Singleton _Instance;
private static Object __LockObject = new object();

public static Singleton GetInstance()
{
&#160;&#160;&#160;&#160;if (_Instance == null)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lock(__LockObject)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (_Instance == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_Instance = new Singleton();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;return _Instance;
}
</pre></div>

<p></p>

<p>In the singleton implementation the static Singleton variable holds the reference to the Singleton, and whenever we try to get a reference to this instance we check if it's already set and return the value.</p>

<p>If not, it get's tricky when 2 threads are getting a cache-miss at the exact same time <em>(_Instance == null)</em>. If you aren't synchronizing at this point you may end up with two different references of a singleton object being used (and causing problems with resources being consumed twice, causing ). So it's important to perform another check when you have exclusive reign over the shared object (by using a lock object here). 

  <br />This ensures that no two threads will try to create a new instance to your singleton, while not slowing down your read-performance at all.</p>

<p>Sample code: <a href="http://www.tigraine.at/wp-content/uploads/2008/09/singleton.cs">Singleton.cs</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>368</wp:post_id>
<wp:post_date>2008-09-23 09:35:43</wp:post_date>
<wp:post_date_gmt>2008-09-23 07:35:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>anatomy-of-a-pattern-singleton</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1222155523</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Singleton</title>
<link>/singleton/</link>
<pubDate>Tue, 23 Sep 2008 07:40:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/09/singleton.cs</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[Implementation of singleton pattern]]></excerpt:encoded>
<wp:post_id>369</wp:post_id>
<wp:post_date>2008-09-23 09:40:08</wp:post_date>
<wp:post_date_gmt>2008-09-23 07:40:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>singleton</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/09/singleton.cs</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/09/singleton.cs</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The deprecated target attribute and jQuery</title>
<link>http://www.tigraine.at/2008/09/24/the-deprecated-target-attribute-and-jquery/</link>
<pubDate>Wed, 24 Sep 2008 09:31:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[jQuery]]></category>

		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/09/24/the-deprecated-target-attribute-and-jquery/</guid>
<description></description>
<content:encoded><![CDATA[<p>It's usually not considered polite to open new windows whenever somebody clicks one of your external links. Those back and forward buttons are there for a reason, so I strongly encourage people to avoid opening new windows.</p>  <p>But, we all know customers. They get this &quot;but I want this&quot; look the second they discover that users <em>may </em>leave their web site too early (can't say how much this attitude sucks..).</p>  <p>One popular way to do this is to use jQuery to open all external links on your page in a popup (making code that obviously violates the &quot;don't open new windows&quot; rule still validate). </p>  <div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4f930759-7851-4959-90dc-fb594528415d" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="jscript">
$(document).ready(function() {
&#160;&#160;&#160;&#160;$("a[rel='external']").click(function(event) {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;window.open($(this).attr("href"));
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;event.preventDefault();
&#160;&#160;&#160;&#160;});
});
</pre></div>

<p>Now all you have to do is, add a <em>rel=&quot;external&quot;</em> attribute to all outgoing links, and this little jQuery function will take care of making them popup.</p>

<p>Still, this is <strong>bad</strong>. It contradicts the whole idea why they removed the target attribute in the first place, so consider this as a quick'n'dirty hack to satisfy stupid customers.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>370</wp:post_id>
<wp:post_date>2008-09-24 11:31:03</wp:post_date>
<wp:post_date_gmt>2008-09-24 09:31:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-deprecated-target-attribute-and-jquery</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using Extension Methods as a Factory Method for an Adapter</title>
<link>http://www.tigraine.at/2008/10/02/using-extension-methods-as-a-factory-method-for-an-adapter/</link>
<pubDate>Thu, 02 Oct 2008 08:09:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/02/using-extension-methods-as-a-factory-method-for-an-adapter/</guid>
<description></description>
<content:encoded><![CDATA[<p>Sometimes you have existing code you don't want to change. And sometimes you need to write libraries that consume these old legacy objects as input to function.    <br />No need to say that it's usually a bad idea to couple your code to not properly tested and poorly designed legacy code.</p>  <p>So it's generally a good idea to abstract it away from new code and try to mask the old objects through adapters and interfaces from being too tightly coupled to your new code.</p>  <p>Either way, you're trying to put square blocks into round holes. And the adapter classes need to be initialized by your callers every time your class gets used.</p>  <div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:364d5cc0-797c-4dc6-8ea4-d99cd42af81f" style="padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
&#160;&#160;&#160;&#160;public class LegacyFoo
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public void SomeFoo()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{}
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public interface IFoo
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;void Foo();
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public class FooAdapter : IFoo
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private readonly LegacyFoo Foo_;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public FooAdapter(LegacyFoo foo)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Foo_ = foo; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public void Foo()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ Foo_.SomeFoo(); }
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public class FooConsumer
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public void DoSomethingWithOldFoo(IFoo oldFoo)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ oldFoo.Foo(); }
&#160;&#160;&#160;&#160;}
</pre></div>

<p>So instead of providing yet another Factory that constructs the adapter object, you could instead just put the factory method onto the legacy object by using an extension method:</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:884cef41-1b3f-4fa7-91c9-bedc327b10a1" style="padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
&#160;&#160;&#160;&#160;public static class FooExtensions
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public static IFoo GetFooAdapter(this LegacyFoo foo)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ return new FooAdapter(foo); }
&#160;&#160;&#160;&#160;}
</pre></div>

<p>Now your callers can conveniently construct the Adapter object by calling: </p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:75282b84-9f42-459d-960f-6e2d90f3635e" style="padding-right: 0px; display: inline; padding-left: 0px; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
LegacyFoo foo = new LegacyFoo();
foo.GetFooAdapter()
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>371</wp:post_id>
<wp:post_date>2008-10-02 10:09:39</wp:post_date>
<wp:post_date_gmt>2008-10-02 08:09:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-extension-methods-as-a-factory-method-for-an-adapter</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1101</wp:comment_id>
<wp:comment_author><![CDATA[Eol]]></wp:comment_author>
<wp:comment_author_email>eol@thew4.org</wp:comment_author_email>
<wp:comment_author_url>http://claimid.com/arnopucher</wp:comment_author_url>
<wp:comment_author_IP>80.109.227.166</wp:comment_author_IP>
<wp:comment_date>2008-10-03 07:58:16</wp:comment_date>
<wp:comment_date_gmt>2008-10-03 12:58:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[(((OFFTOPIC)))<br><br>Merci again.<br><a href="http://eolruin.vox.com/library/post/thats-what-friends-are-for.html">http://eolruin.vox.com/library/post/thats-what-...</a><br><br>BTW: Du brauchst ein Gästebuch (DMSGuestBook zB.) - sonst muss man allgemeine Sachen immer an IRGENDEINE Post hängen ...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ccnet</title>
<link>/ccnet/</link>
<pubDate>Wed, 08 Oct 2008 08:37:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/10/ccnet.config</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[CruiseControl.NET Sample Configuration File]]></excerpt:encoded>
<wp:post_id>373</wp:post_id>
<wp:post_date>2008-10-08 10:37:24</wp:post_date>
<wp:post_date_gmt>2008-10-08 08:37:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ccnet</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/10/ccnet.config</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/ccnet.config</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>config.png</title>
<link>http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/configpng/</link>
<pubDate>Wed, 08 Oct 2008 08:52:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/10/config.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>374</wp:post_id>
<wp:post_date>2008-10-08 10:52:16</wp:post_date>
<wp:post_date_gmt>2008-10-08 08:52:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>configpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>375</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/10/config.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/config.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:57;s:6:"height";i:63;s:14:"hwstring_small";s:22:"height='63' width='57'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/config.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Another take on Contiuous Integration</title>
<link>http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/</link>
<pubDate>Wed, 08 Oct 2008 08:52:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[ccnet]]></category>

		<category domain="tag" nicename="ccnet"><![CDATA[ccnet]]></category>

		<category domain="tag"><![CDATA[configuration]]></category>

		<category domain="tag" nicename="configuration"><![CDATA[configuration]]></category>

		<category domain="tag"><![CDATA[continuous integration]]></category>

		<category domain="tag" nicename="continuous-integration"><![CDATA[continuous integration]]></category>

		<category domain="tag"><![CDATA[Source Control]]></category>

		<category domain="tag" nicename="source-control"><![CDATA[Source Control]]></category>

		<category domain="tag"><![CDATA[svn]]></category>

		<category domain="tag" nicename="svn"><![CDATA[svn]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, since my <a href="http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/">last post</a> where I tried out <a href="http://ccnet.thoughtworks.com">CruiseControl.NET</a> some time has passed.</p>  <p>Although I said last time setting up CCNet is easy and quick, this time I didn't listen to my own advice, and so when I needed a Continuous Integration system I went <a href="http://www.jetbrains.com/teamcity/">TeamCity</a>.</p>  <p>TeamCity is great, just click on some buttons and your CI is running.    <br />Log in to the website, configure everything through GUI and you're done.</p>  <p>Sadly, I wasn't done. Something with TeamCity's build runners wasn't working right and it wouldn't resolve my NUnit dependencies and fail to build at all.    <br />I then tried to troubleshoot TeamCity for almost a day before I finally gave up and just installed CruiseControl.NET again.</p>  <p>CCnet on the other hand just worked great, and I was up and running smoothly after an hour or so. And since my last post was lacking, after the break is a step-by-step guide to setting&#160; it up.</p> 
<!--more-->
  <h2>Subversion</h2>  <p>I assume you have <a href="http://www.visualsvn.com/server/">Visual SVN Server</a> up and running already (or something else), so I'll skip this step.</p>  <h2>CruiseControl.NET</h2>  <p>Download and install the latest <a href="http://sourceforge.net/project/showfiles.php?group_id=71179&amp;package_id=83198">CruiseControl.NET from SourceForce</a></p>  <p>During installation CCnet installs two components, the webdashboard and the CCnet server. The webdashboard will automagically be installed into a IIS virtual directory so you can access it through <a href="http://localhost/ccnet">http://localhost/ccnet</a></p>  <p>Although you can already access the webdashboard, you will not find much to do there since the CCnet service isn't started by default and is also lacking configuration.</p>  <h2>Configuring the CruiseControl.NET server</h2>  <p>Now, this is when the fabulous <a href="http://confluence.public.thoughtworks.org/display/CCNET/Configuring+the+Server">CCnet documentation</a> comes in to play.     <br />In the <strong>C:\Program Files\CruiseControl.NET\server\</strong> directory you'll find a file called <strong>ccnet.config</strong>     <br />I won't cover all basic steps since they are already well documented, but just point out the important ones in my config.</p>  <p></p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a0a6a66b-8751-4a38-9266-643ed5a8674c" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;sourcecontrol type="svn"&gt;
&#160;&#160;&lt;executable&gt;C:\Programme\VisualSVN Server\bin\svn.exe&lt;/executable&gt;
&#160;&#160;&lt;trunkUrl&gt;https://localhost:8443/svn/myProject/trunk/&lt;/trunkUrl&gt;
&#160;&#160;&lt;tagBaseUrl&gt;https://localhost:8443/svn/myProject/tags/ccnet-builds/&lt;/tagBaseUrl&gt;
&#160;&#160;&lt;username&gt;username&lt;/username&gt;
&#160;&#160;&lt;password&gt;password&lt;/password&gt;
&#160;&#160;&lt;autoGetSource&gt;true&lt;/autoGetSource&gt;
&#160;&#160;&lt;tagOnSuccess&gt;true&lt;/tagOnSuccess&gt;
&lt;/sourcecontrol&gt;
</pre></div>

<p></p>

<p>The <a href="http://confluence.public.thoughtworks.org/display/CCNET/Subversion+Source+Control+Block">&lt;sourcecontrol&gt; block</a> configures CCnet to access Subversion and retrieve the source. Notably: tagOnSuccess will automatically create a new tag in the tagBaseUrl directory depending on the later <a href="http://confluence.public.thoughtworks.org/display/CCNET/Labeller+Blocks">labeller block</a>.</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:75f2d08d-e548-44b8-9e04-5c558e3c1043" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;labeller type="defaultlabeller"&gt;
&#160;&#160;&lt;prefix&gt;myProject-alpha-0.1-build-&lt;/prefix&gt;
&#160;&#160;&lt;incrementOnFailure&gt;false&lt;/incrementOnFailure&gt;
&lt;/labeller&gt;
</pre></div>

<p>This <a href="http://confluence.public.thoughtworks.org/display/CCNET/Labeller+Blocks">labeller block</a> has many many options for labeling your build, but I choose to just increment my build number on every successful build with the <a href="http://confluence.public.thoughtworks.org/display/CCNET/Default+Labeller">defaultlabeller</a>. It's a bit too early for my current project, but at a later stage I think I'll exchange that labeller with a <a href="http://confluence.public.thoughtworks.org/display/CCNET/Iteration+Labeller">iterationlabeller</a> that calculates an iteration number based on weeks since release in addition to the build number.</p>

<p>The nunit block in the tasks section defines where my NUnit console runner is located and what assembly should be tested upon build. It's pretty straight forward, but still I think it's important. </p>

<p>Yeah, and that's all. XML Configurationa always looks awfully complicated, but once you look over the angle bracket porn you'll find it pretty easy to configure and modify.</p>

<p><strong>One tip though: </strong>Never try to debug your configuration through the windows service. Run the ccnet.exe from the console so you get all debug output to the console. This makes fixing and tweaking your ccnet.config very easy and less &quot;voodoo&quot;.</p>

<p>Because starting is easiest with a sample configuration file. Here is mine:</p>

<div style="padding-right: 2px; padding-left: 2px; background: #0cdf00; padding-bottom: 2px; width: 204px; padding-top: 2px">
  <table style="border-right: #089f00 2px solid; border-top: #089f00 2px solid; background: white; border-left: #089f00 2px solid; width: 200px; border-bottom: #089f00 2px solid" border="0"><tbody>
      <tr>
        <td><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="63" alt="config" src="http://www.tigraine.at/wp-content/uploads/2008/10/config.png" width="57" border="0" /> </td>

        <td><a href="http://www.tigraine.at/wp-content/uploads/2008/10/ccnet.config">ccnet.config</a></td>
      </tr>
    </tbody></table>
</div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>375</wp:post_id>
<wp:post_date>2008-10-08 10:52:16</wp:post_date>
<wp:post_date_gmt>2008-10-08 08:52:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>another-take-on-contiuous-integration</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Log4Net &#8211; Logging made easy</title>
<link>http://www.tigraine.at/2008/10/13/log4net-logging-made-easy/</link>
<pubDate>Mon, 13 Oct 2008 17:13:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[library]]></category>

		<category domain="tag" nicename="library"><![CDATA[library]]></category>

		<category domain="tag"><![CDATA[log4net]]></category>

		<category domain="tag" nicename="log4net"><![CDATA[log4net]]></category>

		<category domain="tag"><![CDATA[logging]]></category>

		<category domain="tag" nicename="logging"><![CDATA[logging]]></category>

		<category domain="tag"><![CDATA[opensource]]></category>

		<category domain="tag" nicename="opensource"><![CDATA[opensource]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/13/log4net-logging-made-easy/</guid>
<description></description>
<content:encoded><![CDATA[<p>I confess, I’ve done projects that have Console.WriteLine or Debug.Print written all over the place. Sometimes I encapsulated that stuff into a separate Log Class that got passed around to every one, or sometimes I just created this little singleton that did the logging.</p>  <p>Either way, it was code I didn’t really want to write until late in development where I had to go back and retrofit logging into the application. And almost every time I did this it sucked and wasn’t satisfying at all. It worked, but I could have spent countless hours on polishing the logging stuff.</p>  <p>That was until I found <a href="http://logging.apache.org/log4net/">Log4Net</a>, the .NET implementation of the open-source log4j framework.</p>  <p>Log4Net enables you to just forget about the logging altogether while you develop your application. Just categorize your log statements into the 5 prioritized levels (DEBUG, INFO, WARN, ERROR, FATAL) and think about the configuration some other day. </p>  <p>Log4Net is completely Xml configuration driven and provides a very high degree of extensibility (Just implement new Appenders, Filters or Layouts).    <br />So it keeps decisions about the where/how/when to log absolutely open until the very end. </p>  <p>Hell, you can even <a href="http://logging.apache.org/log4net/release/manual/configuration.html#Configuration%20Attributes">configure a file watcher</a> and change the Log4Net Xml configuration during runtime!</p>  <p>Log4Net has just made it to my imaginary “must reference in each project” list. I strongly suggest you check it out.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>376</wp:post_id>
<wp:post_date>2008-10-13 19:13:12</wp:post_date>
<wp:post_date_gmt>2008-10-13 17:13:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>log4net-logging-made-easy</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1105</wp:comment_id>
<wp:comment_author><![CDATA[Handling dependencies | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/10/13/handling-dependencies/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-10-13 19:37:13</wp:comment_date>
<wp:comment_date_gmt>2008-10-13 17:37:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] playing around with Log4Net and the Castle MicroKernel, I suddenly discovered that not having those external dependencies under [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Handling dependencies</title>
<link>http://www.tigraine.at/2008/10/13/handling-dependencies/</link>
<pubDate>Mon, 13 Oct 2008 17:37:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Subversion]]></category>

		<category domain="category" nicename="subversion"><![CDATA[Subversion]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[project organization]]></category>

		<category domain="tag" nicename="project-organization"><![CDATA[project organization]]></category>

		<category domain="tag"><![CDATA[sourcecontrol]]></category>

		<category domain="tag" nicename="sourcecontrol"><![CDATA[sourcecontrol]]></category>

		<category domain="tag"><![CDATA[svn]]></category>

		<category domain="tag" nicename="svn"><![CDATA[svn]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/13/handling-dependencies/</guid>
<description></description>
<content:encoded><![CDATA[<p>After playing around with <a href="http://www.tigraine.at/2008/10/13/log4net-logging-made-easy/">Log4Net</a> and the <a href="http://www.castleproject.org/container/index.html">Castle MicroKernel</a>, I suddenly discovered that not having those external dependencies under source control makes development quite difficult.</p>  <p>Whenever I update my dependencies, all other people on the team need to adjust theirs to match mine and vice versa. This is a minor annoyance while the team is small, once you grow and have people coming in and out of the team you’ll start to feel real pain!</p>  <p>If sucks even more if you’ve already shipped your application and get called a year later to change something. Trust me, digging up the right version of library X isn’t getting easier over time, and updating the application to a new version may either break the application or cause your customers to update too (both highly undesired!).</p>  <p><strong>So, what’s the right solution to dependencies?</strong>     <br /><em>(No it’s not reinventing the wheel over and over again by writing everything by yourself)</em></p>  <p>Simple: Put the dependencies into a folder called /lib/ and reference them from there, set the “Copy To Output Directory” option to “Copy if newer”.    <br />Then add this folder to your source control and you’re set. Whenever a new guy comes to the team and gets the project from source control, he’s guaranteed to be able to build it without having to run around some random site searching for referenced assemblies.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>377</wp:post_id>
<wp:post_date>2008-10-13 19:37:11</wp:post_date>
<wp:post_date_gmt>2008-10-13 17:37:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>handling-dependencies</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1344</wp:comment_id>
<wp:comment_author><![CDATA[Unit testing with mocks &ndash; Rhino Mocks basics (Part 2) | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:26:58</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 12:26:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] that all dependencies are also in the svn, so you don’t need to get RhinoMocks or nUnit [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1346</wp:comment_id>
<wp:comment_author><![CDATA[Sourcecontrol and Databases, when ORM comes in handy | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/10/30/sourcecontrol-and-databases-when-orm-comes-in-handy/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 12:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] use a Sourcecontrol system such as SVN and AnkhSVN to do development. Put all your project files (and external dependencies) under source control and maybe even get a continuous integration server [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2481</wp:comment_id>
<wp:comment_author><![CDATA[ELMAH ASP.NET Error logging on MVC | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-04-20 11:14:17</wp:comment_date>
<wp:comment_date_gmt>2009-04-20 09:14:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] the project’s page and extract the bin folder to your application folder. I’m a huge fan of having all external assemblies in a lib folder besides the app, so to my delight elmah requires no installation, you just have to drop the 3 files [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2761</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Keeping up with Castle binaries through NAnt]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/25/keeping-up-with-castle-binaries-through-nant/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-25 15:55:30</wp:comment_date>
<wp:comment_date_gmt>2009-07-25 13:55:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] This little NAnt target is now in charge of copying assemblies I need to my project’s lib directory: [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>vxrevo.jpg</title>
<link>http://www.tigraine.at/2008/10/15/when-drivers-dont-get-along/vxrevojpg/</link>
<pubDate>Wed, 15 Oct 2008 06:48:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/10/vxrevo.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>378</wp:post_id>
<wp:post_date>2008-10-15 08:48:40</wp:post_date>
<wp:post_date_gmt>2008-10-15 06:48:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>vxrevojpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>379</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/10/vxrevo.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/vxrevo.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:145;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/vxrevo.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"vxrevo-150x145.jpg";s:5:"width";i:150;s:6:"height";i:145;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>When drivers don&#8217;t get along</title>
<link>http://www.tigraine.at/2008/10/15/when-drivers-dont-get-along/</link>
<pubDate>Wed, 15 Oct 2008 06:48:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[Drivers]]></category>

		<category domain="tag" nicename="drivers"><![CDATA[Drivers]]></category>

		<category domain="tag"><![CDATA[hardware]]></category>

		<category domain="tag" nicename="hardware"><![CDATA[hardware]]></category>

		<category domain="tag"><![CDATA[rant]]></category>

		<category domain="tag" nicename="rant"><![CDATA[rant]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/15/when-drivers-dont-get-along/</guid>
<description></description>
<content:encoded><![CDATA[<p><img title="Logitech VX Revolution" style="border-top-width: 0px; display: inline; border-left-width: 0px; float: left; border-bottom-width: 0px; margin: 0px 10px 10px 0px; border-right-width: 0px" height="145" alt="Logitech VX Revolution" src="http://www.tigraine.at/wp-content/uploads/2008/10/vxrevo.jpg" width="240" border="0" /> </p>  <p>Just when I hoped driver issues are gone for good, I bought my new <a href="http://www.logitech.com/index.cfm/mice_pointers/mice/devices/165&amp;cl=US,EN">Logitech VX Revo</a> because I was so upset with my <a href="http://www.microsoft.com/hardware/Presenter/productdetails.aspx?pid=085">Microsoft Presenter Mouse 8000</a> (worst mouse ever!).</p>  <p>After experiencing huge precision and lag issues with the Microsoft Presenter 8000 I wasn’t really happy to find my new Logitech totally laggy on the acceleration part.    <br />I’m a huge fan of mouse acceleration, and that’s the main reason I wasn’t happy with Logitech mice, they accelerate differently than Microsoft ones.</p>  <p>But this wasn’t just different, the mouse accelerated absolutely insane:    <br />I then found out that Logitech and <a href="http://www.synaptics.com/">Synaptics</a> don’t come along too well. Synaptics and Logitech both try to hook into the same acceleration and so your mouse acceleration gets controlled by the Synaptics driver and your touchpad by the mouse driver. Adjusting the mouse speed worked separately, but still the acceleration was way out of line. So after a day of tinkering I finally gave in and uninstalled the touchpad drivers.</p>  <p>I tried to find a&#160; solution to the whole <a href="http://www.logitech.com/index.cfm/support_downloads/downloads/">SetPoint</a> – <a href="http://www.synaptics.com/support/drive.cfm">Synaptics</a> issue and it seems that there is no solution. Logitech blames Synaptics and vice versa. People just end up doing what I did, uninstalling the touchpad driver. </p>  <p><strong>Logitech and Synaptics don’t work together. </strong></p>  <p>And that means: </p>  <ul>   <li>I can’t scroll on the touchpad (the scroll-area was part of the touchpad driver). </li>    <li>I can’t disable the touchpad when working with the mouse (driving me crazy all the time) </li>    <li>I miss all the neat stuff like gestures etc. </li> </ul>  <p>Soltution: Don’t get a Logitech mouse if you’re stuck with a Synaptics touchpad. It’s simply not worth the trouble.    <br />And while at it, Microsoft should make the Touchpad driver that’s built into Windows better. I’d wish for Windows 7 to support gestures and scrolling out of the box, not having to rely on stupid drivers!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>379</wp:post_id>
<wp:post_date>2008-10-15 08:48:40</wp:post_date>
<wp:post_date_gmt>2008-10-15 06:48:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>when-drivers-dont-get-along</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1108</wp:comment_id>
<wp:comment_author><![CDATA[Tirion]]></wp:comment_author>
<wp:comment_author_email>meine@sicha.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.115.83.132</wp:comment_author_IP>
<wp:comment_date>2008-10-18 12:11:01</wp:comment_date>
<wp:comment_date_gmt>2008-10-18 17:11:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Also was du bemengelst funktioniert bei mir, und wir haben selben Laptop und Maus.<br>Also an Logitech vs. Synaptics liegts nicht]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1109</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.189</wp:comment_author_IP>
<wp:comment_date>2008-10-18 12:17:45</wp:comment_date>
<wp:comment_date_gmt>2008-10-18 17:17:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Erinnerst du dich an das Prblem mit "Das Touchpad vergisst seine einstellung bei reboot?" .. eines der Symptome meines Problems.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1110</wp:comment_id>
<wp:comment_author><![CDATA[Tirion]]></wp:comment_author>
<wp:comment_author_email>meine@sicha.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.115.83.132</wp:comment_author_IP>
<wp:comment_date>2008-10-18 12:25:43</wp:comment_date>
<wp:comment_date_gmt>2008-10-18 17:25:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ja aber das liegt dann nicht an den 2 Treibern wenns nur bei dir so is.<br>Und bei mir vergisst nicht die Einstellungen, sondern nur die Geschwindigkeit.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>vibrantink.png</title>
<link>http://www.tigraine.at/2008/10/23/come-to-the-dark-side-we-have-cookies/vibrantinkpng/</link>
<pubDate>Thu, 23 Oct 2008 14:39:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/10/vibrantink.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>380</wp:post_id>
<wp:post_date>2008-10-23 16:39:48</wp:post_date>
<wp:post_date_gmt>2008-10-23 14:39:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>vibrantinkpng</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>381</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/10/vibrantink.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/vibrantink.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:487;s:6:"height";i:266;s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:71:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/vibrantink.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"vibrantink-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"vibrantink-300x163.png";s:5:"width";i:300;s:6:"height";i:163;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Come to the dark side &#8211; we have cookies</title>
<link>http://www.tigraine.at/2008/10/23/come-to-the-dark-side-we-have-cookies/</link>
<pubDate>Thu, 23 Oct 2008 14:39:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[dark]]></category>

		<category domain="tag" nicename="dark"><![CDATA[dark]]></category>

		<category domain="tag"><![CDATA[eyestrain]]></category>

		<category domain="tag" nicename="eyestrain"><![CDATA[eyestrain]]></category>

		<category domain="tag"><![CDATA[Theme]]></category>

		<category domain="tag" nicename="theme"><![CDATA[Theme]]></category>

		<category domain="tag"><![CDATA[Visual Studio]]></category>

		<category domain="tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/23/come-to-the-dark-side-we-have-cookies/</guid>
<description></description>
<content:encoded><![CDATA[<p><img title="vibrantink" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="266" alt="vibrantink" src="http://www.tigraine.at/wp-content/uploads/2008/10/vibrantink.png" width="487" border="0" /> </p>  <p>After looking at the default color settings of Visual Studio for the last 8 years of my life I finally decided to give Rob Conery’s <a href="http://blog.wekeroad.com/2007/10/17/textmate-theme-for-visual-studio-take-2/">Vibrant-Ink theme for Visual Studio</a> a try. </p>  <p>I discovered this lovely little theme quite some time ago, but I really didn’t see any benefit from changing my settings to this, so I forgot about it.    <br />Until recently I started to feel the pain of working 10+ hours on a mediocre screen.     <br />Eye strain was quite bad, and when someone <a href="http://stackoverflow.com/questions/119064/tips-for-reducing-eye-strain">suggested the theme</a> (again) at Stackoverflow I finally tried it.</p>  <p>And, I have to admit, not only does my VS now look way cooler. <strong>My eyes feel less tired after long hours of work. </strong></p>  <p>I would definitely suggest trying the theme, it’s just incredible.</p>  <p>Get the theme over at <a href="http://blog.wekeroad.com/2007/10/17/textmate-theme-for-visual-studio-take-2/">Rob Conery’s Blog</a> and maybe adjust it a bit <a href="http://weblogs.asp.net/astopford/archive/2008/09/17/vibrantink-for-tired-eyes.aspx">like Andrew Stopford suggests</a>. But still, stick with Consolas as your font!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>381</wp:post_id>
<wp:post_date>2008-10-23 16:39:48</wp:post_date>
<wp:post_date_gmt>2008-10-23 14:39:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>come-to-the-dark-side-we-have-cookies</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1113</wp:comment_id>
<wp:comment_author><![CDATA[robconery]]></wp:comment_author>
<wp:comment_author_email>robconery@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.wekeroad.com</wp:comment_author_url>
<wp:comment_author_IP>66.91.19.246</wp:comment_author_IP>
<wp:comment_date>2008-10-23 20:43:07</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 01:43:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad you like it! I&#39;m so used to it now that I can&#39;t use anything else :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1114</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-10-24 14:45:43</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 19:45:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can&#39;t live without it either. It almost pains in the eye when I switch to Windows Explorer or something with it&#39;s white backgrounds... <br>Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3434</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; The dark side strikes again!]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/04/22/the-dark-side-strikes-again/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-04-22 00:27:23</wp:comment_date>
<wp:comment_date_gmt>2010-04-21 22:27:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] time with Visual Studio 2010 and C#4 but now that it’s finally here I had to find out that the Vibrant Ink theme I’ve been using for years now needs an update to match new stuff in the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3647</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-24 12:45:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 12:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can't live without it either. It almost pains in the eye when I switch to Windows Explorer or something with it's white backgrounds... rnThanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4189</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-24 12:45:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 12:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can't live without it either. It almost pains in the eye when I switch to Windows Explorer or something with it's white backgrounds... rnThanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5243</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-24 12:45:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 12:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can't live without it either. It almost pains in the eye when I switch to Windows Explorer or something with it's white backgrounds... rnThanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4967</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-10-24 12:45:00</wp:comment_date>
<wp:comment_date_gmt>2008-10-24 12:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I can't live without it either. It almost pains in the eye when I switch to Windows Explorer or something with it's white backgrounds... rnThanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>decimaltextbox</title>
<link>/decimaltextbox/</link>
<pubDate>Tue, 28 Oct 2008 15:49:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/10/decimaltextbox.cs</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>382</wp:post_id>
<wp:post_date>2008-10-28 17:49:23</wp:post_date>
<wp:post_date_gmt>2008-10-28 15:49:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>decimaltextbox</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/10/decimaltextbox.cs</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/10/decimaltextbox.cs</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>DecimalTextbox for Windows Forms</title>
<link>http://www.tigraine.at/2008/10/28/decimaltextbox-for-windows-forms/</link>
<pubDate>Tue, 28 Oct 2008 15:50:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[controls]]></category>

		<category domain="tag" nicename="controls"><![CDATA[controls]]></category>

		<category domain="tag"><![CDATA[windows forms]]></category>

		<category domain="tag" nicename="windows-forms"><![CDATA[windows forms]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/28/decimaltextbox-for-windows-forms/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve been doing some Windows Forms development lately and really love it. After doing web development for the last couple of years I am thankful for the change. Being able to create compelling UIs without having to worry about Javascript is something I’ve been longing for quite some time. </p>  <p>But when trying to build intuitive and user-friendly UIs, you hit the boundaries of Microsoft’s control toolbox pretty fast. (Not as fast as with Webcontrols, but still).    <br />I needed a Textbox that accepts only decimal input and that formats itself rather nicely for a finance application I’m building right now.</p>  <p>I first turned to the MaskedTextBox control that’s already there, but that turned out to be completely useless because numbers have no fixed length.    <br />So I decided to create a Custom Control that derives from TextBox that does exactly what I need – take decimals and nothing else.</p>  <p>The whole process is rather simple, so I’ll just give you the code and be done with it. The DecimalTextbox control won’t accept any input that’s not numeric except for one comma. If you leave the control empty or non-decimal (however you accomplish that) it will revert to 0,00 on validation.</p>  <p>The code is after the break</p> 
<!--more-->
  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:badf9f74-f568-472e-a133-2406b55f4b3e" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public partial class DecimalTextBox : TextBox
{
&#160;&#160;&#160;&#160;public DecimalTextBox()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;InitializeComponent();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;protected override void OnTextChanged(EventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (IsDecimal())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;base.OnTextChanged(e);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;protected override void OnKeyPress(KeyPressEventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!char.IsNumber(e.KeyChar)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&& ((Keys)e.KeyChar != Keys.Back)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&& (e.KeyChar != ','))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;e.Handled = true;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (e.KeyChar == ',' && Text.IndexOf(',') &gt; 0)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;e.Handled = true;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;base.OnKeyPress(e);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;protected override void OnGotFocus(EventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ResetValueOnFocus();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;base.OnGotFocus(e);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private void ResetValueOnFocus()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (IsDecimal())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!IsDecimalZero())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Text = "";
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private bool IsDecimal()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decimal result;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return decimal.TryParse(Text, out result);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private bool IsDecimalZero()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (decimal.Parse(Text) == 0);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private void DecimalTextBox_Validating(object sender, CancelEventArgs e)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decimal value;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decimal.TryParse(Text, out value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const string NUMBER_FORMAT_2_DIGITS = "N2";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Text = value.ToString(NUMBER_FORMAT_2_DIGITS);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public decimal Value
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return decimal.Parse(Text);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>And since copying source from HTML sucks here’s the <a href="http://www.tigraine.at/wp-content/uploads/2008/10/decimaltextbox.cs">DecimalTextBox.cs</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>383</wp:post_id>
<wp:post_date>2008-10-28 17:50:58</wp:post_date>
<wp:post_date_gmt>2008-10-28 15:50:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>decimaltextbox-for-windows-forms</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Sourcecontrol and Databases, when ORM comes in handy</title>
<link>http://www.tigraine.at/2008/10/30/sourcecontrol-and-databases-when-orm-comes-in-handy/</link>
<pubDate>Thu, 30 Oct 2008 11:27:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Subversion]]></category>

		<category domain="category" nicename="subversion"><![CDATA[Subversion]]></category>

		<category domain="tag"><![CDATA[NHibernate]]></category>

		<category domain="tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>

		<category domain="tag"><![CDATA[orm]]></category>

		<category domain="tag" nicename="orm"><![CDATA[orm]]></category>

		<category domain="tag"><![CDATA[sourcecontrol]]></category>

		<category domain="tag" nicename="sourcecontrol"><![CDATA[sourcecontrol]]></category>

		<category domain="tag"><![CDATA[svn]]></category>

		<category domain="tag" nicename="svn"><![CDATA[svn]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/10/30/sourcecontrol-and-databases-when-orm-comes-in-handy/</guid>
<description></description>
<content:encoded><![CDATA[<p>I encourage every one (even single developers) to use a Sourcecontrol system such as <a href="http://subversion.tigris.org/">SVN</a> and <a href="http://www.tigraine.at/2008/09/04/ankhsvn-20-subversion-client-for-visual-studio/">AnkhSVN</a> to do development. Put all your project files (<a href="http://www.tigraine.at/2008/10/13/handling-dependencies/">and external dependencies</a>) under source control and maybe even get a <a href="http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/">continuous integration server setup</a>.</p>  <p>And still, even if you’ve done all of this, chances are high you still have one external dependency in your project: the Database!</p>  <p>And this is where the pain starts, if you don’t find some way how to put your DB schema under source control too, you’ll end up going back to old versions and having no database of that date.</p>  <p>There are however several ways to solve this that I can think of:</p>  <ul>   <li>Make your CI server fetch a schema script every time a build is triggered. </li>    <li>Make creating a schema script part of your build process </li> </ul>  <p>And .. guess what? There’s a simpler way :).    <br />If you’re using a ORM tool you should always have your database model somewhere in the mapping files.</p>  <p>Because the mapping files tell the ORM the structure of the DB, they essentially <em>contain</em> all relevant information needed to generate a schema without the need to have SQL scripts.</p>  <p>In <a href="http://www.hibernate.org/343.html">NHibernate</a> for example, you can simply do a:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b082d54d-9a6e-4154-9bb0-001a828ea629" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var cfg = new Configuration();
cfg.Configure();
cfg.AddAssembly(typeof (Person).Assembly);

new SchemaExport(cfg).Execute(false, true, false, false);
</pre></div>

<p>And the mapper will go out and create all necessary tables and relationships in your database. </p>

<p>By having an ORM capable of recreating the schema, I no longer need to keep the Database itself under source control, because the necessary information to recreate the schema is already in my source tree.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>384</wp:post_id>
<wp:post_date>2008-10-30 13:27:16</wp:post_date>
<wp:post_date_gmt>2008-10-30 11:27:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sourcecontrol-and-databases-when-orm-comes-in-handy</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Unit testing with mocks (Part 1)</title>
<link>http://www.tigraine.at/2008/11/04/unit-testing-with-mocks-part-1/</link>
<pubDate>Tue, 04 Nov 2008 09:13:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[mocks]]></category>

		<category domain="tag" nicename="mocks"><![CDATA[mocks]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=385</guid>
<description></description>
<content:encoded><![CDATA[<p><em>I regret not having blogged on TDD and designing for test before – it makes it very difficult to talk about mocking as it is a rather advanced topic, requiring at least some knowledge of polymorphism and oo-design.      <br />So this post is the first in a series of posts on the topic of testing with mock objects, that will hopefully help you with your testing.</em> </p>  <p>Testing is one of the most important things in software development.    <br />We’re all human, and we all make mistakes. And even if we discover these mistakes during development and testing, it’s almost certain that we’ll have to come back at a later point to change something, possibly breaking what already worked.     <br />Doing a full QA cycle during initial development may look reasonable to most of us, but doing it every time you change a tiny bit in the application will certainly get you some angry mails from management.     <br />Having good unit tests gives you a safety net for future development. By simply running the tests you can verify that things that already worked still work properly. And that’s what is important in software development.</p>  <p>The whole idea of unit testing is to test as little as possible while still verifying that the method under test behaves as specified and expected.    <br />Keep this in mind, because it is important when testing classes that depend on services or other classes.</p>  <p>If let’s say you have a HttpServiceWatcher that is a service running somewhere and watching if a HttpService is up and running, you should test the HttpServiceWatcher class itself, not the associated notifier classes that the Watcher calls when it wants to notify you.    <br />But how do you verify that the HttpServiceWatcher really worked and called the notifier as a result?</p>  <p>Let’s start with the Notifier interface:</p>  <p></p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b9e0815e-5c28-421b-8b81-c4c7636b9fdf" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public interface IErrorNotifier
{
&#160;&#160;&#160;&#160;void NotifyOfServiceDown();
}
</pre></div>

<p></p>

<p>Let’s assume we have implemented a EmailNotifier class, if the HttpServiceWatcher looks like this we’re in testing-nightmare land:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b7f3c378-d4c2-446e-9c2b-77ccfddd652b" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class HttpServiceWatcher
{
&#160;&#160;&#160;&#160;public void ObserveService()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;IErrorNotifier notifier = new EmailNotifier();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;notifier.NotifyOfServiceDown();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>The HttpServiceWatcher news up it’s notifier service, so every time we want to adjust the notifier, we’d have to change the ServiceWatcher and risk breaking something. Also, we can’t test the ServiceWatcher itself, because it will always call to an EmailNotifier that we can’t fake easily.</p>

<p>So, the correct move would be to use Inversion of Control (IoC) to inject the service into the watcher class:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b2e6ede5-b25b-4a31-9cd1-ca9cd05de57e" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class HttpServiceWatcher
{
&#160;&#160;&#160;&#160;private IErrorNotifier notifier;

&#160;&#160;&#160;&#160;public HttpServiceWatcher(IErrorNotifier notifier)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.notifier = notifier;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void ObserveService()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;notifier.NotifyOfServiceDown();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now, the HttpServiceWatcher class doesn’t directly depend on any concrete implementation of IErrorNotifier, the calling code takes care of creating the concrete classes. Changes to notifiers don’t get propagated to the HttpServiceWatcher. 
  <br />Also, this makes it very easy to simply fake the notifier. We could either create a fake test class that inherits IErrorNotifier, or we could use a Mocking framework.</p>

<p>Manual mocking could look like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7934ff93-e36a-4544-9c21-998d3da7c6e6" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class NotifierMock : IErrorNotifier
{
&#160;&#160;&#160;&#160;public int notifyOfServiceDownCallCount = 0;

&#160;&#160;&#160;&#160;public void NotifyOfServiceDown()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;notifyOfServiceDownCallCount++;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>The test could then look like this:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:1a34e356-7b1f-4dc8-836a-3149833caa97" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Test]
public void ServiceWatcherNotifiesUser_Custom_Mock()
{
&#160;&#160;&#160;&#160;var notifier = new NotifierMock();

&#160;&#160;&#160;&#160;var watcher = new HttpServiceWatcher(notifier);
&#160;&#160;&#160;&#160;watcher.ObserveService();

&#160;&#160;&#160;&#160;Assert.AreEqual(1, notifier.notifyOfServiceDownCallCount);
}
</pre></div>

<p></p>

<p>And that’s fine. It works, we verify that the watcher actually calls the notifier service, and all is well. 
  <br />It just gets tricky when you get more tests, you’ll have to create many mock objects that always introduce the possibility of breaking other tests etc.</p>

<p>In the next post in this series I will try to illustrate how to do the same thing with <a href="http://ayende.com/projects/rhino-mocks.aspx">RhinoMocks</a> and how it makes testing very easy.</p>

<p>Download the source code from my SVN Repository by doing a:</p>

<pre>svn checkout <a title="https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk" href="https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk">https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk</a> UnitTesting –username guest</pre>

<p>Continue reading <a title="Unit testing with mocks – Rhino Mocks basics (Part 2)" href="http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/">Unit testing with mocks – Rhino Mocks basics (Part 2)</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>385</wp:post_id>
<wp:post_date>2008-11-04 11:13:57</wp:post_date>
<wp:post_date_gmt>2008-11-04 09:13:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unit-testing-with-mocks-part-1</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1225793555</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1340</wp:comment_id>
<wp:comment_author><![CDATA[Unit testing with mocks &ndash; Rhino Mocks basics (Part 2) | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-05 02:25:52</wp:comment_date>
<wp:comment_date_gmt>2008-11-05 00:25:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Part1 of this series I have showed you how to create a very simple mock object by hand. In this post I [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Common gotchas with Inherited Forms</title>
<link>http://www.tigraine.at/2008/11/04/common-gotchas-with-inherited-forms/</link>
<pubDate>Tue, 04 Nov 2008 14:38:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[windows forms]]></category>

		<category domain="tag" nicename="windows-forms"><![CDATA[windows forms]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/04/common-gotchas-with-inherited-forms/</guid>
<description></description>
<content:encoded><![CDATA[<p>Don’t repeat yourself is one of the most important principles I know of. And there are many ways to follow DRY when it comes to normal code.</p>  <p>But when you go to Winforms-land most people forget about DRY and create the same Gui code over and over again. Some of them are clever and abstract the “handlers” away from the buttons, but they still draw most of the buttons multiple times for forms that look almost exactly the same.</p>  <p>But it’s pretty common to have multiple views of the same forms. Like a CreateNewUser and a UpdateExistingUser mask, they both share almost all textboxes, but their values get processed differently.</p>  <p>You could try to use the same form for both operations, but that violates SRP (and makes things a lot harder), or you have two different forms that inherit the controls from a parent form. </p>  <p>Tha't’s then called Visual Inheritance. And, sadly the Windows Forms designer within Visual Studio is pretty bad at it, it crashed on my multiple times. </p>  <p>After 2 hours of fooling around with the Designer to get my Forms to show again I decided to share my experience, since there are some simple rules that you can follow to not break your design surface:</p>  <p><strong>Don’t remove the default constructor from your parent form</strong></p>  <p>The designer depends on a parameterless constructor, if you want to have parameters create a new constructor (and therefore don’t forget to call InitializeComponent again)</p>  <p><strong>Don’t hook up Form_Load events in your parent form</strong></p>  <p>I sincerely have no clue why this breaks the designer, but it does.</p>  <p>&#160;</p>  <p>It’s rather tragic that the designer breaks on working code (compiling and running my code always worked, the designer just couldn’t load the form to show the design surface), but if you follow the above guidelines everything should work out fine.</p>  <p>There is also another way to remove code duplication by using Custom Controls and User Controls, these get handled better by the designer, but require a bit more thinking when creating (You may get in trouble when you try to modify their instantiation because that’s done during the InitializeComponent call).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>386</wp:post_id>
<wp:post_date>2008-11-04 16:38:38</wp:post_date>
<wp:post_date_gmt>2008-11-04 14:38:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>common-gotchas-with-inherited-forms</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1353</wp:comment_id>
<wp:comment_author><![CDATA[Windows Forms: Form within a panel | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/11/11/windows-forms-form-within-a-panel/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-11 12:31:53</wp:comment_date>
<wp:comment_date_gmt>2008-11-11 10:31:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] already blogged about Visual Inheritance as a tool for avoiding DRY [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Unit testing with mocks &#8211; Rhino Mocks basics (Part 2)</title>
<link>http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/</link>
<pubDate>Wed, 05 Nov 2008 00:25:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[mocks]]></category>

		<category domain="tag" nicename="mocks"><![CDATA[mocks]]></category>

		<category domain="tag"><![CDATA[rhino mocks]]></category>

		<category domain="tag" nicename="rhino-mocks"><![CDATA[rhino mocks]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/</guid>
<description></description>
<content:encoded><![CDATA[<p><em>In </em><a href="http://www.tigraine.at/2008/11/04/unit-testing-with-mocks-part-1/"><em>Part1</em></a><em> of this series I have showed you how to create a very simple mock object by hand. In this post I will show you how to use <a href="http://ayende.com/projects/rhino-mocks.aspx">RhinoMocks</a> to create the mock and how to verify this. This post is intended as basic advice, and won’t cover any advanced <a href="http://ayende.com/projects/rhino-mocks.aspx">RhinoMocks</a> topics, just the basic setup/replay/verify steps.</em></p>  <p>When working with almost any mock framework there are 3 things: Setup, expectation recording and verifying that the expectations where met.    <br />That means, first you tell the mock object what calls to expect. Then you let the method under test do it’s magic and afterwards you let the mock verify that all expected calls where made.     <br />You can get very precise on what to expect and how to expect it, but that will be covered in the next part of this series.</p>  <p>The <a href="https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk/RhinoMockBasics/NotifierMock.cs">hand-made mock from Part1</a> would translate to a test like this when using RhinoMocks:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bbd64305-ada4-4ebe-bf03-4aacc36a662b" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Test]
public void ServiceWatcherNotifiesUser()
{
&#160;&#160;&#160;&#160;var repository = new MockRepository();
&#160;&#160;&#160;&#160;var notifier = repository.StrictMock&lt;IErrorNotifier&gt;();

&#160;&#160;&#160;&#160;notifier.NotifyOfServiceDown();

&#160;&#160;&#160;&#160;repository.ReplayAll();

&#160;&#160;&#160;&#160;var watcher = new HttpServiceWatcher(notifier);
&#160;&#160;&#160;&#160;watcher.ObserveService();

&#160;&#160;&#160;&#160;repository.VerifyAll();
}
</pre></div>

<p>The main things here: 
  <br />We start the repository and then request a IErrorNotifier object from it.</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:dac7032c-fb88-4b3e-950b-a30e0bcfe4a2" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">var repository = new MockRepository();
var notifier = repository.StrictMock&lt;IErrorNotifier&gt;();</pre>
</div>

<p>The mock object (notifier) is in record mode now, all calls we do to the object aren’t actually executed but will be expected afterwards. 
  <br />So if we want NotifyOfServiceDown to be called once we simply call it while in record mode:</p>

<p></p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b9a24ba8-be84-4668-b6a2-80cef1cf8639" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">notifier.NotifyOfServiceDown();</pre>
</div>

<p></p>

<p>After having set up all expectations in record mode, we tell the Mockrepository to go to replay mode:</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0a263421-9c4b-45f9-a958-7be468b2ac56" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">repository.ReplayAll();</pre>
</div>

<p></p>

<p>The mock object still doesn’t do anything. But it expects what we setup in replay. If the watcher calls methods that weren’t specified in replay mode the mock will throw exceptions at us.</p>

<p>Now we construct the object under test:</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:08721290-8d50-4960-94e5-d0cfde13d582" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">var watcher = new HttpServiceWatcher(notifier);</pre>
</div>

<p>And note that we pass the mock object instead of an actual implementation of IErrorNotifier. 
  <br />Now we call the method under test just as we would normally:</p>

<p></p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:84a0712a-57fd-42cc-bffd-7a9f35fb9968" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">watcher.ObserveService();</pre>
</div>

<p></p>

<p>That leaves us with only one step left, we tell the repository to verify all mocks that where created and it will throw Exceptions if mocks didn’t get called or did get called too often.</p>

<div class="wlWriterSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c6352938-1f13-45bc-ba96-ee6863c6e4eb" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px">
  <pre class="csharp" name="code">repository.VerifyAll();</pre>
</div>

<p>Although this is just a very basic example of how to use RhinoMocks, you are able to see the benefits from this. You could write the HttpServiceWatcher class without having to write any concrete <a href="https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk/RhinoMockBasics/IErrorNotifier.cs">IErrorNotifier</a> implementations. You can just concentrate on the HttpServiceWatcher instead of worrying how the underlying Service is going to work.</p>

<p>In the next part I’ll be covering how to make some fancier things with RhinoMocks like returning values and verifying that passed parameters meet certain criteria.</p>

<p>The source code is available through my SVN repository:</p>

<pre>svn checkout <a href="https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk">https://office.pixelpoint.at:8443/svn/tigraine/UnitTesting/trunk</a> UnitTesting –username guest</pre>

<p>Notice that <a href="http://www.tigraine.at/2008/10/13/handling-dependencies/">all dependencies are also in the svn</a>, so you don’t need to get RhinoMocks or nUnit yourself.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>387</wp:post_id>
<wp:post_date>2008-11-05 02:25:49</wp:post_date>
<wp:post_date_gmt>2008-11-05 00:25:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>unit-testing-with-mocks-rhino-mocks-basics-part-2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>1341</wp:comment_id>
<wp:comment_author><![CDATA[Unit testing with mocks (Part 1) | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2008/11/04/unit-testing-with-mocks-part-1/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2008-11-05 02:30:38</wp:comment_date>
<wp:comment_date_gmt>2008-11-05 00:30:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Continue reading Unit testing with mocks – Rhino Mocks basics (Part 2) [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/11/07/virtual-member-call-in-constructor-and-nhibernate/imagepng-2/</link>
<pubDate>Fri, 07 Nov 2008 12:22:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>388</wp:post_id>
<wp:post_date>2008-11-07 14:22:11</wp:post_date>
<wp:post_date_gmt>2008-11-07 12:22:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>389</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:433;s:6:"height";i:136;s:14:"hwstring_small";s:23:"height='40' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x136.png";s:5:"width";i:150;s:6:"height";i:136;}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x94.png";s:5:"width";i:300;s:6:"height";i:94;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Virtual member call in constructor and NHibernate</title>
<link>http://www.tigraine.at/2008/11/07/virtual-member-call-in-constructor-and-nhibernate/</link>
<pubDate>Fri, 07 Nov 2008 12:22:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[NHibernate]]></category>

		<category domain="tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>

		<category domain="tag"><![CDATA[orm]]></category>

		<category domain="tag" nicename="orm"><![CDATA[orm]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/07/virtual-member-call-in-constructor-and-nhibernate/</guid>
<description></description>
<content:encoded><![CDATA[<p>As you may have noticed, I’ve been doing some <a href="http://www.hibernate.org/343.html">NHibernate</a> work lately and really had a great time with this absolutely amazing ORM. Especially now that Microsoft <a href="http://ayende.com/Blog/archive/2008/10/31/microsoft-kills-linq-to-sql.aspx">abandoned Linq to SQL</a> I really feel good about having made the step towards NHibernate.</p>  <p>Yesterday was one of those tricky days when something breaks and you have no clue why.</p>  <p>I have a table called “Orders” and there are “OrderItems”.</p>  <p><img title="image" style="display: inline" height="136" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/11/image.png" width="433" /></p>  <p>By writing the tests upfront, I found out that I’d like to be able to just say Repository.Add(Order) instead of persisting the Order and afterwards looping through the OrderItems and persisting them too.</p>  <p>To achieve this I changed the mapping to something like this:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:df243c42-dfa1-40ed-9e26-d72d6adc3da2" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;set name="OrderItems" cascade="all"&gt;
&#160;&#160;&lt;key column="OrderId" /&gt;
&#160;&#160;&lt;one-to-many class="OrderItem"/&gt;
&lt;/set&gt;
</pre></div>

<p>The cascade=all statement is what I searched for initially. When the order gets persisted, all OrderItems in the collection get persisted too, and everything is well.</p>

<p></p>

<p>But, since my POCO object looks like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:419c4335-c87d-4c54-b6a1-05801cae3403" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Order
{
&#160;&#160;&#160;&#160;public virtual long Id { get; set; }
&#160;&#160;&#160;&#160;public virtual ISet&lt;OrderItem&gt; OrderItems { get; set; }
}
</pre></div>

<p>I got NullReferenceException whenever I tried to access OrderItems on new Order objects. And I thought, hey.. kinda sucks newing up the collection in my business layer, why not init it in it’s constructor:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3dcc5ecb-e4f7-40f5-aeca-3426570fc7f5" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
&#160;&#160;&#160;&#160;public Order()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OrderItems = new HashedSet&lt;OrderItem&gt;();
&#160;&#160;&#160;&#160;}
</pre></div>

<p>So I could just do Order.OrderItems.Add(OrderItem) without having to instantiate a HashedSet anywhere. 
  <br />I got a bit cautious when Visual Studio underlined OrderItems and made the cryptic announcement: “Virtual member call in constructor”. 

  <br />Totally unaware of what this means, I just went on and ran my tests.</p>

<p>Imagine my face when almost all my tests failed due to an omnious nHibernateException:</p>

<blockquote>
  <p><strong>NHibernate.HibernateException: Illegal attempt to associate a collection with two open sessions</strong></p>
</blockquote>

<p>I didn’t figure this out until today, but it had to do with the “Virtual member call in constructor” warning. I discovered <a href="http://blogs.msdn.com/brada/archive/2004/08/12/213951.aspx">this post by Brad Abrams</a> that explains the topic.</p>

<p>Looks like if you set the collection in the constructor of the POCO object NHibernate will break with the above Exception. 
  <br />Solution to avoid this? Init the collection from calling-code instead of within the object. </p>

<p>What would have helped the issue would be to not have concrete POCO objects but rather use interfaces instead of virtual members (Read Fabio Maulo’s post <a href="http://fabiomaulo.blogspot.com/2008/10/entity-name-in-action-entity.html">entity-name in action: Entity Abstraction</a> on that topic).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>389</wp:post_id>
<wp:post_date>2008-11-07 14:22:12</wp:post_date>
<wp:post_date_gmt>2008-11-07 12:22:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>virtual-member-call-in-constructor-and-nhibernate</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1347</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP>12.162.118.130</wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:33:56</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 19:33:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1348</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-11-07 15:28:27</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 20:28:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn&#39;t work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..<br>I also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".<br><br>Thanks anyway, I guess initializing the collection isn&#39;t all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1349</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP>63.94.90.24</wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:55:37</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 22:55:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1350</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.68.207</wp:comment_author_IP>
<wp:comment_date>2008-11-07 18:05:46</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 23:05:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet&lt;OrderItem&gt; OrderItems<br>        {<br>            get { return orderItems_; }<br>            set { orderItems_ = value; }<br>        }<br><br>        private ISet&lt;OrderItem&gt; orderItems_;<br><br>        public Order()<br>        {<br>            orderItems_ = new HashedSet&lt;OrderItem&gt;();<br>        }<br><br>I know it should work that way, but it doesn&#39;t.<br>Can&#39;t say why. But it doesn&#39;t work. <br><br>Maybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.<br><br>I think I&#39;ll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3511</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3512</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3513</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3514</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4590</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4588</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4589</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4587</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3651</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3652</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3653</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3654</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3665</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3666</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3667</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3668</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3680</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3681</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3682</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3683</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3687</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3688</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3689</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3690</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3705</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3706</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3707</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3708</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3757</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3758</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3759</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3760</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3799</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3800</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3801</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3802</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3914</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3915</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3916</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3917</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3918</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3919</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3920</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3921</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3944</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3945</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3946</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3947</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3967</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3968</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3969</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3970</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3982</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3983</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3984</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3985</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3995</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3996</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3997</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3998</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4042</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4043</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4044</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4045</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4054</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4055</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4056</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4057</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4059</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4060</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4061</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4062</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4096</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4097</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4098</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4099</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4109</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4110</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4111</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4112</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5187</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4162</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4163</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4164</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4165</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4182</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4183</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4184</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4185</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5251</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5249</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5250</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5248</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4539</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4540</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4541</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4542</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4560</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4561</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4562</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4563</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5353</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5354</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5355</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5356</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4649</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4650</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4651</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4652</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4653</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4654</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4655</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4656</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4671</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4672</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4673</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4674</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4725</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4726</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4727</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4728</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4736</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4737</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4738</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4739</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4748</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4749</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4750</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4751</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4800</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4801</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4802</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4803</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4836</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4837</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4838</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4839</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4905</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4906</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4907</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4908</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4909</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4910</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4911</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4912</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4938</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4939</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4940</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4941</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5029</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5030</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5031</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5032</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5033</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5034</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5035</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5036</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5121</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5122</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5123</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5124</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5129</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5130</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5131</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5132</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5133</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5134</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5135</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5136</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5169</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5170</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5171</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5172</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5188</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5189</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5190</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5308</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 17:05:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 17:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[public virtual ISet<OrderItem> OrderItemsrn        {rn            get { return orderItems_; }rn            set { orderItems_ = value; }rn        }rnrn        private ISet<OrderItem> orderItems_;rnrn        public Order()rn        {rn            orderItems_ = new HashedSet<OrderItem>();rn        }rnrnI know it should work that way, but it doesn't.rnCan't say why. But it doesn't work. rnrnMaybe I should have added that the problem is occuring during my Repository unit tests. If I run the tests one by one it works, but if they get executed all together I get the exception.rnrnI think I'll dedicate some more time to the problem tomorrow. But debugging concurrency issues sucks.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5309</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 16:55:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 16:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You set the field in the ctor, not touching the property, and that will work]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5310</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 14:28:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 14:28:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That didn't work.. I tried having a private field that gets accessed through the property and that gets set by the ctor..rnI also tried to set the field on demand from the property, but both times I got the "Illegal attempt to associate a collection with two open sessions".rnrnThanks anyway, I guess initializing the collection isn't all that difficult after all :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5311</wp:comment_id>
<wp:comment_author><![CDATA[Ayende Rahien]]></wp:comment_author>
<wp:comment_author_email>ayende@ayende.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ayende.com/Blog/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2008-11-07 13:33:00</wp:comment_date>
<wp:comment_date_gmt>2008-11-07 13:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The solution to this is init the collection via the property, but to initialize the field.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Cheap Bugtracking systems</title>
<link>http://www.tigraine.at/2008/11/10/cheap-bugtracking-systems/</link>
<pubDate>Mon, 10 Nov 2008 13:43:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/10/cheap-bugtracking-systems/</guid>
<description></description>
<content:encoded><![CDATA[<p>I don’t like documentation.    <br />Whenever I feel that I need to add comments to a piece of code to make it understandable I usually rework the code until it’s intent and workings are clear from looking at it.</p>  <p>Still, documentation will come after you once you are dealing with defects and planned features. Nobody can keep that stuff in their head, and it’s important to keep track of what your customers expect you to do/fix.</p>  <p>And while big projects demand some “real” process around this issue, when you’re doing small projects you usually don’t want to break a butterfly upon a wheel.</p>  <p>One easy solution is to simply write a <strong>Unit Test that exposes the bug.</strong>     <br />Whether you fix it right away or you check it into your source-tree is totally up to you, but you’ll always see that red light reminding you of that bug.</p>  <p>While at it, I strongly suggest always writing a Unit Test to expose a bug prior to fixing it. You increase your code coverage by fixing bugs, and protect yourself from having the bug surface again with a later change.</p>  <p>Still, you should also look into getting a “real” bugtracking databases like <a href="http://www.fogcreek.com/FogBUGZ/">FogBugz</a> (has a <a href="https://shop.fogcreek.com/FogBugz/default.asp?sCategory=HOSTEDFB&amp;sStep=stepEnterEmailAddress&amp;HFBnForm=1">free 2 person license</a>), or install your own like <a href="http://trac.edgewall.org/">Trac</a> or <a href="http://www.bugnetproject.com/">BugNET</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>390</wp:post_id>
<wp:post_date>2008-11-10 15:43:36</wp:post_date>
<wp:post_date_gmt>2008-11-10 13:43:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cheap-bugtracking-systems</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/11/11/windows-forms-form-within-a-panel/imagepng-2/</link>
<pubDate>Tue, 11 Nov 2008 10:31:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>391</wp:post_id>
<wp:post_date>2008-11-11 12:31:50</wp:post_date>
<wp:post_date_gmt>2008-11-11 10:31:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>392</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:205;s:6:"height";i:95;s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image1-150x95.png";s:5:"width";i:150;s:6:"height";i:95;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Windows Forms: Form within a panel</title>
<link>http://www.tigraine.at/2008/11/11/windows-forms-form-within-a-panel/</link>
<pubDate>Tue, 11 Nov 2008 10:31:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

		<category domain="tag"><![CDATA[composition]]></category>

		<category domain="tag" nicename="composition"><![CDATA[composition]]></category>

		<category domain="tag"><![CDATA[dry]]></category>

		<category domain="tag" nicename="dry"><![CDATA[dry]]></category>

		<category domain="tag"><![CDATA[windows forms]]></category>

		<category domain="tag" nicename="windows-forms"><![CDATA[windows forms]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/11/windows-forms-form-within-a-panel/</guid>
<description></description>
<content:encoded><![CDATA[<p>I already blogged about <a href="http://www.tigraine.at/2008/11/04/common-gotchas-with-inherited-forms/">Visual Inheritance</a> as a tool for avoiding DRY violation. </p>  <p>Once you’re through with any better book on object oriented design you should have found another important oo principle:</p>  <blockquote>   <p><strong>Favor object composition over class inheritance</strong></p> </blockquote>  <p>But how to do that in Windows Forms?    <br />Well, if you dig with Reflector into the Form class you’ll discover that it’s derived from Control. And every container in Winforms accepts Control as it’s child objects. </p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="95" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/11/image1.png" width="205" border="0" /> </p>  <p>Now, this makes it possible to just create a Panel and say:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:04ff352a-cf01-4379-91f6-a0d3d6abf0ee" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
panel1.Controls.Add(form);
</pre></div>

<p></p>

<p>But after running you’ll get a ArgumentException stating that you can’t add a top level control at this level.</p>

<p>The solution to this is even simpler, you simply need to tell the form to not be top level any more:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:889b39b1-f69e-4e1f-8739-094e4a2bf5fe" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
form.TopLevel = false;
</pre></div>

<p></p>

<p>And you’re done, you just need to set the BorderStyle on your form to get rid of the ugly borders and you’ve successfully embedded a form into another form. </p>

<p>The complete example looks like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3f354ea4-74ae-4198-b351-bc95b413b841" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
Form1 form = new Form1();
form.TopLevel = false;
panel1.Controls.Add(form);
form.Show();
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>392</wp:post_id>
<wp:post_date>2008-11-11 12:31:50</wp:post_date>
<wp:post_date_gmt>2008-11-11 10:31:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-forms-form-within-a-panel</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/imagepng-2/</link>
<pubDate>Tue, 11 Nov 2008 19:06:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>393</wp:post_id>
<wp:post_date>2008-11-11 21:06:25</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:109;s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x109.png";s:5:"width";i:150;s:6:"height";i:109;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/image-thumbpng-2/</link>
<pubDate>Tue, 11 Nov 2008 19:06:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>394</wp:post_id>
<wp:post_date>2008-11-11 21:06:25</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:109;s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb-150x109.png";s:5:"width";i:150;s:6:"height";i:109;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/imagepng-3/</link>
<pubDate>Tue, 11 Nov 2008 19:06:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>395</wp:post_id>
<wp:post_date>2008-11-11 21:06:26</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:494;s:6:"height";i:229;s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image3-300x139.png";s:5:"width";i:300;s:6:"height";i:139;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/image-thumbpng-3/</link>
<pubDate>Tue, 11 Nov 2008 19:06:27 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>396</wp:post_id>
<wp:post_date>2008-11-11 21:06:27</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:494;s:6:"height";i:229;s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb1-300x139.png";s:5:"width";i:300;s:6:"height";i:139;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/imagepng-4/</link>
<pubDate>Tue, 11 Nov 2008 19:06:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>397</wp:post_id>
<wp:post_date>2008-11-11 21:06:28</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:572;s:6:"height";i:302;s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x158.png";s:5:"width";i:300;s:6:"height";i:158;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/image-thumbpng-4/</link>
<pubDate>Tue, 11 Nov 2008 19:06:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>398</wp:post_id>
<wp:post_date>2008-11-11 21:06:29</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>399</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:572;s:6:"height";i:302;s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/image-thumb2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb2-300x158.png";s:5:"width";i:300;s:6:"height";i:158;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Conditional breakpoints in Visual Studio</title>
<link>http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/</link>
<pubDate>Tue, 11 Nov 2008 19:06:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/</guid>
<description></description>
<content:encoded><![CDATA[<p>Sometimes you do something and you never really think about what you’re doing.    <br />Like the following code:</p>  <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ddf50501-392a-47d7-92b9-f2ff2858e5d4" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool TestSomething(bool input)
{
&#160;&#160;&#160;&#160;if (input == true)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;else
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>It’s so obvious, I never thought about what I was really doing there, let alone seen the mistake I made. I mean, without any knowledge about boolean evaluation you still should figure out how to get rid of the bracket porn and produce something like this:</p>

<div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c3756d04-9a77-418c-94e6-0678c99fb115" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool TestSomething(bool input)
{
&#160;&#160;&#160;&#160;if (input == true)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true;
&#160;&#160;&#160;&#160;return false;
}
</pre></div>

<p>But that’s only syntactic, the whole statement itself is still silly. The whole <em>== true</em> is completely redundant because you already check a boolean condition to evaluate it to a boolean. 

  <br />So it boils down to:</p>

<div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:25cce3db-6459-4402-a83c-c36e26264ef8" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool TestSomething(bool input)
{
&#160;&#160;&#160;&#160;return input;
}
</pre></div>

<p>And that’s it. You just saved yourself 6 lines of code that where completely useless (<strike>and I guess the compiler is smart enough to optimize that anyway</strike>&#160; <strong>Update: </strong>actually, this does make a difference. The compiler <strong>can’t </strong>figure this out and will produce more IL code because of this).</p>

<p>But once I did this I felt I lack the ability to put a breakpoint on the <em>return false </em>statement. And I eventually may have thought about going back to solution #2. But then I found this little thing in Visual Studio that made my day (and all major IDEs have that, only they hide it well):</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2008/11/image2.png"><img style="display: inline" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb.png" width="240" height="109" /></a> </p>

<p>When you right click a breakpoint you can add a <strong>Condition</strong> to it, so it will only break when that condition is met. I did so, and voila:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2008/11/image3.png"><img style="display: inline" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb1.png" width="494" height="229" /></a> </p>

<p></p>

<p>Without having to degrade my code I still could break only when false was returned. 
  <br />So when I ran it the first break was in the third call:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2008/11/image4.png"><img style="display: inline" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2008/11/image-thumb2.png" width="572" height="302" /></a></p>

<p>So, thank god for such great tools like Visual Studio and ReSharper (R# hinted to me that I was doing something stupid in the first place)!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>399</wp:post_id>
<wp:post_date>2008-11-11 21:06:29</wp:post_date>
<wp:post_date_gmt>2008-11-11 19:06:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>conditional-breakpoints-in-visual-studio</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>One thing I miss from the VB6 days</title>
<link>http://www.tigraine.at/2008/11/18/one-thing-i-miss-from-the-vb6-days/</link>
<pubDate>Tue, 18 Nov 2008 12:38:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/18/one-thing-i-miss-from-the-vb6-days/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, now I’m doomed. That headline alone should be enought for a death sentence. But still – there was one thing in the visual designer I liked:</p>  <p>Back in the day you could give two labels the same name and then assign them an Index property. The designer then would generate a array of labels with the given indexes. In Visual Studio 200X, this is not possible without altering the designer.cs file and that then leads to problems when changing the form. </p>  <p>I just encountered this because I have some status labels for some kind of wizard interface. One of them has to be bold, the others shouldn’t. And the most natural way to do that would be to simply have them in an array or list of some sort and loop over them changing their font values.</p>  <p>Anyway, guess I’ll be adding the designer created labels to a list and iterating over that.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>400</wp:post_id>
<wp:post_date>2008-11-18 14:38:28</wp:post_date>
<wp:post_date_gmt>2008-11-18 12:38:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>one-thing-i-miss-from-the-vb6-days</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>POCO Demo for Stackoverflow</title>
<link>/demo/</link>
<pubDate>Thu, 20 Nov 2008 09:14:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/11/demo.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>401</wp:post_id>
<wp:post_date>2008-11-20 11:14:29</wp:post_date>
<wp:post_date_gmt>2008-11-20 09:14:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>demo</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/11/demo.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/demo.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:523;s:6:"height";i:145;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:65:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/11/demo.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"demo-150x145.png";s:5:"width";i:150;s:6:"height";i:145;}s:6:"medium";a:3:{s:4:"file";s:15:"demo-300x83.png";s:5:"width";i:300;s:6:"height";i:83;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Patience is a virtue I don&#8217;t have</title>
<link>http://www.tigraine.at/2008/11/20/patience-is-a-virtue-i-dont-have/</link>
<pubDate>Thu, 20 Nov 2008 12:54:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[hardware]]></category>

		<category domain="tag" nicename="hardware"><![CDATA[hardware]]></category>

		<category domain="tag"><![CDATA[productivity]]></category>

		<category domain="tag" nicename="productivity"><![CDATA[productivity]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/20/patience-is-a-virtue-i-dont-have/</guid>
<description></description>
<content:encoded><![CDATA[<p>I hate waiting for stuff when working. Whenever something hangs, lags or simply doesn’t work right the first time I get annoyed. </p>  <p>Usually a little distraction like this doesn’t really hurt too much, but when you are deep in thought while programming – and something hangs, I can almost feel how my memory gets flushed and my productivity drops to zero for the next few minutes while I try to get back into everything.</p>  <p>This is very very very bad, and that’s why I am feeding insane amounts of money to the hardware vendors. I need the best performance not because of the insane calculations I do but simply because I can’t afford to get distracted by lagging applications.</p>  <p>Same thing applies to unit tests and build processes. It’s important to keep those as short as possible. If I’m doomed to wait for 2 minutes to see if my unit tests pass or not I will either not run them as frequently, or I will run them and do something else in between. Either way I loose productivity.</p>  <p>So, while at it, I guess the server I wanted to configure stopped hanging while I wrote this. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>402</wp:post_id>
<wp:post_date>2008-11-20 14:54:43</wp:post_date>
<wp:post_date_gmt>2008-11-20 12:54:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>patience-is-a-virtue-i-dont-have</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>You have to know English to be a Programmer!</title>
<link>http://www.tigraine.at/2008/11/21/you-have-to-know-english-to-be-a-programmer/</link>
<pubDate>Fri, 21 Nov 2008 16:29:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[i18n]]></category>

		<category domain="tag" nicename="i18n"><![CDATA[i18n]]></category>

		<category domain="tag"><![CDATA[language]]></category>

		<category domain="tag" nicename="language"><![CDATA[language]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/11/21/you-have-to-know-english-to-be-a-programmer/</guid>
<description></description>
<content:encoded><![CDATA[Scott Hanselman just blogged this interesting letter from <a href="http://www.microsoft.com/video/en/us/details/b3a02d0f-f5bc-47d4-acbd-8dc5034dcdb0">Fabrice Fonck</a> on Microsoft’s effort to localize Visual Studio and .NET entitled <a href="http://www.hanselman.com/blog/DoYouHaveToKnowEnglishToBeAProgrammer.aspx">Do you have to know English to be a Programmer?</a> and I wanted to share my thoughts on this as a non-native speaker:

As most of you may know, I am from Austria – so my native tongue is German. There should be about 100 million people speaking that language and so it’s rather natural that there are many sites discussing programming topics in German and also there are many books that get translated.
So, while I know that you could be a rather successful programmer in Germany/Austria without English, I really believe it’s <strong>utterly impossible to be a <span style="text-decoration: underline;">good</span> programmer </strong>without being fluent in English!

Why? Simply, because being a good programmer is not about knowledge, ability or technology but about your ability to acquire even more knowledge and constantly improve and refine your skills.

And you really can’t do that if deny yourself access to 90% of the internet’s resources. You’ll miss out on great articles from people like <a href="http://www.hanselman.com/blog/">Scott Hanselman</a>, <a href="http://ayende.com/">Ayende Rahien</a>, <a href="http://misko.hevery.com/">Miško Hevery</a>, <a href="http://blog.wekeroad.com/">Rob Conery</a>, <a href="http://codebetter.com/blogs/karlseguin/default.aspx">Carl Senguin</a> and many more who have contributed great articles that have influenced my skill directly.

Not accepting that English is the predominant language in software development only fragments the community and hinders sharing of knowledge.

And to be honest, all our programming languages are based on the English syntax, so I can’t think about a way for somebody with no English skills to write code against the .NET framework anyway. The code we produce is in English and defines it’s context/meaning/purpose through naming. Not being able to understand the meaning of System.Net.MailMessage.To is a serious problem when trying to write software (when not copying snippets and samples).

One thing remains to be said:
When writing code I constantly encounter one problem: German speaking customers vs English speaking code.
Naming my objects in German doesn't work for me, it starts to feel wrong if you mix two languages (English syntax and German variables), so I translate the German requirements and object names to English ones.

This makes it sometimes difficult to talk to the the customer during development, because I use words he doesn’t know and I constantly have to map his words to mine. This isn’t so much of a problem as long as you as a developer don’t mix things up and choose your translations right. Still it annoys a bit and I would be thankful for a English customer once in a while :).

Finally: I <a href="http://www.tigraine.at/2008/01/02/changes-incoming/">switched my blog to English</a> almost a year ago because I felt that blogging in German created a barrier for me. I couldn’t point anyone outside Austria/Germany to my writings. And while many people since have asked my why I neglect German (mostly out of curiosity), I can’t say I have ever regretted this move (and my English did benefit from this).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>403</wp:post_id>
<wp:post_date>2008-11-21 18:29:06</wp:post_date>
<wp:post_date_gmt>2008-11-21 16:29:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>you-have-to-know-english-to-be-a-programmer</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1258996254</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2063</wp:comment_id>
<wp:comment_author><![CDATA[zerok]]></wp:comment_author>
<wp:comment_author_email>zerok@zerokspot.com</wp:comment_author_email>
<wp:comment_author_url>http://zerokspot.com</wp:comment_author_url>
<wp:comment_author_IP>143.205.176.60</wp:comment_author_IP>
<wp:comment_date>2008-11-21 17:51:39</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 22:51:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[So true. I&#39;m always completely shocked when I see some code with German or (as I had the great pleasure once) Italian variables, methods, classes  and not to forget comments. Extending this project was a complete nightmare. If I&#39;m at the code level, one language is enough. Mixing languages (even if I just use German in comments) would just be to confusing.<br><br>Although I don&#39;t go that far as translating requirements and design documents into English if I have an Austrian or German customer.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2065</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2008-11-21 17:57:59</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 22:57:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I don&#39;t translate them, I write them in english first because I usually base them on some sort of class diagram that&#39;s already in english.<br>I also try to have a very strong relationship between my objects and the real world, so I end up showing the customer many class diagrams that come from the code etc.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3246</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Translation taken too far]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/26/translation-taken-too-far/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-26 10:15:13</wp:comment_date>
<wp:comment_date_gmt>2009-08-26 08:15:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] said in the past that I believe you have to know English to be a programmer, and sometimes I get a painful reminder about how right I [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>mk-otherviews-nek4k-01.jpg</title>
<link>http://www.tigraine.at/2008/12/04/microsoft-natural-keyboard-4000-review/mk-otherviews-nek4k-01jpg/</link>
<pubDate>Thu, 04 Dec 2008 14:41:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/12/mk-otherviews-nek4k-01.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>404</wp:post_id>
<wp:post_date>2008-12-04 16:41:45</wp:post_date>
<wp:post_date_gmt>2008-12-04 14:41:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mk-otherviews-nek4k-01jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>405</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/12/mk-otherviews-nek4k-01.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/mk-otherviews-nek4k-01.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:277;s:6:"height";i:176;s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:83:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/mk-otherviews-nek4k-01.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"mk-otherviews-nek4k-01-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Microsoft Natural Keyboard 4000 Review</title>
<link>http://www.tigraine.at/2008/12/04/microsoft-natural-keyboard-4000-review/</link>
<pubDate>Thu, 04 Dec 2008 14:41:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category domain="tag"><![CDATA[hardware]]></category>

		<category domain="tag" nicename="hardware"><![CDATA[hardware]]></category>

		<category domain="tag"><![CDATA[keyboard]]></category>

		<category domain="tag" nicename="keyboard"><![CDATA[keyboard]]></category>

		<category domain="tag"><![CDATA[Microsoft]]></category>

		<category domain="tag" nicename="microsoft"><![CDATA[Microsoft]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/04/microsoft-natural-keyboard-4000-review/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’m a keyboard addict. I love keyboards and they love me.    <br />I never managed to break one in any way because I have never used one long enough to break it. I consider my keyboard the most important tool as a programmer, and that’s why I constantly try to get the best available. </p>  <p>I guess that is over, I haven’t bought a new keyboard for over a year now. </p>  <p>My last 3 keyboard buys have all been the <a href="http://www.microsoft.com/hardware/mouseandkeyboard/productdetails.aspx?pid=043">Microsoft Natural Ergonomic Keyboard 4000</a> so I have one for every workplace I happen to be at. My 2 computers at home have one, my desk at work has one, it’s just that great!</p>  <p><img title="mk_otherviews_nek4k_01" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="176" alt="mk_otherviews_nek4k_01" src="http://www.tigraine.at/wp-content/uploads/2008/12/mk-otherviews-nek4k-01.jpg" width="277" border="0" /> </p>  <p>I got introduced to Ergonomic keyboards through the Logitech Ergonomic Desktop Freedom Pro (or at least I think it was called that way) and used it long enough to really learn how to properly type. It was good compared to what I was using before (10 pound IBM bricks) and it was the first keyboard I actually bought myself (for the ridiculous amount of 280&euro; as a 16 year old). Unfortunately Logitech discontinued the ergo series and Microsoft’s old Natural keyboard was discontinued too so I switched back to normal keyboards for quite some time (trying out all sorts of fancy keyboards like the <a href="http://www.microsoft.com/products/info/product.aspx?view=22&amp;pcid=ca22bf27-b18c-4084-b0e9-85b9e42e826a&amp;type=ovr">Fingerprint Keyboard</a> etc) before I found the Microsoft Natural 4000. </p>  <p>At that point I haven’t used a ergonomic keyboard for some years so I was hesitant, but I got lured by the price. 40&euro; is nothing after having spent 100&euro; on the Logitech G15 (worst keyboard ever) and I was blown away by what I got!</p>  <p>Typing is so convenient on this keyboard, and my wrists feel a lot better after extended periods of work than they did before on the (ergonomic nightmare) G15 (we’re talking about magnitudes of &gt;300% here).    <br />The leather I rest my wrists on feels very comfortable and soft even after a year of extensive use.</p>  <p>The keyboard also comes with some sort of tilt-attachment that creates a reverse slope. It’s unusable if you want to play games, but for typing it is very comfortable to not have to bend your wrist to access keys.</p>  <p>Also notable is that the keyboard comes with a standard pgup/pgdown layout instead what makes working pretty easy once again (who designed the DELL keyboards should be crucified for the Pos1/End placement!).</p>  <p>Some shortcomings: </p>  <ul>   <li>No Next/Previous Media functionality. Only Play/Pause and Volume control buttons.</li>    <li>No lock workstation button, I had to remap my Calculator key</li>    <li>Zoom wheel in the middle of the keyboard is pretty much useless.</li> </ul>  <p>Still, the best keyboard you can get.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>405</wp:post_id>
<wp:post_date>2008-12-04 16:41:45</wp:post_date>
<wp:post_date_gmt>2008-12-04 14:41:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>microsoft-natural-keyboard-4000-review</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>6358304-cd37b36deb.jpg</title>
<link>http://www.tigraine.at/2008/12/05/practices-you-dont-throw-away-when-your-deadline-approaches/6358304-cd37b36debjpg/</link>
<pubDate>Fri, 05 Dec 2008 13:58:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/12/6358304-cd37b36deb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>406</wp:post_id>
<wp:post_date>2008-12-05 15:58:41</wp:post_date>
<wp:post_date_gmt>2008-12-05 13:58:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>6358304-cd37b36debjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>407</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/12/6358304-cd37b36deb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/6358304-cd37b36deb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:500;s:6:"height";i:303;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:79:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/6358304-cd37b36deb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"6358304-cd37b36deb-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"6358304-cd37b36deb-300x181.jpg";s:5:"width";i:300;s:6:"height";i:181;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Practices you don&#8217;t throw away when your deadline approaches</title>
<link>http://www.tigraine.at/2008/12/05/practices-you-dont-throw-away-when-your-deadline-approaches/</link>
<pubDate>Fri, 05 Dec 2008 13:58:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category domain="tag"><![CDATA[best-practices]]></category>

		<category domain="tag" nicename="best-practices"><![CDATA[best-practices]]></category>

		<category domain="tag"><![CDATA[deadlines]]></category>

		<category domain="tag" nicename="deadlines"><![CDATA[deadlines]]></category>

		<category domain="tag"><![CDATA[project management]]></category>

		<category domain="tag" nicename="project-management"><![CDATA[project management]]></category>

		<category domain="tag"><![CDATA[Testing]]></category>

		<category domain="tag" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/05/practices-you-dont-throw-away-when-your-deadline-approaches/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/devos/6358304/sizes/m/" rel="license"><img title="6358304_cd37b36deb" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="303" alt="6358304_cd37b36deb" src="http://www.tigraine.at/wp-content/uploads/2008/12/6358304-cd37b36deb.jpg" width="500" border="0" /></a>     <br />(image by <a href="http://www.flickr.com/photos/devos/">deVos</a>)</p>  <p>So, I’m a bit under pressure right now. I don’t blog too much because I’m bound to a immutable release date of 7th of January. If I don’t get the software out until 7th of January the customer will have to wait for another <em>year </em>before he can make the switch from his (pain in the ass) 15 year old MS-DOS software. </p>  <p>So you see I’m not only a little bit stressed, I’m looking forward to a Christmas holiday I’ll probably spend locked into some room finishing the software day and night.    <br />As that deadline approaches, there are some things I have noticed in my current development that suddenly don’t seem fit any more due to time constraints.</p>  <p>I know my business layer needs a major refactoring (a day or so) to keep my domain logic “clean” of clutter. But I know I can’t spend a day refactoring something that has to ship next week (I want to have the app user tested by 7th). Still I can think before I code.    <br />One thing I see in legacy code all the time is how people stop thinking once they approach deadlines, but start to just mindlessly copy/paste stuff to make it work somehow. </p>  <p>Here’s one principle you should <strong><u>NEVER</u></strong> forget:</p>  <blockquote>   <p>DRY – don’t repeat yourself</p> </blockquote>  <p>Not repeating yourself through simple copy and paste will at least make it easy for you not to have to rewrite the whole thing once a change has to be made. I can retrofit extensive tests and good SoC, but I am doomed once I have to change the same piece of code throughout the whole application.</p>  <p>If I’m so stressed that I have to write crappy code, It’s still my duty to fix it sometime later, and that’s not possible if&#160; one business rule (it may be as simple as amount/numberOfRates) is done at 20 different places!    <br />That then leads me to the next point, fixing stuff later requires at least some automated tests (nothing is worse than writing fixes that have more bugs in them).</p>  <p>Testing isn’t difficult, and it saves you more time than it takes. You may think you’re faster if you run the app once and see if it works, but apps don’t run as fast as unit tests, and once you have to run it several times to make it work you would have saved time by writing a unit test first. And although my tests look ugly and may be incomplete, I have verified that the most important calculations and interactions work (and can rerun those tests and verify that stuff still works later when I try to clean up the mess).</p>  <p>So, by applying (even incomplete) testing to my app, and not violating DRY I still retain the ability to easily extend and manipulate my application in the future. Once I’m done I can easily run <a href="http://www.ncover.com/">NCover</a> and find out what code I didn’t cover in my tests..</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>407</wp:post_id>
<wp:post_date>2008-12-05 15:58:42</wp:post_date>
<wp:post_date_gmt>2008-12-05 13:58:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>practices-you-dont-throw-away-when-your-deadline-approaches</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2434</wp:comment_id>
<wp:comment_author><![CDATA[eOL]]></wp:comment_author>
<wp:comment_author_email>eol@thew4.org</wp:comment_author_email>
<wp:comment_author_url>http://EolRuin.vox.com</wp:comment_author_url>
<wp:comment_author_IP>213.142.115.169</wp:comment_author_IP>
<wp:comment_date>2008-12-05 16:31:31</wp:comment_date>
<wp:comment_date_gmt>2008-12-05 21:31:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Neat post. A "must" read.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>When Amazon became Ebay</title>
<link>http://www.tigraine.at/2008/12/08/when-amazon-became-ebay/</link>
<pubDate>Mon, 08 Dec 2008 13:47:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/08/when-amazon-became-ebay/</guid>
<description></description>
<content:encoded><![CDATA[<p>There are many things I love about Amazon: free shipping, recommendations, customer reviews, good product pictures, awesome website, gift lists. I could go on and on, all those things make Amazon the #1 shopping site on the internet, and I love buying my stuff there. They offer free shipping on everything above 20&euro; and all books ship for free too. So, whatever you buy, you never think about shipping, you never think about returns or anything. You always know, there’s this big-ass company called Amazon that takes customer satisfaction etc pretty serious and will not cause you any troubles on returns etc. They always ship on time and they have almost everything.</p>  <p>Now, Amazon decided some time ago that “almost” everything isn’t enough and they went to really everything.    <br />They opened the Amazon platform up through a program called Marketplace, where other vendors can sell their products through the Amazon.com website. And man do I hate that feature!    <br />I never went to Amazon because they had everything, I went there because they had almost everything completely hassle-free.     <br />Now, when I am searching for something I end up at 3rd party vendors 90% of the time (feels like Amazon stopped selling themselves almost) that have different shipping policies (almost nobody offers free shipping except for Amazon) and different return policies. Hell, I’ve seen 1-man-shops surface on Amazon that didn’t even have a rightful email address (listing a hotmail address in your company profile does NOT generate trust!).</p>  <p>Last week I decided to order a Canon EOS 450D DSLR and went to Amazon to shop for accessories&#160; like memory, batteries etc.    <br />Guess what? It took me almost 30 clicks to get to a product that was offered by Amazon! When searching for a SanDisk SDHC Extreme III 8gb card I found it 4 times, from 4 different 3rd party vendors but not from Amazon.    <br />I gave up after 30 minutes of searching and ordered another SD card, completely pissed and very unsatisfied. And there is no way to turn the marketplace off, there is a filter that lets you select vendors but apparently this isn’t working when selecting Amazon (you still end up with a listing of 3rd party vendor sold products, yikes!).</p>  <p>The best thing is: Apparently Amazon is selling the <a href="http://www.amazon.de/SanDisk-Digital-Capacity-Extreme-Speicherkarte/dp/B000Y9TZ9Y/ref=pd_sim_ce_3">SanDisk SDHC Extreme III 8gb</a> card, I just couldn’t find it last week but did so now.</p>  <p>So why did Amazon destroy one of the most pleasant buying experiences of all time? I go to Amazon to buy <em>their</em> products, not to buy some other guys products he is selling from his basement, getting charged shipping costs and not knowing how returns or reclamations are going to be handled! Are those people insane? If I’d be into that kind of things I would be shopping at Ebay not at a respected and well trusted Amazon!</p>  <p>I can only hope Amazon will change their mind on this and create some “Amazon products only” button, so I can enjoy shopping again. Now it’s more a quest to filter 30 products for their vendor.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>408</wp:post_id>
<wp:post_date>2008-12-08 15:47:25</wp:post_date>
<wp:post_date_gmt>2008-12-08 13:47:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>when-amazon-became-ebay</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2443</wp:comment_id>
<wp:comment_author><![CDATA[a_worried_shopper]]></wp:comment_author>
<wp:comment_author_email>turrican_as@gmx.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>194.177.134.130</wp:comment_author_IP>
<wp:comment_date>2008-12-15 10:16:32</wp:comment_date>
<wp:comment_date_gmt>2008-12-15 15:16:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh man, you are so right *sigh*]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The power of delegates in C#</title>
<link>http://www.tigraine.at/2008/12/12/delegates-and-eventing-in-c/</link>
<pubDate>Fri, 12 Dec 2008 16:58:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/12/delegates-and-eventing-in-c/</guid>
<description></description>
<content:encoded><![CDATA[<p>The common way to learn OOP design and best practices is through books on Java or books on C# that got translated from Java.    <br />And since Java and C# both work pretty similar as far as objects are concerned, I never saw delegates put to good use except for events where they were automagically generated and used by the winforms designer.     <br />I always knew delegates as a method signature that had to be present for an event to work (since the event requires a delegate type), but knew little else about their usage and workings.</p>  <p>So, I was quite amazed when I found out how useful delegates really are besides when doing events.    <br />The delegate is simply put a “method signature type”, something like a interface for a method (or you could call it “function pointer” if you’re an oldschool C guy).     <br />So it is essentially a type that represents a method, allowing you to call or pass around any method that matches that signature as a object.</p>  <p>So imagine the following two classes that share a common signature but no supertype or interface:</p>  <p></p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f2ba912d-00c8-4c4d-921d-0c45ddb7921f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Class1
{
&#160;&#160;&#160;&#160;public void Notify()
&#160;&#160;&#160;&#160;{}
}
public class Class2
{
&#160;&#160;&#160;&#160;public void Notify()
&#160;&#160;&#160;&#160;{}
}
</pre></div>

<p></p>

<p>Now imagine you need to have those Subject classes in a list and you need to loop through them and call Notify on each of them. No problem if they share a supertype or a interface, and if they don’t you could extract an interface easily. </p>

<p>But if you don’t control that code (because it’s from a 3rd party etc), you’re forced to write some sort of adapter class that provides a common interface if you want to call that one method on all of them in some unified way.</p>

<p>Now C# has solved this problem gracefully by treating methods as a type, so if you omit the parentheses on your method call it will return a object representing that method. And that object can then be stored in a variable of a delegate type that matches the original method’s signature.</p>

<p>So I could define a delegate that can then be called to reference methods in different classes as long as they match my delegate signature:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a1fd5bf0-81e3-4f04-a00a-02854725c934" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public delegate void doNotify();
</pre></div>

<p></p>

<p>I could then create a variable of type doNotify that contains a reference to my Notify method in Class1 and call that variable instead of the concrete method on Class1:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bcb93b5a-10fd-4ae9-a218-d43544bed490" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
doNotify method1 = new Class1().Notify;
method1();
</pre></div>

<p></p>

<p>The real beauty of this is that I can also pass that delegate around to other methods that know nothing about the type, only about that one method signature. Therefore I could write code like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:941413ca-2a79-4158-8c3d-a16e4de824d4" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static void DoSomethingAndNotifyAll(IList&lt;doNotify&gt; subjects)
{
&#160;&#160;&#160;&#160;foreach (var notify in subjects)
&#160;&#160;&#160;&#160;{ notify(); }
}
</pre></div>

<p>Where this came really handy (and where I found out about it) was when doing a pretty simple list interface that had a dropdown field that controlled sorting of the list. It was pretty standard, I had 3 methods that sorted the list (and I know I should have extracted strategy classes, but that seemed too heavy for the task at hand) and depending on the selected item in the dropdown one of those 3 should get called. The usual course of action would be to switch on the value of the dropdown, but that would have created a maintenance nightmare in the long term (inserting and dealing with the value would be somewhat redundant and I’d have to update 2 code passages for one change in the future). So the simplest solution I came up with was to create a delegate for the sort methods (<em>public delegate void doSort()</em>) and create a class that took a text and that delegate and exposed it as fields. Now I could use the DisplayMember property on my dropdown to display the text for the sort function and when needed I could just call the sort function through the delegate. </p>

<p>This then leads me to the apparent lack of generic controls in .NET that make all this interface work feel awkward and wrong because you are casting to and forth all the time, but that’s another story. </p>

<p>That all being said, I can’t say I encourage heavy use of delegates because the concept can be so easily abused. In most cases it’s better to use interfaces and object composition because they are not only better known, but also more explicit (you don’t see the delegate use as easy as some implemented interface). Use them wisely and you have a very powerful tool at hand, overuse it and you will end up with some pretty hard to read code.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>409</wp:post_id>
<wp:post_date>2008-12-12 18:58:57</wp:post_date>
<wp:post_date_gmt>2008-12-12 16:58:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>delegates-and-eventing-in-c</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Don&#8217;t get spoiled by LinQ To SQL</title>
<link>http://www.tigraine.at/2008/12/16/dont-get-spoiled-by-linq-to-sql/</link>
<pubDate>Tue, 16 Dec 2008 11:55:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/16/dont-get-spoiled-by-linq-to-sql/</guid>
<description></description>
<content:encoded><![CDATA[<p>I got introduced to LinQ through the famous posts by ScottGu on <a href="http://weblogs.asp.net/scottgu/archive/2007/05/19/using-linq-to-sql-part-1.aspx">Linq-to-Sql</a> and always thought of LinQ as some really cool language thing that automagically enabled me to write queries within .NET.</p>  <p>All of ScottGu’s samples look like actual SQL Queries with real keywords within the language like:</p>  <p></p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:43d1f96f-4558-4dd3-a78a-8ada13726a9b" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var result =&#160;&#160; from s in strings
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; where s.StartsWith("d")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; select s;
</pre></div>

<p></p>

<p>So, when I was just briefly trying to get stuff done I used all those keywords as they seemed to fit and didn’t really try to understand the “deeper” concept behind those (as they magically generated SQL queries). MS introduced new keywords into the language, so be it, I was looking them up in MSDN and used them as such when using the LinQ-to-Sql datacontext.</p>

<p>Now, that I (<a href="http://ayende.com/Blog/archive/2008/10/31/microsoft-kills-linq-to-sql.aspx">and apparently Microsoft</a>) have departed from LinQ-to-Sql I somehow forgot about LinQ for quite some time simply because I had no need for in-memory-queries for quite some time. And to be honest, I also never really thought about applying that strange LinQ syntax to objects in memory (I considered the above mentioned LinQ query more as a “c# strongly typed version of SQL” rather than a in-memory query method)</p>

<p>So, I was quite amazed of what you can actually do with LinQ if you abandon this strange undiscoverable SQL syntax and simply use method chaining. The above query can be rewritten without any “keyword magic” but with plain objects to look like this:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7b9c52ec-de42-4eb4-94a3-18d46e484aa1" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var result = strings.Where(s =&gt; s.StartsWith("d"));
</pre></div>

<p></p>

<p>The beauty of it? All the LinQ overloads reside on the IEnumerable&lt;T&gt; interface, and most of these methods will return an IEnumerable&lt;T&gt; so you can “chain” those method calls together like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2eea97fb-9ad4-467d-95ab-944ea1a766fb" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var result = strings
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Where(s =&gt; s.StartsWith("d"))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.OrderBy(p =&gt; p.Length)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Select(p =&gt; p.Substring(0, 4));
</pre></div>

<p></p>

<p></p>

<p>And now the whole thing started to make sense. I can easily grasp how this is supposed to work, instead of looking at awe at the “SQL query” that magically works. And that’s where I went wrong the first time. </p>

<p>Instead of learning LinQ to objects first, I got caught in the database centric world of LinQ-to-Sql that made me not think of LinQ as anything other than a Database query tool.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>411</wp:post_id>
<wp:post_date>2008-12-16 13:55:15</wp:post_date>
<wp:post_date_gmt>2008-12-16 11:55:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-get-spoiled-by-linq-to-sql</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Ship!</title>
<link>http://www.tigraine.at/?p=413</link>
<pubDate>Thu, 18 Dec 2008 11:49:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=413</guid>
<description></description>
<content:encoded><![CDATA[You may have noticed that I have been trying to do some DDD design with NHibernate and lately, and I guess I should expand a bit on that.

I got hired to build a financial business application for a customer that’s in the process of expanded his business. His old business software was written in classic ASP some years ago and couldn’t handle the new requirements in any way, and although I usually advocate not to rewrite stuff, this time a rewrite needed to happen (no tests, thousand violations of DRY, no seperation of concerns, unreadable code …).

So I was asked to write something new (but similar) and the first meeting went like this “rebuild the basic structure of the old thing and then we’ll cover the details on how to handle x y z”.
And stupid me went off to do exactly that. So I spent almost a month of my life trying to make sense out of the old db model, and writing interfaces for peripheral entities.

That was a mistake!
The solution my customer needed was something completely different than what he demanded. He thought he knew, but as a software engineer it’s your job to solve the problem in the most appropriate way, not to trust the customer to choose the solution.

So, after said mistake it took me another two meetings to ask the most important question of all <em>“Why do we do this as a web application instead of a desktop app?”</em> (yeah, that one got me some strange looks). But guess what, nobody had an answer, they demanded a web app because the last one was one, not because they actually needed one. Turned out that they may need a different web interface for customer interaction in the future, but at the moment they need a business software that has to be running exclusively within their office network.

And since there are people working 8 hours a day (I knew that upfront) I really wanted to get the user experience right. While initially working on the web-application I was challenged with two things: Create the app, and make it work like a desktop app. On the desktop app I was only focusing on the application itself, updating some controls that actually have state]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>413</wp:post_id>
<wp:post_date>2008-12-18 13:49:33</wp:post_date>
<wp:post_date_gmt>2008-12-18 11:49:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1243357150</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Mapping large text or binary values with NHibernate</title>
<link>http://www.tigraine.at/2008/12/19/mapping-large-text-or-binary-values-with-nhibernate/</link>
<pubDate>Fri, 19 Dec 2008 12:35:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/19/mapping-large-text-or-binary-values-with-nhibernate/</guid>
<description></description>
<content:encoded><![CDATA[<p>I encountered the following error when trying to map a large String to my SQL2005 database:</p>  <blockquote>   <p>SQL Error Code -2146232060: “String or binary data would be truncated”</p> </blockquote>  <p>The issue here is that Nhibernate maps all string values by default as nvarchar(255) and so inserting something bigger to a field causes this nasty sql error. My mapping declaration looked like this:</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:76fdf55d-70fe-4d24-9b29-e51fd1219d77" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;property name="Comments" /&gt;
</pre></div>
</p>

<p>After some searching I found Ayende’s post on <a href="http://ayende.com/Blog/archive/2006/12/30/NHibernateAndLargeTextFieldsGotchas.aspx">NHibernate and large text fields gotchas</a> that almost solved the issue, except for one thing, I didn’t know where to put the sql-type attribute. Turns out it’s defined in chapter 15 of the NHibernate doc (while mapping files are chapter 5).&#160;&#160; <br />The sql-type=”NTEXT” attribute can only reside on the &lt;column node beneath the &lt;property node. So the correct mapping looks like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:12fe7a8c-64e2-4028-9ab4-96ab8358042d" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;property name="Comments" type="StringClob"&gt;
&#160;&#160;&lt;column name="Comments" sql-type="NTEXT"/&gt;
&lt;/property&gt;
</pre></div>

<p>If you don’t define the sql-type attribute even the StringClob field will be created as a nvarchar(255) by NHibernate (but it can map to a NText field if the schema exists).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>415</wp:post_id>
<wp:post_date>2008-12-19 14:35:03</wp:post_date>
<wp:post_date_gmt>2008-12-19 12:35:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mapping-large-text-or-binary-values-with-nhibernate</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>AxisAndAllies</title>
<link>/img_0792/</link>
<pubDate>Tue, 23 Dec 2008 01:24:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/12/img_0792.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>417</wp:post_id>
<wp:post_date>2008-12-23 03:24:13</wp:post_date>
<wp:post_date_gmt>2008-12-23 01:24:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0792</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/12/img_0792.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img_0792.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:1000;s:6:"height";i:667;s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:69:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img_0792.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"img_0792-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:20:"img_0792-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;}}s:10:"image_meta";a:10:{s:8:"aperture";d:4.5;s:6:"credit";s:0:"";s:6:"camera";s:14:"Canon EOS 450D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1229983589;s:9:"copyright";s:0:"";s:12:"focal_length";i:37;s:3:"iso";i:400;s:13:"shutter_speed";d:0.01666666666666666518636930049979127943515777587890625;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>img-1861.jpg</title>
<link>http://www.tigraine.at/2008/12/29/feeling-like-bruce-wayne/img-1861jpg/</link>
<pubDate>Mon, 29 Dec 2008 13:44:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/12/img-1861.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>418</wp:post_id>
<wp:post_date>2008-12-29 15:44:42</wp:post_date>
<wp:post_date_gmt>2008-12-29 13:44:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img-1861jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>420</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/12/img-1861.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img-1861.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:1000;s:6:"height";i:667;s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:69:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img-1861.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"img-1861-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:20:"img-1861-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>img-1861-thumb.jpg</title>
<link>http://www.tigraine.at/2008/12/29/feeling-like-bruce-wayne/img-1861-thumbjpg/</link>
<pubDate>Mon, 29 Dec 2008 13:44:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2008/12/img-1861-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>419</wp:post_id>
<wp:post_date>2008-12-29 15:44:43</wp:post_date>
<wp:post_date_gmt>2008-12-29 13:44:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img-1861-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>420</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2008/12/img-1861-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img-1861-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:244;s:6:"height";i:164;s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:75:"/kunden/185575_9020/webseiten/wp-content/uploads/2008/12/img-1861-thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"img-1861-thumb-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Feeling like Bruce Wayne</title>
<link>http://www.tigraine.at/2008/12/29/feeling-like-bruce-wayne/</link>
<pubDate>Mon, 29 Dec 2008 13:44:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[Personal]]></category>

		<category domain="tag" nicename="personal"><![CDATA[Personal]]></category>

		<category domain="tag"><![CDATA[project management]]></category>

		<category domain="tag" nicename="project-management"><![CDATA[project management]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2008/12/29/feeling-like-bruce-wayne/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2008/12/img-1861.jpg"><img title="IMG_1861" style="border-top-width: 0px; display: inline; border-left-width: 0px; float: left; border-bottom-width: 0px; border-right-width: 0px" height="164" alt="IMG_1861" src="http://www.tigraine.at/wp-content/uploads/2008/12/img-1861-thumb.jpg" width="244" border="0" /></a> </p>  <p>Although I don’t dress up with a fancy black suit and hunt criminals by night, holiday season means living a double life for me.    <br />Most of my friends study in Vienna or Graz and only visit during holidays, so whenever they are all in town I have to maintain a student life during the night while still working during the day. That usually means getting up at 9am while staying up till 5am.</p>  <p>Believe me, when 6 people don’t accept no for an answer and want to play poker at your place, you’d better restock on coffee and make sure you eat light so you don’t ruin your stomach completely. (I start regretting having built my own poker table)</p>  <p style="clear: both">And still, it’s holidays so trying to maintain a 8 hour per day pace is almost impossible. Besides your family obligations at various christmas celebrations and the usual shopping madness there isn’t really enough space to get focussed on something long enough to actually finish it in a good way.</p>  <p>So today I came back to office and started filling out the holes in my application I left during the holidays. Working my way from //TODO: statement to the next, revisiting the old code I noticed one thing: <strong>Code quality doesn’t matter.</strong></p>  <p>When I write code I can’t forget it afterwards. I mean, I suck at remembering syntax or class names (man I love google for bringing back my memories over and over again), but if I feel like a solution isn’t elegant enough or a module should be restructured to make more sense I’ll think about it whenever not occupied and eventually come up with something better.    <br />What would have taken me hours to get right the first time, was fixed in a matter of minutes after I had time to think about it. So this leads to the interesting conclusion that <em>nothing I’ll write today will actually matter next week, <strong>as long as I constantly rethink and rework my cod</strong></em><strong>e</strong> I’ll end up with high-quality code no matter how bad it was when I first wrote it. </p>  <p>So the most important thing to consider when writing code the first time is not let implementation details “leak” out to other parts of your system, so reworking one part of the system won’t affect the other. Also writing tests for one-line methods may seem dumb and repetitive, but once you start juggling around stuff while a release date is coming at you at alarming speed, those one-line tests will assure that your app won’t blow up once deployed.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>420</wp:post_id>
<wp:post_date>2008-12-29 15:44:43</wp:post_date>
<wp:post_date_gmt>2008-12-29 13:44:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>feeling-like-bruce-wayne</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>GDI Drawing: String with word-wrap</title>
<link>http://www.tigraine.at/2009/01/03/gdi-drawing-string-with-word-wrap/</link>
<pubDate>Sat, 03 Jan 2009 17:36:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[gdi]]></category>

		<category domain="tag" nicename="gdi"><![CDATA[gdi]]></category>

		<category domain="tag"><![CDATA[Programming]]></category>

		<category domain="tag" nicename="programming"><![CDATA[Programming]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/03/gdi-drawing-string-with-word-wrap/</guid>
<description></description>
<content:encoded><![CDATA[<p>GDI drawing is magic and not very well documented. Finding out how to make GDI draw a string inside a fixed width without constraining the height took me about 20 minutes, hopefully this post saves you 20 minutes of your life nobody will give you back :). </p>  <p>The problem with Graphics.DrawString() is that you can either supply a PointF that will be used as the origin, or you supply a RectangleF as layout rectangle. The rectangle’s sizes and position will be forced upon the text and word-wrap will happen to fit the text inside the rectangle, anything not fitting in the rectangle (given the font-size) will be cut off.    <br />So if you don’t want to confine width or the height, <strong>setting that property</strong> <strong>on the RectangleF</strong> <strong>to 0</strong> will make GDI not &quot;cut off” but expand the rectangle as needed. </p>  <p>Needless to say that this behavior isn’t mentioned on the <a href="http://msdn.microsoft.com/en-us/library/21kdfbzs.aspx">MSDN page for DrawString</a>, that may have saved me time.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>423</wp:post_id>
<wp:post_date>2009-01-03 19:36:33</wp:post_date>
<wp:post_date_gmt>2009-01-03 17:36:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>gdi-drawing-string-with-word-wrap</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3370</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>65.89.177.1</wp:comment_author_IP>
<wp:comment_date>2009-10-20 23:05:13</wp:comment_date>
<wp:comment_date_gmt>2009-10-21 04:05:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it&#39;s rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3371</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>65.89.177.1</wp:comment_author_IP>
<wp:comment_date>2009-10-20 23:17:55</wp:comment_date>
<wp:comment_date_gmt>2009-10-21 04:17:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. <br><br>SizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3372</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.242</wp:comment_author_IP>
<wp:comment_date>2009-10-21 00:19:14</wp:comment_date>
<wp:comment_date_gmt>2009-10-21 05:19:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.<br>I would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4694</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4695</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4696</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3819</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3820</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3821</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3837</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3838</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3839</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3931</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3932</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3933</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3934</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3935</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3936</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4889</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4890</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4891</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4029</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4030</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4031</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4049</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4050</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4051</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4083</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4084</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4085</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5199</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5200</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4156</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4157</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4158</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5198</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4500</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4501</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4502</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5279</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5280</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5281</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5361</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5362</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5363</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5364</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5365</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5366</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4610</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4611</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4612</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5381</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5382</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5383</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4752</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4753</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4754</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4913</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4914</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4915</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4929</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4930</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4931</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4944</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4945</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4946</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4993</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4994</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4995</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5126</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5127</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5128</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5165</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5166</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5167</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5176</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 22:19:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 22:19:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing.nI would also have suggested feeding the same parameters you give to DrawString to MeasureString.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5177</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:17:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never mind. I figured out how to do this with measure string and using a StringFormat object. rnrnSizeF textSize = gfx.MeasureString(text, font, rectangle.Size, stringFormat);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5178</wp:comment_id>
<wp:comment_author><![CDATA[Stater136]]></wp:comment_author>
<wp:comment_author_email>mmoffatt@agi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-20 21:05:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-20 21:05:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have you found a way to determine what the height of the resulting box is once it's rendered?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/04/printing-in-net-is-simply-broken/imagepng-2/</link>
<pubDate>Sun, 04 Jan 2009 12:19:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>426</wp:post_id>
<wp:post_date>2009-01-04 14:19:29</wp:post_date>
<wp:post_date_gmt>2009-01-04 12:19:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>428</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:435;s:6:"height";i:92;s:14:"hwstring_small";s:23:"height='27' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"image-150x92.png";s:5:"width";i:150;s:6:"height";i:92;}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x63.png";s:5:"width";i:300;s:6:"height";i:63;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/04/printing-in-net-is-simply-broken/image-thumbpng-2/</link>
<pubDate>Sun, 04 Jan 2009 12:19:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>427</wp:post_id>
<wp:post_date>2009-01-04 14:19:29</wp:post_date>
<wp:post_date_gmt>2009-01-04 12:19:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>428</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:435;s:6:"height";i:92;s:14:"hwstring_small";s:23:"height='27' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"image-thumb-150x92.png";s:5:"width";i:150;s:6:"height";i:92;}s:6:"medium";a:3:{s:4:"file";s:22:"image-thumb-300x63.png";s:5:"width";i:300;s:6:"height";i:63;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Printing in .NET is simply broken</title>
<link>http://www.tigraine.at/2009/01/04/printing-in-net-is-simply-broken/</link>
<pubDate>Sun, 04 Jan 2009 12:19:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[.NET]]></category>

		<category domain="tag" nicename="net"><![CDATA[.NET]]></category>

		<category domain="tag"><![CDATA[C#]]></category>

		<category domain="tag" nicename="c"><![CDATA[C#]]></category>

		<category domain="tag"><![CDATA[printing]]></category>

		<category domain="tag" nicename="printing"><![CDATA[printing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/04/printing-in-net-is-simply-broken/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, I blogged about the failed GDI+ API yesterday and complained about it. Those of you who are <a href="http://twitter.com/tigraine">following me on twitter</a> may already know that my little liaison with GDI+ is due to some printing my application has to do and the experience hasn’t been good so far.</p>  <p>My requirement is quite simple, print invoices and some other papers that may (or may not) span multiple pages.    <br />So I came up with a very simple design for my printing needs that lets me reuse all printing dialogs by supplying different strategy classes that do the printing.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image.png"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; display: inline; border-right-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb.png" width="435" height="92" /></a> </p>  <p>This has worked out so far, but I’ll have to adjust since I found out that printing multiple pages works totally different from what I expected. In my stupid little world I was thinking that going on to the next page would be as easy as calling NextPage() somewhere and the Graphics object would start drawing to the new page.</p>  <p>And I was so wrong.    <br />Apparently, how it really works is by specifying in your print event that your document has multiple pages and the print event will fire as long as eventargs.HasMorePages is true. Yep, that’s right, the event will fire <strong>again!</strong></p>  <p>So apparently, all code that gets called has some way of determining what stuff doesn’t fit on the page (that itself is a huge pain in the ass with graphics.MeasureString and everything) and it also has to find out what parts have already been printed to another page.</p>  <p>So, in a simpler world I’d have a switch statement that would branch depending on the page number like this:</p>  <p></p>  <div style="padding-right: 0px; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px; display: inline" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:67a2b413-e182-4547-99d8-6c357fbf5390" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
private int pages = 3;
private void PrintDocument_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
{
&#160;&#160;&#160;&#160;switch (pages)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case 1: 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//print page 1
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case 2:
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//...
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;pages -= 1;
&#160;&#160;&#160;&#160;e.HasMorePages = pages &gt; 0;
&#160;&#160;&#160;&#160;if (pages == 0)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pages = 3;
}
</pre></div>

<p>The irony of this is that this no longer works if you can hit a new page once your string exceeds one page. You’d have to cut off the string (after heaving measured that it won’t fit), and somehow store it so that when the method gets called next time the “part” that’s not printed yet will get printed. Can it get more stupid than that? 
  <br />Having multiple entries into one method just seems plain wrong and leaves me no option as to have code everywhere to determine if something has already been printed (no need to say all the hassle there is to cut off something on page A and print the overflow on page B). 

  <br />This whole RectangleF/SizeF acrobatics with almost static method calls in between feels so much like last century that I am very well inclined to write some OO library in the future to save me the hassle next time.</p>

<p>By the way, first I was thinking that if printing from within .NET turns out to be too hard I had this fallback plan to just generate HTML, display it in a Webbrowser control and print it from there. I should have done it that way, simple things tend to work :).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>428</wp:post_id>
<wp:post_date>2009-01-04 14:19:30</wp:post_date>
<wp:post_date_gmt>2009-01-04 12:19:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>printing-in-net-is-simply-broken</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/imagepng-2/</link>
<pubDate>Tue, 13 Jan 2009 22:17:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>430</wp:post_id>
<wp:post_date>2009-01-14 00:17:44</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:268;s:6:"height";i:183;s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/image-thumbpng-2/</link>
<pubDate>Tue, 13 Jan 2009 22:17:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>431</wp:post_id>
<wp:post_date>2009-01-14 00:17:45</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:268;s:6:"height";i:183;s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/imagepng-3/</link>
<pubDate>Tue, 13 Jan 2009 22:17:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>432</wp:post_id>
<wp:post_date>2009-01-14 00:17:47</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:210;s:6:"height";i:192;s:14:"hwstring_small";s:23:"height='96' width='105'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/image-thumbpng-3/</link>
<pubDate>Tue, 13 Jan 2009 22:17:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>433</wp:post_id>
<wp:post_date>2009-01-14 00:17:48</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:210;s:6:"height";i:192;s:14:"hwstring_small";s:23:"height='96' width='105'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/imagepng-4/</link>
<pubDate>Tue, 13 Jan 2009 22:17:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>434</wp:post_id>
<wp:post_date>2009-01-14 00:17:49</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:182;s:6:"height";i:219;s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/image-thumbpng-4/</link>
<pubDate>Tue, 13 Jan 2009 22:17:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>435</wp:post_id>
<wp:post_date>2009-01-14 00:17:50</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:182;s:6:"height";i:219;s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>2008 Gadget List</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/</link>
<pubDate>Tue, 13 Jan 2009 22:17:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=436</guid>
<description></description>
<content:encoded><![CDATA[<p>While reading <a href="http://www.georgholzer.at/blog/2009/01/13/die-gadgets-des-super-geeks/">Georg’s list of gadgets</a> he bought in 2008 and suggests I thought it might be interesting to compile such a list myself.     <br />So, here it is: A list of gadgets I bought and would recommend (and it’s boring to be honest).</p>  <p><strong>Dell XPS M1330</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image1.png"><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-left: 0px; margin-right: 10px; display: inline; border-right-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb1.png" width="268" height="183" /></a> After running Ubuntu on my old laptop (1.6ghz Acer Aspire) for almost a year due to the lack of system resources I finally got myself a new laptop this year. The old one was a quite heavy 15” WXGA screen so I decided that this time I’d go with something smaller and more portable.     <br />Since I like Dell for their brilliant support I choose the XPS M1330 (the only 13” laptop available from Dell at that time).     <br />Haven’t regretted it since, I’ve been working exclusively on my laptop for quite some time now and this thing hasn’t failed me since. It’s speedy (except for fancy 3d graphics) and still light and has great battery life.     <br />I also found that 13” is enough to actually program on, but it takes some time to get used to bringing up most panels through shortcuts while working in VS fullscreen.</p>  <p style="clear: both"><strong>Canon EOS 450D</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image2.png"><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-right: 10px; display: inline; border-right-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb2.png" width="210" height="192" /></a> I’ve never had a camera before. I never even bothered to buy one because I simply never deemed the price appropriate for what I’d get.     <br />While occasionally taking some snapshots with various point and shoot cameras I was never really content with the results once I’d try to view the images on my PC. Pictures would either be noisy due to bad light, or when using flash all colors would simply look wrong.     <br />This time though, I found the EOS 450D at pricey 470&euro; and gave it a try.     <br />The camera is everything I asked for and more. It’s light, fast, picture quality is great and the battery lasts me for more than 2000 pictures (still amazed about that). Although I may still suck at photography (I hear little Yoda whisper to me “much to learn you have padawan” all the time *g*), I think some of my pictures actually don’t look too bad, so I've put <a href="http://flickr.com/photos/15594453@N02/">them on Flickr</a>.</p>  <p>Since my girlfriend blogs for a <a href="http://magazin.kulturchannel.at/">German speaking magazine</a> on art and culture the <a href="http://en.wikipedia.org/wiki/Woman_acceptance_factor">woman-acceptance-factor</a> on this one was quite high since can borrow it to take pictures of events she’s blogging about.</p>  <p><strong>XBox 360 Elite</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image3.png"><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-right: 10px; display: inline; border-right-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb3.png" width="182" height="219" /></a>Ok, maybe it was just silly to buy this thing 1 month before the WoW addon Wrath of the Lich King was released, but I haven’t really regretted it either. The XBox is just another awesome console that simply works. There are tons of games (although too few that can be played in coop and aren’t of the shooter kind), and using it as a media center extender also works quite well. Since the console also gave me an excuse to get myself a new TV and transform my basement into a “media room” I’m quite happy with the investment after all :).     <br />Why consoles? Put in a DVD and play, it just works. No installs, no settings no hassle. I don’t have too much time for games, and not wasting on installation / configuration issues any more was totally worth it.     <br />I’d also suggest getting yourself <a href="http://www.amazon.de/Guitar-Hero-Legends-Rock-Bundle/dp/B000V52AXO/ref=sr_1_1?ie=UTF8&amp;s=videogames&amp;qid=1231952084&amp;sr=8-1">Guitar Hero: Legends of Rock</a>, the most fun game I’ve played for quite a long time.</p>  <p>Note: This has a very low WAF so consider buying her something nice too before confessing your sin :).</p>  <p style="clear: both"><strong>iPhone</strong></p>  <p>(I’ll spare you the obvious picture ;)) My old phone broke and I needed a new one, since I didn’t want to switch carriers (tele.ring) I was stuck with a very bad selection of low-end consumer phones that didn’t really satisfy my needs. But buying a smartphone in Austria without signing a contract usually means spending &gt;500&euro;. Since the dollar was so low at that time it I got an original iPhone for less than 300&euro; and unlocked it myself.    <br />Still convinced that it’s the best smartphone available to date. But I guess that may change with new releases from Android and the Palm Pre looks interesting. I’d also like to note that it’s not really smart to buy an iPod nano and order an iPhone 2 weeks later.</p>  <p><strong>HP w2408h 24” Widescreen Monitor</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image4.png"><img style="border-top-width: 0px; border-left-width: 0px; float: left; border-bottom-width: 0px; margin-right: 10px; display: inline; border-right-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb4.png" width="240" height="222" /></a>Seriously, do yourself a favor and get one of these. More space is always better, and I’m already waiting for the Dell 30” displays to drop in price because I need even more space. 1920x1600 pixel of space provide plenty of room for parallelism, and the display simply looks awesome. Although some people don’t like TN panels, the colors are just stunning.     <br />Also with the new Windows7 dock features the big resolution will be even more useful. </p>  <p>&#160;</p>  <p style="clear: both">So that's it. I guess I spent way too much money on way too few things ;). Now this year will probably get a bit heavier on photography equipment (still looking for some maybe a new zoom lens). And with Windows7 up ahead I will probably also update my home pc once again (components are just ridiculously cheap right now)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>436</wp:post_id>
<wp:post_date>2009-01-14 00:17:50</wp:post_date>
<wp:post_date_gmt>2009-01-13 22:17:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>2008-gadget-list</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231885116</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2447</wp:comment_id>
<wp:comment_author><![CDATA[heyliene]]></wp:comment_author>
<wp:comment_author_email>heyliene@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>91.115.222.175</wp:comment_author_IP>
<wp:comment_date>2009-01-14 23:06:46</wp:comment_date>
<wp:comment_date_gmt>2009-01-15 04:06:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[To make a long story short: my geek has just spent a shit load of money for, well, toys ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3408</wp:comment_id>
<wp:comment_author><![CDATA[Free iPhone 3GS]]></wp:comment_author>
<wp:comment_author_email>iphone3gs0099@yahoo.com</wp:comment_author_email>
<wp:comment_author_url>http://laiphone.com/2009/12/how-to-get-free-iphone3gs/</wp:comment_author_url>
<wp:comment_author_IP>98.209.5.49</wp:comment_author_IP>
<wp:comment_date>2009-12-18 15:08:59</wp:comment_date>
<wp:comment_date_gmt>2009-12-18 20:08:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[nice post, thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/imagepng-2/</link>
<pubDate>Wed, 14 Jan 2009 19:00:32 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>437</wp:post_id>
<wp:post_date>2009-01-14 21:00:32</wp:post_date>
<wp:post_date_gmt>2009-01-14 19:00:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:338;s:6:"height";i:312;s:14:"hwstring_small";s:23:"height='96' width='104'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x276.png";s:5:"width";i:300;s:6:"height";i:276;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/14/2008-gadget-list/image-thumbpng-2/</link>
<pubDate>Wed, 14 Jan 2009 19:00:35 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>438</wp:post_id>
<wp:post_date>2009-01-14 21:00:35</wp:post_date>
<wp:post_date_gmt>2009-01-14 19:00:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>436</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:240;s:6:"height";i:222;s:14:"hwstring_small";s:23:"height='96' width='103'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/15/inevitable-leaking-of-control-information/imagepng-2/</link>
<pubDate>Thu, 15 Jan 2009 13:21:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>442</wp:post_id>
<wp:post_date>2009-01-15 15:21:45</wp:post_date>
<wp:post_date_gmt>2009-01-15 13:21:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>444</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:474;s:6:"height";i:255;s:14:"hwstring_small";s:23:"height='68' width='127'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image5-300x161.png";s:5:"width";i:300;s:6:"height";i:161;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/15/inevitable-leaking-of-control-information/image-thumbpng-2/</link>
<pubDate>Thu, 15 Jan 2009 13:21:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>443</wp:post_id>
<wp:post_date>2009-01-15 15:21:45</wp:post_date>
<wp:post_date_gmt>2009-01-15 13:21:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>444</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:474;s:6:"height";i:255;s:14:"hwstring_small";s:23:"height='68' width='127'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb5-300x161.png";s:5:"width";i:300;s:6:"height";i:161;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Inevitable leaking of control Information</title>
<link>http://www.tigraine.at/2009/01/15/inevitable-leaking-of-control-information/</link>
<pubDate>Thu, 15 Jan 2009 13:21:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/15/inevitable-leaking-of-control-information/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’m wondering if anyone of you has a better solution (or thoughts) for this.</p>  <p>Assume I have a business rule that states <em>“If there is already a bill for one special order, the user should be warned when trying to create another bill”.</em>    <br />So, obviously I simply display a MessageBox telling the user he’s about to do something stupid (but he should have the choice).</p>  <p>I see a “leak” of business logic from the Controller to the GUI when I have the GUI question the controller layer if there is already a bill for the Order. The decision about whether to proceed or not has to happen in the GUI since it’s the only layer capable of displaying a messagebox to the user (simply reference wise). But the semantics of this decision actually belong into the controller. And frankly, I can’t really find a viable way to separate the logic from the Gui on this case.</p>  <p>The system is layered as follows:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image5.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb5.png" width="474" height="255" /></a>&#160;</p>  <p>The root cause of this problem is that I’m not really following the MVC pattern on this one. The GUI always calls down to the controller instead of the controller calling the GUI. This way I often see myself struggling to somehow push logic down into the controller while trying to keep the GUI free from logic. But when it comes to complex interaction I realize now that the GUI is actually driving the whole thing, and that makes this whole thing a pain to re-wire later. </p>  <p>One way to detect things like this is when your controller classes don’t contain actual state. Most of my controller methods are just taking input and applying logic to it, not actually controlling the information flow inside the application (and that should have made me suspicious a long time ago).</p>  <p>So, I guess I can blame myself on this one and will have to try to minimize the damage done until I get time to refactor the system at a later stage.    <br />Still bugs me that I fell for this, but the whole point in failing is to be able to learn from mistakes. :)</p>  <p>What also supports my case is that the controller and repository layers are very well tested, so I may be able to divide the controller layer into multiple strategy classes (logic dumps) while reworking how control flow is handled by the system.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>444</wp:post_id>
<wp:post_date>2009-01-15 15:21:46</wp:post_date>
<wp:post_date_gmt>2009-01-15 13:21:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>inevitable-leaking-of-control-information</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>DateTime parsing in ASP.NET MVC RouteEngine</title>
<link>http://www.tigraine.at/2009/01/15/datetime-parsing-in-aspnet-mvc-routeengine/</link>
<pubDate>Thu, 15 Jan 2009 15:40:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/15/datetime-parsing-in-aspnet-mvc-routeengine/</guid>
<description></description>
<content:encoded><![CDATA[<p>After doing so much winforms development lately I am getting started on an upcoming an MVC project. And while thinking about the basic structure of the whole thing and trying out some things I discovered some pretty funny behavior in the DateTime parsing of the routing engine.</p>  <p>Typical example. A route that should map urls like: </p>  <blockquote>   <p><a href="http://www.website.com/Archive/10-12-2008/">http://www.website.com/Archive/10-12-2008/</a></p> </blockquote>  <p>I have my route laid out like this:</p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a71c4122-b03d-4f8b-b1c1-807876fe9507" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
routes.MapRoute("Archive",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;"Archive/{date}/",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;new {controller = "Archive", action = "Show"});
</pre></div>

<p>And the controller action looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:df592b10-9714-417a-bd29-d5b98f4419e7" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ArchiveController : Controller&#160;&#160;&#160;&#160; 
{
&#160;&#160;&#160;&#160;public ActionResult Show(DateTime date)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return View();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now, when I open the browser and point it to the following URL it works</p>

<blockquote>
  <p><a title="http://localhost:51942/Archive/12.12.2008" href="http://localhost:51942/Archive/12.12.2008">http://localhost:51942/Archive/12.12.2008</a></p>
</blockquote>

<p>While this one doesn’t</p>

<blockquote>
  <p><a title="http://localhost:51942/Archive/15.11.2009" href="http://localhost:51942/Archive/15.11.2009">http://localhost:51942/Archive/15.11.2009</a></p>
</blockquote>

<p>The second one returns the following error:</p>

<blockquote>
  <h4><i>The parameters dictionary does not contain a valid value of type 'System.DateTime' for parameter 'date' which is required for method 'System.Web.Mvc.ActionResult Show(System.DateTime)' in 'MVCDateTimeParseTest.Controllers.ArchiveController'. To make a parameter optional its type should either be a reference type or a Nullable type.</i></h4>

  <p>&#160;</p>
</blockquote>

<p>Needless to say that I am a bit lost at the moment. Both are perfectly valid dates and yet one works the other doesnt. I had the same problem when trying other formattings when I tried dd-MM-yyyy. Why and when dates get parsed correctly is very random it seems.</p>

<p>I didn’t constrain the route on purpose to test out how to create links with dates in them (and doing a 2008/11/12 style link also doesn’t really work too well). The only formatting that seems to be working 100% of the time is <a title="http://localhost:51942/Archive/2009-12-12" href="http://localhost:51942/Archive/2009-12-12">http://localhost:51942/Archive/2009-12-12</a>. And that’s not really how I (Austria formats dd.MM.yyyy) like it.</p>

<p>Any suggestions?</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>445</wp:post_id>
<wp:post_date>2009-01-15 17:40:58</wp:post_date>
<wp:post_date_gmt>2009-01-15 15:40:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>datetime-parsing-in-aspnet-mvc-routeengine</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2485</wp:comment_id>
<wp:comment_author><![CDATA[Beyers]]></wp:comment_author>
<wp:comment_author_email>bcronje@gmail.om</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>196.25.255.246</wp:comment_author_IP>
<wp:comment_date>2009-04-24 12:56:19</wp:comment_date>
<wp:comment_date_gmt>2009-04-24 17:56:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Did you ever get a solution for this issue?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2486</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2009-04-24 13:04:53</wp:comment_date>
<wp:comment_date_gmt>2009-04-24 18:04:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Not really.<br>I somewhat solved the problem by making the parameter on the controller action be a string and parse it manually.  But that&#39;s far from a solution, more a workaround.<br><br>You could also extract those values from the RouteData.Values and parse them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ASP.NET MVC: Hide the HttpContext services with Windsor and a custom ControllerFactory</title>
<link>http://www.tigraine.at/2009/01/21/aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory/</link>
<pubDate>Wed, 21 Jan 2009 13:15:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/21/aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory/</guid>
<description></description>
<content:encoded><![CDATA[<p>ASP.NET MVC was designed to be a very “clean” and testable framework for creating web applications from Microsoft. And they failed really badly in one place: HttpContext!</p>  <p>The fact that the ASP.NET MVC Contrib project has a whole project dedicated to mocking out the whole HttpContext for testing simply illustrates one point: It’s broken, period.   <br />There is this one gigantic god hash table that has 5 other hash tables hanging from it that knows everything about the incoming request. And although it’s possible to fake the whole thing with RhinoMocks (as the MVC Contrib guys do it), it’s still a pretty stupid idea to have all those concerns in one class called “context” (and accessible to the controller code).     <br />So, although the HttpContextBase is already an abstraction of the real context, I wanted to extract those things into specialized service classes that I have full control over (and that could then be used for even more specialized classes that handle data retrieval, thus making “magic strings” go away when dealing with requests and sessions).</p>  <p>I set out to create a request service class that follows a very simple Interface:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:efdd4eb3-db3b-4a75-8afb-35effa607d26" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public interface IRequestService
{
&#160;&#160;&#160;&#160;string GetRequestField(string fieldName);
}
</pre></div>

<p>The actual class is just a Facade for the HttpRequestBase class that gets injected into the constructor.</p>

<p>Problem here: I would have to new up this IRequestService in my controller, and that’s something I didn’t want to do. Object graph construction shouldn’t be in the controller at all, and so I want to inject IRequestService instances into the controller. And that can’t be done without control over the ControllerFactory.</p>

<p>The IControllerFactory interface is rather simple, and it’s the perfect place to leverage the power of a IoC framework to construct the controller objects. 
  <br />So I simply pass the object creation off to Windsor in the CreateController method:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:73f1304e-daa3-4730-953f-dcfc26708d87" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ControllerFactory : IControllerFactory
{
&#160;&#160;&#160;&#160;private WindsorContainer container = new WindsorContainer(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;new XmlInterpreter(new ConfigResource("castle")));

&#160;&#160;&#160;&#160;public IController CreateController(RequestContext requestContext, string controllerName)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (IController)container.Resolve(controllerName);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void ReleaseController(IController controller)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var disposeable = controller as IDisposable;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (disposeable != null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;disposeable.Dispose();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;container.Release(controller);
&#160;&#160;&#160;&#160;}
}

</pre></div>

<p>What then took ages for me to figure out was how to instruct Windsor to use current HttpContext.Request object. Turns out, I was searching in the wrong place: That functionality is in MicroKernel and not in the Windsor container.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c0ad2173-2d99-4c4a-b5bb-f95cb46609fc" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public IController CreateController(RequestContext requestContext, string controllerName)
{
&#160;&#160;&#160;&#160;container.Kernel.AddComponentInstance&lt;HttpRequestBase&gt;(typeof (HttpRequestBase),
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; requestContext.HttpContext.Request);
&#160;&#160;&#160;&#160;return (IController) container.Resolve(controllerName);
}
</pre></div>

<p>The AddComponentInstance method allows you to pass in a concrete instance that should be used when searching for a service. This way when Windsor constructs the RequestServiceFacade class that takes a HttpRequestBase as dependency it will simply inject the one specified instead of trying to construct the HttpRequestBase itself (that doesn’t work ;)).</p>

<p>This now allows me to easily swap out request implementations by just changing the Windsor configuration.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>446</wp:post_id>
<wp:post_date>2009-01-21 15:15:36</wp:post_date>
<wp:post_date_gmt>2009-01-21 13:15:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2450</wp:comment_id>
<wp:comment_author><![CDATA[Change has come to Microsoft | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/01/22/change-has-come-to-microsoft/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-01-22 20:24:38</wp:comment_date>
<wp:comment_date_gmt>2009-01-22 18:24:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] After doing so much Winforms development lately I am finally back on the Web side once again. But this time not in swamped webforms land but breathing the fresh air of ASP.NET MVC. You may already know that because I’ve been already ranting about the platform and it’s love for HttpContext. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2635</wp:comment_id>
<wp:comment_author><![CDATA[Alexis Kennedy]]></wp:comment_author>
<wp:comment_author_email>alexis.kennedy@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.failbettergames.com</wp:comment_author_url>
<wp:comment_author_IP>79.73.8.241</wp:comment_author_IP>
<wp:comment_date>2009-07-02 13:51:29</wp:comment_date>
<wp:comment_date_gmt>2009-07-02 11:51:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'd hit a very similar block (I knew how to do it in StructureMap which doesn't have anything analogous to MicroKernel) and resorted to Google. Thanks for the tip!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2645</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.163</wp:comment_author_IP>
<wp:comment_date>2009-07-03 16:30:27</wp:comment_date>
<wp:comment_date_gmt>2009-07-03 14:30:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3441</wp:comment_id>
<wp:comment_author><![CDATA[ongamesite]]></wp:comment_author>
<wp:comment_author_email>qdngg86147@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>60.168.237.163</wp:comment_author_IP>
<wp:comment_date>2010-05-12 15:18:46</wp:comment_date>
<wp:comment_date_gmt>2010-05-12 20:18:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi every friends,<br><br>  Did you like play online flash games and nice VIDEO ^_^.  OK!  If you are interesting with it. <br>  <br>  Just do a click <a href="http://www.ongamesite.com" rel="nofollow">http://www.ongamesite.com</a>.  Good luck!!!<br><br><br>Internet games,Computer games,Windows games and nice video]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3443</wp:comment_id>
<wp:comment_author><![CDATA[ongamesite]]></wp:comment_author>
<wp:comment_author_email>qdngg86147@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>60.168.245.140</wp:comment_author_IP>
<wp:comment_date>2010-05-14 07:45:45</wp:comment_date>
<wp:comment_date_gmt>2010-05-14 12:45:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi every friends,<br><br>  Did you like play online flash games and nice VIDEO ^_^.  OK!  If you are interesting with it. <br>  <br>  Just do a click <a href="http://www.ongamesite.com" rel="nofollow">http://www.ongamesite.com</a>.  Good luck!!!<br><br><br>Internet games,Computer games,Windows games and nice video]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3446</wp:comment_id>
<wp:comment_author><![CDATA[ongamesite]]></wp:comment_author>
<wp:comment_author_email>qdngg86147@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>60.168.255.209</wp:comment_author_IP>
<wp:comment_date>2010-05-16 14:29:10</wp:comment_date>
<wp:comment_date_gmt>2010-05-16 19:29:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi every friends,<br><br>  Did you like play online flash games and nice VIDEO ^_^.  OK!  If you are interesting with it. <br>  <br>  Just do a click <a href="http://www.ongamesite.com" rel="nofollow">http://www.ongamesite.com</a>.  Good luck!!!<br><br><br>Internet games,Computer games,Windows games and nice video<br><br>Best Luck Nice World!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/imagepng-2/</link>
<pubDate>Wed, 21 Jan 2009 22:03:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>447</wp:post_id>
<wp:post_date>2009-01-22 00:03:10</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:291;s:6:"height";i:162;s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/image-thumbpng-2/</link>
<pubDate>Wed, 21 Jan 2009 22:03:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>448</wp:post_id>
<wp:post_date>2009-01-22 00:03:11</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:295;s:6:"height";i:166;s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/imagepng-3/</link>
<pubDate>Wed, 21 Jan 2009 22:03:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>449</wp:post_id>
<wp:post_date>2009-01-22 00:03:15</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:603;s:6:"height";i:480;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image7-300x238.png";s:5:"width";i:300;s:6:"height";i:238;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/image-thumbpng-3/</link>
<pubDate>Wed, 21 Jan 2009 22:03:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>450</wp:post_id>
<wp:post_date>2009-01-22 00:03:18</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:685;s:6:"height";i:546;s:14:"hwstring_small";s:23:"height='96' width='120'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb7-300x239.png";s:5:"width";i:300;s:6:"height";i:239;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/imagepng-4/</link>
<pubDate>Wed, 21 Jan 2009 22:03:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>451</wp:post_id>
<wp:post_date>2009-01-22 00:03:19</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:213;s:6:"height";i:56;s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image8-150x56.png";s:5:"width";i:150;s:6:"height";i:56;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/image-thumbpng-4/</link>
<pubDate>Wed, 21 Jan 2009 22:03:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>452</wp:post_id>
<wp:post_date>2009-01-22 00:03:19</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:217;s:6:"height";i:60;s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/image-thumb8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb8-150x60.png";s:5:"width";i:150;s:6:"height";i:60;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Sharing a common AssemblyInfo between projects in a solution</title>
<link>http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/</link>
<pubDate>Wed, 21 Jan 2009 22:03:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/</guid>
<description></description>
<content:encoded><![CDATA[<p>Since I’m doing more and more layering I also started to split up my layers into different projects so I can’t bypass any layer by accident.</p>  <p>This leads to solutions with 10+ projects sometimes (tests, setup, etc..) and that looks like this sometimes:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image6.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb6.png" width="295" height="166" /></a> </p>  <p>So, that’s great and I can only recommend that. You get much better view over what dependencies your application has internally. </p>  <p>But that leads to one problem: Versioning the assemblies.    <br />I don’t want to go through 10 projects changing AssemblyInfo.cs to correspond to the real version of my application. Since I only do the splitting into different projects to ease development, I always want all assemblies to have the same version. So, how to tackle this?</p>  <p>Simple: Create one master AssemblyInfo.cs (just copy one of the existing ones), and delete the others from the other projects. We want to re-insert the file, but this time as a link so changes to one AssemblyInfo.cs cause all projects to have a changed assembly information.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image7.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb7.png" width="685" height="546" /></a> </p>  <p>Yes, that’s right. There is a way to reference a file without copying it into the folder (well hidden behind that arrow there). </p>  <p>So, now the file shows up in the solution explorer twice, but changes will spread to other projects too:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/01/image8.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/01/image-thumb8.png" width="217" height="60" /></a>&#160;</p>  <p></p>  <p>When having a MSI project, it won’t update a referenced assembly during setup if there hasn’t been a change to it’s version number. So I ended up installing a new version of the GUI component while the changes in the controller assembly didn’t install because there was no increment in version number. Annoying, but not so much of a problem once you know how to handle it :).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>453</wp:post_id>
<wp:post_date>2009-01-22 00:03:19</wp:post_date>
<wp:post_date_gmt>2009-01-21 22:03:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sharing-a-common-assemblyinfo-between-projects-in-a-solution</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Change has come to Microsoft</title>
<link>http://www.tigraine.at/2009/01/22/change-has-come-to-microsoft/</link>
<pubDate>Thu, 22 Jan 2009 18:24:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/22/change-has-come-to-microsoft/</guid>
<description></description>
<content:encoded><![CDATA[<p>Yes indeed, there have things changed.</p>  <p>After doing so much Winforms development lately I am finally back on the Web side once again. But this time not in swamped webforms land but breathing the fresh air of ASP.NET MVC. You may already know that because I’ve been already ranting about the platform and <a href="http://www.tigraine.at/2009/01/21/aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory/">it’s love for HttpContext</a>. </p>  <p>Anyway, this post is not about MVC, it’s about the great Rob Conery who made my day when I watched the <a href="http://blog.wekeroad.com/mvc-storefront/mvc-storefront-part-1/">first episode</a> of his <a href="http://blog.wekeroad.com/mvc-storefront/">MVC Storefront</a> series.</p>  <p>What impressed me?   <br />This is the first and only sample I have seen come out of Microsoft that did <strong>not </strong>involve dropping a data grid right out of SQL server into the app, tweaking two properties and concluding: “And that’s how easy you can do xy with Microsoft XY.NET”</p>  <p>This is the first demo I see that did really feel like a real world solution and not like demo ware put together in an attempt to impress people with how little work is required to do something.    <br />Developing software is hard, and it takes time and thought.    <br />And Rob sharing his thoughts on testability, separation of concerns and his clever use of the repository pattern is just great fun to watch and follow. </p>  <p>This new way feels good.    <br />I watched that webcast while deciding the structure of a very important project and it helped me very much in getting a better idea of how to tackle MVC. So, thank you very much Rob!</p>  <p>Oh, and yeah, I know I’m late to the party. Rob has put out 25 webcasts of the MVC Storefront series, it just happened that my attention was focused on NHibernate, Windsor, Winforms and RhinoMocks lately. I also have to admit that I dislike Webcasts since you can’t just scan through them to find out if you are interested or not.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>454</wp:post_id>
<wp:post_date>2009-01-22 20:24:33</wp:post_date>
<wp:post_date_gmt>2009-01-22 18:24:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>change-has-come-to-microsoft</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2451</wp:comment_id>
<wp:comment_author><![CDATA[robconery]]></wp:comment_author>
<wp:comment_author_email>robconery@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.wekeroad.com</wp:comment_author_url>
<wp:comment_author_IP>66.91.19.246</wp:comment_author_IP>
<wp:comment_date>2009-01-22 21:08:23</wp:comment_date>
<wp:comment_date_gmt>2009-01-23 02:08:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Why you&#39;re welcome! I&#39;m glad you&#39;re enjoying them - it was my goal to make this as "real" as possible :).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>logo-footer.gif</title>
<link>http://www.tigraine.at/2009/01/24/rss-feed-moved/logo-footergif/</link>
<pubDate>Sat, 24 Jan 2009 09:40:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/01/logo-footer.gif</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>455</wp:post_id>
<wp:post_date>2009-01-24 11:40:40</wp:post_date>
<wp:post_date_gmt>2009-01-24 09:40:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo-footergif</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>456</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/01/logo-footer.gif</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/logo-footer.gif</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:132;s:6:"height";i:32;s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/01/logo-footer.gif";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>RSS Feed moved</title>
<link>http://www.tigraine.at/2009/01/24/rss-feed-moved/</link>
<pubDate>Sat, 24 Jan 2009 09:40:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/24/rss-feed-moved/</guid>
<description></description>
<content:encoded><![CDATA[<p><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px; display: inline" title="logo_footer" border="0" alt="logo_footer" src="http://www.tigraine.at/wp-content/uploads/2009/01/logo-footer.gif" width="132" height="32" /> </p>  <p>So, apparently Google has decided to finally get rid of Feedburner and moved their services over to new servers.&#160; <br />That means new feed URLs for everyone, also for me.</p>  <p>The new Feed URL is: <a href="http://feeds2.feedburner.com/Tigraine">http://feeds2.feedburner.com/Tigraine</a></p>  <p>I changed the little subscribe button to the right, and Google has also put redirects on the old URL pointing to the new one. So, existing subscribers shouldn’t see any change.</p>  <p>Since I already moved (not the smartest thing), if you can read this in your reader, everything is fine.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>456</wp:post_id>
<wp:post_date>2009-01-24 11:40:41</wp:post_date>
<wp:post_date_gmt>2009-01-24 09:40:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rss-feed-moved</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Castle Windsor XML Configuration Schema</title>
<link>http://www.tigraine.at/2009/01/27/castle-windsor-xml-configuration-schema/</link>
<pubDate>Tue, 27 Jan 2009 18:06:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/01/27/castle-windsor-xml-configuration-schema/</guid>
<description></description>
<content:encoded><![CDATA[<p>While creating a Windsor XML configuration for a new project today I found myself looking too much at the reference to get started. I figured this may be because of the lack of a schema that would provide me Intellisense in Visual Studio. Shockingly I couldn’t find a xsd schema file for the Windsor configuration. </p>  <p>I then looked at some w3schools tutorials and figured out how to do a xsd schema myself and tried to remodel the <a href="http://www.castleproject.org/container/documentation/trunk/manual/windsorconfigref.html">Windsor configuration reference</a>.</p>  <p>You can grab the xsd schema file here: <a href="http://www.tigraine.at/windsor-configuration.xsd">windsor-configuration.xsd</a></p>  <p>I’ll post a little tutorial on how to load it inside Visual Studio later.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>457</wp:post_id>
<wp:post_date>2009-01-27 20:06:11</wp:post_date>
<wp:post_date_gmt>2009-01-27 18:06:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>castle-windsor-xml-configuration-schema</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/02/02/laptop-broken/imagepng-2/</link>
<pubDate>Mon, 02 Feb 2009 10:52:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>459</wp:post_id>
<wp:post_date>2009-02-02 12:52:51</wp:post_date>
<wp:post_date_gmt>2009-02-02 10:52:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>461</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:640;s:6:"height";i:221;s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x103.png";s:5:"width";i:300;s:6:"height";i:103;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/02/02/laptop-broken/image-thumbpng-2/</link>
<pubDate>Mon, 02 Feb 2009 10:52:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>460</wp:post_id>
<wp:post_date>2009-02-02 12:52:52</wp:post_date>
<wp:post_date_gmt>2009-02-02 10:52:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>461</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:780;s:6:"height";i:272;s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:72:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb-300x104.png";s:5:"width";i:300;s:6:"height";i:104;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Laptop broken</title>
<link>http://www.tigraine.at/2009/02/02/laptop-broken/</link>
<pubDate>Mon, 02 Feb 2009 10:52:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/02/laptop-broken/</guid>
<description></description>
<content:encoded><![CDATA[<p>I guess my laptop is officially broken. I am currently digging for my Dell Support CDs to reinstall Vista on it, but I don’t really think that will help at all(except with the Dell support people).</p>  <p>I do credit the crashes to my hardware simply because I’ve been a Vista user on multiple machines since day 1 and <u>know</u> how rock solid the OS really is.     <br />I suspect the mainboard of my laptop to be faulty in some way.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/02/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb.png" width="780" height="272" /></a> </p>  <p>The funny thing is (besides that my laptop fails to boot 50% of the time), I am still doing active development on that machine.    <br />It works, I see some weird errors sometimes, but I can still work normally on the system once it’s booted. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>461</wp:post_id>
<wp:post_date>2009-02-02 12:52:52</wp:post_date>
<wp:post_date_gmt>2009-02-02 10:52:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>laptop-broken</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2454</wp:comment_id>
<wp:comment_author><![CDATA[Murphy&rsquo;s law knows no exceptions | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/02/02/murphys-law-knows-no-exceptions/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-02-02 14:06:53</wp:comment_date>
<wp:comment_date_gmt>2009-02-02 12:06:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] First thing I look out of the window to see everything covered in snow right when I’m already late to an appointment, then I finally realize that my laptop is broken. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Murphy&#8217;s law knows no exceptions</title>
<link>http://www.tigraine.at/2009/02/02/murphys-law-knows-no-exceptions/</link>
<pubDate>Mon, 02 Feb 2009 12:06:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/02/murphys-law-knows-no-exceptions/</guid>
<description></description>
<content:encoded><![CDATA[<blockquote>   <p>&quot;Anything that can go wrong, will go wrong.&quot;</p> </blockquote>  <p>Today is one of those days where I really expect UFOs to land or drunk reindeers to drop some white bearded guy off at my doorstep. It can’t possibly get any worse does it?</p>  <p>First thing I look out of the window to see everything covered in snow right when I’m already late to an appointment, then I finally realize that my <a href="http://www.tigraine.at/2009/02/02/laptop-broken/">laptop is broken</a>.</p>  <p>Now, back at home I went up to the attic where I keep all hardware boxes I acquired during the last 10 years and searched for the DELL OEM support CDs I got with my sweet little laptop.</p>  <p>Guess what? Nowhere to be found.</p>  <p>Turns out, my little brother bought himself a Dell Inspirion 1530 Laptop some time ago. When the Laptop came it turned out that it lacked the required GPU power (they just switched the 15XX series from Nvidia 8600M to ATI X1330 graphics) so he sent it back and got a refund on his money. </p>  <p>Now, what also happened was that my Laptop box was lying around right next to his laptop box on our attic, so when he repacked <strong>his</strong> laptop to send it back, he accidentally packaged it in <strong>my</strong> box.    <br />So, not only did that box contain all the packaging material I keep around in case I need to send stuff back, no it also contained all driver and support disks (and the bundled Creative Headphones I got with the XPS).</p>  <p>So now I’m really screwed in a way because I am having trouble with a Laptop that is running Windows 7, I have no way of restoring it to Windows Vista, and I have to explain to Dell that the problem is not caused by Windows 7 because it also was there when I used Vista.</p>  <p>Oh, and while at it. I can’t find the bill and shipping notice for my laptop at the moment.   <br />What a great day. I wish I had given in to that voice in the morning telling me to stay in bed because I felt sick.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>463</wp:post_id>
<wp:post_date>2009-02-02 14:06:50</wp:post_date>
<wp:post_date_gmt>2009-02-02 12:06:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>murphys-law-knows-no-exceptions</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Extensibility can equal configurability</title>
<link>http://www.tigraine.at/2009/02/02/extensibility-can-equal-configurability/</link>
<pubDate>Mon, 02 Feb 2009 19:19:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/02/extensibility-can-equal-configurability/</guid>
<description></description>
<content:encoded><![CDATA[<p>The following code is extensible and configurable:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:56579584-4fbe-4802-8fd2-c15afbc0bdc2" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Worker
{
&#160;&#160;&#160;&#160;private IValueCalculator valueCalculator = new DefaultValueCalculator();

&#160;&#160;&#160;&#160;public IValueCalculator ValueCalculator
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return valueCalculator; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;set { valueCalculator = value; }
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public decimal Work(int number)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return valueCalculator.Calculate(number);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>What happens here is that I am using the strategy pattern to implement different behaviors to keep my Worker class safe from changes to the calculator code. 
  <br />Basically I’m doing dependency injection here, but I don’t inject the class through the constructor but through setter injection. </p>

<p>Since I am not bound to the construction phase of the object, I can easily swap IValueCalculator implementations during the worker’s lifetime without having to reconstruct the whole object. </p>

<p>Now, why is this extensible AND configurable?</p>

<p>It’s extensible because it’s easy to implement the IValueCalculator interface and supply it to a worker instance, without changing any of the plumbing around it. 
  <br />If I want to change the behavior for just one call i can do that very easily:

  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:cd0ea7b9-0689-44d7-8d37-fda471a62a68" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var worker = new Worker();
var oldCalculator = worker.ValueCalculator;
worker.ValueCalculator = new AlternativeCalculator();
worker.Work(1701);
worker.ValueCalculator = oldCalculator;
</pre></div>
</p>

<p>But the real beauty of the whole thing is that an inversion of control container like <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> can also inject setters, so in absence of a configuration file, the default implementation from the code will be used.

  <br />But once a Windsor configuration is found you can swap the strategy classes through the configuration even without recompiling like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b7b39bf9-022f-41d8-84ec-d5dd94a59847" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;components&gt;
&#160;&#160;&#160;&#160;&lt;component 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;id="Worker"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;type="Blog_Sample.Worker, Blog_Sample" /&gt;
&#160;&#160;&#160;&#160;&lt;component
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;id="Alternative.Calculator"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;service="Blog_Sample.IValueCalculator, Blog_Sample"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;type="Blog_Sample.AlternativeCalculator, Blog_Sample" /&gt;
&lt;/components&gt;
</pre></div>

<p>If you want the default behavior just delete the Alternative.Calculator component and no setter injection will happen. If a service implementing IValueCalculator is present that one will be injected to the Worker.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>464</wp:post_id>
<wp:post_date>2009-02-02 21:19:44</wp:post_date>
<wp:post_date_gmt>2009-02-02 19:19:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>extensibility-can-equal-configurability</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2460</wp:comment_id>
<wp:comment_author><![CDATA[Simplest thing to do | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/02/27/simplest-thing-to-do/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-02-27 13:02:47</wp:comment_date>
<wp:comment_date_gmt>2009-02-27 11:02:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Also mind that since everything follows a rather simple Interface I can easily change these implementations later if I need to. But for something simple, this will do just fine. Also I advise to use this through an IoC container like Windsor so you could even go as far as to swap hardcoded translations through the configuration. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4200</wp:comment_id>
<wp:comment_author><![CDATA[Warcraft Accessories]]></wp:comment_author>
<wp:comment_author_email>Kriegel@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.geniusshoppers.com/mousepads.html</wp:comment_author_url>
<wp:comment_author_IP>82.41.235.33</wp:comment_author_IP>
<wp:comment_date>2010-08-27 23:45:23</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 21:45:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hello!I am  following your  blog  for  many weeks  now. I have to admit  that it is very  informative. It is  already in my favourite list  and i will  try to  follow it  when possible . Thanks for the interesting inputs .]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Beware of smart customers</title>
<link>http://www.tigraine.at/2009/02/05/beware-of-smart-customers/</link>
<pubDate>Thu, 05 Feb 2009 09:31:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/05/beware-of-smart-customers/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.xkcd.com/451/"><img alt="XKCD Comic" src="http://imgs.xkcd.com/comics/impostor.png" /></a></p>  <p>I shipped a accounting application in January and got asked to implement some new features into the software lately.    <br />That customer I worked for on that project was absolutely amazing, we really found a common ground to communicate about the needs of the business and my implementation of it. I tried to apply domain driven design as much as possible, and it really worked out exceptionally well.     <br />The customer now has a basic knowledge of what I’m doing and how I’m doing that, while I understand most of his business needs and how to translate those to code. </p>  <p>The dark side of this is that the customer now started to use the system in ways I never intended it to because he knew how to achieve his desired output.</p>  <p>For example, the system has no built-in support for selling set-products. Meaning that buying 1 meta product actually is selling 5 different products for a different set-price.</p>  <p>We once briefly talked about that feature, but neglected it to get more important stuff done, and it never came up since then.</p>  <p>Turns out, the customer implemented that feature himself, by creating a product representing the set, and whenever selling it, he added the set and the 5 sub products to the order. Changing the price of the 5 sub products to zero caused the bill to appear right while still removing the items from storage. </p>  <p>This bit me yesterday when I was asked to implement another feature did some calculations that aren’t based on the actual sell price of the products but on their base price. This screws my complete calculation because now that data is indistinguishable from another kind of data in the system that has to be treated differently.    <br />So I end up with a new type of sale that the system has no means of identifying (without doing some rather complicated and error prone rule matching stuff I want to avoid). </p>  <p>Now, a rather trivial feature has turned into a major system refactor since I need to re-implement the set functionality and some creative ways how to fix the old sales to reflect that change.</p>  <p>Time I would have rather spent working on other things, instead of running with scissors :). </p>  <p>Watch out for how you communicate with your customers and make sure they tell you anything about the system and their intended uses. If you give them enough power through the UI, they will start to fill in bogus values to achieve their business needs without you knowing.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>465</wp:post_id>
<wp:post_date>2009-02-05 11:31:13</wp:post_date>
<wp:post_date_gmt>2009-02-05 09:31:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>beware-of-smart-customers</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=466</link>
<pubDate>Fri, 06 Feb 2009 14:07:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>466</wp:post_id>
<wp:post_date>2009-02-06 16:07:00</wp:post_date>
<wp:post_date_gmt>2009-02-06 14:07:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>468</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:618;s:6:"height";i:155;s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x75.png";s:5:"width";i:300;s:6:"height";i:75;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=467</link>
<pubDate>Fri, 06 Feb 2009 14:07:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>467</wp:post_id>
<wp:post_date>2009-02-06 16:07:03</wp:post_date>
<wp:post_date_gmt>2009-02-06 14:07:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>468</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:618;s:6:"height";i:155;s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb1-300x75.png";s:5:"width";i:300;s:6:"height";i:75;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Inversion of Control with Castle Windsor</title>
<link>http://www.tigraine.at/?p=468</link>
<pubDate>Fri, 06 Feb 2009 14:07:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=468</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, this may be old news to many of you, but I believe what had the most impact (quality wise) on my work last year was my discovery of the dependency injection pattern. So, yes I guess I’ll have to blog about it :).    <br />Also I am going to deliver a talk at the <a href="http://www.barcamp.at/BarCamp_Klagenfurt_2009">Barcamp Klagenfurt 09</a> on the topic.</p>  <p>Ok, so what is the dependency injection pattern?    <br />Consider the following scenario: You have a class that will monitor traffic and notify authorities in case of an accident. Let’s say we are OO savy enough that we created a separate class that takes care of sending notification emails called EmailNotifier (it’s not that common you know, I’ve seen and done enough inline email sending to deserve a lifelong prison sentence if Bob Martin or Fowler would have a word in that).     <br />Now our TrafficWatcher class can simply instantiate the EmailNotifier class, supply some configuration (SMTP server etc) and call the Nofify() method.     <br />So our code for NotificationService would look like this:</p>  <p></p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:935132ca-40bb-448c-a907-060cc8d3a9e7" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class NotificationService
{
&#160;&#160;&#160;&#160;public void NotifyUser()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EmailNotifier notifier = new EmailNotifier("smtp.server.com");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;notifier.Notify();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Ok, this is kind of neat, and the EmailNotifier class can be reused quite easily. But the LostPasswordService class is a mess. Not only has it’s responsibility changed (besides notifying the user it now also handles the object creation), but it also knows far too much about the EmailNotifier configuration by supplying the SMTP server. The LostPasswordService will have to change once we decide to not hardcode the SMTP server (placing another responsibility in there: Configuration handling). And any changes in the EmailNotifier construction (what about a SMTP port?) will affect LostPasswordService too.</p>

<p>So, the usual approach here would have been to create a Factory that takes care of creating the EmailNotifier class and handles it’s configuration. That would now protect the LostPasswordService from changes in the object creation. To avoid us having to new up the factory in the NotificationService (creating the whole mess again) we’d use a static factory like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:751b872c-ba6e-46c0-b097-320f6bda2ee9" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public static class NotifierFactory
{
&#160;&#160;&#160;&#160;public static EmailNotifier GetNotifierInstance()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return new EmailNotifier("smtp.server.com");
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now the Service can get the object from the factory and we have decoupled the NotificationService from the EmailNotifier classes, making them both pretty reuseable. Right?</p>

<p>No, we made it better, but the problem still remains pretty much the same:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/02/image1.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb1.png" width="618" height="155" /></a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>468</wp:post_id>
<wp:post_date>2009-02-06 16:07:04</wp:post_date>
<wp:post_date_gmt>2009-02-06 14:07:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Barcamp Klagenfurt Presentation on Castle Windsor</title>
<link>/bcklu-windsor/</link>
<pubDate>Sat, 07 Feb 2009 12:18:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/bcklu-windsor.pptx</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>469</wp:post_id>
<wp:post_date>2009-02-07 14:18:30</wp:post_date>
<wp:post_date_gmt>2009-02-07 12:18:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bcklu-windsor</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>2147483647</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/bcklu-windsor.pptx</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/bcklu-windsor.pptx</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My Barcamp Klagenfurt session</title>
<link>http://www.tigraine.at/2009/02/07/my-barcamp-klagenfurt-session/</link>
<pubDate>Sat, 07 Feb 2009 12:19:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/07/my-barcamp-klagenfurt-session/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just came back from lunch at the Barcamp Klagenfurt and would like to post my presentation slides.</p>  <p>Posting the code samples is rather useless since I did some live coding on stage, but I am working on a post on the topic anyway, so you will see the code sooner or later.</p>  <p>Anyway, the slides are here (pptx): <a href="http://www.tigraine.at/wp-content/uploads/2009/02/bcklu-windsor.pptx">Barcamp-Klagenfurt-windsor.pptx</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>470</wp:post_id>
<wp:post_date>2009-02-07 14:19:25</wp:post_date>
<wp:post_date_gmt>2009-02-07 12:19:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-barcamp-klagenfurt-session</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>IEnumerable&lt;T&gt;.Each as C# Extension Method</title>
<link>http://www.tigraine.at/2009/02/11/ienumerableteach-as-c-extension-method/</link>
<pubDate>Wed, 11 Feb 2009 11:26:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/11/ienumerableteach-as-c-extension-method/</guid>
<description></description>
<content:encoded><![CDATA[<p>A very long time ago I went through the Ruby in 20 minutes tutorial when I saw this: </p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:08b141a0-8a16-41cf-8459-554d8588a0a7" class="wlWriterEditableSmartContent"><pre name="code" class="ruby">
@names.each do |name|
&#160;&#160;puts "Hallo, #{name}!"
end
</pre></div>

<p>When C# came out later I always wondered why there is no functional equivalent on the IEnumerable&lt;T&gt; interface, since it would be a perfect place for quick inline method calls without having to write a full foreach statement.</p>

<p>At that time my knowledge of extension methods and delegates was too limited to do this myself, but that doesn’t mean it has to stay that way. 
  <br />I finally remembered that I never got to it last time and implemented it today.</p>

<p>Oh and it’s so damn easy too:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:622542ae-761b-46c0-9a85-6671f60f9f04" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public static class EachExtension
{
&#160;&#160;&#160;&#160;public static void Each&lt;T&gt;(this IEnumerable&lt;T&gt; enumberable, Action&lt;T&gt; action)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foreach (var item in enumberable)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;action(item);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>To use this .Each method now you simply need to be using the Namespace where the EachExtension is in and you can write code like this:</p>

<p>
  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:16ab6778-ade7-4328-9e1f-c72d2c3a8735" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
IEnumerable&lt;string&gt; x = new[] {"hello", "world", "how", "are", "you"};
x.Each(Console.WriteLine);
</pre></div>
</p>

<p>Or with multiple parameters:</p>

<p>
  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e6a4de4a-b729-41c0-b6d5-4759484a9c79" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
IEnumerable&lt;string&gt; x = new[] {"hello", "world", "how", "are", "you"};
x.Each(p =&gt; Console.WriteLine("{0}", p));
</pre></div>
</p>

<p>Or, even whole inline method bodies:</p>

<p>
  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:be6ac2dc-55eb-41f4-bf02-287da6394ad9" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
IEnumerable&lt;string&gt; x = new[] {"hello", "world", "how", "are", "you"};
x.Each(p =&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Console.Write("Word:");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Console.WriteLine(p);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; });
</pre></div>
</p>

<p>So, Lambdas are fun after all :)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>472</wp:post_id>
<wp:post_date>2009-02-11 13:26:26</wp:post_date>
<wp:post_date_gmt>2009-02-11 11:26:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ienumerableteach-as-c-extension-method</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2465</wp:comment_id>
<wp:comment_author><![CDATA[Found the missing Linq operators: MoreLinq | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/03/10/found-the-missing-linq-operators-morelinq/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-03-10 02:21:18</wp:comment_date>
<wp:comment_date_gmt>2009-03-10 00:21:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] complained before that there are operators like the IEnumerable&lt;T&gt;.Each() are somewhat missing from the default implementation of Linq, but I never really gave it too much [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3422</wp:comment_id>
<wp:comment_author><![CDATA[Matt Sherman]]></wp:comment_author>
<wp:comment_author_email>mwsherman@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://clipperhouse.com</wp:comment_author_url>
<wp:comment_author_IP>74.68.107.167</wp:comment_author_IP>
<wp:comment_date>2010-02-12 06:45:48</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 11:45:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is great...I was just going to send a note to the C# guys to suggest this. Each() is a fundamental expression in Ruby and Javascript, it should be part of C# if only to keep up with the trends. :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3423</wp:comment_id>
<wp:comment_author><![CDATA[Matt Sherman]]></wp:comment_author>
<wp:comment_author_email>mwsherman@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://clipperhouse.com</wp:comment_author_url>
<wp:comment_author_IP>74.68.107.167</wp:comment_author_IP>
<wp:comment_date>2010-02-12 07:23:35</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 12:23:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Here&#39;s a tweak which returns the enumerable, which would allow chaining:<br><br>public static IEnumerable Each&lt;T&gt;(this IEnumerable&lt;T&gt; enumberable, Action&lt;T&gt; action)<br>{<br>	foreach (var item in enumberable) {<br>		action(item);<br>	}<br>	return enumberable;<br>}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3424</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.194</wp:comment_author_IP>
<wp:comment_date>2010-02-12 23:43:10</wp:comment_date>
<wp:comment_date_gmt>2010-02-13 04:43:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:<br><br>IEnumerable&lt;string&gt; x = new[] { "hello", "world", "how", "are", "you" };<br>IEnumerable&lt;int&gt; enumerable = x.Each(p =&gt; p.Length);<br><br>Code:<br><br>public static IEnumerable&lt;TOut&gt; Each&lt;T, TOut&gt;(this IEnumerable&lt;T&gt; enumberable, Func&lt;T, TOut&gt; action)<br>{<br>    foreach (var item in enumberable)<br>    {<br>        yield return action(item);<br>    }<br>}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3648</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3697</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3713</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3716</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3743</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3755</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3756</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-12 22:43:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-12 22:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You could even extend this to allow for transformations like this:nnIEnumerable<string> x = new[] { "hello", "world", "how", "are", "you" };nIEnumerable<int> enumerable = x.Each(p => p.Length);nnCode:nnpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)n{n    foreach (var item in enumberable)n    {n        yield return action(item);n    }n}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3823</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3825</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3830</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3844</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3847</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3893</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3894</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3897</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3898</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3901</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3922</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4974</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4012</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4027</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4087</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5186</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4449</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4536</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4537</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4543</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4544</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4545</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5357</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5360</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4646</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4648</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4661</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4662</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4730</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4732</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4733</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4784</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4829</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4832</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4860</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4960</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5104</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5296</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5297</wp:comment_id>
<wp:comment_author><![CDATA[Snakiej]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/Snakiej</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-17 07:06:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-17 07:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[which can be reduced to:nnttpublic static IEnumerable<TOut> Each<T, TOut>(this IEnumerable<T> enumberable, Func<T, TOut> action)ntt{ntttreturn enumberable.Select(action);ntt}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Google Reader Feature Request: Don&#8217;t mark feed as new</title>
<link>http://www.tigraine.at/2009/02/13/google-reader-feature-request-dont-mark-feed-as-new/</link>
<pubDate>Fri, 13 Feb 2009 13:10:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/13/google-reader-feature-request-dont-mark-feed-as-new/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve been using <a href="http://www.google.com/reader">Google reader</a> for a very very long time now, and it’s besides <a href="http://www.gmail.com">Gmail</a> one of the most important tools out there for me to stay informed. I don’t read newspapers, I don’t read blogs directly, I only stop once in Gmail and once in Reader.</p>  <p>The only thing I really consider “missing” from Reader is some way to declare a rule that Reader should never mark a feed as “unread”.</p>  <p>Why? Simple: Many online newspapers and sites give out full-text feeds and I subscribe to them to occasionally read some articles.    <br />But, in case of sites like Engadget or Gizmondo, there is no way you can keep up with 30+ posts per day and still do work in between reading. So, my “News” folder in Reader grows pretty fast to 1000+ unread items and I have to go in and mark them all as read every now an then. </p>  <p>I consider those feeds as a constant stream of information, so I <em>don’t want </em>Reader to track their read/unread status. If I’ve got free time I go in there to see what’s going on right now, while most of the time I simply ignore those feeds.</p>  <p>What do you think is missing from Google Reader?</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>474</wp:post_id>
<wp:post_date>2009-02-13 15:10:41</wp:post_date>
<wp:post_date_gmt>2009-02-13 13:10:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>google-reader-feature-request-dont-mark-feed-as-new</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2456</wp:comment_id>
<wp:comment_author><![CDATA[adamralph]]></wp:comment_author>
<wp:comment_author_email>adam@adamralph.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>194.153.181.211</wp:comment_author_IP>
<wp:comment_date>2009-02-13 14:34:56</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 19:34:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Personally I&#39;d like to see the ability to synchronise with a good desktop reader such FeedDemon - apparently this is in the works!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2457</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>78.142.72.10</wp:comment_author_IP>
<wp:comment_date>2009-02-13 14:56:50</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 19:56:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[There are already desktop readers that synchronize with Google Reader.<br>Dare Obasanjo from Microsoft works on a free Feedreader called RSSBandit that can serve as a Desktop Client to Google Reader.<br><br>You can find RSSBandit at <a href="http://rssbandit.org/" rel="nofollow">http://rssbandit.org/</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2458</wp:comment_id>
<wp:comment_author><![CDATA[adamralph]]></wp:comment_author>
<wp:comment_author_email>adam@adamralph.com</wp:comment_author_email>
<wp:comment_author_url>http://www.twitter.com/adamralph</wp:comment_author_url>
<wp:comment_author_IP>194.153.181.211</wp:comment_author_IP>
<wp:comment_date>2009-02-13 15:01:14</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 20:01:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the tip.  I knew about RSSBandit but I didn&#39;t realise it had Google Reader sync&#39;ing.  I might have another look at RSSBandit.  However, if FeedDemon synchronisation is coming soon then I think I&#39;ll wait for that.  I love FeedDemon! ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3710</wp:comment_id>
<wp:comment_author><![CDATA[adamralph]]></wp:comment_author>
<wp:comment_author_email>adam@adamralph.com</wp:comment_author_email>
<wp:comment_author_url>http://www.twitter.com/adamralph</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-02-13 14:01:00</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 14:01:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the tip.  I knew about RSSBandit but I didn't realise it had Google Reader sync'ing.  I might have another look at RSSBandit.  However, if FeedDemon synchronisation is coming soon then I think I'll wait for that.  I love FeedDemon! ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3711</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-02-13 13:56:00</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 13:56:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[There are already desktop readers that synchronize with Google Reader.rnDare Obasanjo from Microsoft works on a free Feedreader called RSSBandit that can serve as a Desktop Client to Google Reader.rnrnYou can find RSSBandit at http://rssbandit.org/]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3712</wp:comment_id>
<wp:comment_author><![CDATA[adamralph]]></wp:comment_author>
<wp:comment_author_email>adam@adamralph.com</wp:comment_author_email>
<wp:comment_author_url>http://www.twitter.com/adamralph</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-02-13 13:34:00</wp:comment_date>
<wp:comment_date_gmt>2009-02-13 13:34:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Personally I'd like to see the ability to synchronise with a good desktop reader such FeedDemon - apparently this is in the works!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/imagepng-2/</link>
<pubDate>Tue, 24 Feb 2009 12:55:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>475</wp:post_id>
<wp:post_date>2009-02-24 14:55:58</wp:post_date>
<wp:post_date_gmt>2009-02-24 12:55:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>479</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:524;s:6:"height";i:143;s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x143.png";s:5:"width";i:150;s:6:"height";i:143;}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x81.png";s:5:"width";i:300;s:6:"height";i:81;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/image-thumbpng-2/</link>
<pubDate>Tue, 24 Feb 2009 12:55:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>476</wp:post_id>
<wp:post_date>2009-02-24 14:55:59</wp:post_date>
<wp:post_date_gmt>2009-02-24 12:55:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>479</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:524;s:6:"height";i:143;s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x143.png";s:5:"width";i:150;s:6:"height";i:143;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb2-300x81.png";s:5:"width";i:300;s:6:"height";i:81;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/imagepng-3/</link>
<pubDate>Tue, 24 Feb 2009 12:55:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>477</wp:post_id>
<wp:post_date>2009-02-24 14:55:59</wp:post_date>
<wp:post_date_gmt>2009-02-24 12:55:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>479</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:486;s:6:"height";i:160;s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image3-300x98.png";s:5:"width";i:300;s:6:"height";i:98;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/image-thumbpng-3/</link>
<pubDate>Tue, 24 Feb 2009 12:56:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>478</wp:post_id>
<wp:post_date>2009-02-24 14:56:00</wp:post_date>
<wp:post_date_gmt>2009-02-24 12:56:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>479</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:486;s:6:"height";i:160;s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:73:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image-thumb3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb3-300x98.png";s:5:"width";i:300;s:6:"height";i:98;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Linq to Sql Association weirdness</title>
<link>http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/</link>
<pubDate>Tue, 24 Feb 2009 12:56:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/24/linq-to-sql-association-weirdness/</guid>
<description></description>
<content:encoded><![CDATA[<p>When your dbml designer shows an association, you’d expect to be able to traverse it in code don’t you?</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/02/image2.png"><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="143" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb2.png" width="524" border="0" /></a> </p>  <p></p>  <p>So, funny thing. The Post entity lacks a “PostTags” Field that should be there according to the designer.</p>  <p>After a few minutes of tinkering, I realized that PostTag has no primary key of it’s own. Since in my real application it’s a m:n association table and no entity on it’s own I didn’t use a primary key. But apparently Linq to Sql <strong>needs a primary key to work </strong>with, so once I changed the table to have a PK magically a PostTags field appeared:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/02/image3.png"><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="160" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/02/image-thumb3.png" width="486" border="0" /></a> </p>  <p>Once again I get how “version 1” Linq to Sql really is, but sadly there won’t be a version 2 since Microsoft is now pushing all resources towards the Entity Framework.</p>  <p>Why not EF? Too complex, once I reach a level of complexity that would justify the use of EF, I use NHibernate.    <br />What I need out of Microsoft right now, is some Linq enabled ORM that’s dead simple with a very DB-centric view that works. Something like Linq to Sql v2.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>479</wp:post_id>
<wp:post_date>2009-02-24 14:56:00</wp:post_date>
<wp:post_date_gmt>2009-02-24 12:56:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq-to-sql-association-weirdness</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/02/25/override-vs-new-in-c/imagepng-2/</link>
<pubDate>Wed, 25 Feb 2009 11:27:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/02/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>480</wp:post_id>
<wp:post_date>2009-02-25 13:27:00</wp:post_date>
<wp:post_date_gmt>2009-02-25 11:27:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>481</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/02/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:412;s:6:"height";i:210;s:14:"hwstring_small";s:23:"height='65' width='127'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/02/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x152.png";s:5:"width";i:300;s:6:"height";i:152;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>override vs new in C#</title>
<link>http://www.tigraine.at/2009/02/25/override-vs-new-in-c/</link>
<pubDate>Wed, 25 Feb 2009 11:27:01 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/25/override-vs-new-in-c/</guid>
<description></description>
<content:encoded><![CDATA[<p>The class diagram is rather simple:</p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="210" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/02/image4.png" width="412" border="0" /> </p>  <p>Yes, it’s that simple. I have an Image and I want to modify the behavior of the Url getter method for it (I can’t compose the URL string inside a Linq to Sql expression since I’d have to call a resolveFileType method that can’t get translated into SQL). So, I figured the best way to solve that problem is to have a subclass with a custom implementation of Url to handle that. I supply the required information through the ctor and when called the Url gets composed. The general idea is to assign an BoxImage to an Image field, hiding the custom implementation from the rest of the code.</p>  <p>Since I had not marked my fields as virtual I could not override them, I thought just writing new would do the job.    <br />That failed miserably.</p>  <p>Actually, the new keyword does not hide the base classes method. Instead, a new method gets created that lives only on the derived class and that won’t get called if you are calling the base type.</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b9bfafb3-91f9-4c4c-ae53-19c4b4640eb8" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Image
{
&#160;&#160;&#160;&#160;public bool Url()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true;
&#160;&#160;&#160;&#160;}
}

public class BoxImage : Image
{
&#160;&#160;&#160;&#160;public new bool Url()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false;
&#160;&#160;&#160;&#160;}
}

public class Image_Fixture
{
&#160;&#160;&#160;&#160;[Fact]
&#160;&#160;&#160;&#160;public void Should_Return_False()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Image img = new BoxImage();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.True(img.Url());
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.False(((BoxImage)img).Url());
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>The unit test should be self explanatory, only if the type that gets the call is actually a BoxImage the new method will get called, if not, the base implementation will get used and your polymorphism goes out of the window :).</p>

<p>Doing this right would require the Url method to be virtual so you can properly override it:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d8716ba7-a718-4a8b-93d4-2a68f7f98c6a" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Image
{
&#160;&#160;&#160;&#160;public virtual bool Url()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return true;
&#160;&#160;&#160;&#160;}
}

public class BoxImage : Image
{
&#160;&#160;&#160;&#160;public override bool Url()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return false;
&#160;&#160;&#160;&#160;}
}

public class Image_Fixture
{
&#160;&#160;&#160;&#160;[Fact]
&#160;&#160;&#160;&#160;public void Should_Return_False()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Image img = new BoxImage();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.False(img.Url());
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.False(((BoxImage)img).Url());
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Oh, and by the way. If you got the impression I don’t know about the fundamentals of the language I’m using, you are right. I try to learn as I encounter the problems, one feature at a time, one minor annoyance at a time :). </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>481</wp:post_id>
<wp:post_date>2009-02-25 13:27:01</wp:post_date>
<wp:post_date_gmt>2009-02-25 11:27:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>override-vs-new-in-c</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Linq provider differences do affect implementation</title>
<link>http://www.tigraine.at/2009/02/26/linq-provider-differences-do-affect-implementation/</link>
<pubDate>Thu, 26 Feb 2009 14:47:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/26/linq-provider-differences-do-affect-implementation/</guid>
<description></description>
<content:encoded><![CDATA[<p>After having done some Linq to objects when working with NHibernate I discovered a major flaw in the whole abstraction when using Linq to Sql today.</p>  <p>Imagine the following code:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ff758837-9297-4c5e-b16a-434ccf8b2cc3" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
IQueryable&lt;string&gt; strings = new List&lt;string&gt; {"test", "Test2"}.AsQueryable();
var result = strings.Where(p =&gt; p.Contains("test"));
</pre></div>

<p>It works perfectly in a Linq to Sql setting since Sqlmetal will translate the contains call to a LIKE operation, and the query will return two results (since LIKE has no case sensitivity).</p>

<p>It simply won’t if you query objects in memory since the standard Contains operation is case sensitive and you will only get one result.</p>

<p>The only way I found to query case insensitive is with IndexOf() like this:</p>

<p></p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:601a44f3-b679-43ee-9877-08e02b904202" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
IQueryable&lt;string&gt; strings = new List&lt;string&gt; {"test", "Test2"}.AsQueryable();
var result = strings.Where(p =&gt; p.IndexOf("test", StringComparison.OrdinalIgnoreCase) &gt; -1);
</pre></div>

<p></p>

<p>Note the StringComparison.OrdinalIgnoreCase that makes this ignore casing. 
  <br />Now, the catch here is that Sqlmetal (the thing that magically generates Sql from the expression tree), can’t translate IndexOf into Sql and you’ll get an exception.</p>

<p>So, we’re screwed right? :) 
  <br />Yes! We are, since Contains is not marked as virtual we can’t just subclass List&lt;string&gt; and override the behavior of Contains (assuming we could interfere with the objects creation through some factory). We are bound to write different code for querying Linq2Sql and Linq2Objects. That’s what I call a rather leaky abstraction.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>482</wp:post_id>
<wp:post_date>2009-02-26 16:47:14</wp:post_date>
<wp:post_date_gmt>2009-02-26 14:47:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>linq-provider-differences-do-affect-implementation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Simplest thing to do</title>
<link>http://www.tigraine.at/2009/02/27/simplest-thing-to-do/</link>
<pubDate>Fri, 27 Feb 2009 11:02:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/02/27/simplest-thing-to-do/</guid>
<description></description>
<content:encoded><![CDATA[<p>Today a friend woke me up by phone wanting to ask me how to best do internationalization (<a href="http://de.wikipedia.org/wiki/Internationalisierung_(Softwareentwicklung)">i18n</a>) in .NET. He already had read some guides that involved compiling satellite assemblies with global resource files etc, and that didn’t work all that well.     <br />My first thought went to that article I had read half a year before when I was tasked with i18n, and I tried to remember how I did it back then.</p>  <p>I remembered: <strong>I didn’t</strong>.</p>  <p>At no point in time was the scope of the application so big that it had warranted to jump through the hoops Microsoft hat set up to get to real internationalization.   <br />If you Google for the thing or ask on StackOverflow, you realize rather fast that you don’t want to have any of this i18n “goo” in your application logic, so the smartest thing is to simply abstract everything away into a separate class that handles all those things. </p>  <p>And once you have it abstracted from your application, nobody forces you any more to use the .NET i18n stuff any more.    <br />Simple switch statements will do if you only need 2 languages for a couple of strings, even reading something on the Globalization stuff from .NET takes longer than simply writing something similar to this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9dec461e-ac9c-49e7-ad88-4e614f3e9c3f" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class LocalizationManager : ILocalizationManager
{
&#160;&#160;&#160;&#160;private IDictionary&lt;CultureInfo, IDictionary&lt;string, string&gt;&gt; dictionary;

&#160;&#160;&#160;&#160;public LocalizationManager(IDictionary&lt;CultureInfo, IDictionary&lt;string, string&gt;&gt; dictionary)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.dictionary = dictionary;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public string Translate(CultureInfo culture, string name)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var translationDictionary = dictionary[culture];
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!translationDictionary.ContainsKey(name))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new Exception("No translation found");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return translationDictionary[name];
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now, the only trouble here is to fill that dictionary with values, and that can even be simply hardcoded into the application. 
  <br />To further facilitate the use of this you can now write Facades for your languages like this:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bfee0b44-f0be-499d-a6c4-390219fcdac8" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Translation : ITranslation
{
&#160;&#160;&#160;&#160;private readonly ILocalizationManager localizationManager;
&#160;&#160;&#160;&#160;private readonly CultureInfo culture;

&#160;&#160;&#160;&#160;public Translation(ILocalizationManager localizationManager, CultureInfo culture)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.localizationManager = localizationManager;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.culture = culture;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public string Translate(string name)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return localizationManager.Translate(culture, name);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>And you can go even further (if you like hardcoding as much as I do) and write another facade like this to have intellisense on your translations:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:37e29798-7062-4f4a-a49a-b2dd89487c80" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class SpecializedTranslation
{
&#160;&#160;&#160;&#160;private readonly ITranslation translation;
&#160;&#160;&#160;&#160;public SpecializedTranslation(ITranslation translation)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.translation = translation;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public string GetLoginMessage()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return translation.Translate("LoginMessage");
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Also mind that since everything follows a rather simple Interface I can easily change these implementations later if I need to. But for something simple, this will do just fine. 
  <br />Also I advise to use this through an IoC container like Windsor so you could even go as far as to swap hardcoded translations through the <a href="http://www.tigraine.at/2009/02/02/extensibility-can-equal-configurability/">configuration</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>484</wp:post_id>
<wp:post_date>2009-02-27 13:02:43</wp:post_date>
<wp:post_date_gmt>2009-02-27 11:02:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>simplest-thing-to-do</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>How to loose any credibility</title>
<link>http://www.tigraine.at/2009/03/02/how-to-loose-any-credibility/</link>
<pubDate>Mon, 02 Mar 2009 14:45:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/02/how-to-loose-any-credibility/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just listened to Stackoverflow.com Podcast #39 and am completely shocked.</p>  <p>I really like the podcast, I really like Jeff and Joel talk casually about stuff, but when Joel today talked about the SOLID principles (again), I almost screamed.</p>  <p>There were discussions throughout the community when Jeff and Joel said before on podcast #38:</p>  <blockquote>   <p>Last week I was listening to a <a href="http://www.hanselminutes.com/default.aspx?showID=163">podcast on Hanselminutes</a>, with Robert Martin talking about the <a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod">SOLID principles</a>. (That's a real easy-to-Google term!) It's object-oriented design, and they're calling it agile design, which it really, really isn't. It's principles for how to design your classes, and how they should work. And, when I was listening to them, they all sounded to me like extremely bureaucratic programming that came from the mind of somebody that has not written a lot of code, frankly.</p> </blockquote>  <p>(quoted from the <a href="https://stackoverflow.fogbugz.com/default.asp?W29025">transcript wiki</a>)</p>  <p>Especially the last line coming from a business guy like Joel to a programmer like Robert C. Martin (the topmost book in my drawer here at work bears his name!) just seemed incredibly silly and plain ignorant.    <br />But, I didn’t blog about it since everyone else did (<a href="http://blog.objectmentor.com/articles/2009/02/06/on-open-letter-to-joel-spolsky-and-jeff-atwood">even Uncle Bob</a>)</p>  <p>I also thought that Rob Conery had a <a href="http://blog.wekeroad.com/blog/patterns-purists-and-sinkholes/">very good post</a> (although too amicable in tone towards Jeff&amp;Joel) about the whole thing and I really couldn’t add anything to it besides my personal feeling that Joel &amp; Jeff were way off track and judged about stuff they don’t have any authority to judge over. <em>Not knowing stuff </em><em>doesn’t enable you to criticize it.</em></p>  <p>So, now this time Joel Spolsky ruined any credibility he ever had in the field of writing software when he came up with an example of a method that should not be tested because it’s too hard to write a test for it.</p>  <p>The whole is an example from Copilot, a VNC thingy FogCreek is selling:</p>  <blockquote>   <p>I need to write a function that's basically a little button on a toolbar that is going to reduce the JPEG compression.      <br />[snip] So imagine how much code you'll need to write to change a parameter on your JPEG compression library from a 37 to a 10 lets say. Right? And that's all it's gonna do, so this is 5, 10, 20 lines of code to implement this feature, let's say.       <br />But to implement the test, once you have to somehow create a JPEG that is the same as this other JPEG that you have, but compressed at a different level.       <br />And there is no way to actually construct this test in advance, other than actually running it, or if you did, it would be extremely hard. It would take lot of work to write a test that connects to another machine...</p> </blockquote>  <p>He then goes off to talk about having the test run over two different machines (one probably emulated for the test), talking about different versions of the JPEG compression library etc etc etc. </p>  <p>I couldn’t think of a more stupid thing to do. Nothing, never, ever.    <br />Here is <u>the whole test it would need</u> to test the feature (the button that changes the compression rate)</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:682f857d-c592-4635-8f14-58f46ed9077f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void Test()
{
&#160;&#160;&#160;&#160;SetCompressionRate(37);
&#160;&#160;&#160;&#160;Assert.Equal(37, jpgCompressionLib.CompressionRate);
}
</pre></div>

<p>Anything more than that, is an integration test and I’m no longer testing the feature, but the JPG Compression library and it’s ability to adapt to the new compression rate. 
  <br />Anything besides verifying that the compression rate gets successfully set on the library runs out of scope of a unit test, and is no unit test.</p>

<p>And that’s basically it. This one innocent example meant to prove his point just dug the whole deeper. So far as for me it has become clear that Joel Spolsky has no credibility whatsoever left over in the field of software development.</p>

<p>Oh, and by the way. You really should listen to that podcast, it gets even better when Joel continues to make an ass of himself when he starts to bash on PHP as being a poorly designed ripoff of VBscript, that language features in .NET 3.5 have advanced programming far more than these object oriented design principles, etc.</p>

<p>Oh and by the way: I’m always open to discussion so feel free to leave a comment if you think I am wrong here.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>485</wp:post_id>
<wp:post_date>2009-03-02 16:45:49</wp:post_date>
<wp:post_date_gmt>2009-03-02 14:45:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-loose-any-credibility</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3479</wp:comment_id>
<wp:comment_author><![CDATA[ugg boots]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.discountbootsonsale.co.uk</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:40:51</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:40:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-13.html"  rel="nofollow">ajf 13</a> <br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Do you really know what LinQ does?</title>
<link>http://www.tigraine.at/2009/03/06/do-you-really-know-what-linq-does/</link>
<pubDate>Fri, 06 Mar 2009 14:34:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/06/do-you-really-know-what-linq-does/</guid>
<description></description>
<content:encoded><![CDATA[<p>LinQ is by far the most empowering language technology I’ve seen in years, and it has really helped me in many cases get to a more functional style of programming, enabling clearer syntax and better overall code.</p>  <p>But, it also has it’s pitfalls.    <br />Since LinQ attaches a .Count method to any enumerable, why would you still use IList for read-only collections? It’s so damn easy to simply write code like this:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:08be49ee-18f8-495c-83c4-917520158a28" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
IEnumerable&lt;string&gt; strings = new[] {"hello", "world"};
Console.WriteLine("Number of Strings: {0}", strings.Count());
</pre></div>

<br />What would be the benefit when using a IList&lt;string&gt; or ICollection&lt;string&gt; like this? 

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9bdc0c08-c1f4-4f45-b41f-b63858778362" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
IList&lt;string&gt; strings = new[] {"hello", "world"};
Console.WriteLine("Number of Strings: {0}", strings.Count());
</pre></div>

<p>IEnumerable&lt;T&gt;.Count() would be a O(n) operation if it would follow the IEnumerable semantics through enumerating through all items. Since the definition of a Enumerable is that you need to iterate over every item in a linked list to determine it’s length. 
  <br />Actually, the implementation (I looked with Reflector into the Count() method) does exactly that:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f85c58e7-29f8-4122-9f42-19fb1ef35394" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
int num = 0;
using (IEnumerator&lt;TSource&gt; enumerator = source.GetEnumerator())
{
&#160;&#160;&#160;&#160;while (enumerator.MoveNext())
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num++;
&#160;&#160;&#160;&#160;}
}
return num;
</pre></div>

<p>But, that would always guarantee a O(n) execution time and would slow most applications to a crawl (since it’s so easy to use .Count() everywhere) Microsoft implemented a little shortcut right before the above code:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:45c8b232-441e-448c-8652-2b0372a39b98" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
ICollection&lt;TSource&gt; is2 = source as ICollection&lt;TSource&gt;;
if (is2 != null)
{
&#160;&#160;&#160;&#160;return is2.Count;
}
</pre></div>

<p>So, they are breaking the <a href="http://en.wikipedia.org/wiki/Liskov_substitution_principle">Liskov Substitution Principle</a> on purpose to speed up the execution time of .Count(). 

  <br />That’s why calling .Count() doesn’t hurt so much as long as you are calling it on a IEnumerable that’s also an ICollection, all you’re doing is a cast and a field read.</p>

<p>That’s also why in my testing IEnumerable.Count() wasn’t soo much slower than IList.Count since the only difference that slowed IEnumerable was the typecast (I’m too lazy to generate some data on a non ICollection IEnumerable with a real O(n) execution time). </p>

<p>&#160;<img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="158" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/03/image1.png" width="400" border="0" /> </p>

<p>Just keep in mind that once you are iterating over a “real” IEnumerable that has no collection underneath, you should try to avoid calling .Count() too often since it’s not only a cast/read but a iteration over all elements of a list. 
  <br />Also keep in mind that usually when working with the extension methods on IEnumerable you risk to perform a O(n) operation, so use it wisely (especially when you don’t control the source of your IEnumerable&lt;T&gt;, you could get passed anything).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>489</wp:post_id>
<wp:post_date>2009-03-06 16:34:36</wp:post_date>
<wp:post_date_gmt>2009-03-06 14:34:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>do-you-really-know-what-linq-does</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/03/06/do-you-really-know-what-linq-does/imagepng-2/</link>
<pubDate>Fri, 06 Mar 2009 14:35:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/03/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>490</wp:post_id>
<wp:post_date>2009-03-06 16:35:51</wp:post_date>
<wp:post_date_gmt>2009-03-06 14:35:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>489</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/03/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/03/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:400;s:6:"height";i:158;s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/03/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x118.png";s:5:"width";i:300;s:6:"height";i:118;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rant: BIOS update procedure fail</title>
<link>http://www.tigraine.at/2009/03/07/rant-bios-update-procedure-fail/</link>
<pubDate>Sat, 07 Mar 2009 02:16:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/07/rant-bios-update-procedure-fail/</guid>
<description></description>
<content:encoded><![CDATA[<p>Upon helping a friend of mine assembling a new kick-ass gaming PC. Once the whole system was put together he called me the next day stating that the system feels incredibly slow and crashes whenever he starts up a 3d game. </p>  <p>I rushed to help and after some tinkering we found out that the CPU (a Core 2 E8500 2x3.16 Ghz) was operating at almost 80°C. By contrast, my Core2 E6600 (2x2,4) reaches 36°C under full load.    <br />So, since the CPU cooler was spinning, I am quite convinced that it has something to do with a faulty mainboard or (rather unlikely) a faulty CPU.     <br />My initial thought was to try updating the BIOS in case the problem may go away.</p>  <p>So I went to the ASUS download site, selected the appropriate mainboard model (<a href="http://www.asus.com/products.aspx?modelmenu=1&amp;model=2164&amp;l1=3&amp;l2=11&amp;l3=709&amp;l4=0">P5Q</a>) and downloaded a zip file containing the newest BIOS. Now imagine my excitement when I was presented with a .ROM file inside that zip. Pretty cool huh?     <br />So I went on to download the Afudos BIOS update tool V2.36 that should install the .ROM bios.&#160; <br />Started it: sorry doesn’t work on Windows. (WTF?)</p>  <p>So, following the <a href="http://support.asus.com/technicaldocuments/technicaldocuments_content.aspx?no=546&amp;SLanguage=en-us">instructions provided by ASUS</a> I’m supposed to: </p>  <blockquote>   <p>Please insert a clean, unformatted disk into A:\ drive and boot the system into DOS mode. In DOS mode, please type in C:\&gt; FORMAT A: /S or click on“My Computer”icon under Windows O/S, right click on drive A:\ and choose“Format”. By using the procedure above, you can create a boot disk without AUTOEXEC.BAT and CONFIG.SYS files.</p> </blockquote>  <p>Drive A:\ ? DOS? Autoexec.bat? Config.sys?</p>  <p><strong>ASUS: Are you out of your mind?</strong></p>  <p>When I needed to flash my Dell XPS M1330 Bios with a new version, I didn’t even have to leave my browser to do so. Some weird ActiveX thingy just started and updated my BIOS revision while I was casually checking my email. And ASUS is really telling me this is the way to go if I want to update my brand new socket 775 P45?    <br />C’mon, that’s so 1994 – not even funny any more.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>493</wp:post_id>
<wp:post_date>2009-03-07 04:16:08</wp:post_date>
<wp:post_date_gmt>2009-03-07 02:16:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rant-bios-update-procedure-fail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2462</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>143.205.122.162</wp:comment_author_IP>
<wp:comment_date>2009-03-09 09:07:37</wp:comment_date>
<wp:comment_date_gmt>2009-03-09 14:07:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[*HAHA* That&#39;s cool! Now where to get a 3.5&#39;&#39; disk drive? My Alienware notebook is somewhat, but not much, smarter: The Alienware support sends me an CD image to burn and to boot from.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2463</wp:comment_id>
<wp:comment_author><![CDATA[Cedric V]]></wp:comment_author>
<wp:comment_author_email>cedric.valiente@supinfo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.14.246.73</wp:comment_author_IP>
<wp:comment_date>2009-03-09 14:31:57</wp:comment_date>
<wp:comment_date_gmt>2009-03-09 19:31:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Asus motherboard come with a soft called Asus Update if I remember correctly, it can be used to flash the BIOS without leaving windows :<br><br><a href="http://support.asus.com/technicaldocuments/technicaldocuments.aspx?no=714&SLanguage=en-us" rel="nofollow">http://support.asus.com/technicaldocuments/tech...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2464</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.246.78</wp:comment_author_IP>
<wp:comment_date>2009-03-09 16:17:31</wp:comment_date>
<wp:comment_date_gmt>2009-03-09 21:17:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey thanks for the tip! <br>Unfortunately ASUS did a pretty good job in hiding this tool from their customers.<br>The instruction page on the main download page is this one here: <a href="http://support.asus.com/technicaldocuments/technicaldocuments.aspx?root=198&SLanguage=en-us" rel="nofollow">http://support.asus.com/technicaldocuments/tech...</a><br>And there is no link to the Asus Update tool to be found, only the EZ Flash Utility.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3478</wp:comment_id>
<wp:comment_author><![CDATA[air jordan shoes]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.discount-air-jordan.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:40:58</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:40:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-6.html"  rel="nofollow">ajf 6</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Found the missing Linq operators: MoreLinq</title>
<link>http://www.tigraine.at/2009/03/10/found-the-missing-linq-operators-morelinq/</link>
<pubDate>Tue, 10 Mar 2009 00:21:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/10/found-the-missing-linq-operators-morelinq/</guid>
<description></description>
<content:encoded><![CDATA[<p>I complained before that there are operators like the <a href="http://www.tigraine.at/2009/02/11/ienumerableteach-as-c-extension-method/">IEnumerable&lt;T&gt;.Each()</a> are somewhat missing from the default implementation of Linq, but I never really gave it too much thought since then.</p>  <p>Until today I read a blog post from <a href="http://msmvps.com/blogs/jon_skeet/default.aspx">Jon Skeet</a> (Mr. Stackoverflow himself) about <a href="http://msmvps.com/blogs/jon_skeet/archive/2009/02/27/what-s-in-a-name.aspx">how hard it is to name methods</a> in his <a href="http://code.google.com/p/morelinq/">MoreLinq</a> effort.</p>  <p>So, curious me I immediately peeked at the source and found some really cool stuff in there that I may very well use in the future.    <br />There aren’t only missing things in there like list <a href="http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/Pull/Concatenation.cs">concatenation</a>, also generator methods for <a href="http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/Pull/Sequence.cs">sequences</a> (great when doing mock expectations) but also cool things I never thought of before but that might come in handy like a <a href="http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/Pull/Miscellaneous.cs">consume method</a> that triggers Linq execution immediately without consuming memory (You could do that with .ToList() but that would allocate a IList&lt;T&gt; in memory).</p>  <p>So, don’t miss out on the fun in MoreLinq. I’m sure there is something cool in there for everyone.   <br />And also, don’t forget to suggest to Jon Skeet good method names if you come up with one :</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>495</wp:post_id>
<wp:post_date>2009-03-10 02:21:14</wp:post_date>
<wp:post_date_gmt>2009-03-10 00:21:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>found-the-missing-linq-operators-morelinq</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>The joy of pair programming</title>
<link>http://www.tigraine.at/2009/03/15/the-joy-of-pair-programming/</link>
<pubDate>Sun, 15 Mar 2009 02:00:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/15/the-joy-of-pair-programming/</guid>
<description></description>
<content:encoded><![CDATA[<p>Software design is hard. Not so much because it’s so hard to come up with, but because it takes a very long time to really hit the sweet spot where you really feel it’s good. </p>  <p>Doing this on your own is almost impossible, because you constantly have to switch off your personality and challenge the assumptions you just made when writing something.    <br />I ask myself all the time “Is this module really right here? Should I break this up into smaller modules?” .. And frankly, I am the wrong person to answer that question since I made the mistake in the first place.     <br />So I challenge myself all the time into the mindset of another person (be it a user, tester etc..) and try to forget what I was just thinking for a minute to decide if I’m still on track or not. </p>  <p>It’s like driving alone in a car through unknown terrain, you have to stop all the time and pull out the map to see if you’re still driving in the right direction or not. </p>  <p>And honestly, it sucks big time. Stopping is always bad. Dropping out of your “zone” and doing a complete context switch hurts the flow and I feel mentally exhausted very fast, and nothing seems to get done in the long run.</p>  <p>So, at my current project I decided that I can’t go on on my own. I tried multiple times to get to a good design through lots and lots of whiteboard, spiking and experimenting. But I never quite nailed it, I always felt like 20% away from the real thing, but with a burned bridge in front of me. </p>  <p>So, when I called my employer last Sunday I asked one thing “Do I get some budget to bring in a second pair of eyes to work on this particular problem?”. And the awesome answer was “Just do it and spare me the details.”.</p>  <p>Next day I called <a href="http://www.appcom.at/index.php">Harald Logar</a> and he agreed to stop by and go through the code with me for a day. I gave him a very brief heads up on what I was working on (mind you, he’s a complete outsider to the project) and what problem I’m trying to solve.</p>  <p>When he came in next day I explained the vision, and showed him some tests I prepared before that should demonstrate the “desired” behavior of the system. After that little introduction, we were already implementing like crazy.</p>  <p>It was amazing! Although I was doing most of the typing, Harald was constantly there to challenge my assumptions, answer my questions and throw in his own ideas when necessary.    <br /></p>  <p>But what was really an game changer for me that day was that we were not only good, we went faster than I had ever done in the past. We rewrote the complete data access logic of a rather complex system in less then 2 hours (complex means dynamic proxies, caching and some non-trivial retrieval stuff).</p>  <p>We then spent the rest of the day optimizing the system (performance is very critical for the project) and I think we both learned a great deal about the inner workings of .NET collections and how they work performance wise. (We also implemented a very cool cache solution that clears the cache on a background worker thread to avoid downtime)</p>  <p>So, needless to say I’d do this again any time. Harald was a joy to work with, and I think by the end of the day we were both very proud of what we accomplished.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>496</wp:post_id>
<wp:post_date>2009-03-15 04:00:26</wp:post_date>
<wp:post_date_gmt>2009-03-15 02:00:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-joy-of-pair-programming</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2467</wp:comment_id>
<wp:comment_author><![CDATA[saieva]]></wp:comment_author>
<wp:comment_author_email>wclake55-disqus@yahoo.com</wp:comment_author_email>
<wp:comment_author_url>http://saieva.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>67.81.194.175</wp:comment_author_IP>
<wp:comment_date>2009-03-15 22:56:17</wp:comment_date>
<wp:comment_date_gmt>2009-03-16 03:56:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, Great points about pair programming, thanks. I recently wrote about pair programming from a creative perspective. You can read about the topic here:<br><br><a href="http://saieva.wordpress.com/2009/03/15/a-creative-look-at-pair-programming/" rel="nofollow">http://saieva.wordpress.com/2009/03/15/a-creati...</a><br><br>Regards,<br><br>Sal.<br>---<br>Salvatore Saieva]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2468</wp:comment_id>
<wp:comment_author><![CDATA[Harald Logar]]></wp:comment_author>
<wp:comment_author_email>hlogar@appcom.at</wp:comment_author_email>
<wp:comment_author_url>http://www.appcom.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.161.218</wp:comment_author_IP>
<wp:comment_date>2009-03-16 11:40:35</wp:comment_date>
<wp:comment_date_gmt>2009-03-16 16:40:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hello Daniel, <br><br>this was the first pair programming session for me too. And I have to say it was great. I think we both learned a lot about the technology but especially we learned a lot about ourself and pair programming.<br><br>Thanks for the good and joyful work.<br><br>Best regards<br>Harald Logar]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2633</wp:comment_id>
<wp:comment_author><![CDATA[Don&rsquo;t forget the Refactor in Red-Green-Refactor | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/01/dont-forget-the-refactor-in-red-green-refactor/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-01 15:19:28</wp:comment_date>
<wp:comment_date_gmt>2009-07-01 13:19:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] things right the first time is incredibly hard. On my last project it even took me some quality pair programming once to come up with something great, and 80% of the pair programming was mostly spent on [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Static members in generic classes</title>
<link>http://www.tigraine.at/2009/03/23/static-members-in-generic-classes/</link>
<pubDate>Mon, 23 Mar 2009 10:40:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/23/static-members-in-generic-classes/</guid>
<description></description>
<content:encoded><![CDATA[<p>I have been using generics quite heavily lately for writing decorators to Repository classes that do logging and caching on top of the repository (I’ll talk about that another time).</p>  <p>Since I implemented an asynchronous cache clear method I immediately ran into some troubles with shared resources like the DB connection and so I figured the whole problem would be solved with a simple lock around the cache fill.</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:79f31316-324a-4016-bfde-027601635997" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Cache&lt;T&gt;
{
&#160;&#160;&#160;&#160;private static readonly object locker = new object();
&#160;&#160;&#160;&#160;public IList&lt;T&gt; GetAll()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lock(locker)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//Query the DB etc.. 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return null;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>
</p>

<p>Maybe you already see the problem, but I for sure didn’t. And so it was quite a bit amazed when I discovered that the locking problem didn’t go away just like that.</p>

<p>Turns out, every generic class has it’s own static members. So Cache&lt;string&gt; has a different locker object than Cache&lt;long&gt; would have. Here’s the test to show this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:8df0576f-131b-422f-a083-d8f4bfa7a788" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class Test&lt;T&gt;
{
&#160;&#160;&#160;&#160;public static long calls;
}

public class Tester
{
&#160;&#160;&#160;&#160;[Fact]
&#160;&#160;&#160;&#160;public void Calls_DifferentGenerics_DontShareInstance()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Test&lt;string&gt;.calls = 10;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Test&lt;long&gt;.calls = 20;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.Equal(10, Test&lt;string&gt;.calls);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.Equal(20, Test&lt;long&gt;.calls);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Assert.Equal(0, Test&lt;int&gt;.calls);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Since all of my Cache objects are singletons (enforced through Windsor), there is little point in locking there.</p>

<p></p>

<p>I solved this by having a non generic class containing the static lock object and going on, but I have to say that this bug could have gotten a rather hard to reproduce bug.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>497</wp:post_id>
<wp:post_date>2009-03-23 12:40:51</wp:post_date>
<wp:post_date_gmt>2009-03-23 10:40:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>static-members-in-generic-classes</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3476</wp:comment_id>
<wp:comment_author><![CDATA[gucci outlet]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.gucci-outlet-store.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:42:10</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:42:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-3.html"  rel="nofollow">ajf 3</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>A short look at the Big&gt;Days 2009 Demo</title>
<link>http://www.tigraine.at/2009/03/23/a-short-look-at-the-bigdays-2009-demo/</link>
<pubDate>Mon, 23 Mar 2009 12:15:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/23/a-short-look-at-the-bigdays-2009-demo/</guid>
<description></description>
<content:encoded><![CDATA[<p>I couldn’t help and look at the <a href="http://bigdays09.codeplex.com/">Big&gt;Days2009 Rent-A-Worker code</a> that <a href="http://blogs.msdn.com/knom/archive/2009/03/22/slides-and-demos-from-bigdays-2009-are-online.aspx">Max Knor</a> recently put up on his website.</p>  <p>I really didn’t spend too much time to look at the whole code, most notably it’s not the complete code (the WPF desktop client and the Silverlight client are missing from the repository).</p>  <p>Usually when confronted with a new code I immediately try to look at the tests to see what the code is about (since I don’t want to build the database on this machine).</p>  <p>Finding the tests is easy, the solution is rather well structured and split into multiple projects to separate concerns.   <br />Unfortunately that’s the only good thing about the tests. Since there are only 2 classes with tests, both which I find tragically funny:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a055ea3c-4b63-4be1-8f7a-48247b492a88" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[TestMethod]
public void CustomersGetAll()
{
&#160;&#160;&#160;&#160;TestContext.WriteLine("Retrieving customers...");

&#160;&#160;&#160;&#160;Cust.Customer[] Customers = CustomerMgmt.GetCustomers(string.Empty);
&#160;&#160;&#160;&#160;TestContext.WriteLine("Called successfully!");
&#160;&#160;&#160;&#160;foreach (var c in Customers)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TestContext.WriteLine("Getting details for {0}...", c.CustomerID);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Cust.Customer cd = Customer.GetCustomer(c.CustomerID);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TestContext.WriteLine("Details retrieved: {0} {1}!", cd.Name, cd.MembershipID);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TestContext.WriteLine("Getting by membership ID...");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int cdId = Customer.GetCustomerForUser(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cd.MembershipID == null ? Guid.Empty : cd.MembershipID.Value);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TestContext.WriteLine("Customer ID by Membership retrieved: {0}!", cdId);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TestContext.WriteLine("-----");
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>This should be a test for <a href="https://bigdays09.svn.codeplex.com/svn/RentAWorker/2%20-%20Business/RentAWorker.Business.Tests/ProxyTests.cs">the Proxy class</a>, but there are no asserts in there. I mean, if you test something, at least make sure you test that what you did worked. Not getting an exception from your code isn’t really a test at all (wait for the guy who mucks all exceptions with try/catch!).</p>

<p>Same thing goes for tests like this one:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c67e1563-9ed0-4e09-b918-02202c3cc81b" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[TestMethod()]
public void DeleteResourceTest()
{
&#160;&#160;&#160;&#160;ResourceDataAccess target = new ResourceDataAccess();
}
</pre></div>

<p>or half done tests like this one:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c2842da4-15d2-4660-b786-01f1c475b4a6" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[TestMethod()]
public void GetResourcesTest()
{
&#160;&#160;&#160;&#160;ResourceDataAccess target = new ResourceDataAccess(); // TODO: Initialize to an appropriate value
&#160;&#160;&#160;&#160;IEnumerable&lt;RentResource&gt; expected = null; // TODO: Initialize to an appropriate value
&#160;&#160;&#160;&#160;IEnumerable&lt;RentResource&gt; actual;
&#160;&#160;&#160;&#160;actual = target.GetResources();
&#160;&#160;&#160;&#160;Assert.AreEqual(expected, actual);
&#160;&#160;&#160;&#160;Assert.Inconclusive("Verify the correctness of this test method.");
}
</pre></div>

<p>From what I can judge (and I’m surely in no position to do that since my latest code was quite untested too), there isn’t one test in two different test projects that actually does something (besides Assert.Inconclusive calls at the end, or no asserts) and so I wonder why someone bothered creating those projects at all.</p>

<p>Also, most code in there uses a <a href="https://bigdays09.svn.codeplex.com/svn/RentAWorker/2%20-%20Business/RentAWorker.Business.Impl.Util/DataAccessFactory.cs">static Factory</a> classes that I would abandon in favor of dependency-injection to facilitate testing.

  <br />It’s rather painful to see production code like this:</p>

<p>
  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f00286c0-01b5-46c0-929f-2957b431f144" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static ICustomerAccess GetCustomerAccess()
{
&#160;&#160;&#160;&#160;if (UseDummy)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return new DataAccessDummy();
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;else
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return new CustomerDataAccess();
&#160;&#160;&#160;&#160;}
}
</pre></div>
</p>

<p>(You could spare yourself some pain if you’d have two implementations of the Factory class instead of doing the Dummy branch in every method)</p>

<p>Now, this is hard I know. Most other code I looked at in there is quite nice, the DataAccessLayer seperation is quite nice, and also the strict DTO declaration is really cool, and now hitting on the tests and the factory is quite bad. Also the project structure is a really pleasant sight (although I keep missing projects :)).</p>

<p>But I’m a test and deendency-inection nut, so what matters most to me is what I’ll pick on first. It takes time to come up with good code, and with some refactorings this codebase can really shine (it’s well done after all). </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>498</wp:post_id>
<wp:post_date>2009-03-23 14:15:45</wp:post_date>
<wp:post_date_gmt>2009-03-23 12:15:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-short-look-at-the-bigdays-2009-demo</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2471</wp:comment_id>
<wp:comment_author><![CDATA[Big&gt;Days 2009 Code | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/03/23/bigdays-2009-code/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-03-23 18:27:22</wp:comment_date>
<wp:comment_date_gmt>2009-03-23 16:27:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] already picked on the Big&gt;Days 2009 source today, and since it’s open and there, why not just write a little [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3475</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 14]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.air-jordan-14.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:42:05</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:42:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/air-jordan-3.5.html"  rel="nofollow">air jordan 3.5</a> <br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Big&gt;Days 2009 Code</title>
<link>http://www.tigraine.at/2009/03/23/bigdays-2009-code/</link>
<pubDate>Mon, 23 Mar 2009 16:23:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/23/bigdays-2009-code/</guid>
<description></description>
<content:encoded><![CDATA[<p>I <a href="http://www.tigraine.at/2009/03/23/a-short-look-at-the-bigdays-2009-demo/">already picked on the Big&gt;Days 2009 source today</a>, and since it’s open and there, why not just write a little patch.</p>  <p>Without having to go too far into the code I thought a perfect spot to start would be the <a href="https://bigdays09.svn.codeplex.com/svn/RentAWorker/2%20-%20Business/RentAWorker.Business.Impl.Util/DataAccessFactory.cs">DataAccessFactory</a> that should return test-dummys during tests while serving real objects otherwise.</p>  <p>What I didn’t like was the fairly repetitive code of checking if it’s in dummy mode and returning the appropriate object:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4d0175b0-8f73-4f97-883a-c8784da2710f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static ICustomerAccess GetCustomerAccess()
{
&#160;&#160;&#160;&#160;if (UseDummy)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return new DataAccessDummy();
&#160;&#160;&#160;&#160;return new CustomerDataAccess();
}
</pre></div>

<p>This gets repeated for every factory method and is a perfect example of a DRY violation.</p>

<p>I figured since we don’t want to touch calling code (and the UseDummy was never set anywhere), best way to go would be to simply create a interface for the factory:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:fe09c510-6c11-42df-8fe7-8fc004c63200" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public interface IDataAccessFactory
{
&#160;&#160;&#160;&#160;ICustomerAccess GetCustomerAccess();
&#160;&#160;&#160;&#160;ILocationAccess GetLocationAccess();
&#160;&#160;&#160;&#160;IMachineTypeAccess GetMachineTypeAccess();
&#160;&#160;&#160;&#160;IRentalServiceAccess GetRentalServiceAccess();
&#160;&#160;&#160;&#160;IResourceAccess GetResourceAccess();
}
</pre></div>

<p>I then created two implementations of this, one for the TestDummy and one for the real thing (called RealDataAccessFactory) so I don’t need to check the UseDummy field any more.</p>

<p>Now the actual static factory can instantiate the real object by default and have a method on it to set another IDataAccessFactory implementation during runtime:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b1876b70-47ea-4b93-8d5e-df6f8bb8fe79" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static class DataAccessFactory
{
&#160;&#160;&#160;&#160;private static IDataAccessFactory dataAccessFactory = new RealDataAccessFactory();

&#160;&#160;&#160;&#160;public static IDataAccessFactory Implementation
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return dataAccessFactory; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;set { dataAccessFactory = value; }
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public static ICustomerAccess GetCustomerAccess()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return dataAccessFactory.GetCustomerAccess();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public static ILocationAccess GetLocationAccess()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return dataAccessFactory.GetLocationAccess();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public static IMachineTypeAccess GetMachineTypeAccess()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return dataAccessFactory.GetMachineTypeAccess();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public static IRentalServiceAccess GetRentalServiceAccess()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return dataAccessFactory.GetRentalServiceAccess();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public static IResourceAccess GetResourceAccess()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return dataAccessFactory.GetResourceAccess();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>During production nothing changes, but in a unit test scenario I can pass a fake DataAccessFactory into the static factory and swap the whole implementation (enabling me to use Rhino.Mocks or whatever mocking framework I like instead of writing TestDummys myself).</p>

<p>This way we can even have the TestDummy class living inside the test assembly instead of littering the production assembly.</p>

<p>A test now may look like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ad3b1248-c067-40b2-acba-9bfc2167e6ff" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void Module_CallsFactoryForILocationAccess()
{
&#160;&#160;&#160;&#160;DataAccessFactory.Implementation = MockRepository.GenerateMock&lt;IDataAccessFactory&gt;();

&#160;&#160;&#160;&#160;var module = new Module();
&#160;&#160;&#160;&#160;module.DoSomething(); //This should call the Factory to retrieve a ILocationAccess

&#160;&#160;&#160;&#160;DataAccessFactory.Implementation.AssertWasCalled(p =&gt; p.GetLocationAccess());
}
</pre></div>

<p>As you can see, we now have complete control over the factory during testing, without affecting the rest of the code in any way. 
  <br />Another sideeffect of this is that the static DataAccessFactory or the actual DataAccessFactory implementation has no need to change if we need to make changes to the DummyFactory.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>499</wp:post_id>
<wp:post_date>2009-03-23 18:23:40</wp:post_date>
<wp:post_date_gmt>2009-03-23 16:23:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bigdays-2009-code</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3474</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 15]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.air-jordan-15.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:41:59</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:41:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.gucci-outlet-store.com"  rel="nofollow">gucci store</a> <br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Tests should last forever</title>
<link>http://www.tigraine.at/2009/03/25/tests-should-last-forever/</link>
<pubDate>Wed, 25 Mar 2009 15:23:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/25/tests-should-last-forever/</guid>
<description></description>
<content:encoded><![CDATA[<p>There is one excellent point <a href="http://weblogs.asp.net/rosherove/">Roy Osherove</a> made while <a href="http://weblogs.asp.net/rosherove/archive/2009/03/20/test-review-1-nerddinner.aspx">reviewing the tests</a> in NerdDinner.com I wanted to share with you.</p>  <blockquote>   <p>Don’t write tests that change over time!</p> </blockquote>  <p>Often I have initialized objects for tests like this:</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:31a42ac3-3110-44bc-ab92-9117f140af90" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void Test()
{
&#160;&#160;&#160;&#160;DateTime date = DateTime.Now;
&#160;&#160;&#160;&#160;...
}
</pre></div>
</p>

<p>Until recently I thought that’s cool, after all the tests passed every time I ran them.</p>

<p>But what if the passing tests are just a coincidence?
  <br />What if I am testing a financial application that will only accept orders between 8am and 6pm on weekdays, and the order-date gets initialized to DateTime.Now in my test?

  <br />Given the normal work days in most countries that code would run for most developers just fine, but when some notorious late-worker like me comes in the tests start failing for no apparent reason.</p>

<blockquote>
  <p><strong>Time or place of execution, should not have an impact on a test at all. Given the same code and the same test, the result should always be the same.</strong></p>
</blockquote>

<p>So, whenever you initialize a value to something from your current execution context (time being the prime example here), you create a possibility that this test will break in some unexpected ways over time. </p>

<p>So if you really want to fill some DateTime with a value for testing use a constant (like DateTime.MinValue/MaxValue). So whenever you re-run this test all inputs are the same as they have been when you wrote the test.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>501</wp:post_id>
<wp:post_date>2009-03-25 17:23:08</wp:post_date>
<wp:post_date_gmt>2009-03-25 15:23:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tests-should-last-forever</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5401</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Good ideas worth spreading: SystemDateTime abstractions]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/09/16/good-ideas-worth-spreading-systemdatetime-abstractions/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-09-16 19:04:46</wp:comment_date>
<wp:comment_date_gmt>2010-09-16 17:04:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] stated before: Don’t make your tests depend on external factors like the current time or Date, and I even had a solution until now that solved the problem rather [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2474</wp:comment_id>
<wp:comment_author><![CDATA[Harald Logar]]></wp:comment_author>
<wp:comment_author_email>hlogar@appcom.at</wp:comment_author_email>
<wp:comment_author_url>http://www.appcom.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.44.180</wp:comment_author_IP>
<wp:comment_date>2009-03-26 09:05:17</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 14:05:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hello Daniel, <br><br>you are absolutly right about this point. But how can you manage to test a function which only works for the current day or the current week? In this case you also must have test which changes every day. But you have to think about a lot of things. Maybe the function does not work on sunday or only between 8 and 16 etc. <br><br>best regards<br>Harald]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2476</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.37</wp:comment_author_IP>
<wp:comment_date>2009-03-26 17:35:39</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 22:35:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The whole point of the posting was that if you initialize a variable in your test to DateTime.Now, your test changes dynamically at runtime. So if your code under test makes some checks to that variable, you&#39;ll end up with a test that isn&#39;t running 100% of the time.<br><br>If you initialize the variable to some fixed date where you know it should pass (like 1.1.2009 14:00), you can rerun the test under any condition, it will still pass as long as the code works as expected.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3368</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Beggars can&rsquo;t be choosers: Dependency injection through global factories]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/14/beggars-cant-be-choosers-dependency-injection-through-global-factories/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-14 18:34:49</wp:comment_date>
<wp:comment_date_gmt>2009-10-14 16:34:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Oh, and btw: The example I did above was chosen deliberately to be something as simple as a abstraction of DateTime.Now. As said before, never depend on moving parts in your tests. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3470</wp:comment_id>
<wp:comment_author><![CDATA[ugg boots]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.saleboots.co.uk</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:40:33</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:40:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/Jordan-Pro-Classic.html"  rel="nofollow">Jordan Pro Classic</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3473</wp:comment_id>
<wp:comment_author><![CDATA[vibram fivefingers]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.vibramshoesonline.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:41:53</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:41:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/air-jordan-16.5.html"  rel="nofollow">air jordan 16.5</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Why the secrecy?</title>
<link>http://www.tigraine.at/2009/03/25/why-the-secrecy/</link>
<pubDate>Wed, 25 Mar 2009 20:31:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/25/why-the-secrecy/</guid>
<description></description>
<content:encoded><![CDATA[<p>Although I am still actively working for Pixelpoint, running strong on finishing my projects, I also went back to Klagenfurt University to finally finish my computer science bachelor degree.</p>  <p>Only problem being that (since I am now caught up somewhere between work and university) I can’t fit any lectures into my schedule. I can barely attain courses that require me to do so, so lecture slides are a rather vital part of my studying right now, and not being able to access them is really a showstopper.</p>  <p>What really bothers me is that a university professor who is teaching computer science, doesn’t get the concept of an open exchange of information and knowledge! </p>  <p>All educational material for courses by the <a href="http://www.syssec.at/">syssec</a> group is accessible through an external website that is password protected and where username/password combination is only given out during lectures.</p>  <p><strong>Why</strong>?</p>  <p>We are talking about slides for a university lecture, by Austrian law a public event that anyone can attain (yes! every person who wishes to can simply sit in there and listen). Anyone who wants to can simply walk into the <a href="http://www.oeh.ac.at/">ÖH</a> office and can buy a printed copy of exactly those slides for less than 1&euro;. Heck, everyone can get to those slides anyway so why are we keeping people out?</p>  <p>I’ve seen them, there are no state secrets in there. To be honest: I don’t even like these slides too much (they were meant to be presented by a professor mind you). Still they are a valuable source of information that I believe shouldn’t be kept away from anyone.</p>  <p>On the other hand there is <a href="http://www-itec.uni-klu.ac.at/~laszlo/">O. Univ.-Prof. Dipl.-Ing. Dr. Laszlo Böszörmenyi</a> who manages to somehow have <strong>ALL</strong> of his course material be publicly (and freely) available to anyone. So, I doubt there is any legal reasoning behind locking away the course material and I demand that those password protections for the lecture slides are released. A university ought to be a place where knowledge is shared, so why stop at the boundary of a small institution like the University of Klagenfurt? </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>502</wp:post_id>
<wp:post_date>2009-03-25 22:31:40</wp:post_date>
<wp:post_date_gmt>2009-03-25 20:31:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>why-the-secrecy</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2472</wp:comment_id>
<wp:comment_author><![CDATA[wranner]]></wp:comment_author>
<wp:comment_author_email>wranner@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://wranner.org</wp:comment_author_url>
<wp:comment_author_IP>91.115.208.65</wp:comment_author_IP>
<wp:comment_date>2009-03-25 21:58:37</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 02:58:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Weil das beim Horster immer so war, ganz einfach...<br><br>Gibt ja überhaupt erst seit ein paar Jahren Unterlagen. Da hat er sich (nachdem sich Studis aufgeregt haben) mit der ÖH gestritten weil er eben bis dahin keine Slides hatte, die Studenten aber gerne Unterlagen gehabt hätten.<br><br>Seitdem gibt es erst Slides... Vorher Handgekritzel in der VO am Overhead Projektor... Weil "wenn Sie das nicht gleichzeitig mitschreiben und verstehen können dann sind sie hier sowieso fehl am Platz" oder sowas, habs mir damals nicht aufgeschrieben.<br><br>Naja, kann man sehen wie man will. Fachlich top, keine Frage. Dafür halt anderswo... ähhh... kompliziert. :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2473</wp:comment_id>
<wp:comment_author><![CDATA[Georg]]></wp:comment_author>
<wp:comment_author_email>email@georgholzer.at</wp:comment_author_email>
<wp:comment_author_url>http://www.georgholzer.at</wp:comment_author_url>
<wp:comment_author_IP>195.16.252.135</wp:comment_author_IP>
<wp:comment_date>2009-03-25 22:04:40</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 03:04:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Was soll ich sagen? Ich arbeite in einer Firma/Brance, wo das Wegsperren von Daten das Geschäftsmodell ist. Wer hat schon Zugang zu unseren Archiven? Dabei ist alles schon bestmöglichst unter Volk gebracht worden]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2475</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.47.53.201</wp:comment_author_IP>
<wp:comment_date>2009-03-26 16:18:58</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 21:18:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[i think the problem is that slides are coming from a professor and they are bad. <br>many of our teachers refuse to give a away their slides, either because they fear that somebody will take the statements for granted, apply them and if something goes wrong, will claim vienna technical university publicly announced it, others don&#39;t wan&#39;t their data to be &#39;stolen&#39;, as slides are no official publication - if somebody publishes the content before, they will be accused of plagiarism when publishing their own research work.<br><br>but that does mean that the ones that fear the first, will publish some script declared as for studying purposes only, while the others will try to publish some paper/book/complete script and won&#39;t give you anything before they have it out. <br>anyway, in almost all of the cases, these scripts will have to be collected at university or if online, will only be accessible by students. <br><br>i think the problem of our universities is that they do research and teaching, while in other countries research and lecturing is often split up into different institutions. problem shall be understood only corresponding to the thematic of giving away information.<br><br>i anyway still don&#39;t see your problem. why don&#39;t get the password or the downloaded file from a colleague, or get the printed version? rather than complaining about this stuff, i would complain that there are no prepared test-questions+answers-files in ÖH database -- we are learning for the exam not for life..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2477</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.37</wp:comment_author_IP>
<wp:comment_date>2009-03-26 17:42:04</wp:comment_date>
<wp:comment_date_gmt>2009-03-26 22:42:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[THanks for all your comments.<br><br>@wranner - agree<br><br>@peter<br>I strongly believe that such material should be openly published on the web. Nothing more nothing less. Those are no state secrets and most of those slides haven&#39;t changed for a long long time. <br>Also, if you look at Böszörmenyi, he manages to do research and still have his slides available. Just by releasing it to the web you create a piece of copyrighted material yourself, so I don&#39;t really see an issue. Also, having bad slides should be no excuse, but a reason to improve them.<br><br>If I have to call up a fellow student at 23:00 to get the username/password to start working on homework, something has gone totally wrong. <br><br>(That the ÖH is a rather useless institution in klagenfurt university is another topic I won&#39;t discuss here :), we&#39;ll try to fix that through the imagine-club)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3469</wp:comment_id>
<wp:comment_author><![CDATA[uggs outlet]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.bootoutletstore.co.uk</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:40:47</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:40:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-8.html"  rel="nofollow">ajf 8</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3472</wp:comment_id>
<wp:comment_author><![CDATA[gucci outlet]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.gucci-outlet-store.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:41:40</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:41:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-3.html"  rel="nofollow">ajf 3</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Divide two integers in .NET</title>
<link>http://www.tigraine.at/2009/03/26/divide-two-integers-in-net/</link>
<pubDate>Thu, 26 Mar 2009 17:38:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/03/26/divide-two-integers-in-net/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, this is really simple, but it just has cost me 15 minutes because I ignored a compiler warning:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:8e92fb15-e2d9-4b5e-84c2-8edeedcadce5" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
double result = myInt1/myInt2;
</pre></div>

<p>The compiler will underline that there is a possible loss in fraction, but I ignored it while not seeing anything wrong with the code at all.</p>

<p>Whatever values I calculated, the result was always an integer. Turns out, dividing two integers will also create an integer instead of a double (so I got weird results like 31/10 = 3 ).</p>

<p>To bypass this, you need to promote at least one of your integers to a double so a double divide will occur:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:22391771-5189-4467-aa99-a8d9da301fb8" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
double result = (double)myInt1 / myInt2;
</pre></div>

<p>Hope this helps, took me far too long to figure out.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>503</wp:post_id>
<wp:post_date>2009-03-26 19:38:25</wp:post_date>
<wp:post_date_gmt>2009-03-26 17:38:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>divide-two-integers-in-net</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2478</wp:comment_id>
<wp:comment_author><![CDATA[stefan]]></wp:comment_author>
<wp:comment_author_email>stefan2904@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/stefan2904</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.130</wp:comment_author_IP>
<wp:comment_date>2009-03-26 20:37:00</wp:comment_date>
<wp:comment_date_gmt>2009-03-27 01:37:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[tz... Anfänger-Fehler ;p]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3468</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 13]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.air-jordan-13.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 08:34:40</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 13:34:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.gucci-outlet-store.com/Gucci-sweaters.html"  rel="nofollow">Gucci sweaters</a> <br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3471</wp:comment_id>
<wp:comment_author><![CDATA[gucci handbags]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.gucci-outlet-store.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-05 10:41:31</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 15:41:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/Jordan-OL-School.html"  rel="nofollow">Jordan OL School</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>QA fail : Gothic III</title>
<link>http://www.tigraine.at/2009/04/01/qa-fail-gothic-iii/</link>
<pubDate>Tue, 31 Mar 2009 23:02:35 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/01/qa-fail-gothic-iii/</guid>
<description></description>
<content:encoded><![CDATA[<p>My little brother bought himself the RPG epos Gothic III and came to me with a rather interesting problem:    <br />After a clean install the game wouldn’t start in full screen mode but rather restrained itself to a 1024x768 window.</p>  <p>I found the glitch pretty fast, a configuration file caused it:</p>  <blockquote>   <p>fullscreen = true<strong>s</strong></p> </blockquote>  <p>Changing the trues to true did the trick and everything went smoothly. </p>  <p>Bugs are quite common in computer games, but how on earth someone can ship a game with a so apparently wrong configuration file is beyond my knowledge. Sorry to say, but someone failed when a vital config file contains a typo!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>504</wp:post_id>
<wp:post_date>2009-04-01 01:02:35</wp:post_date>
<wp:post_date_gmt>2009-03-31 23:02:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>qa-fail-gothic-iii</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Reversing Comparers in .NET</title>
<link>http://www.tigraine.at/2009/04/04/reversing-comparers-in-net/</link>
<pubDate>Sat, 04 Apr 2009 12:03:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/04/reversing-comparers-in-net/</guid>
<description></description>
<content:encoded><![CDATA[<p>Since LinQ stepped onto the stage I rarely think about sorting, selecting etc any more. A simple IEnumerable&lt;T&gt;.OrderBy(p =&gt; p.Id) does the trick quite nicely. </p>  <p>But, there are cases where I wanted the list to be sorted in itself, and so I turned to the <strong><a href="http://msdn.microsoft.com/en-us/library/system.collections.sortedlist(VS.80).aspx">SortedList</a></strong> and <strong><a href="http://msdn.microsoft.com/en-us/library/f7fta44c(VS.80).aspx">SortedDictionary</a> </strong>classes in the System.Collections.Generic namespace. </p>  <p>Usage is incredibly easy, they are just ordinary IDictionary&lt;Tkey, Tvalue&gt; implementations that behave in every way as expected (no duplicate keys mind you), but in order to use them effectively you should be aware of some minor things about comparers.</p>  <p>Internally both collections will use a TreeSet structure that sorts itself by using a given IComparer&lt;TKey&gt; to determine their sort order. So all we need to do is add some pixie dust as the IComparer&lt;TKey&gt; to interfere with the order. </p>  <p>And since I don’t want to write one IComparer&lt;T&gt; for every type in the framework, I did a find-inheritor search with Reflector on the IComparer&lt;TKey&gt; interface only to discover that there is only one implementation: StringComparer. All other types get compared either by a custom comparer or the following call:</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d1e544d6-03ba-4496-84b6-80c2f7de4a57" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
Comparer&lt;TKey&gt;.Default;

</pre></div>
</p>

<p>The <a href="http://msdn.microsoft.com/en-us/library/azhsac5f.aspx">static method Default</a> will return an appropriate comparer for the given TKey type (taken from the IComparable&lt;T&gt; interface that has to be implemented by TKey).</p>

<p>So, in order to reverse the list, we just have to supply a custom comparer that reverses the default comparer.&#160; (Since the LinQ .Reverse() method is out of the question :)).</p>

<p>And that’s rather easy once you know where to get the default comparer from:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:94a01e3e-f74a-432c-a633-397091406ee3" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class ReverseComparer&lt;T&gt; : IComparer&lt;T&gt; where T : IComparable&lt;T&gt;
{
&#160;&#160;&#160;&#160;private readonly IComparer&lt;T&gt; comparer;

&#160;&#160;&#160;&#160;public ReverseComparer() : this(Comparer&lt;T&gt;.Default)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public ReverseComparer(IComparer&lt;T&gt; comparerToReverse)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comparer = comparerToReverse;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public int Compare(T x, T y)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return comparer.Compare(y, x);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p></p>

<p>This generic class will reverse any given comparer type (you can even supply your own IComparer&lt;T&gt; to get reversed).</p>

<p>I am not perfectly sure why this isn’t in the framework, maybe I just overlooked it or there are other ways to reverse a list. But for the moment this works just fine.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>505</wp:post_id>
<wp:post_date>2009-04-04 14:03:21</wp:post_date>
<wp:post_date_gmt>2009-04-04 12:03:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>reversing-comparers-in-net</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2480</wp:comment_id>
<wp:comment_author><![CDATA[Missing SortedList? | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/04/10/missing-sortedlist/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-04-10 13:47:31</wp:comment_date>
<wp:comment_date_gmt>2009-04-10 11:47:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] this time my class is too generic for that so I have to fall back to good old OO principles with comparer classes [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Missing SortedList?</title>
<link>http://www.tigraine.at/2009/04/10/missing-sortedlist/</link>
<pubDate>Fri, 10 Apr 2009 11:47:27 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/10/missing-sortedlist/</guid>
<description></description>
<content:encoded><![CDATA[<p>I made it a habit to always program towards an Interface if possible. So all my lists in code are of type IList&lt;T&gt; and the IList&lt;T&gt; lacks the .Sort() method of the List&lt;T&gt; class.</p>  <p>Usually this isn’t a problem since there is LinQ’s .OrderBy to save the day. But this time my class is too generic for that so I have to fall back to good old OO principles with <a href="http://www.tigraine.at/2009/04/04/reversing-comparers-in-net/">comparer classes</a> etc.</p>  <p>Now, my problem is that I need a simple IList that is sorted on insertion. I first thought, no problem I’ll just use the SortedList&lt;Tkey, Tvalue&gt; that’s already in the framework. But there is always a catch: SortedList is more of a dictionary than a list. Duplicate key items aren’t accepted, there is no collision handling. Trying to insert a duplicate key will result in a ArgumentException:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a999b5c8-c95f-444d-872e-fdc863ddfb30" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void SortedList_AcceptsNoDuplicateKeys()
{
&#160;&#160;&#160;&#160;SortedList&lt;int, string&gt; list = new SortedList&lt;int, string&gt;();
&#160;&#160;&#160;&#160;var key = 1;
&#160;&#160;&#160;&#160;list.Add(key, "test");
&#160;&#160;&#160;&#160;Assert.Throws(typeof (ArgumentException), () =&gt; list.Add(key, "test2)"));
}
</pre></div>

<p>Now, what I need is a real sorted List that allows duplicate values (as would a <a href="http://msdn.microsoft.com/en-us/library/3da4abas.aspx">List.Sort()</a>).</p>

<p>Implementing the IList interface isn’t that hard after all, so I gave it a shot with a SortedKeylessCollection&lt;T&gt; that wraps a real List&lt;T&gt; (to use it’s .Sort(), I know I’m lazy):</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f43792ff-9657-4713-9d9d-424a3e13808e" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class SortedKeylessCollection&lt;T&gt; : ICollection&lt;T&gt; where T : class
{
&#160;&#160;&#160;&#160;private readonly IComparer&lt;T&gt; comparer;
&#160;&#160;&#160;&#160;private readonly List&lt;T&gt; list = new List&lt;T&gt;();

&#160;&#160;&#160;&#160;public SortedKeylessCollection(IComparer&lt;T&gt; comparer)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.comparer = comparer;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public SortedKeylessCollection() : this(Comparer&lt;T&gt;.Default)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;#region ICollection&lt;T&gt; Members

&#160;&#160;&#160;&#160;public void Add(T item)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;list.Add(item);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SortList();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Clear()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;list.Clear();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public bool Contains(T item)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return list.Contains(item);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void CopyTo(T[] array, int arrayIndex)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;list.CopyTo(array, arrayIndex);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public bool Remove(T item)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bool b = list.Remove(item);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (b) SortList();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return b;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public int Count
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return list.Count; }
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public bool IsReadOnly
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return false; }
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public IEnumerator&lt;T&gt; GetEnumerator()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return list.GetEnumerator();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;IEnumerator IEnumerable.GetEnumerator()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return list.GetEnumerator();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;#endregion

&#160;&#160;&#160;&#160;public void SortList()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;list.Sort(comparer);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>You can download the file here: <a href="http://tigraine.at/SortedKeylessCollection.cs">SortedKeylessCollection.cs</a>.</p>

<p>I didn’t call it List but Collection because IList&lt;T&gt; has a defined contract through InsertAt that can’t be fulfilled by a self-sorting list (since the insertion at a position shouldn’t be possible).</p>

<p>Also, as someone at <a href="http://stackoverflow.com/questions/196512/is-there-a-sorted-collection-type-in-net">StackOverlow pointed out</a> there are already implementations of such lists like the <a href="http://www.codeplex.com/PowerCollections">Wintellect Power Collections for .NET</a> but I didn’t want to bring yet another dependency into my codebase just for one puny little class.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>506</wp:post_id>
<wp:post_date>2009-04-10 13:47:27</wp:post_date>
<wp:post_date_gmt>2009-04-10 11:47:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>missing-sortedlist</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/imagepng-2/</link>
<pubDate>Fri, 10 Apr 2009 12:20:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/04/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>507</wp:post_id>
<wp:post_date>2009-04-10 14:20:30</wp:post_date>
<wp:post_date_gmt>2009-04-10 12:20:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>508</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/04/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:548;s:6:"height";i:123;s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x123.png";s:5:"width";i:150;s:6:"height";i:123;}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x67.png";s:5:"width";i:300;s:6:"height";i:67;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>How to make a LinQ2SQL DataContext IoC friendly</title>
<link>http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/</link>
<pubDate>Fri, 10 Apr 2009 12:20:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’d really like to meet the guy who came up with the genius idea to call all parameters the same on the LinQ DataContext object:</p>  <p><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="123" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/04/image.png" width="548" border="0" /> </p>  <p>So, when I tried to provide the connection through a named parameter with <a href="http://www.tigraine.at/category/programmierung/net/castle/">Castle Windsor</a> I failed since the container can’t resolve what constructor to use (trying to match the key “connection”).</p>  <p>Thank god Microsoft didn’t seal the class so you can battle this problem by simply subclassing the construction:</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b7dccea4-cb14-4624-a8aa-c1c8ca6511ad" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class InjectableDataContext : DataClassesDataContext
{
&#160;&#160;&#160;&#160;public InjectableDataContext(string connectionString) 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;: base(connectionString)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}
}
</pre></div>
</p>

<p><em>Note that I directly subclassed my own LinQ2SQL DataContext (called DataClassesDataContext in this example). </em></p>

<p>Now I can have my configuration inject a connection string:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f97132c1-f816-4d59-a7a6-685f01a55a54" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
string myConnectionString = "DataSource...";
Component.For&lt;DataClassesDataContext&gt;()
&#160;&#160;&#160;&#160;.ImplementedBy&lt;InjectableDataContext&gt;()
&#160;&#160;&#160;&#160;.Parameters(Parameter.ForKey("connectionString").Eq(myConnectionString));
</pre></div>

<p></p>

<p>And the resolving code doesn’t change a bit:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:be49dec5-cb2a-4c1a-847b-0b092e2f66e1" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var dbContext = container.Resolve&lt;DataClassesDataContext&gt;();
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>508</wp:post_id>
<wp:post_date>2009-04-10 14:20:30</wp:post_date>
<wp:post_date_gmt>2009-04-10 12:20:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-make-a-linq2sql-datacontext-ioc-friendly</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2484</wp:comment_id>
<wp:comment_author><![CDATA[Locking with Linq to SQL&rsquo;s deferred execution in an IQueryable&lt;T&gt; szenario | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/04/22/locking-with-linq-to-sqls-deferred-execution-in-an-iqueryablet-szenario/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-04-22 11:17:16</wp:comment_date>
<wp:comment_date_gmt>2009-04-22 09:17:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I’ve become a dependency injection nut, I then came up with a injectable datacontext so my repositories don’t have anything to do with the data context creation (thus sparing me the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/imagepng-2/</link>
<pubDate>Mon, 20 Apr 2009 09:14:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/04/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>509</wp:post_id>
<wp:post_date>2009-04-20 11:14:12</wp:post_date>
<wp:post_date_gmt>2009-04-20 09:14:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>511</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/04/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:416;s:6:"height";i:104;s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x104.png";s:5:"width";i:150;s:6:"height";i:104;}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x75.png";s:5:"width";i:300;s:6:"height";i:75;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/imagepng-3/</link>
<pubDate>Mon, 20 Apr 2009 09:14:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/04/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>510</wp:post_id>
<wp:post_date>2009-04-20 11:14:12</wp:post_date>
<wp:post_date_gmt>2009-04-20 09:14:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>511</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/04/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:776;s:6:"height";i:253;s:14:"hwstring_small";s:23:"height='41' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/04/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x97.png";s:5:"width";i:300;s:6:"height";i:97;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ELMAH ASP.NET Error logging on MVC</title>
<link>http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/</link>
<pubDate>Mon, 20 Apr 2009 09:14:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/</guid>
<description></description>
<content:encoded><![CDATA[<p>Some of you may already know <a href="http://code.google.com/p/elmah/">ELMAH</a>, a great error logging tool that hooks into ASP.NET applications logs all exceptions encountered during runtime. </p>  <p>There are some <a href="http://code.google.com/p/elmah/wiki/DotNetSlackersArticle">great articles</a> on how to set up ELMAH for traditional ASP.NET articles in their <a href="http://code.google.com/p/elmah/w/list">wiki</a>, but ASP.NET MVC is not mentioned (it’s really simple nonetheless).</p>  <p><strong>Step 1: Referencing the assemblies</strong></p>  <p>First, grab the <a href="http://code.google.com/p/elmah/downloads/list">latest binary release</a> of elmah from the project’s page and extract the \bin folder to your application folder.    <br />I’m a huge fan of <a href="http://www.tigraine.at/2008/10/13/handling-dependencies/">having all external assemblies in a lib folder</a> besides the app, so to my delight elmah requires no installation, you just have to drop the 3 files in \bin to your lib folder and reference the Elmah.dll from within your app.</p>  <p><strong>Step 2: Edit your web.config to call ELMAH</strong></p>  <p>First add the following code to your <strong>&lt;configSections&gt;</strong> to make ELMAH read it’s configuration from web.config:</p>  <p>   <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5809603e-fa0f-46de-a74e-baf7f1b6b9a9" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;sectionGroup name="elmah"&gt;
&#160;&#160;&lt;section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" /&gt;
&#160;&#160;&lt;section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" /&gt;
&#160;&#160;&lt;section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" /&gt;
&#160;&#160;&lt;section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" /&gt;
&lt;/sectionGroup&gt;
</pre></div>
</p>

<p>Next go to your <strong>&lt;httpHandlers&gt;</strong> section and add the elmah file handler:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f4e149d2-c162-49bc-bb15-e46d00eea362" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" /&gt;
</pre></div>

<p></p>

<p>This will reroute all requests to a file called elmah.axd to the ELMAH error-overview page. So when you want to look at the list of errors you’ll access <a href="http://server/elmah.axd">http://server/elmah.axd</a> . The name doesn’t matter, feel free to rename it, but be aware that the extension has to be mapped to the ASP.NET pipeline inside IIS (so naming it .html wouldn’t work if not configured correctly).</p>

<p>At last add the ELMAH logging module to your &lt;httpModules&gt; section:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:45604f66-174d-4272-b0b1-882823d2b834" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/&gt;
</pre></div>

<p><strong>Step 3: Configure ELMAH</strong></p>

<p>I’d suggest you read the wiki articles on how to configure ELMAH correctly, but for my application I chose to log all errors to a XML file by simply adding this code to the web.config:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0471a371-86a5-44b2-aa20-6211f7312bda" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="xml">
&lt;elmah&gt;
&#160;&#160;&lt;errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="~/App_Data" /&gt;
&lt;/elmah&gt;
</pre></div>

<p>This instructs ELMAH to create xml files in your App_Data directory (so make sure the ASP.NET process has sufficient access rights to that folder) and generate output like this:</p>

<p><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="104" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/04/image1.png" width="416" border="0" /></p>

<p><strong>Step 4: Configure routing</strong>&#160;</p>

<p>Up until now we were 100% true to the normal configuration routine for normal ASP.NET applications, there is only one slight adjustment to making it work in MVC.</p>

<p>You need to allow the requests to the ELMAH frontend (elmah.axd in this example) to pass through the MVC routing logic unchanged so that it gets handled by normal ASP.NET behind MVC. This is as trivial as adding a ignore route to your routing table in Gobal.asax.cs:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:969c7905-2bb8-46a1-b607-bdbc5a8631d1" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static void RegisterRoutes(RouteCollection routes)
{
&#160;&#160;&#160;&#160;routes.IgnoreRoute("elmah.axd");
</pre></div>

<p></p>

<p></p>

<p>Once all the above is done, you’ll see all unhandled exceptions that result in a yellowscreen-of-death be also logged into the XML files inside your App_Data and you can then watch them remotely by accessing <a href="http://server/elmah.axd">http://server/elmah.axd</a>. You’ll get a rather nice overview page like this one:</p>

<p><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="253" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/04/image2.png" width="776" border="0" /></p>

<p>Having no errors in the first place is a way to make this work obsolete, but it’s nice to know for sure that your users aren’t encountering errors when using&#160; your site. There are advanced configuration guides in the wiki on how to set up email notification and security, but I’ll leave that to the project wiki.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>511</wp:post_id>
<wp:post_date>2009-04-20 11:14:13</wp:post_date>
<wp:post_date_gmt>2009-04-20 09:14:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>elmah-aspnet-error-logging-on-mvc</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2483</wp:comment_id>
<wp:comment_author><![CDATA[9eFish]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.9efish.com/%E5%9C%A8aspnet-mvc%E4%B8%AD%E4%BD%BF%E7%94%A8ELMAH%E8%AE%B0%E5%BD%95%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97-Tigraine</wp:comment_author_url>
<wp:comment_author_IP>74.55.211.194</wp:comment_author_IP>
<wp:comment_date>2009-04-22 04:13:28</wp:comment_date>
<wp:comment_date_gmt>2009-04-22 02:13:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<strong>在asp.net mvc中使用ELMAH记录错误日志 | Tigraine...</strong>

9efish.感谢你的文章 - Trackback from 9eFish...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>trackback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2499</wp:comment_id>
<wp:comment_author><![CDATA[The technology behind kaernten.at | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-12 18:48:52</wp:comment_date>
<wp:comment_date_gmt>2009-05-12 16:48:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] The whole thing is glued together by Castle Windsor and DynamicProxy2 while tests are all run through xUnit and Rhino.Mocks. The error reporting is done through ELMAH. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2503</wp:comment_id>
<wp:comment_author><![CDATA[ELMAH on ASP.NET MVC Article published in ELMAH Wiki | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/25/elmah-on-aspnet-mvc-article-published-in-elmah-wiki/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-25 17:08:12</wp:comment_date>
<wp:comment_date_gmt>2009-05-25 15:08:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] publishing my article on ELMAH for ASP.NET MVC the project owner azizatif asked me if I’d like to publish my article on the project wiki as [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2644</wp:comment_id>
<wp:comment_author><![CDATA[Using ELMAH Error logging with Castle MonoRail | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/03/using-elmah-error-logging-with-castle-monorail/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-03 15:01:52</wp:comment_date>
<wp:comment_date_gmt>2009-07-03 13:01:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] my last project I made ELMAH (the ever awesome ASP.NET error logging framework) work with ASP.NET MVC by modifying the routing logic a bit. It was quite simple since ASP.NET MVC throws HttpExceptions [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Locking with Linq to SQL&#8217;s deferred execution</title>
<link>http://www.tigraine.at/2009/04/22/locking-with-linq-to-sqls-deferred-execution-in-an-iqueryablet-szenario/</link>
<pubDate>Wed, 22 Apr 2009 09:17:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/04/22/locking-with-linq-to-sqls-deferred-execution-in-an-iqueryablet-szenario/</guid>
<description></description>
<content:encoded><![CDATA[<p>If you have been reading this blog lately you may have noticed that I’m currently working on a project where I chose Linq to Sql as my data-source, inspired by the IQueryable&lt;T&gt; Repository <a href="http://blog.wekeroad.com/">Rob Conery</a> introduced in his <a href="http://blog.wekeroad.com/mvc-storefront/mvc-storefront-part-1/">MVC Storefront</a> series.</p>  <p>The basic idea of the IQueryable&lt;T&gt; repository is to have the repository return a IQueryable list of C# domain objects that can then be filtered, queried, parsed at higher layers of the application.    <br />So things like paging, filtering etc (all business concerns) can be applied to the query at a later stage instead of having to propagate all of these requirements down to the Repository (Ayende wrote <a href="http://ayende.com/Blog/archive/2009/04/17/repository-is-the-new-singleton.aspx">something</a> <a href="http://ayende.com/Blog/archive/2009/04/18/the-dal-should-go-all-the-way-to-ui.aspx">great</a> on the death of Repository you should check out).</p>  <p>So my business code would call the repository for all objects and then apply logic to it:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6daf8c8f-911d-4218-8c2b-52ff70236fa6" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var preferredUsers = 
&#160;&#160;&#160;&#160;repository.GetAll()
&#160;&#160;&#160;&#160;.Where(p =&gt; p.JoinDate &lt; DateTime.Now.AddYears(-1))
&#160;&#160;&#160;&#160;.Skip(PAGE_SIZE*pageNumber)
&#160;&#160;&#160;&#160;.Take(PAGE_SIZE);
</pre></div>

<p></p>

<p>I loved it. Not having to propagate concerns like paging and filtering to the DAL was awesome, and since the interface is so damn simple I very quickly came up with decorators that did error handling, caching and logging at the DAL level.</p>

<p>Since I’ve become a dependency injection nut, I then came up with a <a href="http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/">injectable datacontext</a> so my repositories don’t have anything to do with the data context creation (thus sparing me the configuration concerns in that class). 

  <br />My concrete repository implementation then looked like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:714c0f85-546f-4daf-8387-7152f3c40006" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class UserRepository : IRepository&lt;BlogUser&gt; 
{
&#160;&#160;&#160;&#160;private DataClassesDataContext context;

&#160;&#160;&#160;&#160;public UserRepository(DataClassesDataContext context)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.context = context;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public IQueryable&lt;BlogUser&gt; GetAll()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return from u in context.Users
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; select new BlogUser
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Id = u.Id,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username = u.Name,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Password = u.Password
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>You see, the context gets injected and besides the query there is nothing in the repository, <a href="http://en.wikipedia.org/wiki/Single_responsibility_principle">SRP</a> .. check.</p>

<p>Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it.</p>

<p>And this is where it blew up in my face, having multiple threads access the repository leads to some nasty race conditions for the datacontext, and I found no sane way of dealing with this at the DAL level. 
  <br />Try this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:54cf09da-b233-4945-aff2-012654cf0fcb" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static void main()
{
&#160;&#160;&#160;&#160;var repository = new UserRepository(new DataClassesDataContext());
&#160;&#160;&#160;&#160;new Thread(() =&gt; ThreadStart(repository)).Start();
&#160;&#160;&#160;&#160;new Thread(() =&gt; ThreadStart(repository)).Start();
}

public static void ThreadStart(IRepository&lt;BlogUser&gt; repository)
{
&#160;&#160;&#160;&#160;const int PAGE_SIZE = 10;
&#160;&#160;&#160;&#160;int pageNumber = 1;
&#160;&#160;&#160;&#160;var preferredUsers = 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;repository.GetAll()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Where(p =&gt; p.JoinDate &lt; DateTime.Now.AddYears(-1))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Skip(PAGE_SIZE*pageNumber)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Take(PAGE_SIZE);
&#160;&#160;&#160;&#160;preferredUsers.ToList();
}
</pre></div>

<p>The same query as before, but two threads that share the same repository, therefore sharing the same datacontext. Once started, the whole thing will blow up with a InvalidOperationException stating that the connection is closed. </p>

<p>I didn’t bother to go into the DataContext source and check out why they are closing the connection, but apparently after the query is executed it takes some time for the context to “recover” and be able to accept a new query.</p>

<p>I immediately tried to solve the problem by adding a lock on the datacontext in the repository class (since the contexts are pooled, it was the only thing that made sense since I don’t need to lock all connections, just the one I’m currently using).</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b0da435e-d6bd-414d-af12-47ea932727ba" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public IQueryable&lt;BlogUser&gt; GetAll()
{
&#160;&#160;&#160;&#160;lock (context)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return from u in context.Users
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; select new BlogUser
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Id = u.Id,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username = u.Name,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Password = u.Password
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p></p>

<p></p>

<p>I intentionally said I tried, because it didn’t work. The lock gets executed alright, but the query isn’t run inside the lock{} but rather at the calling code, in my business class (the power of deferred execution). So the only way to prevent a race condition for my datacontext would have been to add locking to the business code:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7642f6e0-5df3-43d0-ba12-eae54d40e337" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
const int PAGE_SIZE = 10;
int pageNumber = 1;
var preferredUsers = 
&#160;&#160;&#160;&#160;repository.GetAll()
&#160;&#160;&#160;&#160;.Where(p =&gt; p.JoinDate &lt; DateTime.Now.AddYears(-1))
&#160;&#160;&#160;&#160;.Skip(PAGE_SIZE*pageNumber)
&#160;&#160;&#160;&#160;.Take(PAGE_SIZE);
lock(repository)
{
&#160;&#160;&#160;&#160;preferredUsers.ToList();
}
</pre></div>

<p>Omg right? So, besides the fact that I can’t guarantee that two repositories don’t use the same datacontext (and therefore racing against each other), I just opened the Pandora's box of possible errors (give me a month and I’ll forget the locking at least 3 times). 
  <br />Also, it’s just painful to see an implementation detail of the data access layer leak into the business code for no apparent reason.</p>

<p>And the only way I found on how to <em>solve that problem was to supply a new datacontext to every query</em>, so I get rid of the whole locking. I did so by injecting a datacontext factory into the repository and call the factory every time I execute a query.</p>

<p>This fixed the issue for now, but<em>&#160;</em>I don’t feel too good about the solution. Creating new datacontext object for every query somehow feels wrong, and I’d love to hear suggestions from you on how to change that. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>512</wp:post_id>
<wp:post_date>2009-04-22 11:17:06</wp:post_date>
<wp:post_date_gmt>2009-04-22 09:17:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>locking-with-linq-to-sqls-deferred-execution-in-an-iqueryablet-szenario</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2498</wp:comment_id>
<wp:comment_author><![CDATA[tani001]]></wp:comment_author>
<wp:comment_author_email>mrkevin009@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>117.18.229.250</wp:comment_author_IP>
<wp:comment_date>2009-05-11 10:29:55</wp:comment_date>
<wp:comment_date_gmt>2009-05-11 15:29:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[i think you work really hard for this. This are really cool. Thanks for sharing this information.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2501</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>68.38.9.124</wp:comment_author_IP>
<wp:comment_date>2009-05-15 20:08:43</wp:comment_date>
<wp:comment_date_gmt>2009-05-16 01:08:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,<br><br>I read your original post for InjectableDataContext, <a href="http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/" rel="nofollow">http://www.tigraine.at/2009/04/10/how-to-make-a...</a>, and assumed you would&#39;ve implemented you UserRepository differently using Windsor.<br><br>I don&#39;t follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would&#39;ve assumed your repository constructor would&#39;ve created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  <br><br>#     public UserRepository()  <br>#     {  <br>#         this.context = container.Resolve&lt;DataClassesDataContext&gt;();<br>#     }  <br><br>This way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn&#39;t have multiple threads attempting to use the same context.<br><br>If you were using your Repository as a singleton I don&#39;t know how you could possibly get methods like these to work with your context:<br><br><br>        //Insert/Delete<br>        public void Add( BlogUser user) {<br>            context.Users.InsertOnSubmit( user);<br>        }<br><br>        public void Delete( BlogUser user) {<br>            context.Users.DeleteOnSubmit( user);<br>        }<br><br>        //Persistence<br>        public void Save() <br>        {<br>            context.SubmitChanges();<br>        }]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2502</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.73.60</wp:comment_author_IP>
<wp:comment_date>2009-05-15 21:22:15</wp:comment_date>
<wp:comment_date_gmt>2009-05-16 02:22:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.<br><br>You raise a valid point here. <br>I should have noted that I don&#39;t have ANY persistency story because this whole architecture is only for reading objects. <br>It&#39;s purely for displaying data, I don&#39;t have write access to the database at all. So for me the #1 priority was to read fast.<br><br>It made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:<br><a href="http://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/" rel="nofollow">http://www.tigraine.at/2009/05/12/kaerntenat-ca...</a> (yes, just recently, had some NDA issues before).<br><br>So anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. <br><br>Sorry for the confusion. <br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3586</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3587</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3649</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3650</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3736</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3737</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3845</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3846</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3856</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3857</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3879</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3880</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3881</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3882</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4858</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4859</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3889</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3890</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3902</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3903</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3939</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3940</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3942</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3943</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3954</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3955</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4016</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4017</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4018</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4019</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4034</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4035</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4113</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4114</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4132</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4133</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5226</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5227</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4201</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4202</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4203</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4204</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4565</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4566</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4572</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4573</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4600</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4601</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4602</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4603</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4608</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4609</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4613</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4614</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4663</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4664</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4669</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4670</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4677</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4678</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4757</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4758</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4775</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4776</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4795</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4796</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4812</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4813</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4947</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4948</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5022</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5023</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5037</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5038</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5039</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5040</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5049</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5050</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5066</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5067</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5074</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5075</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5080</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5081</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5085</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5086</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5214</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5215</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5328</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 19:22:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 19:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Chuck, thanks for your comment.rnrnYou raise a valid point here. rnI should have noted that I don't have ANY persistency story because this whole architecture is only for reading objects. rnIt's purely for displaying data, I don't have write access to the database at all. So for me the #1 priority was to read fast.rnrnIt made sense to have the Repository be a singleton since I use a caching layer above it as I wrote about here:rnhttp://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/ (yes, just recently, had some NDA issues before).rnrnSo anyway there will only be one initialization of the repository since the cache holds only one reference to the repository. rnrnSorry for the confusion. rngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5329</wp:comment_id>
<wp:comment_author><![CDATA[Chuck]]></wp:comment_author>
<wp:comment_author_email>chuck.wagner.jr@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-05-15 18:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-05-15 18:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,rnrnI read your original post for InjectableDataContext, http://www.tigraine.at/2009/04/10/how-to-make-a-linq2sql-datacontext-ioc-friendly/, and assumed you would've implemented you UserRepository differently using Windsor.rnrnI don't follow this logic, "Now, the logical thing to do in my IoC configuration was to have the repositories be singletons, and so every repository has one datacontext attached to it."  Why would you want your repositories to be singletons?  DataContext is not designed to be used concurrently by multiple threads.  I would've assumed your repository constructor would've created the DataClassesDataContext instance (or the InjectableDataContext instance) via the Windsor container.  This should allow you to set the windsor component lifestyle to Transient, which would cause a new instance of DataClassesDataContext to be created on a per request basis.  rnrn#     public UserRepository()  rn#     {  rn#         this.context = container.Resolve<DataClassesDataContext>();rn#     }  rnrnThis way you could still use all of the CRUD/Transaction niceness of LinqToSql because each Repository would run with its own context and you wouldn't have multiple threads attempting to use the same context.rnrnIf you were using your Repository as a singleton I don't know how you could possibly get methods like these to work with your context:rnrnrn        //Insert/Deletern        public void Add( BlogUser user) {rn            context.Users.InsertOnSubmit( user);rn        }rnrn        public void Delete( BlogUser user) {rn            context.Users.DeleteOnSubmit( user);rn        }rnrn        //Persistencern        public void Save() rn        {rn            context.SubmitChanges();rn        }rn]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/imagepng-2/</link>
<pubDate>Tue, 12 May 2009 16:48:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>514</wp:post_id>
<wp:post_date>2009-05-12 18:48:46</wp:post_date>
<wp:post_date_gmt>2009-05-12 16:48:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>515</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:514;s:6:"height";i:289;s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:66:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x168.png";s:5:"width";i:300;s:6:"height";i:168;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The technology behind kaernten.at</title>
<link>http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/</link>
<pubDate>Tue, 12 May 2009 16:48:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/</guid>
<description></description>
<content:encoded><![CDATA[<p>During the last few months I have been the technical architect behind the development of a new platform for tourism in Carinthia. While I have already discussed some of the inner workings of the project during that time, I thought it might be interesting to let you in on a deeper look at the application architecture behind the site: <a href="http://www.kaernten.at">www.kaernten.at</a>.</p>  <p><strong>Quick facts:</strong></p>  <p>The site is built using ASP.NET MVC (since Beta 3) being hosted by IIS6 on a MSSQL 2005 database.</p>  <p>The whole thing is glued together by <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> and DynamicProxy2 while tests are all run through <a href="http://www.codeplex.com/xunit">xUnit</a> and <a href="http://ayende.com/projects/rhino-mocks.aspx">Rhino.Mocks</a>. The error reporting is done through <a href="http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/">ELMAH</a>.</p>  <p><strong>General Architecture</strong></p>  <p>There are three layers to the application:</p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="289" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/05/image.png" width="514" border="0" /> </p>  <p>The Web tier was the actual ASP.NET MVC Site and this was the part I was least involved in. The Controllers use the Services layer to retrieve relevant information and then passes it on to the View.</p>  <p>I knew from previous projects that the web tier is the first place that is going to get torn apart by weird customer requests and other very ui-driven changes, so the general goal of the services layer wasn’t only to present data to the web, but to provide services to manipulate that data for presentation. So the Services layer is mostly&#160; about filtering/sorting/querying data from the database, since there is no common logic to the madness of presentation requirements.</p>  <p>The database tier is actually split across two tiers, the Sql tier and the Proxy tier. (I’ll cover the Proxy in a future post in more detail.) Most notable the whole database retrieval is done through Linq to&#160; Sql. </p>  <p>Also everything in the system is dependency injected, there is not one call to new() anywhere in the system, except for the construction of data objects (that in my design aren’t allowed to have services on them).</p>  <p><strong>Query logic</strong></p>  <p>The whole site is based on the concept of <strong>When </strong>youre visiting? <strong>What</strong> are you interested in? And <strong>Where </strong>would that be?</p>  <p>So, there is not a typical tree of categories with articles to browse through, but rather is the whole content of the site the result of all articles that match your criteria. Therefore every article in the system has a list of tags it’s connected to (when&#160; and what both are just tags). </p>  <p>Now, one of the main challenges for all of the team (involving the customer) was to really define that query logic, and we changed it about 10 times during development, and I’m sure it will change even more in the future.</p>  <p>So, although it might have been possible to do all querying/sorting/filtering with Sql, the Sql code became utterly unreadable and sometimes involved n subselects.    <br />I gave up on the Sql pretty early on since it was just too un-maintainable and felt too restraining.     <br />My solution to this was to load all articles into memory and filter/sort them from there. This then enabled me to easily implement queries like this one:     <br />All articles that are tagged a,b,c AND at least one of d,e,f (or more formally: (a &amp;&amp; b &amp;&amp; c) &amp;&amp; (d || e || f))</p>  <p>And that’s about it for the general picture right now. I’m planning on posting more on the technology behind <a href="http://www.kaernten.at">www.kaernten.at</a> over the next couple of days.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>515</wp:post_id>
<wp:post_date>2009-05-12 18:48:46</wp:post_date>
<wp:post_date_gmt>2009-05-12 16:48:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-technology-behind-kaerntenat</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2500</wp:comment_id>
<wp:comment_author><![CDATA[kaernten.at &ndash; Caching and Lazy loading | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-12 18:56:32</wp:comment_date>
<wp:comment_date_gmt>2009-05-12 16:56:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] my last post on the technology behind www.kaernten.at, I concluded with the fairly bold statement that all objects are kept in memory to ease [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/imagepng-2/</link>
<pubDate>Tue, 12 May 2009 16:56:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>517</wp:post_id>
<wp:post_date>2009-05-12 18:56:28</wp:post_date>
<wp:post_date_gmt>2009-05-12 16:56:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>518</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:508;s:6:"height";i:378;s:14:"hwstring_small";s:23:"height='95' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x223.png";s:5:"width";i:300;s:6:"height";i:223;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>kaernten.at &#8211; Caching and Lazy loading</title>
<link>http://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/</link>
<pubDate>Tue, 12 May 2009 16:56:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Job]]></category>

		<category domain="category" nicename="job"><![CDATA[Job]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/12/kaerntenat-caching-and-lazy-loading/</guid>
<description></description>
<content:encoded><![CDATA[<p>In my last post on the <a href="http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/">technology behind www.kaernten.at</a>, I concluded with the fairly bold statement that all objects are kept in memory to ease querying.</p>  <p>That’s not really true, but also not really false.    <br />When the article list is loaded initially, only a slim index of all articles is retrieved from the database. All information relevant to querying and sorting (id, tags, publication date, visibility) gets fetched at once. I used Castle DynamicProxy2 to create proxy objects that pose a the real thing to lazy load the article data on access. So although there may be 10.000 articles currently in memory, only those that have really been viewed by a user have been fully loaded, while all query criteria are present in memory. </p>  <p>But lazy loading wouldn’t work if the list of proxy objects wouldn’t get cached somewhere, and that’s what I wanted to go over in this post. All articles retrieved (in their proxied form) come from the generic IRepository&lt;T&gt; interface that only has one method: GetAll(). I wanted to avoid having the caching be tied into the Repository at all costs since it would make my life hell when testing the repository itself. So I decided that the best course of action would be to create a decorator that took care of the caching, separating caching from the Repository implementation (and it’s also really easy if there is only one method to implement):</p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="378" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/05/image1.png" width="508" border="0" /> </p>  <p>Switching caching on or off is now as simple as removing/adding one line to the Windsor configuration. And the caching code is shared among all Repository implementations, for any type of IArticleRepository&lt;T&gt;.    <br />If it needs to get cleared I can simply ask the Windsor container to retrieve all ICache implementing classes (they are singletons) and call ICache.Clear() on them.</p>  <p>Now, the most interesting thing here is that the <em>cache is asynchronous</em>. If it gets cleared, a background worker process gets spawned on the PopulateCache() method, generating the updated data from the system, while subsequent requests to the Repository (while it’s being populated) still return the outdated list of data. Once the background worker is done populating, it simply swaps out the references and the old data gets collected by the garbage collector.     <br />This result in some pretty sweet response times, since except for the very first startup of the system, every request is served directly from memory, without any data fetching at all.</p>  <p>This part was also crucial to the whole thing since fetching the data is a rather long running and cpu heavy task, taking up to 60 seconds while testing it against 10.000 articles (with a debugger attached on my laptop).    <br />Initially I tried to speed the querying and object building up to allow for a synchronous cache refill, but although I did some optimizations (like <a href="http://www.tigraine.at/2009/03/06/do-you-really-know-what-linq-does/">not using some LinQ methods</a>) the attempt to reduce the execution time to something acceptable was futile. </p>  <p>Right now the cache is implemented by just a simple List&lt;T&gt; that stores everything the repository returned, but if need arises it can easily be changed to use memcached or some other more sophisticated caching method.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>518</wp:post_id>
<wp:post_date>2009-05-12 18:56:28</wp:post_date>
<wp:post_date_gmt>2009-05-12 16:56:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>kaerntenat-caching-and-lazy-loading</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Troublesome testing</title>
<link>http://www.tigraine.at/2009/05/21/troublesome-testing/</link>
<pubDate>Thu, 21 May 2009 10:04:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/21/troublesome-testing/</guid>
<description></description>
<content:encoded><![CDATA[<p>This may be the very first time I blog about a bug in the CLR, but it’s annoying nonetheless.</p>  <p>Apparently a bug in the CLR’s System.Reflection.Emit prevents Rhino.Mocks from working when generic constraints are applied to a method.</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:faa60999-e381-42d9-874a-b670db8025e9" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
void Add&lt;T, TType&gt;()
&#160;&#160;&#160;&#160;where T : class
&#160;&#160;&#160;&#160;where TType : T;
</pre></div>

<p>As long as the TType : T constraints is present, all tests will fail with a System.BadImageFormatException. 
  <br />Now, the bug <a href="http://groups.google.co.il/group/RhinoMocks/browse_thread/thread/387f454f285344ff">is known</a> and it looks like it can’t really be helped on the framework side. But, I didn’t want to drop this constraint in my production code just to make the class testable. </p>

<p>So, I went back to the dark ages and actually wrote a Mock class by hand that counted calls to methods, returned preset values for methods. </p>

<p>Overall, the Mock is a mess. There are like 5-6 fields counting all sorts of different stuff just for a simple interface with two methods. </p>

<p>Thank god there are tools like <a href="http://ayende.com/projects/rhino-mocks/downloads.aspx">Rhino.Mock</a> that keep me from writing code like that (I really can’t praise Ayende enough for Rhino.Mocks).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>519</wp:post_id>
<wp:post_date>2009-05-21 12:04:25</wp:post_date>
<wp:post_date_gmt>2009-05-21 10:04:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>troublesome-testing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>My very own Inversion of Control container: Pandora</title>
<link>http://www.tigraine.at/2009/05/21/my-very-own-inversion-of-control-container/</link>
<pubDate>Thu, 21 May 2009 15:24:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/21/my-very-own-inversion-of-control-container/</guid>
<description></description>
<content:encoded><![CDATA[<p>Almost a year ago or so I listened to a .NET Rocks episode about the Castle MicroKernel/Windsor and the speaker was saying something along the lines of: “Writing a simple <a href="http://www.martinfowler.com/articles/injection.html">IoC container</a> isn’t all that difficult, it’s basically a hashtable of types and 20 lines of code”.</p>  <p>I always felt that it can’t really be that easy so today I decided to try it for myself. Not so much because I want to use my own container (Windsor does everything I want it to do), but out of curiosity and to learn some things about creating classes with reflection etc.    <br />Also I wanted a small project that I use to improve my TDD and API design skills.</p>  <p>So, here it is. Meet: <a href="http://bitbucket.org/Tigraine/pandora-container/overview/">Pandora</a></p>  <p>It’s a very lightweight IoC container that is more or less a hashtable of services with their implementing type as value. </p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bbadd268-8f39-4799-aa99-b98b3f272096" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void CanResolveClassWithoutDependencies()
{
&#160;&#160;&#160;&#160;var componentStore = new ComponentStore();
&#160;&#160;&#160;&#160;componentStore.Add&lt;IService, ClassWithNoDependencies&gt;();

&#160;&#160;&#160;&#160;var container = new PandoraContainer(componentStore);
&#160;&#160;&#160;&#160;var result = container.Resolve&lt;IService&gt;();

&#160;&#160;&#160;&#160;Assert.IsType&lt;ClassWithNoDependencies&gt;(result);
}
</pre></div>

<p>Pandora will look at the implementing type’s constructor and try to resolve any dependency found there (in a recursive manner). Going from the biggest constructor to the smallest. </p>

<p>One obvious limitation right now is that only one implementing type per service can be provided at the moment. 
  <br />Also there is no detection of circular dependencies and no lifestyle management (meaning every time I call Resolve I get a new object graph).</p>

<p></p>

<p>Now, this is far away from a useable product. But writing it allowed me to look at some of the problems involved in the process and I had to learn a thing or two about reflection and generics. </p>

<p>One thing I wanted was to avoid having Type parameters. Having to write something like </p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:60e8b377-04ed-4356-8014-5f2df8453194" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
container.AddComponent(typeof(IService), typeof(Implementor));
</pre></div>

<p>feels awkward every time, so I decided to go with generics to enable a syntax like this one:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4d818070-0ea9-4477-a7ff-f0bc2791a4e4" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
container.AddComponent&lt;IService, Implementor&gt;();
</pre></div>

<p>Much cleaner and I could even add the constraint that Implementor must inherit from IService:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c110cb0a-7c95-4cbb-af1d-046a28304fde" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public void AddComponent&lt;T, TImplementor&gt;()
&#160;&#160;&#160;&#160;where T : class
&#160;&#160;&#160;&#160;where TImplementor : T
{
&#160;&#160;&#160;&#160;componentStore.Add&lt;T, TImplementor&gt;();
}
</pre></div>

<p></p>

<p></p>

<p>Now, the problem with this is that you can’t convert a Type to a generic call afterwards. Once I needed to resolve dependencies that are of a different type I couldn’t simply write Resolve&lt;myType&gt;(). 
  <br />To invoke a generic method in the current instance with a Type argument you need to use generics to create that method, like this:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:08fe6791-2818-4a7e-8f8f-f63e2b779503" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
MethodInfo method = typeof (PandoraContainer).GetMethod("Resolve");
MethodInfo generic = method.MakeGenericMethod(myType);
generic.Invoke(this, null)
</pre></div>

<p>So, it works but I guess it’s not the best way to regularly use reflection to call methods, so I <a href="http://bitbucket.org/Tigraine/pandora-container/changeset/a5dff1b9ae26/">went back</a> to Type parameters and created overloads for the generics. (And now I see why Windsor has Type parameter overloads for everything ;))</p>

<p>Pandora is open source and licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache License 2.0</a>. I strongly suggest you do not use this anywhere near production systems but strictly for educational purposes.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>520</wp:post_id>
<wp:post_date>2009-05-21 17:24:46</wp:post_date>
<wp:post_date_gmt>2009-05-21 15:24:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-very-own-inversion-of-control-container</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244027185</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2511</wp:comment_id>
<wp:comment_author><![CDATA[Dependency chain lookups with Pandora | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/28/dependency-chain-lookups-with-pandora/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-28 23:31:13</wp:comment_date>
<wp:comment_date_gmt>2009-05-28 21:31:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] a week ago I introduced Pandora my own take on Inversion of Control. So I’m back to report some [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2530</wp:comment_id>
<wp:comment_author><![CDATA[Common Service Locator adapter for Pandora | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-06-04 14:59:17</wp:comment_date>
<wp:comment_date_gmt>2009-06-04 12:59:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Pandora I aimed for CSL compliance from the beginning, and the CSLAdapter class has been there for quite [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3365</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Using ILMerge to hide your dependencies]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/01/using-ilmerge-to-hide-your-dependencies/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-01 15:11:12</wp:comment_date>
<wp:comment_date_gmt>2009-10-01 13:11:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] something simple usually isn’t that hard. If you just need a very limited feature set you can build your own Inversion of Control container quite easily without relying on external libraries. Yet, if you do you still have to spend time [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ELMAH on ASP.NET MVC Article published in ELMAH Wiki</title>
<link>http://www.tigraine.at/2009/05/25/elmah-on-aspnet-mvc-article-published-in-elmah-wiki/</link>
<pubDate>Mon, 25 May 2009 15:08:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/25/elmah-on-aspnet-mvc-article-published-in-elmah-wiki/</guid>
<description></description>
<content:encoded><![CDATA[<p>After publishing my article on <a href="http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/">ELMAH for ASP.NET MVC</a> the project owner <a href="http://www.raboof.com/">azizatif</a> asked me if I’d like to publish my article on the project wiki as documentation.</p>  <p>After almost two weeks of not getting around to do it, last week I finally found the time to polish the post a bit and post it there.</p>  <p>You can read the article at: <a href="http://code.google.com/p/elmah/wiki/MVC">http://code.google.com/p/elmah/wiki/MVC</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>522</wp:post_id>
<wp:post_date>2009-05-25 17:08:09</wp:post_date>
<wp:post_date_gmt>2009-05-25 15:08:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>elmah-on-aspnet-mvc-article-published-in-elmah-wiki</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Rails with obstacles</title>
<link>http://www.tigraine.at/2009/05/26/rails-with-obstacles/</link>
<pubDate>Tue, 26 May 2009 13:04:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/26/rails-with-obstacles/</guid>
<description></description>
<content:encoded><![CDATA[<blockquote>   <p><strong><u>Important</u></strong>: Most of the information in this post about outdated MonoRail docs is now also outdated since I submitted a patch to the castle documentation project to fix the issues raised in this post. </p> </blockquote>  <p>Yesterday I decided to build a website with Castle.Monorail to learn another take on the MVC (besides the Microsoft one). Since the last official release of Monorail is quite outdated I just compiled the trunk version to start from the current release. </p>  <p>Doing so is very simple, just do a:</p>  <blockquote>   <p>svn checkout <a title="http://svn.castleproject.org:8080/svn/castle/trunk" href="http://svn.castleproject.org:8080/svn/castle/trunk">http://svn.castleproject.org:8080/svn/castle/trunk</a></p> </blockquote>  <p>Some time ago Roelof Blom made an effort to make the build more user-friendly, so you don’t need any tools installed besides .NET to compile all castle assemblies. Just run ClickToBuild.cmd and it will invoke nant (also in SVN) etc, run a complete compile of all projects and place the output in </p>  <blockquote>   <p><font style="background-color: #ffffff">build\net-3.5\release</font></p> </blockquote>  <p>(Did I mention this is awesome? Building the trunk before was a nightmare!)</p>  <p>I then followed the Monorail <a href="http://www.castleproject.org/monorail/gettingstarted/index.html">getting-started samples</a> from the website and was quite frustrated with how outdated that documentation really is.</p>  <p>Please read through the original documentation as it usually still applies, I’ll just list the things that I had to adapt for the trunk version to work:</p>  <p><a href="http://www.castleproject.org/monorail/gettingstarted/creatingproject.html"><strong>Creating the Project Sceleton:</strong></a></p>  <p><strong>Registering Assemblies:</strong></p>  <p>The list of assemblies to register is pretty outdated, I failed because <a href="http://groups.google.com/group/castle-project-users/browse_thread/thread/8d314658f923049?hl=en">I didn’t reference the DictionaryAdapter</a>.     <br />Instead you need to reference:</p>  <ol>   <li>Castle.Components.Binder.dll </li>    <li>Castle.Components.Common.EmailSender.dll </li>    <li>Castle.Components.DictionaryAdapter.dll </li>    <li>Castle.Components.Validator.dll </li>    <li>Castle.Core.dll </li>    <li>Castle.MonoRail.Framework.dll </li>    <li>Castle.MonoRail.Framework.Views.NVelocity.dll </li>    <li>NVelocity.dll </li> </ol>  <p><strong>HttpModule registration</strong></p>  <p>Register the HttpModule is no longer needed. If you try to add </p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d53861c2-2a1e-4516-9bfa-e35ddecd6669" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;httpModules&gt;
&#160;&#160;&lt;add
&#160;&#160;&#160;&#160;&#160;&#160;name="monorail"
&#160;&#160;&#160;&#160;&#160;&#160;type="Castle.MonoRail.Framework.EngineContextModule, Castle.MonoRail.Framework" /&gt;
&lt;/httpModules&gt;
</pre></div>

<p>to your config things will break. The EngineContextModule has disappeared from the source and is no longer needed.</p>

<p><a href="http://www.castleproject.org/monorail/gettingstarted/ar.html"><strong>Bringing ActiveRecord to the party</strong></a></p>

<p>The configuration has changed since RC3 and you no longer need to prefix all keys with a <em>hibernate. </em>Things will break if you do. You’ll get a exception stating:</p>

<blockquote>
  <p>Could not find the dialect in the configuration</p>
</blockquote>

<p>Kind of an misleading exception, once you remove the leading nhibernate. from your config values you’ll be set. </p>

<p>That’s all as for now, I decided to not go with a “real” database like MsSql during development but to go against a SqlLite database. To do so I changed the AR configuration to this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:44624243-7251-43ed-95ac-52a5255174d8" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
&lt;activerecord isWeb="true"&gt;
&#160;&#160;&lt;config&gt;
&#160;&#160;&#160;&#160;&lt;add
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key="connection.driver_class"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value="NHibernate.Driver.SQLite20Driver" /&gt;
&#160;&#160;&#160;&#160;&lt;add
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key="dialect"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value="NHibernate.Dialect.SQLiteDialect" /&gt;
&#160;&#160;&#160;&#160;&lt;add
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key="connection.provider"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value="NHibernate.Connection.DriverConnectionProvider" /&gt;
&#160;&#160;&#160;&#160;&lt;add
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key="connection.connection_string"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value="Data Source=nhibernate.db3;Version=3" /&gt;
&#160;&#160;&lt;/config&gt;
&lt;/activerecord&gt;
</pre></div>

<p>You then need to reference the System.Data.SQLite.dll and you’re set (grab the <a href="http://sourceforge.net/projects/sqlite-dotnet2">release from SourceForge</a>). </p>

<p>Update: In case you try the SqlLite database I found <a href="http://sqliteadmin.orbmu2k.de/">SqlLite Administrator</a> very useful for looking at the database.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>523</wp:post_id>
<wp:post_date>2009-05-26 15:04:03</wp:post_date>
<wp:post_date_gmt>2009-05-26 13:04:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-with-obstacles</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2599</wp:comment_id>
<wp:comment_author><![CDATA[imagineClub &ndash; Students for Students | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-06-21 23:17:37</wp:comment_date>
<wp:comment_date_gmt>2009-06-21 21:17:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I’m planning to change this through writing a completely new website that does what it’s supposed to do, but also is completely open source! I decided to go with the Castle MonoRail framework on this one since I already did enough ASP.NET MVC Projects in the past. A positive side-effect of this should also be to work on the MonoRail documentation to get it updated once again. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2860</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; MVC vs MonoRail &ndash; Action Methods]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-31 21:03:11</wp:comment_date>
<wp:comment_date_gmt>2009-07-31 19:03:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] OSS project, currently the best way to contribute to MonoRail is to write about it and if possible improve documentation around it. I guess that says everything about the quality/maturity of the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Setting a InsertedOn Field with Castle ActiveRecord</title>
<link>http://www.tigraine.at/2009/05/26/setting-a-insertedon-field-with-castle-activerecord/</link>
<pubDate>Tue, 26 May 2009 19:00:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=525</guid>
<description></description>
<content:encoded><![CDATA[<p>If I want a field to contain the date of insertion I’d usually have to hook into the Create method somewhere be it my repository or whatever.   <br />With Castle ActiveRecord it’s as simple as overriding the Create() method in your Entity:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:855f7b1d-faa2-4a8e-807e-2f98572be75f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[ActiveRecord]
public class Comment : ActiveRecordBase&lt;Comment&gt;
{
&#160;&#160;&#160;&#160;[PrimaryKey]
&#160;&#160;&#160;&#160;public long Id { get; set; }
&#160;&#160;&#160;&#160;[Property]
&#160;&#160;&#160;&#160;public DateTime CreatedOn { get; set; }
&#160;&#160;&#160;&#160;[Property]
&#160;&#160;&#160;&#160;public string Message { get; set; }
&#160;&#160;&#160;&#160;private void SetInsertionTimestamp()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CreatedOn = DateTime.Now;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public override void Create()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SetInsertionTimestamp();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;base.Create();
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public override void CreateAndFlush()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SetInsertionTimestamp();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;base.CreateAndFlush();
&#160;&#160;&#160;&#160;}
}
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>525</wp:post_id>
<wp:post_date>2009-05-26 21:00:55</wp:post_date>
<wp:post_date_gmt>2009-05-26 19:00:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>setting-a-insertedon-field-with-castle-activerecord</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1243375425</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2507</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.105</wp:comment_author_IP>
<wp:comment_date>2009-05-27 20:52:58</wp:comment_date>
<wp:comment_date_gmt>2009-05-27 18:52:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Right Sander, I'd have to do this also in the SaveAndFlush method.
I intentionally let it out of the Save / SaveAndFlush method because it should be a timestamp of the initial record creation, not a lastedit Timestamp.

Thanks anyway. I'll correct the post right away.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2506</wp:comment_id>
<wp:comment_author><![CDATA[Sander Rijken]]></wp:comment_author>
<wp:comment_author_email>sr@d-90.nl</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>83.98.246.15</wp:comment_author_IP>
<wp:comment_date>2009-05-27 20:22:24</wp:comment_date>
<wp:comment_date_gmt>2009-05-27 18:22:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually you'll also need to do the same in CreateAndFlush, Save and SaveAndFlush.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/27/rant-interface-violation-inside-aspnet-mvc/imagepng-2/</link>
<pubDate>Wed, 27 May 2009 13:28:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>529</wp:post_id>
<wp:post_date>2009-05-27 15:28:59</wp:post_date>
<wp:post_date_gmt>2009-05-27 13:28:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>530</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:556;s:6:"height";i:122;s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:67:"/kunden/185575_9020/webseiten/wp-content/uploads/2009/05/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x122.png";s:5:"width";i:150;s:6:"height";i:122;}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x65.png";s:5:"width";i:300;s:6:"height";i:65;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rant: Interface violation inside ASP.NET MVC</title>
<link>http://www.tigraine.at/2009/05/27/rant-interface-violation-inside-aspnet-mvc/</link>
<pubDate>Wed, 27 May 2009 13:28:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/27/rant-interface-violation-inside-aspnet-mvc/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’m amazed about how bad the ASP.NET MVC code really is. Why? Because something as trivial as redirecting the output of a View to another TextWriter shouldn’t take more than 5 lines of code and certainly not be impossible!</p>  <p>But from the start, here’s the scenario. ViewResult should not be written to HttpContext.Response but to some arbitrary TextWriter.    <br />So, for me the most obvious choice was to alter the ViewResult to write to somewhere else. So redirecting should be as easy as:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c2573b73-ac06-40ec-b3ea-0ba8fec2f5cb" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public ActionResult Index()
{
&#160;&#160;&#160;&#160;ViewData["Message"] = "Welcome to ASP.NET MVC!";
&#160;&#160;&#160;&#160;TextWriter writer = Console.Out;
&#160;&#160;&#160;&#160;return new RoutedViewResult(writer);
}
</pre></div>

<p>Now, nothing left to do but override the ExecuteResult method and call View.Render() with another writer:</p>

<p><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="122" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/05/image2.png" width="556" border="0" /> </p>

<p>So, what do you see here? A method that takes a ViewContext (containing ViewData, TempData, HttpContext etc..) and a TextWriter.&#160; <br />Any normal person would now jump to the conclusion, that if I build a ViewContext and pass in my TextWriter, I’m set and all is well. </p>

<p>So, I spent almost 30 minutes trying to find a way on how to construct the ViewContext (without copy/pasting the code from within the framework, btw. forget it – they married ViewContext creation with View rendering, so no way to separate those) just to find out that my output was still written to HttpContext.Response. </p>

<p>That’s when I looked at the WebFormView class that implements the IView interface, but does so badly. 
  <br />Let me explain:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b74c4e65-e730-4062-8ba4-5759f6ae0a1a" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public interface IView
{
&#160;&#160;&#160;&#160;// Methods
&#160;&#160;&#160;&#160;void Render(ViewContext viewContext, TextWriter writer);
}
</pre></div>

<p>The interface clearly states that there should be a TextWriter passed to the View. 
  <br />Imagine my face when I saw the implementation in the WebFormView class:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9e7a2595-3f0e-4c47-ae02-7eed894a6eb3" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public virtual void Render(ViewContext viewContext, TextWriter writer)
{
&#160;&#160;&#160;&#160;if (viewContext == null)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new ArgumentNullException("viewContext");
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;object obj2 = this.BuildManager.CreateInstanceFromVirtualPath(this.ViewPath, typeof(object));
&#160;&#160;&#160;&#160;if (obj2 == null)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new InvalidOperationException(string.Format(CultureInfo.CurrentUICulture, MvcResources.WebFormViewEngine_ViewCouldNotBeCreated, new object[] { this.ViewPath }));
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;ViewPage page = obj2 as ViewPage;
&#160;&#160;&#160;&#160;if (page != null)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.RenderViewPage(viewContext, page);
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;else
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewUserControl control = obj2 as ViewUserControl;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (control == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new InvalidOperationException(string.Format(CultureInfo.CurrentUICulture, MvcResources.WebFormViewEngine_WrongViewBase, new object[] { this.ViewPath }));
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.RenderViewUserControl(viewContext, control);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Do you see the problem? <u>Writer is <strong>NEVER </strong>used</u>. They violate their own interface in their own code. What a mess. </p>

<p>Something similar has been done with the <a href="http://mvccontrib.googlecode.com/svn/trunk/src/MVCContrib/Services/EmailTemplateService.cs">EmailTemplateService</a> in MVCContrib, but it’s very email specific and works with using a MemoryStream as filter to the HttpContext.Response (not happy with that either, but apparently the only way).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>530</wp:post_id>
<wp:post_date>2009-05-27 15:28:59</wp:post_date>
<wp:post_date_gmt>2009-05-27 13:28:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rant-interface-violation-inside-aspnet-mvc</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3367</wp:comment_id>
<wp:comment_author><![CDATA[Steve Hoff]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/SMHoff</wp:comment_author_url>
<wp:comment_author_IP>63.64.39.28</wp:comment_author_IP>
<wp:comment_date>2009-10-14 18:13:12</wp:comment_date>
<wp:comment_date_gmt>2009-10-14 23:13:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Having similar issues with WebFormView except that for me when I use a custom controller factory, which uses inversion of control rather than the default factory,  an exception is thrown setting the ViewData. The error being that it expects the exact type its being sent and so it can&#39;t work because it&#39;s the correct value.<br><br>Some of the MVC code base is ... well very poorly done.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/27/comparing-castle-activerecord-to-fluent-nhibernate/imagepng-2/</link>
<pubDate>Wed, 27 May 2009 20:09:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>532</wp:post_id>
<wp:post_date>2009-05-27 22:09:13</wp:post_date>
<wp:post_date_gmt>2009-05-27 20:09:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>533</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"704";s:6:"height";s:3:"229";s:14:"hwstring_small";s:23:"height='41' width='128'";s:4:"file";s:18:"2009/05/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image3-300x97.png";s:5:"width";s:3:"300";s:6:"height";s:2:"97";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Comparing Castle ActiveRecord to Fluent NHibernate</title>
<link>http://www.tigraine.at/2009/05/27/comparing-castle-activerecord-to-fluent-nhibernate/</link>
<pubDate>Wed, 27 May 2009 20:09:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=533</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve used my fair share of ORM tools lately and I keep coming back to NHibernate more and more. But sometimes it feels like “too much”. Going for a dedicated data access layer often feels like a bit of overkill and isn’t all that exciting to do, so for smaller projects I sometimes took the easy way and used LinQ to Sql.   <br />Usually LinQ to Sql would then come around to bite me at some point and I’d hate myself for using it. So when I lately tried Castle ActiveRecord (watch this wonderful presentation by Ayende and Hammet at InfoQ: <a href="http://www.infoq.com/presentations/eini-verissimo-castle-active-record">Painless Persistence with Castle ActiveRecord</a>) I was blown away: A simpler way to build stuff with NHibernate.    <br />No complete abstraction of NHibernate, but a layer ontop that makes life easier. (You can access the Session manually and do your crazy NHibernate stuff if you want to).</p>  <p>Since ActiveRecord was created to avoid some of the crazy configuration stuff that was in NHibernate at that time, I thought it might be interesting to compare ActiveRecord to the current state of NHibernate configuration, namely: <a href="http://wiki.fluentnhibernate.org/show/HomePage">Fluent NHibernate</a>.</p>  <p>This is by no means a matchup, what you use hugely depends on your needs. And since both are essentially the same it boils down to taste. I haven’t used either for any real application (only old NHibernate with XML), so this is my personal rundown on the samples and spikes I did lately.</p>  <p>Let’s assume the typical Blog sample model:</p>  <p><img title="model" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="229" alt="model" src="http://www.tigraine.at/wp-content/uploads/2009/05/image3.png" width="704" border="0" /></p>  <p>I’ll only focus on the BlogPost class since it is on both ends of a parent/child relationship.</p>  <p><strong>Mapping</strong></p>  <p>First, how does the the ActiveRecord mapping look like:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b6a4d10e-01de-4cc2-b41c-6c8badf629ab" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[ActiveRecord]
public class BlogPost : ActiveRecordBase&lt;BlogPost&gt;
{
&#160;&#160;&#160;&#160;[PrimaryKey]
&#160;&#160;&#160;&#160;public int Id { get; set; }
&#160;&#160;&#160;&#160;[Property]
&#160;&#160;&#160;&#160;public string Headline { get; set; }
&#160;&#160;&#160;&#160;[Property]
&#160;&#160;&#160;&#160;public string PostText { get; set; }
&#160;&#160;&#160;&#160;[Property]
&#160;&#160;&#160;&#160;public DateTime PostedOn { get; set; }
&#160;&#160;&#160;&#160;[BelongsTo]
&#160;&#160;&#160;&#160;public User Poster { get; set; }
&#160;&#160;&#160;&#160;[HasMany]
&#160;&#160;&#160;&#160;public IList&lt;Comment&gt; Comments { get; set; }
}
</pre></div>

<p>Now the NHibernate mappings:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:667ab6c8-ad0b-4a21-99c1-76cbafaae105" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class BlogPost
{
&#160;&#160;&#160;&#160;public virtual int Id { get; set; }
&#160;&#160;&#160;&#160;public virtual string Headline { get; set; }
&#160;&#160;&#160;&#160;public virtual User Poster { get; set; }
&#160;&#160;&#160;&#160;public virtual IList&lt;Comment&gt; Comments { get; set; }
&#160;&#160;&#160;&#160;public virtual string PostText { get; set; }
&#160;&#160;&#160;&#160;public virtual DateTime PostedOn { get; set; }
}
public class BlogPostMap : ClassMap&lt;BlogPost&gt;
{
&#160;&#160;&#160;&#160;public BlogPostMap()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Id(m =&gt; m.Id);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Map(m =&gt; m.Headline);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Map(m =&gt; m.PostText);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Map(m =&gt; m.PostedOn);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HasMany(m =&gt; m.Comments);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;References(m =&gt; m.Poster);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Cool, both APIs look good. Very readable and no XML.</p>

<p>NHibernate has the ability to have the Model separated from the mappings, a feature that I like when doing enterprise applications. But for something simpler, not really relevant. Where Fluent NHibernate really blows AR away is the auto mapper feature <a href="http://ayende.com/Blog/archive/2008/12/11/fluent-nhibernate.aspx">Ayende is so happy with</a>.</p>

<p><strong>Initialization</strong></p>

<p>ActiveRecord hasn’t departed from XML yet, but there are three ways to load a configuration. The simplest would probably be the inplace configuration source, but it’s more or less a in-memory mirror of the XML config:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5e28e6a3-b996-4e37-aec9-f527f44e8ef0" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var properties = new Hashtable();
properties.Add("hibernate.connection.driver_class", "NHibernate.Driver.SQLite20Driver");
properties.Add("hibernate.dialect", "NHibernate.Dialect.SQLiteDialect");
properties.Add("hibernate.connection.provider", "NHibernate.Connection.DriverConnectionProvider");
properties.Add("hibernate.connection.connection_string", "Data Source=:memory:;Version=3;New=True;");
var source = new InPlaceConfigurationSource();
source.Add(typeof (ActiveRecordBase), (IDictionary&lt;string, string&gt;) properties);
ActiveRecordStarter.Initialize(typeof(BlogPost).Assembly, source);
ActiveRecordStarter.CreateSchema();
</pre></div>

<p>The Fluent NHibernate configuration looks way better since you don’t have to worry about connectionstrings or other properties that nobody remembers:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:88810c89-d198-494d-a0e5-3391b83b3970" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static ISessionFactory CreateSessionFactory()
{
&#160;&#160;&#160;&#160;return
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fluently
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Configure()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Database(SQLiteConfiguration.Standard.InMemory())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Mappings(m =&gt; m.FluentMappings.AddFromAssemblyOf&lt;BlogPost&gt;())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ExposeConfiguration(BuildSchema)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.BuildSessionFactory();
}

private static void BuildSchema(Configuration config)
{
&#160;&#160;&#160;&#160;new SchemaExport(config)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Create(false, true);
}
</pre></div>

<p>I’d vote for Fluent NHibernate on this one, but having the configuration externalized in XML is something you’d probably do anyway.</p>

<p>Where the differences really begin are the <strong>querying</strong>:</p>

<p>Querying with ActiveRecord is mostly done through static methods, so ease of use is king here:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e843dbaf-6dc1-4818-b2fd-b4d58dfe4dac" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var post = BlogPost.Find(1);
</pre></div>

<p>While NHibernate requires me to retrieve a ISession before giving me access to anything.</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:932b729b-46ec-4caf-afe0-e94bebfdd0a3" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var mySession = factory.OpenSession();
var post = mySession.Get&lt;BlogPost&gt;((object)1);
</pre></div>

<p>The one is more OO, the other is simpler. I have to say I prefer the added complexity since it makes it easier to test that your code interacts with the session object. (Although I’d not overuse that, going against an in-memory db and verifying the results should be the better way to create durable tests).</p>

<p>Since both AR and NH use the NH Criteria API I won’t compare complex queries.</p>

<p>So, how to conclude on the usability? Not having to think about how to pass the session around is quite nice, but when using NHibernate you could easily just write your session to some global and use it from there.</p>

<p><strong>Validation</strong></p>

<p>Now, what would a ORM be without a good validation framework.</p>

<p>ActiveRecord comes prepacked with the Castle.Components.Validator assembly that allows a rather cool attribute based validation API:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:80692bfb-49e6-4d86-9d12-ac0cac6d564a" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Property, ValidateEmail, ValidateNonEmpty]
public string Email { get; set; }
</pre></div>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6be0994f-567a-4d1e-b387-c56d15295fa1" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var user = new User();
if (user.IsValid())
&#160;&#160;&#160;&#160;user.Save();
</pre></div>

<p>While NHibernate doesn’t have a built-in Validation framework, there is the <a href="http://nhforge.org/blogs/nhibernate/archive/2009/05/18/nhibernate-validator-quickstart.aspx">NHibernate Validator</a> (<a href="http://nhforge.org/wikis/validator/nhibernate-validator-1-0-0-documentation.aspx">documentation</a>) project that also allows a very clean attribute based validation.</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:1c5c4373-375a-46f9-89a5-a6f5232721f1" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[NotNull]
public static string blacklistedZipCode;
</pre></div>

<p>But as before, it’s a bit “heavier” than AR and allows you to have external ValidatorClasses if you need them. Also cool, but something I don’t really care about is that NHV is also XML based, so you could allow your users/admins to tweak the validation rules after deployment.</p>

<p>I guess that’s enough for now, use what you find suits your project better.&#160; :)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>533</wp:post_id>
<wp:post_date>2009-05-27 22:09:14</wp:post_date>
<wp:post_date_gmt>2009-05-27 20:09:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>comparing-castle-activerecord-to-fluent-nhibernate</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1243463177</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3355</wp:comment_id>
<wp:comment_author><![CDATA[Danny]]></wp:comment_author>
<wp:comment_author_email>danyal@danyalaytekin.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>94.117.119.33</wp:comment_author_IP>
<wp:comment_date>2009-09-02 20:35:16</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 18:35:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Good]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3363</wp:comment_id>
<wp:comment_author><![CDATA[resume building]]></wp:comment_author>
<wp:comment_author_email>ozzresume1@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.ResumeBuilderPlus.com</wp:comment_author_url>
<wp:comment_author_IP>120.28.149.48</wp:comment_author_IP>
<wp:comment_date>2009-09-22 16:19:10</wp:comment_date>
<wp:comment_date_gmt>2009-09-22 21:19:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[test]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3480</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.206.170.137</wp:comment_author_IP>
<wp:comment_date>2010-07-06 05:47:39</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 10:47:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3508</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3606</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3684</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3717</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3721</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3722</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3723</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3733</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3744</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3761</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3770</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3822</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3866</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3924</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3958</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4877</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3963</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4033</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4036</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4040</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4041</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4046</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4107</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4117</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4118</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4123</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4128</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4134</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5195</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4160</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4168</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5326</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4599</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4604</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5400</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4690</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4691</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4709</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4712</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4717</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4767</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4791</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4804</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4821</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4926</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4979</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4997</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5010</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5076</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5079</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5084</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5105</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5305</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5333</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5341</wp:comment_id>
<wp:comment_author><![CDATA[Tony]]></wp:comment_author>
<wp:comment_author_email>tony@ohagan.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-07-06 03:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-06 03:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You can also use AutoMapper with AR.  ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/28/dependency-chain-lookups-with-pandora/imagepng-2/</link>
<pubDate>Thu, 28 May 2009 21:31:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>536</wp:post_id>
<wp:post_date>2009-05-28 23:31:08</wp:post_date>
<wp:post_date_gmt>2009-05-28 21:31:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>537</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"343";s:6:"height";s:3:"279";s:14:"hwstring_small";s:23:"height='96' width='118'";s:4:"file";s:18:"2009/05/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x244.png";s:5:"width";s:3:"300";s:6:"height";s:3:"244";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Dependency chain lookups with Pandora</title>
<link>http://www.tigraine.at/2009/05/28/dependency-chain-lookups-with-pandora/</link>
<pubDate>Thu, 28 May 2009 21:31:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/28/dependency-chain-lookups-with-pandora/</guid>
<description></description>
<content:encoded><![CDATA[<p>Almost a week ago <a href="http://www.tigraine.at/2009/05/21/my-very-own-inversion-of-control-container/">I introduced Pandora</a> my own take on Inversion of Control. So I’m back to report some news.</p>  <p><strong>New features:</strong></p>  <ol>   <li>Multiple registrations of one service type</li>    <li>Graph splitting</li>    <li>Dependency chains of own service</li> </ol>  <p>Before only one service registration was possible, preventing you from doing all sorts of cool things.   <br />For example it prevented you from registering a class like this one:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:425946b5-e271-48a0-bd93-a7a567eadf0f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class ClassWithDependencyOnItsOwnService : IService
{
&#160;&#160;&#160;&#160;public ClassWithDependencyOnItsOwnService(IService service)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>This class would typically be some sort of decorator that covers the IService interface with a thin layer of concerns (like logging/errorhandling/caching). Now, you can just register more than one IService and it will walk the graph for you:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5777d86a-2d46-4159-b75d-2ecef7ddfaa7" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
[Fact]
public void CanResolveDependencyChainOfSameService()
{
&#160;&#160;&#160;&#160;var store = new ComponentStore();
&#160;&#160;&#160;&#160;store.Add&lt;IService, ClassWithDependencyOnItsOwnService&gt;();
&#160;&#160;&#160;&#160;store.Add&lt;IService, ClassWithNoDependencies&gt;();

&#160;&#160;&#160;&#160;var container = new PandoraContainer(store);

&#160;&#160;&#160;&#160;var service = container.Resolve&lt;IService&gt;();

&#160;&#160;&#160;&#160;Assert.IsType(typeof (ClassWithDependencyOnItsOwnService), service);
&#160;&#160;&#160;&#160;var ownService = (ClassWithDependencyOnItsOwnService)service;
&#160;&#160;&#160;&#160;Assert.IsType(typeof (ClassWithNoDependencies), ownService.SubService);
}
</pre></div>

<p>Also now there is the possibility to split the graph at some point like this:</p>

<p><img title="image" style="border-right: 0px; border-top: 0px; display: inline; border-left: 0px; border-bottom: 0px" height="279" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/05/image4.png" width="343" border="0" /> </p>

<p>You don’t need three registrations for this, only one since every subresolving of IService will happen on it’s own. Something that isn’t really practical actually since we still lack the ability to influence the resolve process. Both IServices will be populated by the same registered type, it just won’t be the parent IService again.</p>

<p>I also spent almost the whole day refactoring the resolver code since I felt that it became quickly unreadable.</p>

<p><strong>Next:</strong> </p>

<p>I still feel like the resolver needs some more refactoring, and I also want to improve the error messages. After that, I’d like to return my focus back to much needed features like lookup strategies and after that auto-configuration.</p>

<p>You can check out the <a href="http://bitbucket.org/Tigraine/pandora-container/src/ca466e262ecd/">code</a> on the <a href="http://bitbucket.org/Tigraine/pandora-container/overview/">project site</a> on bitbucket.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>537</wp:post_id>
<wp:post_date>2009-05-28 23:31:08</wp:post_date>
<wp:post_date_gmt>2009-05-28 21:31:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dependency-chain-lookups-with-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244027172</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Fluent NHibernate gotchas when testing with an in memory database.</title>
<link>http://www.tigraine.at/2009/05/29/fluent-nhibernate-gotchas-when-testing-with-an-in-memory-database/</link>
<pubDate>Fri, 29 May 2009 20:28:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/29/fluent-nhibernate-gotchas-when-testing-with-an-in-memory-database/</guid>
<description></description>
<content:encoded><![CDATA[<p>What I love most about programmatic configuration is that it’s close to the test.   <br />While we were carrying dozens of XML files around for testing before, now with DSL based configuration everywhere the configuration is usually pretty near to the test fixture, instead of residing in some arbitrary XML that only insiders can associate with the test.</p>  <p>The standard sample for using SqlLite and Fluent NHibernate usually looks like this:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:131bec5e-6655-4adf-9715-34a8130f65ca" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
return
&#160;&#160;&#160;&#160;Fluently
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Configure()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Database(SQLiteConfiguration.Standard.UsingFile("mydb.db3").ShowSql())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Mappings(m =&gt; m.FluentMappings.AddFromAssemblyOf&lt;SessionFactory&gt;())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ExposeConfiguration(SaveSchema)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.BuildSessionFactory();
</pre></div>

<p>Where SaveSchema is a method that does a database rebuild. </p>

<p>Now, Fluent Nhibernate has in-memory databases built into the API. Just remove the UsingFile directive and you replace it with:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d6b21b76-05f5-4207-8f44-cfbe54ddaf2f" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
.Database(SQLiteConfiguration.Standard.InMemory().ShowSql())
</pre></div>

<p></p>

<p>Charming isn’t it? Now the only problem is that you won’t be able to do anything with that DB since there is no schema present. 
  <br />The in-memory database exists per session, so once you close the ISession the db is gone. Since the schema export from most samples operates in it’s own ISession the subsequent queries will still hit a blank database, and you’ll get an error stating there is no such table.</p>

<p>So my SessionFactory implementation had to change, since I needed to keep the configuration around for doing the schema export:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a172ea30-b1b7-4852-b9ef-77b53a080706" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public class SessionFactory
{
&#160;&#160;&#160;&#160;public static ISessionFactory CreateSessionFactory()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fluently
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Configure()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Database(SQLiteConfiguration.Standard.InMemory().ShowSql())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Mappings(m =&gt; m.FluentMappings.AddFromAssemblyOf&lt;SessionFactory&gt;())
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ExposeConfiguration((c) =&gt;&#160;&#160;SavedConfig = c)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.BuildSessionFactory();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static Configuration SavedConfig;

&#160;&#160;&#160;&#160;public static void BuildSchema(ISession session)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var export = new SchemaExport(SavedConfig);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;export.Execute(true, true, false, false, session.Connection, null);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>And my tests then use a another factory method to construct the ISession object:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3749f217-7992-4d1c-8483-fb50bd0e5dd4" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public static ISession CreateSession()
{
&#160;&#160;&#160;&#160;var factory = SessionFactory.CreateSessionFactory();
&#160;&#160;&#160;&#160;var session = factory.OpenSession();
&#160;&#160;&#160;&#160;SessionFactory.BuildSchema(session);

&#160;&#160;&#160;&#160;return session;
}
</pre></div>

<p>Hope this helps, quite an annoying problem and imo a far from perfect solution. Someone on the FNH mailing list suggested looking at the <a href="http://github.com/jagregory/fluent-nhibernate/blob/4539f48d1672bb210b4557e5e8004521f5a5f5af/src/FluentNHibernate.Testing/DomainModel/Mapping/OneToManyIntegrationTester.cs">OneToManyIntegrationTester</a> class but I couldn’t really extract any terribly useful information from there.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>538</wp:post_id>
<wp:post_date>2009-05-29 22:28:46</wp:post_date>
<wp:post_date_gmt>2009-05-29 20:28:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fluent-nhibernate-gotchas-when-testing-with-an-in-memory-database</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2647</wp:comment_id>
<wp:comment_author><![CDATA[James Allen]]></wp:comment_author>
<wp:comment_author_email>james.allen@perfect-image.co.uk</wp:comment_author_email>
<wp:comment_author_url>http://james-allen.tumblr.com</wp:comment_author_url>
<wp:comment_author_IP>91.105.108.154</wp:comment_author_IP>
<wp:comment_date>2009-07-06 00:01:31</wp:comment_date>
<wp:comment_date_gmt>2009-07-05 22:01:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you so much for this post, you have finally ended my pain trying to get this to work! What I hadn't worked out was that you should save the configuration to use later in the schema export. Seems so simple now...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2671</wp:comment_id>
<wp:comment_author><![CDATA[SqLite in-memory testing for Fluent NHibernate &laquo; James on code]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://jamesoncode.wordpress.com/2009/07/05/sqlite-in-memory-testing-for-fluent-nhibernate/</wp:comment_author_url>
<wp:comment_author_IP>74.200.245.189</wp:comment_author_IP>
<wp:comment_date>2009-07-09 21:32:49</wp:comment_date>
<wp:comment_date_gmt>2009-07-09 19:32:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] the schema into the in-memory database. For the latter I&#8217;m grateful to Daniel Hölbling for his post describing how to do the latter using Fluent. Here&#8217;s the finished [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2692</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; ActiveRecord gotchas when testing with an in memory database.]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/15/activerecord-gotchas-when-testing-with-an-in-memory-database/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-15 19:18:04</wp:comment_date>
<wp:comment_date_gmt>2009-07-15 17:18:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] the title sounds familiar to you, it’s intentional. After having to deal with this in pure NHibernate it came around to also bite me with [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3095</wp:comment_id>
<wp:comment_author><![CDATA[How-To: Using the N* Stack, part 4 &laquo; BASICly everything]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://jasondentler.com/blog/2009/08/how-to-using-the-n-stack-part-4/</wp:comment_author_url>
<wp:comment_author_IP>72.167.131.46</wp:comment_author_IP>
<wp:comment_date>2009-08-16 11:02:46</wp:comment_date>
<wp:comment_date_gmt>2009-08-16 09:02:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Ayende’s blog post, Krzysztof Kozmic’s recent post on Devlio.us, Daniel Hoebling’s blog post, Ayende’s NHProfiler [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3414</wp:comment_id>
<wp:comment_author><![CDATA[RT]]></wp:comment_author>
<wp:comment_author_email>raman_k_t@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>207.250.146.26</wp:comment_author_IP>
<wp:comment_date>2010-01-22 20:22:50</wp:comment_date>
<wp:comment_date_gmt>2010-01-23 01:22:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the post. <br><br>I was wondering whether it would be helpful to create the session factory once per test fixture rather than once per session, which will be created once per test within a fixture.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3415</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.22</wp:comment_author_IP>
<wp:comment_date>2010-01-22 20:34:20</wp:comment_date>
<wp:comment_date_gmt>2010-01-23 01:34:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually, I am a strong believer in tests not interfering with each other. <br>By having all of my tests in one test-class share the same database instance, I am giving it shared state.<br>With a shared state among my tests I might run into issues of tests depending on order of execution to pass, thus making them pretty much worthless. <br><br>The alternative is to do a manual cleanup after each fixture to return the shared session back to a known state so it can be used for the next test. And imo that&#39;s not really worth the effort<br><br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3444</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP>70.112.185.90</wp:comment_author_IP>
<wp:comment_date>2010-05-15 19:51:02</wp:comment_date>
<wp:comment_date_gmt>2010-05-16 00:51:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. <br><br>Great Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3445</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.221</wp:comment_author_IP>
<wp:comment_date>2010-05-15 19:53:43</wp:comment_date>
<wp:comment_date_gmt>2010-05-16 00:53:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3503</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3504</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4554</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4555</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3509</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3510</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3515</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3516</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3550</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3551</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3621</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3622</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3663</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3664</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3701</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3702</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3719</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3720</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3724</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3725</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3738</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3739</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3753</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3754</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3766</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3767</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3771</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3772</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3773</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3774</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4701</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4702</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3776</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3777</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3778</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3779</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3780</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3781</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3782</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3783</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3786</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3787</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3788</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3789</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3790</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3791</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3797</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3798</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3803</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3804</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3816</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3817</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4761</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4760</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3840</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3841</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3842</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3843</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3848</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3849</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3862</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3863</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3864</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3865</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3867</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3868</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3869</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3870</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3871</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3872</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3874</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3875</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3876</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3877</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4850</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4851</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3891</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3892</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3895</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3896</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4862</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4863</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4864</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4865</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4866</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4867</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4872</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4873</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4874</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4875</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3925</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3926</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3927</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3928</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3929</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3930</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3971</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3972</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3978</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3979</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3980</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3981</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4956</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4957</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4975</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4976</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4970</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4971</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4013</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4014</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4981</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4982</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4021</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4022</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4063</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4064</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4065</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4066</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4069</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4070</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4072</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4073</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4074</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4075</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4103</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4104</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4105</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4106</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4115</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4116</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5143</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5144</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4120</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4121</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4124</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4125</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4126</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4127</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5152</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5153</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4135</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4136</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4138</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4139</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4146</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4147</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4152</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4153</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4173</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4174</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4208</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4209</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4268</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4269</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5254</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5255</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5252</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5253</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4307</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4308</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5262</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5263</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4427</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4428</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5285</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5286</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5284</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5277</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5278</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5283</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5274</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5275</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4549</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4550</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4551</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4552</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4557</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4558</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4574</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4575</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4582</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4583</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4584</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4585</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5368</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5369</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5370</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5371</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4620</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4621</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5379</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5380</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5385</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5386</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5387</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5388</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4636</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4637</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4675</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4676</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4680</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4681</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4734</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4735</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4740</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4741</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4742</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4743</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4744</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4745</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4746</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4747</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4755</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4756</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4763</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4764</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4768</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4769</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4782</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4783</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4785</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4786</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4792</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4793</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4805</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4806</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4814</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4815</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4816</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4817</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4818</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4819</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4822</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4823</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4824</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4825</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4826</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4827</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4830</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4831</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4840</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4841</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4842</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4843</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4845</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4846</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4895</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4896</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4899</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4900</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4918</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4919</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4920</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4921</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4922</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4923</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4951</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4952</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4964</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4965</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5054</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5055</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5058</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5059</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5107</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5108</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5161</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5162</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5163</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad it helped.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5164</wp:comment_id>
<wp:comment_author><![CDATA[m4bwav]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>https://me.yahoo.com/m4bwav#0d06f</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-15 17:51:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-15 17:51:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You saved many hairs in my head from the threat of SqlLite induced stress. nnGreat Article]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Running from trunks can be tough</title>
<link>http://www.tigraine.at/2009/05/30/running-from-trunks-can-be-tough/</link>
<pubDate>Sat, 30 May 2009 12:27:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=539</guid>
<description></description>
<content:encoded><![CDATA[I just spent almost 10 hours running in circles collecting different releases of NHibernate, Fluent NHibernate and castle, in a rather futile attempt to make them work together.

NHibernate is currently in 2.1 Beta1 at revision 2.1.0.2001 referencing the latest Castle.DynamicProxy2 at revision 2.1.0.0.

Fluent NHibernate’s current trunk compiles against NHibernate 2.1.0.1001 that in turn is compiled against Castle.DynamicProxy2 2.0.3 thus breaking.

So, while the NHibernate Project and the Castle project managed to match their versions pretty well, the Fluent NHibernate trunk was not.

So, the obvious choice would be to just take all the assemblies that are packed with Fluent NHibernate and work from that. But by doing so I then lack Calst MicroKernel and Windsor, two libraries that are not packed with Fluent NHibernate.

At that point I gave up and simply recompiled the Fluent NHibernate trunk with the latest NHibernate trunk.

In case you need Fluent NHibernate with Castle Windsor i packed my results for you: <a title="Fluent NHibernate (NH Beta 1) packed together with the latest Castle trunk" href="http://www.tigraine.at/wp-content/uploads/2009/05/fluentnhibernatewithcastle.7z">FluentNHibernateWithCastle.7z</a>

Hope this helps.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>539</wp:post_id>
<wp:post_date>2009-05-30 14:27:03</wp:post_date>
<wp:post_date_gmt>2009-05-30 12:27:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>running-from-trunks-can-be-tough</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244117447</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2514</wp:comment_id>
<wp:comment_author><![CDATA[Peter Morris]]></wp:comment_author>
<wp:comment_author_email>mrpmorris@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://mrpmorris.blogspot.com</wp:comment_author_url>
<wp:comment_author_IP>82.36.42.183</wp:comment_author_IP>
<wp:comment_date>2009-05-31 10:58:59</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 08:58:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi

I have just downloaded the trunk for NH and tried to get it to compile but it misses the assemblyinfo.cs files.

I have looked at a couple of pages explaining how to build the NH trunk, but both seem old and neither worked.

I don't suppose you fancy writing an updated document based on your recent experiences do you?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2515</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.105</wp:comment_author_IP>
<wp:comment_date>2009-05-31 12:29:14</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 10:29:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Peter.
I guess you tried building the NH trunk using MSBuild. 
That doesn't work. Both NHibernate and Castle are using NAnt for their build scripts, so you just need to install NAnt and run the script.
I'll write a brief overview about installing NAnt and Rake (Rake is the build system for Fluent NHibernate).

Btw.. If you just need the current trunk you'll find it in my library package.

greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2522</wp:comment_id>
<wp:comment_author><![CDATA[Stephen Pope]]></wp:comment_author>
<wp:comment_author_email>emargee@googlemail.com</wp:comment_author_email>
<wp:comment_author_url>http://ultramagnus.org</wp:comment_author_url>
<wp:comment_author_IP>195.188.238.252</wp:comment_author_IP>
<wp:comment_date>2009-06-02 16:26:06</wp:comment_date>
<wp:comment_date_gmt>2009-06-02 14:26:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I had similar pain with Fluent NHibernate .. I grabbed the latest build of Castle to get the NHibernate Facility from the castle TeamCity build server (which is built against NH 2.1.0.1003) .. so this wouldnt work with FluentNH. So I grabbed the source of  FluentNH and dropped in the NH 2.1.0.1003 Dll .. I found that some types like Oracle9 =&gt; Oracle9i had been renamed and an Execute method now had one less argument (which I couldnt work out which one had been removed !) .. so I had to abandon FluentNH until Ive got time to work out what that removed param was :D]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2523</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.131</wp:comment_author_IP>
<wp:comment_date>2009-06-02 17:33:29</wp:comment_date>
<wp:comment_date_gmt>2009-06-02 15:33:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Stephen,
yes I had those troubles too. They changed something in their API but I could fix it and recompile.

The new BuildSchema method looks like this:
new SchemaExport(configuration)
                .Execute(script, true, false, session.Connection, null);

I didn't want to post a patch with the changes since I don't know how they did it so they can compile against 2.1 and 1.2 (some rake magic I guess)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4088</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; The fastest way to install dotless : nubular (nu)!]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/08/25/the-fastest-way-to-install-dotless-nubular-nu/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-08-25 10:51:01</wp:comment_date>
<wp:comment_date_gmt>2010-08-25 08:51:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] you know that dependency management in the .NET open source space really sucks? For a long time have we been looking at Ruby Gems in envy of the ease of use and simplicity, [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>fluentnhibernatewithcastle</title>
<link>http://www.tigraine.at/2009/05/30/running-from-trunks-can-be-tough/fluentnhibernatewithcastle/</link>
<pubDate>Sat, 30 May 2009 12:28:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/fluentnhibernatewithcastle.7z</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[Fluent NHibernate with Castle Assembly package]]></excerpt:encoded>
<wp:post_id>540</wp:post_id>
<wp:post_date>2009-05-30 14:28:18</wp:post_date>
<wp:post_date_gmt>2009-05-30 12:28:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fluentnhibernatewithcastle</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>539</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/fluentnhibernatewithcastle.7z</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/fluentnhibernatewithcastle.7z</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Moving to Mercurial</title>
<link>http://www.tigraine.at/2009/05/30/moving-to-mercurial/</link>
<pubDate>Sat, 30 May 2009 12:36:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Subversion]]></category>

		<category domain="category" nicename="subversion"><![CDATA[Subversion]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=543</guid>
<description></description>
<content:encoded><![CDATA[<p>I feel like I’m constantly falling behind on stuff I want to post about but don’t get around to. One of which is the version control system Mercurial I have been using now for almost 4 months and loving ever since.    <br />Since Google just decided to enable <a href="http://google-opensource.blogspot.com/2009/05/support-for-mercurial-now-available-for.html">Mercurial on Google Code</a> I figured it’s a great time to write about it.</p>  <p>What is Mercurial?    <br />I’ll quote the <a href="http://bitbucket.org/help/GettingStartedWithMercurial">getting started article</a> from Bitbucket:</p>  <blockquote>   <h5>Introduction</h5>    <p>Mercurial is a distributed version control system, or DVCS for short. It is in the ranks of Git and Bazaar, leading a new paradigm of working with version control.</p> </blockquote>  <blockquote>   <h5>Philosophy</h5>    <p>This new paradigm of distributed versioning allows for several things that centralized development does not. Specifically, it provides:</p>    <ol>     <li>Allows commits/logs even when working offline </li>      <li>Drastic increase in speed for most operations </li>      <li>Ability for anyone to have their own copy of a project, and continue work without explicit &quot;commit access&quot; </li>      <li>No requirement to publish changes </li>      <li>No need to set up a server for version controlling things (self-contained) </li>   </ol> </blockquote>  <p>So, it’s like your&#160; own private version control system. Nobody can mess with it, you own it.    <br />Which is great, I mean: How often has a fellow coworker submitted something to your tree that made your code break? Or how often did you update before a commit just to see that the update breaks something (and your changes weren’t commited, so you’re at the mercy of merges)?</p>  <p>What also rocks is it’s simplicity. Mercurial needs no server, so even on my little pet projects I can leverage the power of a SCM system without the headache around setting up something in a central place. </p>  <p>What most people though fail to understand is that the centralized model does also mean that you need to share your private changes with the world at some time.    <br />And while doing so on a shared filesystem is very easy (when sharing with a coworker for example), doing so over the wire is non-trivial as it would require you setting up a server somewhere. </p>  <p>And that’s how I learned to love <a href="http://bitbucket.org/">Bitbucket</a>:</p>  <blockquote>   <p>Bitbucket's aim is to compensate for this while maintaining the flexibility and benefits of DVCS. It does this firstly by providing a centralized location for a repository which provides a sharing-point for one or more developers to grow their code base. Secondly, it provides a set of tools that ease development and sharing of a code with the rest of the world.</p> </blockquote>  <p>Bitbucket is free and gives you <u>150mb of disk space</u>, an <u>issue tracker</u> and a <u>wiki</u> for each of your projects. While the limitation is that only one project/repository per account can be private (not open source), there is no limit on how many public repositories you can create.</p>  <p>I suggest reading the <a href="http://bitbucket.org/help/GettingStartedWithMercurial">guides</a> on Bitbucket (<a href="http://hgbook.red-bean.com/">or the book</a>) on how HG differs from SVN and how the usual workflow looks like.     <br />Also I suggest installing TortoiseHg, this will install all the hg command-line as well as a nice shell integrated GUI like we are all used to from TortoiseSVN.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>543</wp:post_id>
<wp:post_date>2009-05-30 14:36:42</wp:post_date>
<wp:post_date_gmt>2009-05-30 12:36:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>moving-to-mercurial</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2516</wp:comment_id>
<wp:comment_author><![CDATA[Essential tools for .NET Developers | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/31/essential-tools-for-net-developers/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-31 14:46:15</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 12:46:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] - Same idea as with TortoiseSVN but for Mercurial, but it installs the hg binaries so you can use hg from the command [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3359</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; imagineClub Website source has moved to GitHub]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/09/11/imagineclub-website-source-has-moved-to-github/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-09-11 00:22:04</wp:comment_date>
<wp:comment_date_gmt>2009-09-10 22:22:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] have been using Mercurial as my SCM of choice for quite some time now, and I’ve been loving it ever since. Working with a DVCS is a pleasure [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Essential tools for .NET Developers</title>
<link>http://www.tigraine.at/2009/05/31/essential-tools-for-net-developers/</link>
<pubDate>Sun, 31 May 2009 12:46:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/31/essential-tools-for-net-developers/</guid>
<description></description>
<content:encoded><![CDATA[<p><font style="background-color: #ffffff">I always thought that I am up and running the moment Visual Studio is installed on a machine.      <br />Unfortunately, life isn’t that easy any more and I thought it might be interesting to share what I consider essential from my toolbox.</font></p>  <h4>IDEs </h4>  <ol>   <li>Visual Studio 2008</li>    <li><a href="http://www.jetbrains.com/resharper/">Resharper 4.5</a></li>    <li><a href="http://notepad-plus.sourceforge.net/de/site.htm">Notepad++</a></li> </ol>  <p>Although some people say they can work with other IDEs in .NET, I consider Visual Studio a absolute necessity. Not so much for the Studio itself but as a shell for Resharper, the very best tool I have yet come across. It’s so damn convenient and increases productivity by such a margin that <a href="http://twitter.com/Tigraine/status/1948364216">I simply can’t use Visual Studio</a> without it any more. Although Resharper isn’t free, I strongly suggest you try it out for 30 days. I feel it’s a good investment.</p>  <p>And Notepad++ is one of many great simple editors that make editing and reviewing of files easy.</p>  <h5>Source Control</h5>  <p>If you plan on working with open source tools, be prepared to bring their tools to the party. Nothing is worse than needing some source and not being able to access the SCM.   <br />I usually install the following:</p>  <ol>   <li><a href="http://tortoisesvn.tigris.org/">TortoiseSVN</a> - Subversion right from the Explorer right click menu. Very good and very mature SVN client. </li>    <li><a href="http://www.sliksvn.com/en/download">SlikSVN</a> - Unfortunately TortosieSVN doesn’t install SVN binaries, so if you want to be able to run SVN from the command line you better get the conveniently packed SlikSVN subversion binaries.</li>    <li><a href="http://bitbucket.org/tortoisehg/stable/downloads/">TortoiseHG</a> - Same idea as with TortoiseSVN but for <a href="http://www.tigraine.at/2009/05/30/moving-to-mercurial/">Mercurial</a>, but it installs the hg binaries so you can use hg from the command line.</li>    <li><a href="http://code.google.com/p/msysgit/">msysGit</a> - A GUI for git together with a custom git command line that emulates a *nix shell for git operations. Not so convenient as HG, but Fluent Nhibernate and most tools by Jon Skeet use git.</li> </ol>  <h5>Build tools</h5>  <p>Getting the source is usually not enough, sometimes you need to be able to build it too.   <br />While most projects can be built by simply starting up Visual Studio and building, others require you to run a build script like NAnt. </p>  <ol>   <li><a href="http://nant.sourceforge.net/">NAnt</a> - NAnt is a free .NET build tool. In theory it is kind of like make without make's wrinkles. In practice it's a lot like <a href="http://ant.apache.org/">Ant</a>.</li> </ol>  <p>Download the latest NAnt release and unpack the zip to some convenient folder. Then create a file called nant.bat in your C:\windows folder with the following content:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d4eed943-fa7b-4b77-b7bb-d23acef4d132" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
@echo off
"C:\Program Files\NAnt\bin\NAnt.exe" %*
</pre></div>

<p>(Obviously you should change the path to your NAnt executable). 
  <br />Now whenever you encounter a project with a *.build file you can simply start a command line window and type <em>nant</em> to start building the source (that’s how you build the the Castle Project and NHibernate).</p>

<ol>
  <li><a href="http://www.ruby-lang.org/de/downloads/">Rake</a> - I don’t use rake, but I sure know Fluent NHibernate does. Rake is the build tool used for Ruby projects, but it’s gaining popularity. On windows installing it was rather simple, just get the Ruby One-Click Installer from their downloads page and install it with gems (gems is used for installing extensions and libaries).</li>
</ol>

<p>If none of the above apply, usually every project has a howtobuild.txt that instructs you on how to run the build.</p>

<h5>Database</h5>

<p>Hugely depends on what tools you use. But it never hurts to have the following:</p>

<ol>
  <li><a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=08e52ac2-1d62-45f6-9a4a-4b76a8564a2b&amp;displaylang=en">Sql Server 2008 Management Studio Express</a> - It’s free, and allows you to run queries and create databases. Nothing fancy as reporting or real server administration, but what developer really wants to do a DBAs job?</li>

  <li><a href="http://nhprof.com/">NHProf</a> - If you are using NHibernate for your data access needs (and I believe you should), you will find this tool well worth it’s money. It’s by no means cheap, but it will watch all your database queries, analyze them and point out possible performance bottlenecks for you.</li>
</ol>

<h5>Others</h5>

<ol>
  <li><a href="http://www.sourcegear.com/diffmerge/downloads.html">Sourcegear DiffMerge</a> - A very good and free diff tool in case the ones in TortoiseSVN don’t cut it.</li>

  <li><a href="http://www.red-gate.com/products/reflector/">.NET Reflector</a> - Sometimes you don’t have access to the source code, or you don’t want to get the source just to look at one file. 

    <br />.NET Reflector allows you to look at all the types inside an assembly, and if it’s not obfuscated it allows you to decompile it into your language of choice and look at the code (you could decompile VB programs into C# for example).</li>
Please note that there are myriads of other tools lists out there, and if your are a web developer you’ll need some more tools for debugging HTML/JS. The above are the ones I consider essential to do .NET desktop/backend development when using open source libraries as Castle or NHibernate.</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>545</wp:post_id>
<wp:post_date>2009-05-31 14:46:08</wp:post_date>
<wp:post_date_gmt>2009-05-31 12:46:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>essential-tools-for-net-developers</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2517</wp:comment_id>
<wp:comment_author><![CDATA[.NET Unit testing tools | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/05/31/net-unit-testing-tools/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-05-31 23:10:28</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 21:10:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] posting my tools list today I got asked why I didn’t list any testing frameworks. Obviously, I love testing, so why no [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/05/31/net-unit-testing-tools/imagepng-2/</link>
<pubDate>Sun, 31 May 2009 21:10:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/05/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>546</wp:post_id>
<wp:post_date>2009-05-31 23:10:23</wp:post_date>
<wp:post_date_gmt>2009-05-31 21:10:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>547</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/05/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"553";s:6:"height";s:3:"282";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:18:"2009/05/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image5-300x152.png";s:5:"width";s:3:"300";s:6:"height";s:3:"152";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>.NET Unit testing tools</title>
<link>http://www.tigraine.at/2009/05/31/net-unit-testing-tools/</link>
<pubDate>Sun, 31 May 2009 21:10:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/05/31/net-unit-testing-tools/</guid>
<description></description>
<content:encoded><![CDATA[<p>After posting <a href="http://www.tigraine.at/2009/05/31/essential-tools-for-net-developers/">my tools list</a> today I got asked why I didn’t list any testing frameworks. Obviously, <a href="http://www.tigraine.at/category/programmierung/testing/">I love testing</a>, so why no testing tools like Gallio, NUnit or <a href="http://testdriven.net/">Testdriven.NET</a> etc?     <br />The answer is rather simple, Resharper runs my tests for me.</p>  <p>By default Resharper can run NUnit tests, if you install <a href="http://www.mbunit.com/">Mbunit</a> it can run those too, and if you just copy over the resharper support library from the <a href="http://xunitcontrib.codeplex.com/">XUnit contrib project</a> to your Resharper/Plugins directory it can also run XUnit.</p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="282" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/05/image5.png" width="553" border="0" /></p>  <p>Also, almost all open source frameworks out there include their test runner in their code tree, so you don’t need to worry about what exotic test frameworks are out there, you’ll be provided with the appropriate runners.</p>  <p>On the testing framework side I recently (~4 months) switched over to xUnit as it’s syntax felt much better than that of xUnit or Mbunit.    <br />Also I am currently looking into maybe using a BDD testing framework like <a href="http://github.com/machine/machine.specifications/tree/master">MSpec</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>547</wp:post_id>
<wp:post_date>2009-05-31 23:10:24</wp:post_date>
<wp:post_date_gmt>2009-05-31 21:10:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>net-unit-testing-tools</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2518</wp:comment_id>
<wp:comment_author><![CDATA[Alexander Groß]]></wp:comment_author>
<wp:comment_author_email>agross@therightstuff.de</wp:comment_author_email>
<wp:comment_author_url>http://therightstuff.de/</wp:comment_author_url>
<wp:comment_author_IP>88.74.162.28</wp:comment_author_IP>
<wp:comment_date>2009-05-31 23:40:46</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 21:40:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,

MSpec is not built on top of xUnit, but uses xUnit (or NUnit, for that matter) for asserting the "ShouldXxx" extension methods.

MSpec could be rebuilt using xUnit, though.

Alex]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2519</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.105</wp:comment_author_IP>
<wp:comment_date>2009-06-01 00:19:05</wp:comment_date>
<wp:comment_date_gmt>2009-05-31 22:19:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, sorry about that. I somehow thought MSpec is built ontop of xUnit. I'll correct the post right away.

Must have mixed it up with the BDD extension for xUnit: http://code.google.com/p/xunit-bdd-extensions/

Thanks for pointing this out!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Named dependency lookup – Pandora</title>
<link>http://www.tigraine.at/2009/06/03/named-dependency-lookup-pandora/</link>
<pubDate>Wed, 03 Jun 2009 11:01:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/03/named-dependency-lookup-pandora/</guid>
<description></description>
<content:encoded><![CDATA[<p>One rather essential feature for a DI container is to be able to lookup components by some key. For example retrieving a specific IController class based on the controller name specified by the request.</p>  <p>So the usual use case for the above looks like this:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9c0291a9-1dac-4a4b-ad6b-bcb2409d4bd4" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var store = new ComponentStore();
store.Add&lt;IRepository, MemoryRepository&gt;("memory.repository");
store.Add&lt;IRepository, SqlRepository&gt;("db.repository");
var container = new PandoraContainer(store);

var service = container.Resolve&lt;IRepository&gt;("db.repository");
</pre></div>

<p>Now, there is another thing too: What if I want one controller to use one special repository out of the registered ones:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:fba531aa-f450-458c-b68d-941e11732d50" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
var store = new ComponentStore();
store.Add&lt;IRepository, SqlRepository&gt;("db.repository");
store.Add&lt;IRepository, MemoryRepository&gt;("memory.repository");
store.Add&lt;Controller, Controller&gt;()
&#160;&#160;&#160;&#160;.Parameters("repository").Eq("memory.repository");
var container = new PandoraContainer(store);

var controller = container.Resolve&lt;Controller&gt;();
</pre></div>

<p>Well, yes Pandora can do those kinds of things too. </p>

<p>If you know Windsor’s Fluent interface .Parameters().Eq() may sound familiar to you. That’s intentionally. I like the Windsor Fluent syntax.</p>

<p>What I really underestimated was how to do the fluent interface. It’s not terribly hard, but it’s takes some tinkering ;).</p>

<p>You can find the source to <a href="http://bitbucket.org/Tigraine/pandora-container/">Pandora at the project website</a> on Bitbucket.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>549</wp:post_id>
<wp:post_date>2009-06-03 13:01:11</wp:post_date>
<wp:post_date_gmt>2009-06-03 11:01:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>named-dependency-lookup-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244027161</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2531</wp:comment_id>
<wp:comment_author><![CDATA[Common Service Locator adapter for Pandora | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-06-04 15:00:46</wp:comment_date>
<wp:comment_date_gmt>2009-06-04 13:00:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] CSLAdapter class has been there for quite some time now. But since Pandora only recently got the named lookups feature I never finished [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Common Service Locator adapter for Pandora</title>
<link>http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/</link>
<pubDate>Thu, 04 Jun 2009 12:59:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/</guid>
<description></description>
<content:encoded><![CDATA[<p>In case you haven’t heard. Some time ago Microsoft sat with most authors of leading IoC containers and defined a common interface for Dependency Injection / Service Location. You can get all the relevant information about the Common Service Locator through reading <a href="http://codebetter.com/blogs/glenn.block/archive/2008/10/02/iservicelocator-a-step-toward-ioc-container-service-locator-detente.aspx">Glenn Block</a>, <a href="http://ayende.com/Blog/archive/2008/10/02/the-common-service-locator-library.aspx">Ayende Rahien</a> or <a href="http://www.tavaresstudios.com/Blog/post/Announcing-The-IServiceLocator-interface.aspx">Chris Travares</a> and you can download it from it’s <a href="http://commonservicelocator.codeplex.com/">Codeplex site</a>. There is a comprehensive <a href="http://commonservicelocator.codeplex.com/Wiki/View.aspx?title=API%20Reference">API reference</a> in their wiki too.</p>  <p>Ayende sums the purpose of the CSL up pretty well:</p>  <blockquote>   <p>The idea is based off a post that <a href="http://codebetter.com/blogs/jeremy.miller/archive/2008/08/16/it-s-time-for-ioc-container-detente.aspx">Jeremy Miller</a> had about a month ago, having a common, shared interface across several IoC implementation. That would allow library authors to make use of the benefits of a container without taking a dependency on a particular implementation.</p>    <p>The alternative for that is to each library to create its own abstraction layer. A good example of that is NServiceBus' IBuilder interface, or ASP.NET MVC's IControllerFactory. That is just annoying, especially if you are integrating more than a single such framework.</p> </blockquote>  <p>In <a href="http://www.tigraine.at/2009/05/21/my-very-own-inversion-of-control-container/">Pandora</a> I aimed for CSL compliance from the beginning, and the CSLAdapter class has been there for quite some time now. But since Pandora only recently got the <a href="http://www.tigraine.at/2009/06/03/named-dependency-lookup-pandora/">named lookups feature</a> I never finished it. </p>  <p>Until now. Today I finally implemented the <a href="http://bitbucket.org/Tigraine/pandora-container/src/tip/src/Pandora/CommonServiceLocatorAdapter.cs">CommonServiceLocatorAdapter</a> that (for me) somehow “verifies” that Pandora supports most mandatory lookup features needed from a DI container. </p>  <p>On the implementation side: I first tried to implement IServiceLocator directly, until I discovered the abstract ServiceLocatorImplBase class that wraps all of the overloads and generic/nongeneric stuff, saving you a bunch of boilerplate code.</p>  <p>Coming up next in Pandora will be component lifestyles, forwards and then maybe DLR configuration.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>553</wp:post_id>
<wp:post_date>2009-06-04 14:59:02</wp:post_date>
<wp:post_date_gmt>2009-06-04 12:59:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>common-service-locator-adapter-for-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3394</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Pandora used in dotless and moved to GitHub]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/11/23/pandora-used-in-dotless-and-moved-to-github/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-11-23 19:19:07</wp:comment_date>
<wp:comment_date_gmt>2009-11-23 17:19:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] chose to implement Pandora through the Common Service Locator interface by Microsoft, so if we ever feel restricted by Pandora we can easily switch to a more [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Component Lifestyles and Fluent Interface for Pandora</title>
<link>http://www.tigraine.at/2009/06/05/component-lifestyles-and-fluent-interface-for-pandora/</link>
<pubDate>Fri, 05 Jun 2009 16:59:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/05/component-lifestyles-and-fluent-interface-for-pandora/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just finished refactoring <a href="http://www.tigraine.at/category/programmierung/projects/pandora/">Pandora</a> to have a much cleaner configuration and also to enable lifestyles for certain components.</p>  <p>Until now, Pandora was not able to save one service after it’s initial activation. Every call to container.Resolve() would instantiate a new service with new dependencies etc. It may be of interest to some of you that this is the exact opposite of the default lifestyle Windsor sets for it’s components. So I obviously wanted to change that. </p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e8d0f4ac-9b64-4e49-914e-95c403f9538d" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void ActivationHappensOnlyOnceForSingletonComponents()
{
&#160;&#160;&#160;&#160;var store = new ComponentStore();
&#160;&#160;&#160;&#160;var registration = store.Add&lt;IService, ClassWithNoDependencies&gt;("test");
&#160;&#160;&#160;&#160;registration.Lifestyle = ComponentLifestyles.Singleton;

&#160;&#160;&#160;&#160;var container = new PandoraContainer(store);

&#160;&#160;&#160;&#160;var service = container.Resolve&lt;IService&gt;("test");
&#160;&#160;&#160;&#160;var service2 = container.Resolve&lt;IService&gt;("test");

&#160;&#160;&#160;&#160;Assert.Same(service, service2);
}
</pre></div>

<p>All “logic” concerning a lifestyle is completely enclosed in the Lifestyle classes so creating a new lifestyle for Pandora should be rather simple in the future.</p>

<p>But the real big news (and the real big change) is the changed configuration. 
  <br />At first I tried to bake a fluent interface into the Registration (the class Pandora uses to represent one registered service) to allow <a href="http://bitbucket.org/Tigraine/pandora-container/src/ea2ff22d7108/src/Pandora.Tests/FluentInterface.cs">nice parameter syntax</a>. </p>

<p>The idea was good, but it led to some problems with the interface and also made it much harder to consume those registrations inside the container.</p>

<p>I then decided to rip everything out and revert the registration to a dumb value type that only holds information that can be easily serialized/deserialized if needed. 
  <br />So that the fluent interface would generate a value type, instead of trying to be one with all it’s faults. Doing so opened up a whole lot of new possibilities in terms of API for me, and so I ended up with a quite pleasant interface like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c5837ab0-cc5d-41a0-beb8-0157f6bb4f19" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
store.Register(p =&gt; p.Service&lt;IService&gt;("db.service")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor&lt;ClassWithNoDependencies&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Parameters("hello").Set("world")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Lifestyle.Transient()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Parameters("foo").Set("bar"));
</pre></div>

<p>As before, this looks intentionally familiar to Windsor users, since I believe Windsor’s interface is really good and makes a lot of sense when reading. 
  <br />What I improved upon (at least, I believe so) was to get away from the static Component class Windsor uses to bootstrap the Fluent registration, but to use a closure that provides Intellisense right from the beginning.</p>

<p>Meaning, in Windsor there is no Intellisense when you Write: container.Register() .. From the signature you can only see that you need an array of IRegistration while nobody tells you that you need to use that static class that’s buried down in Castle.MicroKernel.Registration, while writing p. instantly brings up all registration options in Pandora.</p>

<p>Next in line is improving the fluent interface even further to allow for auto-configuration (eg. take Assembly A and register all Types in there). </p>

<p>Another challenge I want to tackle with Pandora is externalizing the configuration. Fluent interfaces are awesome for developers (since they allow easy refactoring), but the real power of a DI container also comes from the ability to change the configuration without recompiling the app. Usually all containers solve this through XML, so I’d like to try a new approach here and am currently thinking about making Pandora read the configuration from a IronPython script. That would allow me to consume the Fluent Interface without recompiling the application and paying the XML bracket tax while retaining the flexibility of just opening up a text file to change my configuration.</p>

<p>As usually, you can find the source to <a href="http://bitbucket.org/Tigraine/pandora-container/">Pandora at the project website</a> on Bitbucket.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>555</wp:post_id>
<wp:post_date>2009-06-05 18:59:58</wp:post_date>
<wp:post_date_gmt>2009-06-05 16:59:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>component-lifestyles-and-fluent-interface-for-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Good ideas worth spreading: Guards</title>
<link>http://www.tigraine.at/2009/06/06/good-ideas-worth-spreading-guards/</link>
<pubDate>Sat, 06 Jun 2009 10:28:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/06/good-ideas-worth-spreading-guards/</guid>
<description></description>
<content:encoded><![CDATA[<p>It’s amazing how much smarter you can become by simply looking at other people’s code. So, today I spent almost half the morning looking at different test frameworks from the TDD/BDD world looking for cool tricks I haven’t thought of (I examined <a href="http://github.com/machine/machine.specifications/tree/master">MSpec</a>, <a href="http://www.codeplex.com/NBehave">NBehave</a>, <a href="http://nspec.tigris.org/">NSpec</a> and <a href="http://www.codeplex.com/xunit">xUnit</a>). One of those interesting little tricks (trivial at best, but valuable) is the following <a href="http://xunit.codeplex.com/SourceControl/changeset/view/32566#231174">I found in xUnit’s Guard.cs</a>: </p>  <blockquote>   <p>Guard class, used for guard clauses and argument validation</p> </blockquote>  <p>Imagine the following method:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5eeb0264-1790-4cb8-bffd-138dda8c8cd4" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool Authenticate(string username, string password)
{
&#160;&#160;&#160;&#160;return username == "daniel" && password == "tigraine";
}
</pre></div>

<p>Let’s say my specification for this method says: “input username and password can’t be null and should return a ArgumentNullException”. Reasonable, since we never trust input. So, usually I’d create guard clauses at the top of my method to protect me from said bad input:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:21b79198-241e-4539-915e-ab3eb03c6681" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool Authenticate(string username, string password)
{
&#160;&#160;&#160;&#160;if (username == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new ArgumentNullException(username);
&#160;&#160;&#160;&#160;if (password == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new ArgumentNullException(password);

&#160;&#160;&#160;&#160;return username == "daniel" && password == "tigraine";
}
</pre></div>

<p>I always thought about this as rather readable and nice to work with, until I saw what xUnit did in <a href="http://xunit.codeplex.com/SourceControl/changeset/view/32566#231174">Guard</a>.cs, allowing me to shorten the above to a simple:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f64f1c87-99ed-46c9-aa93-fc68c9a8fab2" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool Authenticate(string username, string password)
{
&#160;&#160;&#160;&#160;Guard.ArgumentNotNull("username", username);
&#160;&#160;&#160;&#160;Guard.ArgumentNotNull("password", password);

&#160;&#160;&#160;&#160;return username == "daniel" && password == "tigraine";
}
</pre></div>

<p>I still believe this can be improved upon, maybe making it only one argument instead of two, but for now this is way better than what I used to write before.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>557</wp:post_id>
<wp:post_date>2009-06-06 12:28:31</wp:post_date>
<wp:post_date_gmt>2009-06-06 10:28:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>good-ideas-worth-spreading-guards</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2545</wp:comment_id>
<wp:comment_author><![CDATA[Brad Wilson]]></wp:comment_author>
<wp:comment_author_email>dotnetguy@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://bradwilson.typepad.com/</wp:comment_author_url>
<wp:comment_author_IP>71.121.200.25</wp:comment_author_IP>
<wp:comment_date>2009-06-06 16:49:09</wp:comment_date>
<wp:comment_date_gmt>2009-06-06 14:49:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you target 3.5, you could write a guard which used expressions, and then you could evaluate the expression in order to fill things out. Unfortunately, the syntax ends up a little wonky, but at least you're not repeating yourself:

Guard.ArgumentNotNull(() =&gt; username);

You could also do the same thing with complex expressions:

Guard.Precondition(() =&gt; username.Length &gt; 10);

and when you throw the exception, it can even contain the actual condition code, extracted from the expression.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2546</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.131</wp:comment_author_IP>
<wp:comment_date>2009-06-06 17:42:57</wp:comment_date>
<wp:comment_date_gmt>2009-06-06 15:42:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Brad, thanks for your comment.

My first instinct was also to throw some of 3.5s syntactic sugar at the problem, but I then came up with a much simpler solution that isn't too esoteric but still cuts down on the typing:
Resharper Live template.

I simply created a Resharper live template with the following content:

Guard.ArgumentNotNull("$parametername$", $parametername$);
$END$

that way I only need to type the parametername once and it will still be there twice. Not perfect, but does the trick.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2547</wp:comment_id>
<wp:comment_author><![CDATA[DRY Guard clause performance | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/06/06/dry-guard-clause-performance/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-06-06 19:22:40</wp:comment_date>
<wp:comment_date_gmt>2009-06-06 17:22:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Wilson left me an inspiring comment on my post about his Guard class that I immediately tried out: If you target 3.5, you could write a guard which used expressions, [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/06/dry-guard-clause-performance/imagepng-2/</link>
<pubDate>Sat, 06 Jun 2009 17:21:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>558</wp:post_id>
<wp:post_date>2009-06-06 19:21:04</wp:post_date>
<wp:post_date_gmt>2009-06-06 17:21:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>559</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"131";s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:17:"2009/06/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x131.png";s:5:"width";s:3:"150";s:6:"height";s:3:"131";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x81.png";s:5:"width";s:3:"300";s:6:"height";s:2:"81";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>DRY Guard clause performance</title>
<link>http://www.tigraine.at/2009/06/06/dry-guard-clause-performance/</link>
<pubDate>Sat, 06 Jun 2009 17:21:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=559</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://bradwilson.typepad.com/">Brad Wilson</a> left me an inspiring comment on my <a href="http://www.tigraine.at/2009/06/06/good-ideas-worth-spreading-guards/">post about his Guard class</a> that I immediately tried out:</p>  <blockquote>   <p>If you target 3.5, you could write a guard which used expressions, and then you could evaluate the expression in order to fill things out. Unfortunately, the syntax ends up a little wonky, but at least you’re not repeating yourself:</p>    <p>Guard.ArgumentNotNull(() =&gt; username);</p>    <p>You could also do the same thing with complex expressions:</p>    <p>Guard.Precondition(() =&gt; username.Length &gt; 10);</p>    <p>and when you throw the exception, it can even contain the actual condition code, extracted from the expression.</p> </blockquote>  <p>I went off to implement this using an Expression and ended up with the following ArgumentNotNull method:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:15c7cecb-4953-4609-850a-3d699ab98d1e" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public static void ArgumentNotNull(Expression&lt;Func&lt;object&gt;&gt; action)
{
&#160;&#160;&#160;&#160;var result = action.Compile()();
&#160;&#160;&#160;&#160;if (result == null)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//TODO: Extract memberinfo name from expression
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new ArgumentException();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>One thing to keep in mind is that guard clauses usually end up being in production code, and not in test code. So performance isn’t neglect able. Since action.Compile() clearly indicates that some compiling overhead happens to retrieve the value, I thought it might be interesting to benchmark it. Just in case it might still be neglect able.</p>

<p>So, I wrote the following tester:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:69f5101c-dfc4-4e0f-86ff-5002073d03ad" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
using System;
using System.Diagnostics;
using System.Linq;

public class Program
{
&#160;&#160;&#160;&#160;private static int passes = 10000;

&#160;&#160;&#160;&#160;private static void Main(string[] args)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var runs = 5;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Console.WriteLine("{0} ms to run normal", AverageExecutionTime(RunSimple, runs));
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Console.WriteLine("{0} ms to run with expression", AverageExecutionTime(RunExpressions, runs));
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Console.ReadLine();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static long AverageExecutionTime(Action delegateToWatch, int runs)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var lapTimes = new long[runs];
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (var i = 0; i &lt; runs; i++)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lapTimes[i] = GetExecutiontime(delegateToWatch);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return lapTimes.Sum(p =&gt; p)/runs;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static long GetExecutiontime(Action delegateToWatch)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var stopwatch = new Stopwatch();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stopwatch.Start();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;delegateToWatch();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stopwatch.Stop();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return stopwatch.ElapsedMilliseconds;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void RunSimple()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (int i = 0; i &lt; passes; i++)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;string user = "test";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Guard.ArgumentNotNull("user", user);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;GC.Collect();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;private static void RunExpressions()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (int i = 0; i &lt; passes; i++)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;string user = "test";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Guard.ArgumentNotNull(() =&gt; user);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;GC.Collect();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>As you can see, I rerun the test 4 times doing the NotNull test only 10000 times (always running the non-exceptional path), always forcing garbage collection between passes. </p>

<p>The results were stunning:</p>

<p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image.png" width="484" height="131" /> </p>

<p>I ran the test on my 2x3.16 Ghz Intel with 8gb Ram running Windows Vista x64 with no debugger attached and it turned out the expression tree compilation took almost 1 ms per pass. (Without garbage collection normal runs took 0 ms)</p>

<p>Now one could argue, no sane person would place those guards inside some tight loop. But once you run into recursive method calls you may end up creating a performance bottleneck.</p>

<p>Now, since I’m a lazy guy, I ended up writing a Resharper Live template that saves me the repetitive typing:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0dedebc9-34c5-4f07-bdad-4e27d39b1cf3" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
Guard.ArgumentNotNull("$parametername$", $parametername$);
$END$
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>559</wp:post_id>
<wp:post_date>2009-06-06 19:21:04</wp:post_date>
<wp:post_date_gmt>2009-06-06 17:21:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dry-guard-clause-performance</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244308955</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2549</wp:comment_id>
<wp:comment_author><![CDATA[Brad Wilson]]></wp:comment_author>
<wp:comment_author_email>dotnetguy@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://bradwilson.typepad.com/</wp:comment_author_url>
<wp:comment_author_IP>71.121.200.25</wp:comment_author_IP>
<wp:comment_date>2009-06-07 03:16:17</wp:comment_date>
<wp:comment_date_gmt>2009-06-07 01:16:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[A lack of caching is what's hurting you here. Read up for a caching version of Compile here:

http://tips.x-tensive.com/2009/05/fast-expression-compilation.html]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Injecting instances into Pandora</title>
<link>http://www.tigraine.at/2009/06/07/injecting-instances-into-pandora/</link>
<pubDate>Sun, 07 Jun 2009 08:00:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=562</guid>
<description></description>
<content:encoded><![CDATA[<p>There are times when your services depend on an object you can’t construct yourself. One obvious example being the HttpContext in most ASP.NET applications.</p>  <p>So all DI containers have some way to inject an instance into the container to cover that. <a href="http://www.tigraine.at/category/programmierung/projects/pandora/">Pandora</a> has joined them yesterday. It’s baked into the fluent interface and the ComponentStore:</p>  <p>Fluent:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f6196a40-943f-4bd0-be15-b23ce07d8259" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var store = new ComponentStore();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var instance = new ClassWithNoDependencies();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;store.Register(p =&gt; p.Service&lt;IService&gt;("test")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Instance(instance));
</pre></div>

<p>Conventional:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:52f2d349-f592-4144-a724-e39500c12964" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var store = new ComponentStore();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var instance = new ClassWithNoDependencies();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;store.AddInstance&lt;IService&gt;(instance);
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>562</wp:post_id>
<wp:post_date>2009-06-07 10:00:26</wp:post_date>
<wp:post_date_gmt>2009-06-07 08:00:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>injecting-instances-into-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244314081</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Generic Registrations for Pandora</title>
<link>http://www.tigraine.at/2009/06/08/generic-registrations-for-pandora/</link>
<pubDate>Mon, 08 Jun 2009 12:36:04 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/08/generic-registrations-for-pandora/</guid>
<description></description>
<content:encoded><![CDATA[<p>Yesterday I finished <a href="http://bitbucket.org/Tigraine/pandora-container/wiki/FluentInterface">expanding the Pandora wiki</a> a bit on how to configure the container and while doing so I made one discovery:</p>  <p><strong>I never tested if Pandora can handle generic types!!</strong></p>  <p>Wow, why didn’t I think about that. One of the most important scenarios fully untested. Thank god, simple generic registration already worked:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:53699686-0cff-44f6-97aa-474f7185e86d" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void CanResolveSpecificGenericClass()
{
&#160;&#160;&#160;&#160;store.Register(p =&gt; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;p.Service&lt;GenericClass&lt;string&gt;&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor&lt;GenericClass&lt;string&gt;&gt;());

&#160;&#160;&#160;&#160;Assert.DoesNotThrow(() =&gt; container.Resolve&lt;GenericClass&lt;string&gt;&gt;());
}
</pre></div>

<p>The moment you define what generic type you are using, a generic class is just a regular class that can be used like all the others.</p>

<p>Still, it sucks having to specify one class explicitly 5 times if I want 5 to use it with 5 types. So I set out to support the following scenario:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c523997f-3816-4084-9eb9-410f121fc35e" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact(Skip = "Not implemented yet")]
public void CanRegisterAndResolveRealGenericRequests()
{
&#160;&#160;&#160;&#160;store.Register(p =&gt; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;p.Generic(typeof(GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor(typeof(GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ForAllTypes());

&#160;&#160;&#160;&#160;Assert.DoesNotThrow(() =&gt; {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var resolve = container.Resolve&lt;GenericClass&lt;string&gt;&gt;();
&#160;&#160;&#160;&#160;});
}
</pre></div>

<p>I want the container to just know the generic and then figure out if the generic registration can satisfy my requested service. Since this would obviously require Reflection in the resolving part of Pandora, I shelved that feature for a maybe more useful one that at least eases some of the generic pain:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:d8713c42-e2ea-4dcc-b08a-ba8ac958ade6" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
store.Register(
&#160;&#160;&#160;&#160;p =&gt; p.Generic(typeof (GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .Implementor(typeof (GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .OnlyForTypes(typeof (string), typeof (int)));
</pre></div>

<p>This way I can specify in one registration what types I want the generic to serve and the Fluent interface will create a distinct registration for each type in .OnlyForTypes[]. This way I don’t need any reflection code in the resolving part of Pandora.
  <br />And: It’s already implemented.</p>

<p>You can find the source to <a href="http://bitbucket.org/Tigraine/pandora-container/">Pandora at the project website</a> on Bitbucket.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>564</wp:post_id>
<wp:post_date>2009-06-08 14:36:04</wp:post_date>
<wp:post_date_gmt>2009-06-08 12:36:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>generic-registrations-for-pandora</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2582</wp:comment_id>
<wp:comment_author><![CDATA[Pandora release 0.1 | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/06/16/pandora-release-01/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-06-16 16:35:52</wp:comment_date>
<wp:comment_date_gmt>2009-06-16 14:35:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] still have a pretty interesting wish list (Generics, Factory Methods, AutoConfiguration), but those features are all rather non-trivial and I feel [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Juggling generics</title>
<link>http://www.tigraine.at/2009/06/10/juggling-generics/</link>
<pubDate>Wed, 10 Jun 2009 15:30:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/10/juggling-generics/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve spent the last two days working on true generic registrations inside <a href="http://www.tigraine.at/category/programmierung/projects/pandora/">Pandora</a> to enable scenarios like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:73aa4680-2e43-445f-9ad0-0ef2f3c48290" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void CanResolveRealGenericAsSubdependency()
{
&#160;&#160;&#160;&#160;store.Register(p =&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; p.Service&lt;IService&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .Implementor&lt;ClassDependingOnGenericClass&gt;();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; p.Generic(typeof (GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .Implementor(typeof (GenericClass&lt;&gt;))
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .ForAllTypes();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; });
&#160;&#160;&#160;&#160;Assert.DoesNotThrow(() =&gt; container.Resolve&lt;IService&gt;());
}
</pre></div>

<p>Well, if you look at the <a href="http://bitbucket.org/Tigraine/pandora-container/changeset/535b9f3f9dba/">last changeset</a>, I apparently succeeded for the above example, but decided to revert the changes and <a href="http://bitbucket.org/Tigraine/pandora-container/changeset/7d72f5cc90d3/">start over fresh</a>. Generics are a difficult topic to tackle, and the current implementation feels too much like a hack to me. </p>

<p>But there are some things this failed experiment has taught me:</p>

<p>First: Generic types are just Types. And there are two subclasses of them:</p>

<ol>
  <li>GenericTypeDefinition – This one represents the generic with no supplied type argument. Eg: typeof(Service&lt;&gt;)&#160; Cannot be activated. </li>

  <li>GenericType – Represents the final type that can be treated like a normal type. Eg: typeof(Service&lt;string&gt;) </li>
</ol>

<p>So, how do you tell those 3 apart (the third being a normal non-generic)? 
  <br />Simple: Both generic types have the <a href="http://msdn.microsoft.com/en-us/library/system.type.isgenerictype.aspx">IsGenericType</a> property set to true and GenericTypeDefinition also has <a href="http://msdn.microsoft.com/en-us/library/system.type.isgenerictypedefinition.aspx">IsGenericTypeDefinition</a> set to true. </p>

<p>If you are faced with a GenericType, you can always extract the GenericTypeDefinition by calling <a href="http://msdn.microsoft.com/en-us/library/system.type.getgenerictypedefinition.aspx">GetGenericTypeDefinition()</a> (very useful if you try to compare types in some scenarios). 

  <br />The inverse can also be done (creating a GenericType from a definition) by calling <a href="http://msdn.microsoft.com/en-us/library/system.type.makegenerictype.aspx">MakeGenericType()</a>:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e3f4d34b-26d6-4e67-a613-9fddede8baa5" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var type = typeof (string);
Type genericType = typeof (GenericClass&lt;&gt;).MakeGenericType(type);
</pre></div>

<p></p>

<p>And, in case you want to know what the argument type (T part) of a generic type is you can use the <a href="http://msdn.microsoft.com/en-us/library/system.type.getgenericarguments.aspx">GetGenericArguments()</a> method to find out:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0dcf08a7-64f8-4842-89e0-6a001f22a568" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void ExtractGenericArgumentType()
{
&#160;&#160;&#160;&#160;var type = typeof (SuperGeneric&lt;string, int, long, float&gt;);
&#160;&#160;&#160;&#160;Type[] arguments = type.GetGenericArguments();
&#160;&#160;&#160;&#160;foreach (var argument in arguments)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Console.WriteLine(argument.Name);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p></p>

<p>The above produces the following: </p>

<blockquote>
  <p>String
    <br />Int32

    <br />Int64

    <br />Single</p>
</blockquote>

<p>Ps: Try this stuff out for yourself! Reflection is real fun and surely helped me understand some things better. Don’t let yourself be thrown off by comments like “Reflection is too slow, never use it” etc.. Reflection and dynamic activation can make your life much easier if you know how to use it!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>566</wp:post_id>
<wp:post_date>2009-06-10 17:30:59</wp:post_date>
<wp:post_date_gmt>2009-06-10 15:30:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>juggling-generics</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>RFC: Is a supplied factory method useful for an IoC container?</title>
<link>http://www.tigraine.at/2009/06/10/rfc-is-a-supplied-factory-method-useful-for-an-ioc-container/</link>
<pubDate>Wed, 10 Jun 2009 18:33:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/10/rfc-is-a-supplied-factory-method-useful-for-an-ioc-container/</guid>
<description></description>
<content:encoded><![CDATA[<p>I need your help.    <br />Does it make sense to have something like this in a DI container?</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:51c53fd2-2be2-44b8-a358-4cca9b8374ca" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void CanSupplyFactoryMethod()
{
&#160;&#160;&#160;&#160;store.Register(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;p =&gt; p.Service&lt;IService&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; .Factory(s =&gt; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Console.WriteLine("Creating type..");
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (SOME_STATIC_VAR == true)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; {
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return new ClassWithNoDependencies();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return new OtherClass();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; })
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;);
&#160;&#160;&#160;&#160;var service = container.Resolve&lt;IService&gt;();
&#160;&#160;&#160;&#160;Assert.IsType&lt;ClassWithNoDependencies&gt;(service);
}
</pre></div>

<p>The idea being, you can supply a function delegate (Func&lt;IPandoraContainer, T&gt;) to be executed when the service should be instantiated. This would make a rather interesting extensibility story, since I’d avoid having to build in all kinds of hard to find hooks to allow modification of the object creation. </p>

<p>Also, I’d like this delegate to be evaluated during runtime. This could enable me to resolve to another object if for example a network link is down etc.</p>

<p>Another obvious use for this would be to access classes that are present in the .NET BCL but can’t be instantiated and would otherwise be supplied to the container through .Instance like the HttpContext:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6b1a0b25-8ca1-4710-9d2e-7cede2b48d57" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
store.Register(
&#160;&#160;&#160;&#160;p =&gt; p.Service&lt;HttpContext&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Factory(s =&gt; { return HttpContext.Current; }));
</pre></div>

<p></p>

<p></p>

<p>What do you think? Should this make it into Pandora? What do you want to see in a DI container? Please feel free to comment.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>569</wp:post_id>
<wp:post_date>2009-06-10 20:33:44</wp:post_date>
<wp:post_date_gmt>2009-06-10 18:33:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rfc-is-a-supplied-factory-method-useful-for-an-ioc-container</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>WPF Sample, badly done</title>
<link>http://www.tigraine.at/2009/06/12/wpf-sample-badly-done/</link>
<pubDate>Thu, 11 Jun 2009 23:51:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/12/wpf-sample-badly-done/</guid>
<description></description>
<content:encoded><![CDATA[<p>While trying out some WPF, I ended up downloading <a href="http://msdn.microsoft.com/en-us/library/bb295243.aspx">this code sample on Drag&amp;Drop</a> that contained the following piece&#160; of code:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:19d53a11-2c7a-4920-8e85-66faf039475e" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
if (e.Source == MyCanvas)
{
}
else
{
&#160;&#160;&#160;&#160;_isDown = true;
&#160;&#160;&#160;&#160;_startPoint = e.GetPosition(MyCanvas);
&#160;&#160;&#160;&#160;_originalElement = e.Source as UIElement;
&#160;&#160;&#160;&#160;MyCanvas.CaptureMouse();
&#160;&#160;&#160;&#160;e.Handled = true;
}
</pre></div>

<p>Come on? I’ve seen 6 year olds that knew the use of != and ==.</p>

<p>Please Microsoft: <u>Documentation is as important as shipping code</u>. At least review what crap is getting put out there. It just looks bad to say the least. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>570</wp:post_id>
<wp:post_date>2009-06-12 01:51:42</wp:post_date>
<wp:post_date_gmt>2009-06-11 23:51:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wpf-sample-badly-done</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/14/twitter-passes-2147483647-tweets/imagepng-2/</link>
<pubDate>Sat, 13 Jun 2009 23:52:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>571</wp:post_id>
<wp:post_date>2009-06-14 01:52:33</wp:post_date>
<wp:post_date_gmt>2009-06-13 23:52:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>572</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"349";s:6:"height";s:3:"260";s:14:"hwstring_small";s:23:"height='95' width='128'";s:4:"file";s:18:"2009/06/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x223.png";s:5:"width";s:3:"300";s:6:"height";s:3:"223";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image1.png</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Twitter passes 2,147,483,647 tweets</title>
<link>http://www.tigraine.at/2009/06/14/twitter-passes-2147483647-tweets/</link>
<pubDate>Sat, 13 Jun 2009 23:52:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/14/twitter-passes-2147483647-tweets/</guid>
<description></description>
<content:encoded><![CDATA[I guess this screen will look really odd to non-programmers using the awesome Twitter client <a href="http://www.thirteen23.com/experiences/desktop/blu/">blu</a>:

<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image1.png" border="0" alt="image" width="349" height="260" />

The text in the box says:
<blockquote>The value for a Int32 was too big or too small.</blockquote>
Any programmer knows this can only mean: Twitter just surpassed the boundaries of a 32 bit signed integer with their Tweed ids and has rendered a number of Twitter clients useless without an update.

Oh, and we all knew this is coming, thanks to <a href="http://www.twitpocalypse.com/">http://www.twitpocalypse.com/</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>572</wp:post_id>
<wp:post_date>2009-06-14 01:52:34</wp:post_date>
<wp:post_date_gmt>2009-06-13 23:52:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>twitter-passes-2147483647-tweets</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1244937437</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/16/pandora-release-01/imagepng-2/</link>
<pubDate>Tue, 16 Jun 2009 14:35:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>574</wp:post_id>
<wp:post_date>2009-06-16 16:35:46</wp:post_date>
<wp:post_date_gmt>2009-06-16 14:35:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>576</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"260";s:6:"height";s:3:"212";s:14:"hwstring_small";s:23:"height='96' width='117'";s:4:"file";s:18:"2009/06/image2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/16/pandora-release-01/imagepng-3/</link>
<pubDate>Tue, 16 Jun 2009 14:35:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>575</wp:post_id>
<wp:post_date>2009-06-16 16:35:46</wp:post_date>
<wp:post_date_gmt>2009-06-16 14:35:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>576</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"260";s:6:"height";s:3:"101";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:18:"2009/06/image3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x101.png";s:5:"width";s:3:"150";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Pandora release 0.1</title>
<link>http://www.tigraine.at/2009/06/16/pandora-release-01/</link>
<pubDate>Tue, 16 Jun 2009 14:35:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/16/pandora-release-01/</guid>
<description></description>
<content:encoded><![CDATA[<p>I finally decided it’s time to release <a href="http://www.tigraine.at/category/programmierung/projects/pandora/">Pandora</a>. The current build is stable and meets all of my current requirements, so I feel the best way to advance Pandora is to dogfood it on another project.</p>  <p>Also, this gives me a bit of an opportunity to catch up on the documentation side of things and work out bugs that may be there.</p>  <h5>Upcoming features</h5>  <p>I still have a pretty interesting wish list (<a href="http://www.tigraine.at/2009/06/08/generic-registrations-for-pandora/">Generics</a>, <a href="http://www.tigraine.at/2009/06/10/rfc-is-a-supplied-factory-method-useful-for-an-ioc-container/">Factory Methods</a>, AutoConfiguration), but those features are all rather non-trivial and I feel Pandora should stay a simple and minimalistic container right now. </p>  <h5>Where to get</h5>  <p>You can download the <a href="http://bitbucket.org/Tigraine/pandora-container/downloads/">compiled Pandora release</a> from Bitbucket or you can grab the <a href="http://bitbucket.org/Tigraine/pandora-container/src/">source</a> and compile it for yourself.</p>  <h5>Compiling Pandora</h5>  <p>Just run the build.bat script and NAnt (supplied within the repository) will fire up and compile everything into the build\ directory. By default the script will also compile and run the accompanying unit tests, leaving you with a Pandora.Test-Result.htm file you can then review if you please. </p>  <p>To compile without tests simply run “<em>build compile</em>”, and you’ll end up only with Pandora.dll/pdb and the common service locator library.</p>  <h5>Using Pandora</h5>  <p>If you didn’t run build compile, you end up with lots of stuff in your build directory:</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Pandora result" border="0" alt="Pandora result" src="http://www.tigraine.at/wp-content/uploads/2009/06/image2.png" width="260" height="212" /> </p>  <p>If you plan on using Pandora you only need the following:</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image3.png" width="260" height="101" />&#160;</p>  <p>If you are interested in the ServiceLocation.dll you can read about it here: <a href="http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/">Common Service Locator Adapter for Pandora</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>576</wp:post_id>
<wp:post_date>2009-06-16 16:35:47</wp:post_date>
<wp:post_date_gmt>2009-06-16 14:35:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pandora-release-01</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>My beef with Ruby/Python</title>
<link>http://www.tigraine.at/2009/06/17/my-beef-with-rubypython/</link>
<pubDate>Tue, 16 Jun 2009 23:41:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/17/my-beef-with-rubypython/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just spent some time poking around Ruby after some poking around Python. And both times I find the typing concept awkward.   <br />Not so much because there is none, but because there is one visible to the trained programmer, implicit but still there. </p>  <p>That being true for primitive types, for classes this makes a whole lot more sense, since we can use the concept of <a href="http://en.wikipedia.org/wiki/Duck_typing">duck typing</a>:</p>  <blockquote>   <p>&quot;when I see a bird that walks like a duck and swims like a duck and quacks like a duck, I call that bird a duck.&quot;</p> </blockquote>  <p>Some patterns we came to use in static languages are just obsolete in dynamic settings. But the cost to me is that I also have no metadata present about the object I am currently dealing with. It could be anything, and I don’t know before I execute it.&#160;&#160; <br />In C# I can simply hit object. and see all available methods/properties/events, allowing me to look at their documentation and so on. In Ruby, not even the smarter IDEs like RubyMine can do that for you.&#160; </p>  <p>That in itself is no big deal if you are only working with your own classes and methods, where you know how they work or have a general understanding of how they work. Where I really need this metadata is when working with complex frameworks and libraries that expose tons of stuff through protected members from superclasses, that are just invisible to me. That said, to me the whole Ruby/Python experience was more of a running around and hunting method signatures rather than getting something done. </p>  <p>I guess that experience is normal and I am rather sure I’ll get the hang of it rather sooner than later. But coming from years of static typing dynamic languages just feel weird and especially their way of interacting with you as a programmer are different (no Intellisense being my #1 problem with all of them)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>577</wp:post_id>
<wp:post_date>2009-06-17 01:41:39</wp:post_date>
<wp:post_date_gmt>2009-06-16 23:41:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-beef-with-rubypython</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2585</wp:comment_id>
<wp:comment_author><![CDATA[Chubas]]></wp:comment_author>
<wp:comment_author_email>chubas7@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>201.153.17.50</wp:comment_author_IP>
<wp:comment_date>2009-06-17 04:12:40</wp:comment_date>
<wp:comment_date_gmt>2009-06-17 02:12:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[And not quite true for primitive types (try to guess what type is 2 ** 64. The answer is [Bignum, Integer, Precision, Numeric, Comparable, Object, Kernel])

Yes, Ruby is quite a different paradigm in some aspects. And you need some experience to get used to it, specially what you say about typing system.

It also depends on the good programming habits. Most of the good libraries are well documented, and can help IDEs to do its job, but yes, having a perfect Intellisense like in static typed languages is quite a challenge, if not impossible.  In Python there is the """Inline doc""" thing, which I find pretty nice. In Ruby, dynamically defined methods (like eval-ing at runtime), singleton methods, method_missing?, etc..., all these things that make Ruby so beautiful are difficult for the current tools to work with, without some help from the programmer. RubyMine does a pretty good job, though.

But something I like about Ruby in particular is that most programmers apply the SOLID principles when programming, and the language flexibility helps a lot. For example, the Principle of Least Surprise, in which you know that query methods (like Array#contains?) return a pseudo-boolean -- I say pseudo because aside from returning true or false, most of the query methods return an object or nil, which act (quack) like boolean for boolean comparison purposes.

Learning new languages/paradigms is good. You'll see you won't miss that feature as much as you think you do.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2586</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.131</wp:comment_author_IP>
<wp:comment_date>2009-06-17 10:21:34</wp:comment_date>
<wp:comment_date_gmt>2009-06-17 08:21:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment.

Yes I've seen those ? and ! conventions and I quite like them. Language flexibility is awesome, but sometimes people tend to use that against their own language in their samples.

For example one official Python sample looks like this:
&gt;&gt;&gt; while b &lt; 10:
...     print(b)
...     a, b = b, a+b
(http://docs.python.org/3.0/tutorial/introduction.html#first-steps-towards-programming)
It made my head blow up. Sure, the b, a+b would take alone 3 lines in a static language. But does this warrant to write double assignments that also (for me) get executed rather interestingly (both at the same time).

Solid is obviously a very important topic to me, and I expect people to follow it be it in C# or Ruby or whatever. 

As for the IntelliSense. I guess I'll get used to it. Most people who offered their opinion on IDEs said they usually went back to more lightweight stuff like vim or emacs. It's just not the perfect way to learn a new language, coming from a world where syntax was the only important thing, classnames and methodnames could be discovered through the IDE.

greetings Daniel

Ps: I need to get Disqus working again, the default input field for comments in this theme is just a joke.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2587</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mlux@itec.uni-klu.ac.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.78</wp:comment_author_IP>
<wp:comment_date>2009-06-17 12:24:30</wp:comment_date>
<wp:comment_date_gmt>2009-06-17 10:24:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ruby &amp; Rails are both for advanced web designers and possibly people who like writing scripts. It's quite ok for prototyping, but can never offer the performance and options from a "real" programming language and an extensive framework. 

Besides it's incredible slowness it's not really easy to code as there is no handy IDE :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2588</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.69.131</wp:comment_author_IP>
<wp:comment_date>2009-06-17 12:29:24</wp:comment_date>
<wp:comment_date_gmt>2009-06-17 10:29:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I suspect there will be some pretty successful sites out there that prove you wrong. 
RoR and Ruby is not very performing, but so can be badly written C# code.
I consider Ruby a "real" language, it's just different. And as with V8 and Tracemonkey in Javascript (also a dynamic language) we'll see interpreters that will close the gap between C derivates and Ruby/Python.
Don't get fooled by Javascripts poor performance once manipulating the DOM. Tracemonkey (FF JS Engine) performs almost as well as native C, only DOM operations in the browser are incredibly slow.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>imagineClub &#8211; Students for Students</title>
<link>http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/</link>
<pubDate>Sun, 21 Jun 2009 21:17:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/</guid>
<description></description>
<content:encoded><![CDATA[<p>In Austria every university has a institution called ÖH that is there to support students throughout their studies. They provide legal advice, course material and many other things.    <br />The downside of this great service is that it’s directly associated with the university and therefore subject to some regulations regarding what they can do and what not. </p>  <p>Amongst the things that the regular ÖH isn’t able to do is provide course material other than the official things the professors provide. Student generated content could be wrong and that would look bad for the organization.    <br /><a href="http://www.imagineclub.at/">imagineClub</a> was founded to solve this problem in 2007 and had a lot of success by requiring members to pay for their membership through term-paper submissions to contribute to the overall knowledgebase. </p>  <p><a href="http://www.imagineclub.at/">imagineClub</a> also managed to partner with Microsoft and therefore was allowed to offer the MSDN-Academic Alliance service to all of their members. Allowing members to freely download and use Microsoft development software like Visual Studio, Windows etc.. </p>  <p><em>Why am I telling you all of this?</em></p>  <p>Well, half a year ago I agreed to become the assistant chairman of <a href="http://www.imagineclub.at/">imagineClub</a>! The old team is still there, but jobs and other things have taken over, so I was brought in to try to get iC back on track and to again provide real value to our members.</p>  <p>Right now, one of the major roadblocks for imagineClub is it’s website. In it’s current state none of the board members are able to add news or change anything about the site since the input forms are broken. Paper submissions have to go through email and get added to the database through raw SQL, making the MSDN-AA subsection of the site the only “working” part that doesn’t require direct SQL manipulation. Naturally, all of this has led to a terribly outdated website, no new papers since 2008 and besides MSDN-AA no real service for our members. </p>  <p>I’m planning to change this through writing a completely new website that does what it’s supposed to do, but also is completely open source!    <br />I decided to go with the Castle MonoRail framework on this one since I already did enough ASP.NET MVC Projects in the past. A positive side-effect of this should also be to work on the MonoRail documentation to get it <a href="http://www.tigraine.at/2009/05/26/rails-with-obstacles/">updated once again</a>.</p>  <p>The whole <a href="http://bitbucket.org/Tigraine/ic-website/">project is once again up on Bitbucket</a>, currently more of a project skeleton than a real application. But I do plan to finish the site sometime in July. I’m also very happy to announce that <a href="http://www.nephilistic.com/">Kristof</a>, a young designer/artist I’ve had the pleasure working with during my last projects, has agreed to contribute a brand new site design. He promised me to finish it this week, so work on the site should start pretty soon.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>578</wp:post_id>
<wp:post_date>2009-06-21 23:17:33</wp:post_date>
<wp:post_date_gmt>2009-06-21 21:17:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagineclub-students-for-students</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3113</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; The fairy tale of binary blob fields]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-17 15:20:18</wp:comment_date>
<wp:comment_date_gmt>2009-08-17 13:20:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I know, usually providers send out warning for stuff like this, but I doubt that through all the structural changes with imagineClub lately they even know where to send those warnings [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2649</wp:comment_id>
<wp:comment_author><![CDATA[New imagineClub website design poll | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-06 11:50:12</wp:comment_date>
<wp:comment_date_gmt>2009-07-06 09:50:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] with their studies and enable them to easily access new Microsoft technology. I wrote a more complete article about the imagineClub some time [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3364</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Introducing ELMS-Connector v.1 Beta]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/09/29/introducing-elms-connector-v-1-beta/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-09-30 16:50:32</wp:comment_date>
<wp:comment_date_gmt>2009-09-30 14:50:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I joined the imagineClub in Klagenfurt and started building the new website I kept avoiding one major feature for a very long time: [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3374</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; imagineClub.at is now finally online]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/23/imagineclub-at-is-now-finally-online/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-23 14:31:50</wp:comment_date>
<wp:comment_date_gmt>2009-10-23 12:31:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] You can read what this is all about here. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>WebKit like focus indicator for WPF Windows</title>
<link>http://www.tigraine.at/2009/06/22/webkit-like-focus-indicator-for-wpf-windows/</link>
<pubDate>Mon, 22 Jun 2009 11:58:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[WPF]]></category>

		<category domain="category" nicename="wpf"><![CDATA[WPF]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=580</guid>
<description></description>
<content:encoded><![CDATA[<p>If you like Chrome/Safari or not, one thing that both have and all others lack is a good focus indicator that graphically shows me where my focus currently is. Jeff Atwood wrote something interesting on the topic of <a href="http://www.codinghorror.com/blog/archives/001055.html">Where the Heck is My Focus</a>:</p>  <blockquote>   <p>But even if developers do remember to test for basic keyboard behavior, there's a deeper problem here. <b>Keyboard navigation relies heavily on the focus.</b> In order to move from one area to the next, you have to be able to reliably know where you are. Unfortunately, <b>web browsers make it needlessly difficult to tell where the focus is</b>.</p> </blockquote>  <p>I believe he not only has a valid point here, but also that his criticism this should not be limited to web browsers. Most if not all Windows applications do this thing badly, and it’s up to us developers to fix it.</p>  <p>So, I decided to try to put my recent WPF research to good use and tried to implement a small class that applies/removes a WebKit like focus caret:</p>  <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image4.png" width="300" height="145" /> </p>  <p>The whole implementation is completely encapsulated inside a class named <a href="http://bitbucket.org/Tigraine/tigraine-samples/src/tip/WebkitInputs/WebkitFocusEffect.cs">WebkitFocusEffect</a> that only needs to be initialized during your window construction:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7d6cb718-92e9-4338-86a2-ae7276ea0b11" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public Window1()
{
&#160;&#160;&#160;&#160;InitializeComponent();

&#160;&#160;&#160;&#160;WebkitFocusEffect.Initialize(this);
}
</pre></div>

<h4>How does it work?</h4>

<p>First of all, <a href="http://bitbucket.org/Tigraine/tigraine-samples/src/tip/WebkitInputs/WebkitFocusEffect.cs">the source is available</a> on BitBucket in my <a href="http://bitbucket.org/Tigraine/tigraine-samples/">repository</a>, so you can just go ahead and look at it. But I’ll also try to shed some light about what goes on there.</p>

<h5>Routed Events</h5>

<p>WPF introduced a cool concept called RoutedEvents, meaning that an Event like GotFocus/LostFocus will travel through the object model to the point where it gets handled and stops there. This technique is important because, unlike Windows Forms, WPF controls can contain other UIElements. This gives you far more control over the look and feel of your application, allowing for crazy things like a button with a image instead of text:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3bd97067-1206-4c74-9d66-c09fc94c1346" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;Button Width="100"&gt;
&#160;&#160;&#160;&#160;&lt;Image Source="http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Smiley.svg/100px-Smiley.svg.png"&gt;&lt;/Image&gt;
&lt;/Button&gt;
</pre></div>

<p>Resulting in this:</p>

<p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image5.png" width="159" height="163" /> </p>

<p>And that leads to the point of RoutedEvents: How do you know that the button was clicked? The event that was fired was the image’s click event, not the button. So, WPF introduced the concept of RoutedEvents that can traverse the object tree upwards and downwards. What means that the image’s ClickEvent gets passed on to it’s direct parent (our friend the button) to get handled there.</p>

<p>&#160;<img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image6.png" width="400" height="235" /> </p>

<p>If not handled at some level the event would travel up through the whole tree until reaching the root.</p>

<p>I used this technique to hook up the GotFocus/LostFocus events on our window (being the root element), relying on the fact that any GotFocus events by it’s children will bubble upwards the graph eventually reaching the window’s handler.</p>

<p>The handler then just unwraps the event’s source object (the source of the RoutedEvent gets passed along through the RoutedEventArgs parameter) and modifies it’s Effect property:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:53353ad9-5043-497d-ac84-588d9db99247" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
protected virtual void WindowGotFocus(object sender, RoutedEventArgs e)
{
&#160;&#160;&#160;&#160;try
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (!(e.Source is UIElement)) return;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var element = (UIElement) e.Source;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (element.Effect == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var effect = new DropShadowEffect {Color = Colors.Gold, ShadowDepth = 0, BlurRadius = 8};
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;element.Effect = effect;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;removeEffect = true;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;catch (Exception ex)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Log(ex);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>One problem still remained: RoutedEvents can stop bubbling if they get handled at a lower level. This is how the button stops the image’s click event from spreading to it’s parent element, therefore containing it. So if you set an RoutedEventArgs.Handled property to true, it will stop bubbling up the tree:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:63d90cb1-6644-4e6f-8b6a-e3a523361c63" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
private void LoginButton_GotFocus(object sender, RoutedEventArgs e)
{
&#160;&#160;&#160;&#160;//This Event was handled and will not call Window's GotHandled eventhandler
&#160;&#160;&#160;&#160;e.Handled = true;
}

</pre></div>

<p>Cool though is that RoutedEvents can’t really be stopped from bubbling, they do so anyway. Handled events just don’t invoke any event handlers up the tree any more, and that can be overridden explicitly when subscribing to the event:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a647969b-f8d9-404d-af20-0b63b8797ed8" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
window.AddHandler(UIElement.GotFocusEvent, new RoutedEventHandler(WindowGotFocus), true);
</pre></div>

<p>The last parameter is “handledEventsToo” and if set to true the event handler will be fired even if the event was already handled at a lower level. Allowing us to still do our thing while not getting in your way when subscribing to GotFocus / LostFocus events.</p>

<h5>Effect</h5>

<p>One little limitation is there though. Currently there is no EffectGroup container similar to the <a href="http://msdn.microsoft.com/en-us/library/system.windows.media.effects.bitmapeffectgroup.aspx">BitmapEffectGroup</a>, and therefore only one effect can be applied to any UIElement at one time. So WebkitFocusEffect will just skip elements that already have a Effect defined.</p>

<p>I consciously went with the <a href="http://msdn.microsoft.com/en-us/library/system.windows.media.effects.dropshadoweffect.aspx">DropShadowEffect</a> and not with the <a href="http://msdn.microsoft.com/en-us/library/system.windows.media.effects.outerglowbitmapeffect.aspx">OuterGlowBitmapEffect</a> because Effects are hardware accelerated (means they get processed by your idle graphics card instead of the CPU) and will not slow your application down as BitmapEffects would. </p>

<p></p>

<p>You can download the <a href="http://bitbucket.org/Tigraine/tigraine-samples/src/tip/WebkitInputs/WebkitFocusEffect.cs">WebkitFocusEffect.cs</a> through Bitbucket.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>580</wp:post_id>
<wp:post_date>2009-06-22 13:58:48</wp:post_date>
<wp:post_date_gmt>2009-06-22 11:58:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>webkit-like-focus-indicator-for-wpf-windows</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/22/webkit-like-focus-indicator-for-wpf-windows/imagepng-2/</link>
<pubDate>Mon, 22 Jun 2009 14:16:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>581</wp:post_id>
<wp:post_date>2009-06-22 16:16:21</wp:post_date>
<wp:post_date_gmt>2009-06-22 14:16:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>580</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"145";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:18:"2009/06/image4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x145.png";s:5:"width";s:3:"150";s:6:"height";s:3:"145";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/22/webkit-like-focus-indicator-for-wpf-windows/imagepng-3/</link>
<pubDate>Mon, 22 Jun 2009 14:16:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>582</wp:post_id>
<wp:post_date>2009-06-22 16:16:22</wp:post_date>
<wp:post_date_gmt>2009-06-22 14:16:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>580</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"159";s:6:"height";s:3:"163";s:14:"hwstring_small";s:22:"height='96' width='93'";s:4:"file";s:18:"2009/06/image5.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/22/webkit-like-focus-indicator-for-wpf-windows/imagepng-4/</link>
<pubDate>Mon, 22 Jun 2009 14:16:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>583</wp:post_id>
<wp:post_date>2009-06-22 16:16:23</wp:post_date>
<wp:post_date_gmt>2009-06-22 14:16:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>580</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"235";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:18:"2009/06/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image6-300x176.png";s:5:"width";s:3:"300";s:6:"height";s:3:"176";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Medical Guesswork</title>
<link>http://www.tigraine.at/2009/06/23/medical-guesswork/</link>
<pubDate>Tue, 23 Jun 2009 18:58:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=586</guid>
<description></description>
<content:encoded><![CDATA[<blockquote style="background: #ff9933">   <p>Warning: This post is strictly non-technical. No .NET code was harmed during the writing of this and if you go on reading this you may lose 10 minutes of your life you’ll never get back! So proceed with caution and only if you don’t mind reading about my personal life.</p> </blockquote>  <p>My girlfriend recently went to see an orthopedist because her right wrist was hurting. After examining her for some time he said:</p>  <blockquote>   <p>Could be [<a href="http://www.whonamedit.com/synd.cfm/2750.html">weird desease that involves necrosis inside the joint</a>], let’s run some tests.</p> </blockquote>  <p>And off she went with an appointment 2 weeks down the road, waiting for the tests to prove that she has a necrotic bone inside her right wrist. </p>  <p>At 21 you don’t take such things very lightly (especially if they involve permanent damage to the right hand), and those two weeks of waiting for the “real thing&quot; proved to be quite stressful for her. Thank god the tests came back and proved that the pain was caused by something else!</p>  <p>Now, fast forward one month, I went to see the same doctor because I felt pain in my left wrist over the last week. After doing a 3 minute examination (if you want to call some touching my wrist that way) he said:</p>  <blockquote>   <p><font style="background-color: #ffffff">Could be <a href="http://en.wikipedia.org/wiki/Carpal_tunnel_syndrome">carpal tunnel</a>, otherwise the wrist looks fine. Let’s run some more tests.</font></p> </blockquote>  <p>He then gave me the number of 3 other doctors to go to and run tests, to find out if I’ve really got carpal tunnel.</p>  <p>Guess what? I don’t care. I won’t go to see any of those and I certainly won’t ever go back to see that one again. </p>  <p>Why? Simple: I’m a programmer, my wrists are a very very valuable thing to me. I just wanted to make sure that everything is ok, not embark on a 3 week roundtrip to 3 doctors with the thought in mind “This CTS thing could ruin my life”. (And the pain was really just a small annoyance I wanted to get checked out, nowhere near actual pain)</p>  <p>Seriously? What doctor tells his 21/24 year old patient his “first guess” at a diagnosis? Especially such a bad one? Do I walk around my customers and tell them “Hey, from the look of the app I get the impression this codebase is unrecoverable, I’ll run some analysis but prepare to pay for a rewrite.”? </p>  <p>I guess you have figured out that I’m slightly annoyed right now. But rest assured that I am currently at perfect health. If my wrist-pain comes back I’ll see a (better) doctor – I promise.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>586</wp:post_id>
<wp:post_date>2009-06-23 20:58:17</wp:post_date>
<wp:post_date_gmt>2009-06-23 18:58:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>medical-guesswork</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1245783933</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>2</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2607</wp:comment_id>
<wp:comment_author><![CDATA[Christoph Bauer]]></wp:comment_author>
<wp:comment_author_email>chrbauer23@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://mynameise.com/christophBauer</wp:comment_author_url>
<wp:comment_author_IP>217.225.222.63</wp:comment_author_IP>
<wp:comment_date>2009-06-23 21:58:50</wp:comment_date>
<wp:comment_date_gmt>2009-06-23 19:58:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well, you should really see another doctor. Only through that, you can avoid permanent damage. 
I have one problem myself, with a ganglion on my wrist. The doc could not say where its coming from, but i really think its related to typing. I had a surgery, which removed it completely. But it came back, but now its in a stable state and doesnt hurt anymore. 

I hate doctors and operations, but in this case i had to go. You should, too. Why he sends you to three doctors is another question, you really should just consult another one, maybe more specialized.

Greetings,

Christoph]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2608</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.5</wp:comment_author_IP>
<wp:comment_date>2009-06-23 22:41:44</wp:comment_date>
<wp:comment_date_gmt>2009-06-23 20:41:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well: One Doctor for a X-Ray (wtf even my Dentist has his own XRay), one doctor for a neurological checkout of my nerve, what the last one is for I have no clue.

Rest assured, I take my health very seriously. Especially when it comes to my #1 tools in life. It's just that if the problem returns (at the moment I'm perfectly fine) I'll go to see another doctor that can tell me what's going on with maybe his own X-Ray machine. 

Greetings, Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>tigraine-wpf-subscriptions</title>
<link>http://www.tigraine.at/?attachment_id=588</link>
<pubDate>Wed, 24 Jun 2009 11:09:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/tigraine-wpf-subscriptions.xml</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[OPML With all some must-read WPF Blogs]]></excerpt:encoded>
<wp:post_id>588</wp:post_id>
<wp:post_date>2009-06-24 13:09:13</wp:post_date>
<wp:post_date_gmt>2009-06-24 11:09:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tigraine-wpf-subscriptions</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/tigraine-wpf-subscriptions.xml</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/tigraine-wpf-subscriptions.xml</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:0:{}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/imagepng-2/</link>
<pubDate>Thu, 25 Jun 2009 22:44:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>589</wp:post_id>
<wp:post_date>2009-06-26 00:44:19</wp:post_date>
<wp:post_date_gmt>2009-06-25 22:44:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>593</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"632";s:6:"height";s:3:"162";s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:18:"2009/06/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image7-300x76.png";s:5:"width";s:3:"300";s:6:"height";s:2:"76";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/imagepng-3/</link>
<pubDate>Thu, 25 Jun 2009 22:44:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>590</wp:post_id>
<wp:post_date>2009-06-26 00:44:19</wp:post_date>
<wp:post_date_gmt>2009-06-25 22:44:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>593</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"453";s:6:"height";s:2:"82";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:18:"2009/06/image8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image8-150x82.png";s:5:"width";s:3:"150";s:6:"height";s:2:"82";}s:6:"medium";a:3:{s:4:"file";s:17:"image8-300x54.png";s:5:"width";s:3:"300";s:6:"height";s:2:"54";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/imagepng-4/</link>
<pubDate>Thu, 25 Jun 2009 22:44:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>591</wp:post_id>
<wp:post_date>2009-06-26 00:44:20</wp:post_date>
<wp:post_date_gmt>2009-06-25 22:44:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>593</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"304";s:6:"height";s:3:"131";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:18:"2009/06/image9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image9-150x131.png";s:5:"width";s:3:"150";s:6:"height";s:3:"131";}s:6:"medium";a:3:{s:4:"file";s:18:"image9-300x129.png";s:5:"width";s:3:"300";s:6:"height";s:3:"129";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/imagepng-5/</link>
<pubDate>Thu, 25 Jun 2009 22:44:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/06/image10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>592</wp:post_id>
<wp:post_date>2009-06-26 00:44:21</wp:post_date>
<wp:post_date_gmt>2009-06-25 22:44:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>593</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/06/image10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/06/image10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"533";s:6:"height";s:3:"151";s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:19:"2009/06/image10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image10-300x84.png";s:5:"width";s:3:"300";s:6:"height";s:2:"84";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Help! My provider hijacks my DNS requests!</title>
<link>http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/</link>
<pubDate>Thu, 25 Jun 2009 22:44:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/26/help-my-provider-hijacks-my-dns-requests/</guid>
<description></description>
<content:encoded><![CDATA[Today I followed a link to a no longer active domain and suddenly found myself on UPC’s (my provider) search looking for that URL:

<a href="http://suche.upc.at/upcatassist/dnsassist/main/?domain=www.fkljsdajklsdaklfsadlkflasdflsadf.com"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image7.png" border="0" alt="image" width="632" height="162" /></a>

My first reflex was to check if my default search provider may be set wrong:

<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image8.png" border="0" alt="image" width="453" height="82" />

Woot? No, my search provider is Google. I just queried a DNS record that does not exist, and I got a result back instead of a DNS error. Now, imagine my head going red and some danger lights starting to flash.

First test I did to confirm my suspicions: open a raw putty connection on port 80 to some random DNS I know doesn’t exist:

<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image9.png" border="0" alt="image" width="304" height="131" />

Then I just did a basic HTTP GET request from my console to see what the server would return:

<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" src="http://www.tigraine.at/wp-content/uploads/2009/06/image10.png" border="0" alt="image" width="533" height="151" />

<strong>Ok, so what just happened here?</strong> First of all, <span style="text-decoration: underline;">there should be no web server to accept my connection</span>! Hell, I shouldn’t even be able to resolve to an IP address!

So, running a quick nslookup turned up something interesting:
<blockquote>nslookup www.lksdafklsdlkfdsf.com
Server:  viedns09.chello.at
Address:  195.34.133.21</blockquote>
Apparently, UPC is abusing the trust I place in them (by using their DNS server) <span style="text-decoration: underline;">and resolves ALL requests that can’t be resolved</span> (don’t exist) <span style="text-decoration: underline;">to their own server</span> that will redirect all HTTP traffic with a 302 status code to their search service.

Now, why is this bad? Isn’t search something I like when mistyping a URL?

Oh, it’s bad I promise you. It’s bad for many different reasons:
<ol>
	<li>All browsers will search anyway if a URL can’t be resolved</li>
	<li>My browser thinks the bad domain name actually exists</li>
	<li>UPC search sucks</li>
	<li>I can’t do anything about it short for changing my DNS server</li>
</ol>
I do set that search provider inside my browser quite consciously, and I do that for a reason. Google knows my preferences, Google has a search history I use quite often, Google is set to US so it won’t sort German results to the top of the list. And most important: Google has a cached version of almost every page on the interwebz so even expired sites can be looked at with Google.

So, whenever UPC is hijacking my bad DNS request to redirect me to their stupid little search, they take away my freedom of choice and force me (and all users of Chello/Inode in Austria) to override my browsers default behavior in favor of an inferior solution so they generate more search volume on their stupid service!

Only Solution: Pick another DNS. There are plenty of DNS servers out there that will gladly satisfy requests, only drawback is that they aren’t located in my provider’s subnet and therefore won’t be as fast as the one I used before.

This is just sad. Very very sad.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>593</wp:post_id>
<wp:post_date>2009-06-26 00:44:21</wp:post_date>
<wp:post_date_gmt>2009-06-25 22:44:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>help-my-provider-hijacks-my-dns-requests</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1245971053</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>2</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2621</wp:comment_id>
<wp:comment_author><![CDATA[Eol]]></wp:comment_author>
<wp:comment_author_email>eol@thew4.org</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.115.68.8</wp:comment_author_IP>
<wp:comment_date>2009-06-26 16:52:46</wp:comment_date>
<wp:comment_date_gmt>2009-06-26 14:52:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yep. They do it since some months and its annoying :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2707</wp:comment_id>
<wp:comment_author><![CDATA[foobar]]></wp:comment_author>
<wp:comment_author_email>foobar@foobar.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.168.13.18</wp:comment_author_IP>
<wp:comment_date>2009-07-19 15:02:48</wp:comment_date>
<wp:comment_date_gmt>2009-07-19 13:02:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Bizarre ways of Austrian UPC.

Thank goodness, the Slovak offshoot of UPC hasn't provided this great "service" to its customers.

It would be interesting to know why Austrian UPC does this.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3148</wp:comment_id>
<wp:comment_author><![CDATA[Aaron]]></wp:comment_author>
<wp:comment_author_email>eatingfortwo@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.screenulacra.at</wp:comment_author_url>
<wp:comment_author_IP>80.109.69.37</wp:comment_author_IP>
<wp:comment_date>2009-08-19 19:17:12</wp:comment_date>
<wp:comment_date_gmt>2009-08-19 17:17:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I really, really, really, really don't like this.  I bet that they would say that there are thousands that do like it.  I guess when there is a monopoly on search, the little guys take action.  I really don't like this.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3373</wp:comment_id>
<wp:comment_author><![CDATA[UPC Ireland, DNS hijacking, and Bender Bending Rodríguez - zendo ireland]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://zendo.ie/2009/10/upc-ireland-dns-hijacking-and-bender-bending-rodriguez/</wp:comment_author_url>
<wp:comment_author_IP>87.232.4.253</wp:comment_author_IP>
<wp:comment_date>2009-10-21 21:59:45</wp:comment_date>
<wp:comment_date_gmt>2009-10-21 19:59:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Help! My provider hijacks my DNS requests! [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Pandora now likes concrete classes</title>
<link>http://www.tigraine.at/2009/06/28/pandora-now-likes-concrete-classes/</link>
<pubDate>Sat, 27 Jun 2009 23:19:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/06/28/pandora-now-likes-concrete-classes/</guid>
<description></description>
<content:encoded><![CDATA[<p>While getting into WPF and the MVVM pattern (you should check out <a href="http://blog.lab49.com/archives/2650">this Webcast by Jason Dolinger</a> if you need a tutorial to get started on MVVM) I found myself somehow dealing more with concrete classes then I was used to. Usually I hide everything behind some interface and try to think really hard before violating that habit. Nonetheless, ViewModel classes are just that, ViewModel classes very special to their View and you really can’t hide them behind a meaningful Interface (without looking too silly).</p>  <p>So, after writing a fairly small application with only 3 ViewModel classes I found myself writing this utterly meaningless block of code:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0d7ee7cb-7331-4c96-b24e-354a3aed674d" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
container.Register(p =&gt;
{
&#160;&#160;&#160;&#160;p.Service&lt;PersonViewModel&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor&lt;PersonViewModel&gt;();
&#160;&#160;&#160;&#160;p.Service&lt;AddressesViewModel&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor&lt;AddressesViewModel&gt;();
&#160;&#160;&#160;&#160;p.Service&lt;ProductViewModel&gt;()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.Implementor&lt;ProductViewModel&gt;();
});
</pre></div>

<p>It’s not completely meaningless after all, everything that keeps me from writing <em>new PersonViewModel()</em> somewhere in my code is just awesome. Only, it’s a bit too much of ceremony for something that simple. By asking for a concrete type you already tell Pandora everything it needs to know. </p>

<p>So, now Pandora can resolve concrete types directly if there is no registration that says otherwise. If you ask for a concrete class A, you’ll get a concrete class A even if the container is totally blank. 
  <br />Now, if a class A is registered with the container it will use that one, if not Pandora will try to figure it out. </p>

<p>That also leaves open one way of extending your system. You can start off with an implicitly registered concrete class A, and if you want to subclass it later to modify behavior you only register the new subclass B as implementor for service A with Pandora and you’re set.</p>

<p>So, quick recap on how this works:</p>

<p>When a concrete type is requested and can’t be found in the configuration it will be instantiated if:</p>

<ol>
  <li>It’s a concrete type</li>

  <li>You are not resolving to a name</li>

  <li>The dependencies of the requested type can be satisfied.</li>
</ol>

<p>Also keep in mind that the default lifestyle for Pandora is singleton, so once you request A, you’ll always get the same instance back as long as you don’t change that through an explicit registration.</p>

<p>As always you can grab the source from <a href="http://bitbucket.org/Tigraine/pandora-container/">the BitBucket site</a>. There is no new binary release (I only moved up a minor version), but compiling Pandora is a pretty straightforward process as long as you have Visual Studio installed.</p>

<p>Ps: I was amazed how easy it was to implement this. Basically all I did was write a wrapper around the ComponentLookup service to implement the new functionality. It’s <a href="http://bitbucket.org/Tigraine/pandora-container/src/94a71812b23b/src/Pandora/ConcreteClassInstantiationLookupServiceDecorator.cs">all in one place</a> :).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>596</wp:post_id>
<wp:post_date>2009-06-28 01:19:55</wp:post_date>
<wp:post_date_gmt>2009-06-27 23:19:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pandora-now-likes-concrete-classes</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Don&#8217;t forget the Refactor in Red-Green-Refactor</title>
<link>http://www.tigraine.at/2009/07/01/dont-forget-the-refactor-in-red-green-refactor/</link>
<pubDate>Wed, 01 Jul 2009 13:19:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/01/dont-forget-the-refactor-in-red-green-refactor/</guid>
<description></description>
<content:encoded><![CDATA[<p>When first learning about TDD all sources I read focused pretty much on one thing: writing the tests. </p>  <p>Few sources really talk about the full TDD workflow:</p>  <blockquote>   <ul>     <li>Write a failing test </li>      <li>Make it pass </li>      <li>Refactor the code</li>      <li>start over </li>   </ul> </blockquote>  <p>Arguably that the hardest part of doing TDD is 1+2, while possibly the most important one is 3! </p>  <p>Some people tend to stress the fact that automated tests can be a safeguard against breaking existing code. And although I like this aspect, I believe if your code is structured well and was built with the open-closed principle in mind,&#160; chances are you’ll never touch old code in the process of implementing new features.</p>  <p>But during refactoring, you play to TDDs strengths. You don’t write new stuff, you focus on the stuff that’s already there and that already works. You search for ways to improve what’s already there while not changing it’s behavior. And very often this final refactoring step is the only thing that really brings value to your process, since it not only uses those tests you just wrote, it also facilitates future change allowing you to produce cleaner code than you would without refactoring. </p>  <p>Think of refactoring as fortifying the wall you’ll be building the next floor upon. Without it the you may be fine, but 3 floors from now you’ll have a lot of work at your hands to be able to commence work.</p>  <p>Getting things right the first time is incredibly hard. On my last project it even took me some <a href="http://www.tigraine.at/2009/03/15/the-joy-of-pair-programming/">quality pair programming</a> once to come up with something great, and 80% of the pair programming was mostly spent on refactoring a raw idea from a 80% solution into a 100% solution. So, don’t spend too much time with hunting the ideal of writing a 100% solution the first time, rather try to get it 80% right and don’t stop improving it until you are at 100%!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>597</wp:post_id>
<wp:post_date>2009-07-01 15:19:25</wp:post_date>
<wp:post_date_gmt>2009-07-01 13:19:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-forget-the-refactor-in-red-green-refactor</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>New office feels liberating &#8211; outside is still better</title>
<link>http://www.tigraine.at/2009/07/03/new-office-feels-liberating-outside-is-still-better/</link>
<pubDate>Thu, 02 Jul 2009 22:48:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/03/new-office-feels-liberating-outside-is-still-better/</guid>
<description></description>
<content:encoded><![CDATA[<p>It’s been kind of a slow week for me in programming, but I made up for it in renovating my office and learning new stuff! I managed to get hold of some really nice office furniture so decided it’s time to repaint and throw out the old crap I’ve been sitting at for years.</p>  <p>Sadly I don’t have a before-shot of what my setup used to look like, but it was basically a combination of two tiny desks (one actually being a very old dressing table), one holding my screen and the other hosting keyboard and mouse. While it worked for many years, especially when working with paper it was very uncomfortable since there was hardly any space left besides keyboard and mouse. Also, I have to admit it always felt very cramped since the desk was hardly bigger than the chair I’m sitting in.</p>  <p>So, this is how awesome it looks now:</p>  <p><a href="http://www.flickr.com/photos/15594453@N02/3680308279/"><img src="http://farm4.static.flickr.com/3555/3680308279_41bb866006.jpg" /></a> </p>  <p>The old furniture was dark wood and the walls needed new paint pretty badly, so by repainting and putting in bright furniture the whole room has lit up. Everything feels bigger and less depressing :).</p>  <p>The new setup allows me to easily switch between my PC and the little workspace on the right (where I plan to have my laptop sitting mostly) and also makes room for a second screen I’ve been planning on buying for quite some time now. </p>  <p>Now, the only problem that remains is cooling. Without air conditioning I frequently get temperature to rise above 30°, making work during the day almost unbearable. 3 computers generate a lot of heat in a small room, and the big screen doesn’t really help either. Unfortunately having AC setup is nearly impossible without breaking the wall’s insulation so I’ll have to abandon base during the hot hours:</p>  <p><img src="http://farm3.static.flickr.com/2650/3680744673_6ae9ea1899.jpg" /></p>  <p>This picture is taken from a very nice little cafe at Wörthersee called <a href="http://maps.google.com/maps?q=46.627341,14.236699&amp;t=h&amp;sll=46.628068,14.234099&amp;sspn=0.006295,0.006295&amp;ie=UTF8&amp;ll=46.627341,14.236715&amp;spn=0.002336,0.004908&amp;z=18&amp;iwloc=A">Schamandra</a>. They have <a href="http://www.flickr.com/photos/15594453@N02/3682226589/sizes/l/">good ice cream</a> and really nice coffee and view. Unfortunately there is no free wifi, but 3G reception is very good. Another place I love to go to when in need of piece and quiet is <a href="http://www.tigraine.at/2008/05/26/working-till-late/">Unterkreuth</a>. A <a href="http://www.mickl.at.tc/">very nice bar</a> on the top of a mountain usually frequented by paragliding enthusiasts, since they started serving coffee there is really no better place to be.</p>  <p>Both places are easily reachable from Klagenfurt in 10-15 minutes by car and provide exactly the piece and quiet I require when I need to watch a screencast or read a book. </p>  <p>Ps: I’d like to thank Robert for lending me his superhuman strength for two days and making the new office happen.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>598</wp:post_id>
<wp:post_date>2009-07-03 00:48:08</wp:post_date>
<wp:post_date_gmt>2009-07-02 22:48:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-office-feels-liberating-outside-is-still-better</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>2642</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.170.74.54</wp:comment_author_IP>
<wp:comment_date>2009-07-03 14:57:05</wp:comment_date>
<wp:comment_date_gmt>2009-07-03 12:57:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[definitely much better !! although the cave-feeling somehow disappeared.. :)
anyway the speakers should stick to the wall + think about wallmounting the two screens (there is time when you want to work with paper in front of the screen and don't have to turn right for that - so an A4 sheet should easily fit between the keyboard and you...). i would put the PC in the right corner and replace it with a neat fridge (at least after you handled the cooling problems - for that i would think about a unit installed in the room, taking in the air from the room and leading away the water into the drainpipe in the wall to the bathroom; if you want ventilation too you can take in the air from the garret and lead the exhaust-air to the air outlet pipe of the bathroom that i suppose should also be in the same wall)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2643</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.163</wp:comment_author_IP>
<wp:comment_date>2009-07-03 14:59:08</wp:comment_date>
<wp:comment_date_gmt>2009-07-03 12:59:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Interesting ideas. But the screen can't be wallmounted and I don't want to do that. 

We'll talk about the AC when you come to Klu ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Using ELMAH Error logging with Castle MonoRail Rescues</title>
<link>http://www.tigraine.at/2009/07/03/using-elmah-error-logging-with-castle-monorail/</link>
<pubDate>Fri, 03 Jul 2009 13:01:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category domain="tag"><![CDATA[asp.net monorail elmah castle]]></category>

		<category domain="tag" nicename="aspnet-monorail-elmah-castle"><![CDATA[asp.net monorail elmah castle]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/03/using-elmah-error-logging-with-castle-monorail/</guid>
<description></description>
<content:encoded><![CDATA[<p>On my last project I made ELMAH (the ever awesome <a href="http://code.google.com/p/elmah/">ASP.NET error logging framework</a>) <a href="http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/">work with ASP.NET MVC</a> by modifying the routing logic a bit. It was quite simple since ASP.NET MVC throws HttpExceptions around quite liberally and you are frequently presented with a <a href="http://en.wikipedia.org/wiki/Screens_of_death#ASP.NET">YSOD</a> that then gets logged by ELMAH. </p>  <p>Using MonoRail the <a href="http://code.google.com/p/elmah/wiki/DotNetSlackersArticle#Signaling_errors">general routine of setting up ELMAH</a> still applies (even simpler), but it’s customary to have a general <a href="http://www.castleproject.org/monorail/documentation/trunk/usersguide/rescues.html">rescue view</a> that informs the user when something went wrong. Since the rescue concept in MR basically swallows Exceptions and prevents them from reaching ELMAH we need to serve them to ELMAH through <a href="http://code.google.com/p/elmah/wiki/DotNetSlackersArticle#Signaling_errors">ErrorSignaling</a>. </p>  <p>Defining a rescue in MonoRail according to the tutorials looks like this:</p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5ae012d3-5092-415c-b5ab-6c29f8f41f5f" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Rescue("generalError")]
public class DemoController : SmartDispatcherController
{
&#160;&#160;&#160;&#160;[Rescue("indexError")]
&#160;&#160;&#160;&#160;public void Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new DivideByZeroException();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p></p>

<p>The string passed to the RescueAttribute identifies the name of the view to load within your <em>Views\rescues\ </em>folder if an exception occurs. This is bad for us because we can’t execute any code to signal ELMAH on the way to the view and within the view.</p>

<p>This is where the RescueController overload for RescueAttribute comes into play. You can define a whole controller that will handle exceptions and we can execute code there before rendering a view. To do so we just need to implement IRescueController and inherit from SmartDispatcherController:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:190a82ca-0a9f-4ff3-8610-7e188942b861" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Layout("default")]
public class RescueController : SmartDispatcherController, IRescueController
{
&#160;&#160;&#160;&#160;public void Rescue(Exception exception, IController controller, IControllerContext controllerContext)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ErrorSignal.FromCurrentContext().Raise(exception);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RenderSharedView(Path.Combine("rescues", "generalerror"));
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>We can use this new controller by changing the Rescue attribute:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:52982b67-d719-449d-89f3-2634cd7c24ee" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Rescue(typeof(RescueController))]
public void Index()
{
&#160;&#160;&#160;&#160;throw new DivideByZeroException();
}
</pre></div>

<p>Now in case you want to have multiple error-pages (like one general and one telling the user he did something wrong) you could also define multiple rescue methods inside your RescueController and call each of those when needed:</p>

<p></p>

<p></p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:593f97b6-54a8-4f3b-a6d2-e006c4e52f5c" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Rescue(typeof(RescueController))]
public class DemoController : SmartDispatcherController
{
&#160;&#160;&#160;&#160;[Rescue(typeof(RescueController), "IndexRescue")]
&#160;&#160;&#160;&#160;public void Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new DivideByZeroException();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void List()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;throw new NotImplementedException();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>If an exception was to occur in <em>List()</em> it would get handled by the Rescue method inside your <em>RescueController</em>, if <em>Index</em> throws MR will try to call a method called <em>IndexRescue</em>. And both can be logged by ELMAH.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>599</wp:post_id>
<wp:post_date>2009-07-03 15:01:47</wp:post_date>
<wp:post_date_gmt>2009-07-03 13:01:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-elmah-error-logging-with-castle-monorail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>icsd1.jpg</title>
<link>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/icsd1jpg/</link>
<pubDate>Fri, 03 Jul 2009 13:37:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/icsd1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>601</wp:post_id>
<wp:post_date>2009-07-03 15:37:52</wp:post_date>
<wp:post_date_gmt>2009-07-03 13:37:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>icsd1jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>603</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/icsd1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/icsd1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:4:"1024";s:6:"height";s:4:"1000";s:14:"hwstring_small";s:22:"height='96' width='98'";s:4:"file";s:17:"2009/07/icsd1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"icsd1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"icsd1-300x292.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"292";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>icsd1-thumb.jpg</title>
<link>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/icsd1-thumbjpg/</link>
<pubDate>Fri, 03 Jul 2009 13:37:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/icsd1-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>602</wp:post_id>
<wp:post_date>2009-07-03 15:37:53</wp:post_date>
<wp:post_date_gmt>2009-07-03 13:37:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>icsd1-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>603</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/icsd1-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/icsd1-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"496";s:6:"height";s:3:"484";s:14:"hwstring_small";s:22:"height='96' width='98'";s:4:"file";s:23:"2009/07/icsd1-thumb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"icsd1-thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"icsd1-thumb-300x292.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"292";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>New imagineClub website design poll</title>
<link>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/</link>
<pubDate>Fri, 03 Jul 2009 13:37:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=603</guid>
<description></description>
<content:encoded><![CDATA[<p>I just got email from <a href="http://www.nephilistic.com/">Kristof</a>&#160; with a raw draft of a new design for the imagineClub website I’m currently building. I’d really like to hear your feedback on this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/icsd2.jpg" target="_blank"><img title="iC-sd2" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="484" alt="iC-sd2" src="http://www.tigraine.at/wp-content/uploads/2009/07/icsd2-thumb.jpg" width="496" border="0" /></a></p>  <p><strong>Update: </strong>Sorry I didn’t include any more background on the topic. imagineClub is a club that focuses on helping students at Klagenfurt University with their studies and enable them to easily access new Microsoft technology. I wrote a more <a href="http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/">complete article about the imagineClub</a> some time ago. </p>  <p>Please take a few seconds to answer this little survey. It will help us reach a decision and improve the design:</p>  <p><iframe marginwidth="0" marginheight="0" src="http://spreadsheets.google.com/embeddedform?key=rvleQxuDaj244CNhbSoTAgA" frameborder="0" width="500" height="500">Loading...</iframe></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>603</wp:post_id>
<wp:post_date>2009-07-03 15:37:54</wp:post_date>
<wp:post_date_gmt>2009-07-03 13:37:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-imagineclub-website-design-poll</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1250072734</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2677</wp:comment_id>
<wp:comment_author><![CDATA[imagineClub Website feedback results | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/11/imagineclub-website-feedback-results/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-11 02:01:28</wp:comment_date>
<wp:comment_date_gmt>2009-07-11 00:01:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] is more or less a blank MonoRail template while I am trying to get the XHTML to look like Kristof’s design. I am really trying hard to maintain a clean markup to enable accessibility to all [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2659</wp:comment_id>
<wp:comment_author><![CDATA[gutsyheron]]></wp:comment_author>
<wp:comment_author_email>gutsyheron@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.121.99.122</wp:comment_author_IP>
<wp:comment_date>2009-07-07 22:41:11</wp:comment_date>
<wp:comment_date_gmt>2009-07-07 20:41:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[amazing design performance!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>icsd2.jpg</title>
<link>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/icsd2jpg/</link>
<pubDate>Sun, 05 Jul 2009 09:27:51 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/icsd2.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>604</wp:post_id>
<wp:post_date>2009-07-05 11:27:51</wp:post_date>
<wp:post_date_gmt>2009-07-05 09:27:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>icsd2jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>603</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/icsd2.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/icsd2.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:4:"1024";s:6:"height";s:4:"1000";s:14:"hwstring_small";s:22:"height='96' width='98'";s:4:"file";s:17:"2009/07/icsd2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"icsd2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"icsd2-300x292.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"292";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>icsd2-thumb.jpg</title>
<link>http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/icsd2-thumbjpg/</link>
<pubDate>Sun, 05 Jul 2009 09:27:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/icsd2-thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>605</wp:post_id>
<wp:post_date>2009-07-05 11:27:53</wp:post_date>
<wp:post_date_gmt>2009-07-05 09:27:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>icsd2-thumbjpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>603</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/icsd2-thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/icsd2-thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"496";s:6:"height";s:3:"484";s:14:"hwstring_small";s:22:"height='96' width='98'";s:4:"file";s:23:"2009/07/icsd2-thumb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"icsd2-thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"icsd2-thumb-300x292.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"292";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/imagepng-2/</link>
<pubDate>Thu, 09 Jul 2009 18:09:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>609</wp:post_id>
<wp:post_date>2009-07-09 20:09:41</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"372";s:6:"height";s:3:"143";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:17:"2009/07/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x143.png";s:5:"width";s:3:"150";s:6:"height";s:3:"143";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x115.png";s:5:"width";s:3:"300";s:6:"height";s:3:"115";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/image-thumbpng-2/</link>
<pubDate>Thu, 09 Jul 2009 18:09:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>610</wp:post_id>
<wp:post_date>2009-07-09 20:09:41</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"240";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:23:"2009/07/image-thumb.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"image-thumb-150x92.png";s:5:"width";s:3:"150";s:6:"height";s:2:"92";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/imagepng-3/</link>
<pubDate>Thu, 09 Jul 2009 18:09:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>611</wp:post_id>
<wp:post_date>2009-07-09 20:09:42</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"245";s:14:"hwstring_small";s:23:"height='96' width='125'";s:4:"file";s:18:"2009/07/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x229.png";s:5:"width";s:3:"300";s:6:"height";s:3:"229";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/imagepng-4/</link>
<pubDate>Thu, 09 Jul 2009 18:09:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>612</wp:post_id>
<wp:post_date>2009-07-09 20:09:42</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"245";s:14:"hwstring_small";s:23:"height='96' width='125'";s:4:"file";s:18:"2009/07/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image2-300x229.png";s:5:"width";s:3:"300";s:6:"height";s:3:"229";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/imagepng-5/</link>
<pubDate>Thu, 09 Jul 2009 18:09:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>613</wp:post_id>
<wp:post_date>2009-07-09 20:09:44</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"584";s:6:"height";s:3:"480";s:14:"hwstring_small";s:23:"height='96' width='116'";s:4:"file";s:18:"2009/07/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image3-300x246.png";s:5:"width";s:3:"300";s:6:"height";s:3:"246";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/image-thumbpng-3/</link>
<pubDate>Thu, 09 Jul 2009 18:09:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>614</wp:post_id>
<wp:post_date>2009-07-09 20:09:44</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>615</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"240";s:6:"height";s:3:"197";s:14:"hwstring_small";s:23:"height='96' width='116'";s:4:"file";s:24:"2009/07/image-thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My new toy: Wacom Bamboo</title>
<link>http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/</link>
<pubDate>Thu, 09 Jul 2009 18:09:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/</guid>
<description></description>
<content:encoded><![CDATA[<p>After almost two weeks of waiting for it I finally picked up my <a href="http://www.wacom.com/bambootablet/bamboo.php">Wacom Bamboo</a> today. </p>  <p>So, here comes the obvious for a programmer:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb.png" width="240" height="92" /></a> </p>  <p>So, I got myself a pen tablet. Why would I do something like that?</p>  <p>First: Rest assured, I didn’t jump on the designer bandwagon, I still suck at drawing and that Hello World up there took me 3 tries and still looks bad. </p>  <p>It just happened that I loved Jon Skeet’s presentation slides he had for the <a href="http://msmvps.com/blogs/jon_skeet/archive/2009/06/19/os-jam-at-google-london-c-4-and-the-dlr.aspx">OS Jam at Google London on C# 4 and DLR</a>. The idea is just brilliant. Almost no real content on the slides, just some pointers in a very “human” style.</p>  <p>While I was preparing for this years <a href="http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/">summer-camp at the University</a> (I’m instructing some kids on XNA game programming again) I used a <a href="http://www.wacom.com/cintiq/index.php">CintiQ 21UX</a> we have sitting at the company to try this with some pretty cool results: </p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image1.png" width="320" height="245" /> </p>  <p></p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image2.png" width="320" height="245" /></p>  <p>Obviously, a bunch of 16 year olds isn’t the perfect gauge for presentation slides, but almost everyone who saw that slide deck loved it. It’s so totally different and less formal and tense that it was totally worth the work. I just didn’t want to make a habit out of using other people’s PCs at work so I obviously needed something similar, yet much cheaper. And that’s where the Bamboo A6 really came in handy: 70&euro; at my local <a href="http://www.ditech.at">DiTech</a> store was quite a bargain. (Although it took them 2 weeks to order and deliver that thing!)</p>  <p>On the Bamboo side of things, it just works. You plug it in and it works. After installing the driver I had around 30 minutes of trouble finding the settings dialog to make the tablet not target my whole screen (A6 pointing at a 24” screen is just awful), but once I reduced that it became a joy to work with. Recognition is very sharp and very precise, the different pressure levels are nice in Photoshop.</p>  <p>I’m also amazed about how well the Windows Vista handwriting recognition has become. Obviously as a programmer I’m still a thousand times faster when using the keyboard, but it’s nice see it working. </p>  <p>Another application besides presentations is obviously my blog. I hate UML modeling software with all my heart. So much that my drafts folder has accumulated 3 different rants about how clumsy and slow it is to throw together a UML with the current tools. I usually end up writing code to generate a class diagram instead of trying to model a class without coding it.    <br />With the power of a tablet I can just throw together a raw sketch out the UML to illustrate my point without having to jump through all the hoops current modeling software puts you through. So in the future, expect some of these:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image3.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb1.png" width="240" height="197" /></a>&#160;</p>  <p></p>  <p>Btw: Thanks for all the feedback on the iC-Website design (if you didn’t already vote, please <a href="http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/">tell us what you think</a>)!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>615</wp:post_id>
<wp:post_date>2009-07-09 20:09:45</wp:post_date>
<wp:post_date_gmt>2009-07-09 18:09:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-new-toy-wacom-bamboo</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2684</wp:comment_id>
<wp:comment_author><![CDATA[IT-Camp 2009 at Klagenfurt University | Tigraine]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-13 13:50:06</wp:comment_date>
<wp:comment_date_gmt>2009-07-13 11:50:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] the first chance I had to try out a more “amateurish” style of PowerPoint slides that led to me buying a graphic tablet. The presentation was quite successful I think, so we used the same one for the final presentation [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=616</link>
<pubDate>Sat, 11 Jul 2009 00:01:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>616</wp:post_id>
<wp:post_date>2009-07-11 02:01:02</wp:post_date>
<wp:post_date_gmt>2009-07-11 00:01:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"362";s:6:"height";s:3:"220";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:18:"2009/07/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x182.png";s:5:"width";s:3:"300";s:6:"height";s:3:"182";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>imagineClub Website feedback results</title>
<link>http://www.tigraine.at/2009/07/11/imagineclub-website-feedback-results-2/</link>
<pubDate>Sat, 11 Jul 2009 00:01:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/11/imagineclub-website-feedback-results-2/</guid>
<description></description>
<content:encoded><![CDATA[<p>I hate web development, I learned to hate it when I was translating Photoshop designs into XHTML years ago and I was really hoping to never do it again. </p>  <p>Unfortunately, most people who took the <a href="http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/">iC Website design</a> survey really liked the new design, so I decided to start working to get this thing done sometime soon. Here is the poll result:</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image4.png" width="362" height="220" /> </p>  <p>Thanks again to all who participated! </p>  <p>So, where are we? First: I am developing the iC website in the open. The source code is available at the <a href="http://bitbucket.org/Tigraine/ic-website/">project’s BitBucket site</a>, so if you want to see what progress has been made just follow the <a href="http://bitbucket.org/Tigraine/ic-website/atom/">project’s commit history RSS</a>. </p>  <p>Sadly, Currently the repository is more or less a blank MonoRail template while I am trying to get the XHTML to look like <a href="http://www.tigraine.at/2009/07/03/new-imagineclub-website-design-poll/">Kristof’s design</a>. I am really trying hard to maintain a clean markup to enable accessibility to all users. </p>  <p>Unfortunately, my CSS skills are somewhat lacking, so I had to learn the hard way that background-position won’t work with background-repeat, and that there is no chance in hell we’ll ever support IE6. </p>  <p>I’m also not sure yet on what license the project should use. I slashed a APL2 license on it just to have one, but I guess we’ll drop that in favor of a CC license.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>618</wp:post_id>
<wp:post_date>2009-07-11 02:01:23</wp:post_date>
<wp:post_date_gmt>2009-07-11 00:01:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagineclub-website-feedback-results-2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>IT-Camp 2009 at Klagenfurt University</title>
<link>http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/</link>
<pubDate>Mon, 13 Jul 2009 11:16:01 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image5.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="© Georg Holzer" border="0" alt="© Georg Holzer" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb2.png" width="554" height="160" /></a> </p>  <p>Ever tried mixing 9 high school students, <a href="http://creators.xna.com/en-us/news/xnagamestudio3.1">XNA Game Studio 3.1</a> and one week of mentorship together? The result is nondeterministic, but experience showed that the projects turn out to be really awesome and fun to build.</p>  <p>After <a href="http://www.tigraine.at/2008/07/04/it-camp-at-klagenfurt-university/">last year’s IT-Camp</a> the University of Klagenfurt decided to continue the project where 15-17 year old teenagers are brought to Klagenfurt to experience university life firsthand. Like last year I was instructing a course about computer game development using Microsoft XNA Game Studio together with Christoph Kofler.</p>  <p>The first day started with a short introduction to computer games in terms of genres, target audience and distinctions. Turns out most of our students were avid players, so we couldn’t keep them away from our Guitar Hero setup for long. After Christoph and I got our asses kicked at Guitar Hero we then went on to analyze what made games great or not and how to judge games in different genres.</p>  <p>On Tuesday <a href="http://www.itec.uni-klu.ac.at/~mlux/wiki/doku.php">Mathias</a> came in to deliver a little lecture about <a href="http://www.itec.uni-klu.ac.at/~mlux/teaching/games09/slides/games-02-projects.pdf">game design</a> (thank again!) before we gave them a little tutorial on XNA and the most important things in 2D space like collision detection and state management. After that, they started development of their own games.</p>  <p>Game projects where pretty diverse this year since we explicitly allowed them to experiment with their own ideas rather than everyone doing the same 2D space shooter. This led to these really awesome projects:</p>  <h3>Fisch-Game:</h3> <object width="480" height="385"> <param name="movie" value="http://www.youtube.com/v/BBkUoKEU0-M&amp;hl=de&amp;fs=1&amp;"></param> <param name="allowFullScreen" value="true"></param> <param name="allowscriptaccess" value="always"></param> <embed src="http://www.youtube.com/v/BBkUoKEU0-M&amp;hl=de&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed> </object>  <p>The little fish Kiku has to save the mermaid. He has to avoid the sharks for more than 40 seconds to finish the game. Complete with Arielle the mermaid sounds.</p>  <h3>Adventure</h3> <object width="480" height="385"> <param name="movie" value="http://www.youtube.com/v/aO8G31uxRII&amp;hl=de&amp;fs=1&amp;"></param> <param name="allowFullScreen" value="true"></param> <param name="allowscriptaccess" value="always"></param> <embed src="http://www.youtube.com/v/aO8G31uxRII&amp;hl=de&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed> </object>  <p>A</p>  <p>This Zelda-like adventure features a scrolling map and animated characters. A per pixel collision detection was also implemented. Goal is to solve one simple quest, but the whole thing could easily be extended to something much bigger.</p>  <h3>Mario-Clone</h3> <object width="480" height="385"> <param name="movie" value="http://www.youtube.com/v/fYhWszWbUQo&amp;hl=de&amp;fs=1&amp;"></param> <param name="allowFullScreen" value="true"></param> <param name="allowscriptaccess" value="always"></param> <embed src="http://www.youtube.com/v/fYhWszWbUQo&amp;hl=de&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed> </object>  <p>A Supermario clone that features basic collision detection and shooting of a projectile. The projectile will only hit one enemy and different enemies do more or less damage. Also it uses a small state machine to allow Mario to jump and fall.</p>  <h3>Maxrace</h3> <object width="480" height="295"> <param name="movie" value="http://www.youtube.com/v/LvF_Hz9Ju4U&amp;hl=de&amp;fs=1&amp;"></param> <param name="allowFullScreen" value="true"></param> <param name="allowscriptaccess" value="always"></param> <embed src="http://www.youtube.com/v/LvF_Hz9Ju4U&amp;hl=de&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="295"></embed> </object>  <p>A fairly simple but funny game. Goal is to reach the princess by alternating the left and right arrow button on the keyboard. Time is recorded and entered into the highscore. Really cool about this game is it’s simplicity in state – only one variable is incremented by 1 every valid keystroke.</p>  <h3>Asteroidsx</h3> <object width="480" height="385"> <param name="movie" value="http://www.youtube.com/v/-CGLCP3tEIQ&amp;hl=de&amp;fs=1&amp;"></param> <param name="allowFullScreen" value="true"></param> <param name="allowscriptaccess" value="always"></param> <embed src="http://www.youtube.com/v/-CGLCP3tEIQ&amp;hl=de&amp;fs=1&amp;" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed> </object>  <p>A Asteroid clone that features a physics engine. Asteroids get drawn into the planet in the middle by gravity, player has to avoid asteroids and &quot;poke&quot; them if they are too far away from the planet's gravity to keep them going. Very challenging math-wise and well implemented. Unfortunately features were cut because of delays on the physics part.</p>  <h3>Presentation</h3>  <p>This was the first chance I had to try out a more “amateurish” style of PowerPoint slides that led to <a href="http://www.tigraine.at/2009/07/09/my-new-toy-wacom-bamboo/">me buying a graphic tablet</a>. The presentation was quite successful I think, so we used the same one for the final presentation before media and parents:</p>  <div style="text-align: left; width: 425px" id="__ss_1713853"><a style="margin: 12px 0px 3px; display: block; font: 14px helvetica,arial,sans-serif; text-decoration: underline" title="Sommercamp Computer Games Presentation 09" href="http://www.slideshare.net/Tigraine/sommercamp-computer-games-presentation-09">Sommercamp Computer Games Presentation 09</a> <object style="margin:0px" width="425" height="355"> <param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=sommercampcomputergamespresentation09-090713053812-phpapp02&amp;stripped_title=sommercamp-computer-games-presentation-09" /> <param name="allowFullScreen" value="true" /> <param name="allowScriptAccess" value="always" /> <embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=sommercampcomputergamespresentation09-090713053812-phpapp02&amp;stripped_title=sommercamp-computer-games-presentation-09" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed> </object>    <div style="font-family: tahoma,arial; height: 26px; font-size: 11px; padding-top: 2px">View more <a style="text-decoration: underline" href="http://www.slideshare.net/">presentations</a> from <a style="text-decoration: underline" href="http://www.slideshare.net/Tigraine">Tigraine</a>.</div> </div>  <h3>Finally</h3>  <p>I’d really like to thank the <a href="http://www.uni-klu.ac.at/">University of Klagenfurt</a> and <a href="http://www.semanticmetadata.net/">Mathias Lux</a> for this opportunity and also say a little thanks to our students. The week was (as last year) a very rewarding and fun experience for me and I hope to continue this next year.</p>  <p>After 2 years of doing this with XNA game studio I’d also like to point out that XNA has proven itself to be a really perfect tool for starting game development. We get students with a quite diverse skill set and they all picked up the tool very easily and all managed to deliver something truly awesome, whether it was object-oriented or just a long procedural piece. The framework won’t stand in your way while still giving you some of the most important stuff for free.</p>  <h3>Sourcecode</h3>  <p>The Sources of the games will be hosted at the IT-Camp’s website and I’ll add a link to it as soon as we manage to upload it.</p>  <p></p>  <p>Ps: Thanks <a href="http://www.georgholzer.at">Georg Holzer</a> for allowing me to use his photograph of our end presentation!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>619</wp:post_id>
<wp:post_date>2009-07-13 13:16:01</wp:post_date>
<wp:post_date_gmt>2009-07-13 11:16:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>it-camp-2009-at-klagenfurt-university</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/imagepng-2/</link>
<pubDate>Mon, 13 Jul 2009 12:30:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>621</wp:post_id>
<wp:post_date>2009-07-13 14:30:25</wp:post_date>
<wp:post_date_gmt>2009-07-13 12:30:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>619</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:4:"1019";s:6:"height";s:3:"290";s:14:"hwstring_small";s:23:"height='36' width='127'";s:4:"file";s:18:"2009/07/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image5-300x85.png";s:5:"width";s:3:"300";s:6:"height";s:2:"85";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/13/it-camp-2009-at-klagenfurt-university/image-thumbpng-2/</link>
<pubDate>Mon, 13 Jul 2009 12:30:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>622</wp:post_id>
<wp:post_date>2009-07-13 14:30:29</wp:post_date>
<wp:post_date_gmt>2009-07-13 12:30:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>619</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"554";s:6:"height";s:3:"160";s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:24:"2009/07/image-thumb2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb2-300x86.png";s:5:"width";s:3:"300";s:6:"height";s:2:"86";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/14/dropping-ie6/imagepng-2/</link>
<pubDate>Tue, 14 Jul 2009 14:56:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>624</wp:post_id>
<wp:post_date>2009-07-14 16:56:23</wp:post_date>
<wp:post_date_gmt>2009-07-14 14:56:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>626</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"376";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:18:"2009/07/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image6-300x176.png";s:5:"width";s:3:"300";s:6:"height";s:3:"176";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/14/dropping-ie6/image-thumbpng-2/</link>
<pubDate>Tue, 14 Jul 2009 14:56:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>625</wp:post_id>
<wp:post_date>2009-07-14 16:56:31</wp:post_date>
<wp:post_date_gmt>2009-07-14 14:56:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>626</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"644";s:6:"height";s:3:"380";s:14:"hwstring_small";s:23:"height='75' width='127'";s:4:"file";s:24:"2009/07/image-thumb3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb3-300x177.png";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Dropping IE6</title>
<link>http://www.tigraine.at/2009/07/14/dropping-ie6/</link>
<pubDate>Tue, 14 Jul 2009 14:56:31 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/14/dropping-ie6/</guid>
<description></description>
<content:encoded><![CDATA[<p>This one’s going to be quick. While doing the xhtml/css for the new iC-Website I decided that there will be no IE6 support. The site will be standards compliant and should pass W3C XHTML 1.0 strict validation.</p>  <p>The current markup already works quite well with absolutely no hacks/js-tricks to look like this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image6.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb3.png" width="644" height="380" /></a> </p>  <p>Since IE8 renders this flawlessly (except for the rounded corners within the date), I see no real value in trying to make this check out in IE6. I’ve spent too much time on this already so in case you haven’t upgraded yet: <a href="http://www.microsoft.com/windows/internet-explorer/default.aspx">Get IE8</a>!</p>  <p>On a side note: I’m amazed how well IE8 renders the site. Everything I did so far worked perfectly on all 3 rendering engines without any problem. Thank god the dark days are over!</p>  <p>As always, you can follow the development on <a href="http://bitbucket.org/Tigraine/ic-website/">BitBucket</a>. The site’s source code is <a href="http://bitbucket.org/Tigraine/ic-website/src/">available there</a>. Feel free to comment on the markup :).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>626</wp:post_id>
<wp:post_date>2009-07-14 16:56:31</wp:post_date>
<wp:post_date_gmt>2009-07-14 14:56:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dropping-ie6</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/14/making-simple-things-hard-nvelocity/imagepng-2/</link>
<pubDate>Tue, 14 Jul 2009 16:41:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>627</wp:post_id>
<wp:post_date>2009-07-14 18:41:43</wp:post_date>
<wp:post_date_gmt>2009-07-14 16:41:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>629</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"515";s:6:"height";s:3:"289";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:18:"2009/07/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image7-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/14/making-simple-things-hard-nvelocity/image-thumbpng-2/</link>
<pubDate>Tue, 14 Jul 2009 16:41:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>628</wp:post_id>
<wp:post_date>2009-07-14 18:41:44</wp:post_date>
<wp:post_date_gmt>2009-07-14 16:41:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>629</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"519";s:6:"height";s:3:"293";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:24:"2009/07/image-thumb4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb4-300x169.png";s:5:"width";s:3:"300";s:6:"height";s:3:"169";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Making simple things hard: NVelocity</title>
<link>http://www.tigraine.at/2009/07/14/making-simple-things-hard-nvelocity/</link>
<pubDate>Tue, 14 Jul 2009 16:41:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/14/making-simple-things-hard-nvelocity/</guid>
<description></description>
<content:encoded><![CDATA[<p>I was pretty done with the world after spending almost 2 days with xhtml/css coding for the new iC-Website. Turns out the programming gods want to teach me a lesson. Look at my Google Search log:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image7.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb4.png" width="519" height="293" /></a> </p>  <p>What you see here is me spending almost 45 minutes on formatting a date!</p>  <p>I need to take the date and split it into 3 parts so I can stick it into the following markup:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2c29e5ae-00ca-4194-b7d8-923eff75798d" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;div class="date"&gt;
&#160;&#160;&#160;&#160;&lt;span class="day"&gt;$day&lt;/span&gt;&lt;span class="month"&gt;$month&lt;/span&gt;
&#160;&#160;&#160;&#160;&lt;hr /&gt;
&#160;&#160;&#160;&#160;&lt;span class="year"&gt;$year&lt;/span&gt;
&lt;/div&gt;
</pre></div>

<p>I thought, hey that should be really simple, just call DateTime.ToString() and all will be well. And because it was so obvious I tried to create a macro to keep my viewcode clean. The result was:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2c3e4e68-6d68-4cb4-af5c-6ca32e96324e" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
#macro ( dateBox $currentDate )
#set ($day = $currentDate.Day.ToString("00") )
#set ($month = $currentDate.Month.ToString("00") )
#set ($year = $currentDate.ToString("yy") )
&lt;div class="date"&gt;
&#160;&#160;&#160;&#160;&lt;span class="day"&gt;$day&lt;/span&gt;&lt;span class="month"&gt;$month&lt;/span&gt;
&#160;&#160;&#160;&#160;&lt;hr /&gt;
&#160;&#160;&#160;&#160;&lt;span class="year"&gt;$year&lt;/span&gt;
&lt;/div&gt;
#end
</pre></div>

<p>I still have no explanation why passing a DateTime into the macro isn’t working. Maybe because calling macros in NV isn’t the same as calling a CLR method. So I had to abandon the macro idea and just code it the way it is. </p>

<p>Now what really pissed me off to the point where I almost considered using <a href="http://www.aspview.com/">ASPView</a> as a view engine was that I spent almost 45 minutes with this for one simple reason: NVelocity won’t report errors as long as they don’t break the parser.</p>

<p>Perfect example:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:1cda8931-6c09-4599-aaa4-59f5e9f9ea9e" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
$DateTime.Now.Format("dd MM yyyy")
</pre></div>

<p>Will just result in a <em>“$DateTime.Now.Format(&quot;dd MM yyyy&quot;)”</em> output, for no apparent reason other than the fact that there is no Format() method on the DateTime. Clearly my bad, I’m stupid and far too dependent on IntelliSense, but if NV isn’t telling me how I screwed up it’s really hard to find the mistake. Especially without syntax highlighting and intellisense DateTime.Format(…) looks perfectly reasonable at first. </p>

<p>Finally I ended up with this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:af6137ce-581b-4127-92a4-5691ad30b33e" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
#set ($day = $currentDate.ToString("dd") )
#set ($month = $currentDate.ToString("MM") )
#set ($year = $currentDate.ToString("yy") )
&lt;div class="date"&gt;
&#160;&#160;&#160;&#160;&lt;span class="day"&gt;$day&lt;/span&gt;&lt;span class="month"&gt;$month&lt;/span&gt;
&#160;&#160;&#160;&#160;&lt;hr /&gt;
&#160;&#160;&#160;&#160;&lt;span class="year"&gt;$year&lt;/span&gt;
&lt;/div&gt;

</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>629</wp:post_id>
<wp:post_date>2009-07-14 18:41:44</wp:post_date>
<wp:post_date_gmt>2009-07-14 16:41:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>making-simple-things-hard-nvelocity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Mixing static strings with NVelocity variables</title>
<link>http://www.tigraine.at/2009/07/14/mixing-static-strings-with-nvelocity-variables/</link>
<pubDate>Tue, 14 Jul 2009 17:50:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/14/mixing-static-strings-with-nvelocity-variables/</guid>
<description></description>
<content:encoded><![CDATA[<p>In an ongoing effort to get into NVelocity while programming the <a href="http://www.tigraine.at/category/programmierung/projects/imagineclub-website/">iC-Website</a> I wanted to concatenate a filename with the current loop count variable:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:50a177a7-23f8-427b-ab54-ce7e5cbfe938" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;img src="/Content/images/dummy$velocityCount.png" alt="post-image" /&gt;
</pre></div>

<p>This isn’t working. You’ll end up with <em>dummy$velocityCount.png</em>. While I’d like it to result in <em>dummy1.png</em>.

  <br />I suspected it could be solved somehow by using our beloved angle bracket to tell NV to explicitly evaluate my text:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ef7f1b08-ee5a-4f5b-bc04-614681059761" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;img src="/Content/images/dummy{$velocityCount}.png" alt="post-image" /&gt;
</pre></div>

<p>This will result is <em>dummy{1}.png</em>, why is beyond me but NV will parse it. Still this doesn’t really work so I found the solution on how to explicitly invoke NV evaluation in the NV users guide:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e1a499a8-6ae7-4b3a-ba1d-09751a6a3304" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;img src="/Content/images/dummy${velocityCount}.png" alt="post-image" /&gt;
</pre></div>

<p>This is nothing really new, it’s all laid out in the <a href="http://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html#string_concatenation">NV users-guide</a>, still especially the second case made me scratch my head for a moment. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>630</wp:post_id>
<wp:post_date>2009-07-14 19:50:16</wp:post_date>
<wp:post_date_gmt>2009-07-14 17:50:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mixing-static-strings-with-nvelocity-variables</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ActiveRecord gotchas when testing with an in memory database.</title>
<link>http://www.tigraine.at/2009/07/15/activerecord-gotchas-when-testing-with-an-in-memory-database/</link>
<pubDate>Wed, 15 Jul 2009 17:17:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/15/activerecord-gotchas-when-testing-with-an-in-memory-database/</guid>
<description></description>
<content:encoded><![CDATA[<p>If the title sounds familiar to you, it’s intentional. After having to <a href="http://www.tigraine.at/2009/05/29/fluent-nhibernate-gotchas-when-testing-with-an-in-memory-database/">deal with this in pure NHibernate</a> it came around to also bite me with ActiveRecord.</p>  <p>In short: in-memory SQLite will drop the schema whenever you close the NHibernate ISession object (since ActiveRecord uses NHibernate behind the scenes this poses a problem to us).</p>  <p>So, assuming you have setup ActiveRecord using an InPlaceConfiguratonSource similar to this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c61b39db-8996-45c2-8958-ef421eb88593" class="wlWriterSmartContent">   <pre class="csharp" name="code">IDictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();
properties.Add(&quot;connection.driver_class&quot;, &quot;NHibernate.Driver.SQLite20Driver&quot;);
properties.Add(&quot;dialect&quot;, &quot;NHibernate.Dialect.SQLiteDialect&quot;);
properties.Add(&quot;connection.provider&quot;,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;NHibernate.Connection.DriverConnectionProvider&quot;);
properties.Add(&quot;connection.connection_string&quot;, &quot;Data Source=:memory:;Version=3;New=True;&quot;);
properties.Add(&quot;show_sql&quot;, &quot;true&quot;);
properties.Add(&quot;proxyfactory.factory_class&quot;,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle&quot;);

var source = new InPlaceConfigurationSource();
source.Add(typeof (ActiveRecordBase), properties);

ActiveRecordStarter.Initialize(source, typeof (Member).Assembly.GetTypes());
ActiveRecordStarter.CreateSchema();</pre>
</div>

<p>You will not be able to run any queries against it because there is no schema present. In fact the code will consistently blow up with a <em>SQLiteException</em> stating “<em>no such table:</em> ….”. Unfortunately it’s not really possible to change the SessionFactory implementation here because that code is inside ActiveRecord.</p>

<p>Thank god I found <a href="http://notepad2.wordpress.com/2008/05/19/unit-testing-castle-active-record-using-sqlite-in-memory-database/">this handy guide</a> that suggested subclassing the DriverConnectionProvider class to replace the CloseConnection call with a fake like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3b7fd707-6d53-454d-9296-1c9e4849a512" class="wlWriterSmartContent">
  <pre class="csharp" name="code">public class SqLiteInMemoryTestingConnectionProvider : NHibernate.Connection.DriverConnectionProvider
{&#160;&#160;&#160;&#160; public static System.Data.IDbConnection Connection = null;&#160;&#160;&#160;&#160; public override System.Data.IDbConnection GetConnection()&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (Connection == null)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Connection = base.GetConnection();&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return Connection;&#160;&#160;&#160;&#160; }&#160;&#160;&#160;&#160; public override void CloseConnection(System.Data.IDbConnection conn)&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160; }
}</pre>
</div>

<p>I then had to pass that new ConnectionProvider into NH through the configuration and all was well:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f68e7a38-94b2-4afc-89e8-5384791e91c0" class="wlWriterSmartContent">
  <pre class="csharp" name="code">properties.Add(&quot;connection.provider&quot;,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;ImagineClub.Tests.SqLiteInMemoryTestingConnectionProvider, ImagineClub.Tests&quot;);</pre>
</div>

<p>Only catch is, this doing the AR Initialization is painfully slow so I wrote a baseclass for my xUnit tests that makes sure AR Init is only run once and that the ActiveRecordStarter.CreateSchema() is run before every test (xUnit runs the testclass constructor before each test):</p>

<p>The final implementation for all my tests looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e28e2426-cd37-42a7-9e3f-6c93d1391460" class="wlWriterSmartContent">
  <pre class="csharp" name="code">public class ActiveRecordInMemoryTestBase
{&#160;&#160;&#160;&#160; public ActiveRecordInMemoryTestBase()&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (!ActiveRecordStarter.IsInitialized)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Initialize();&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ActiveRecordStarter.CreateSchema();&#160;&#160;&#160;&#160; }&#160;&#160;&#160;&#160; private static void Initialize()&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; IDictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;connection.driver_class&quot;, &quot;NHibernate.Driver.SQLite20Driver&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;dialect&quot;, &quot;NHibernate.Dialect.SQLiteDialect&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;connection.provider&quot;,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;ImagineClub.Tests.SqLiteInMemoryTestingConnectionProvider, ImagineClub.Tests&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;connection.connection_string&quot;, &quot;Data Source=:memory:;Version=3;New=True;&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;show_sql&quot;, &quot;true&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; properties.Add(&quot;proxyfactory.factory_class&quot;,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; &quot;NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle&quot;);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; var source = new InPlaceConfigurationSource();&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; source.Add(typeof (ActiveRecordBase), properties);&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ActiveRecordStarter.Initialize(source, typeof (Member).Assembly.GetTypes());&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; ActiveRecordStarter.CreateSchema();&#160;&#160;&#160;&#160; }
}

public class SqLiteInMemoryTestingConnectionProvider : NHibernate.Connection.DriverConnectionProvider
{&#160;&#160;&#160;&#160; public static System.Data.IDbConnection Connection = null;&#160;&#160;&#160;&#160; public override System.Data.IDbConnection GetConnection()&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (Connection == null)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Connection = base.GetConnection();&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return Connection;&#160;&#160;&#160;&#160; }&#160;&#160;&#160;&#160; public override void CloseConnection(System.Data.IDbConnection conn)&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160; }
}</pre>
</div>

<p>Caution: If you copy/paste the above make sure to change the namespace and assemblyname for your SqLiteInMemoryTestingConnectionProvider to match yours.</p>

<p>So a database dependant unit test would look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:636346ac-000b-4cf3-aa89-89764e97d5d7" class="wlWriterSmartContent">
  <pre class="csharp" name="code">public class DatabaseTest : ActiveRecordInMemoryTestBase
{&#160;&#160;&#160;&#160; [Fact]&#160;&#160;&#160;&#160; public void DatabaseIsEmpty()&#160;&#160;&#160;&#160; {&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Assert.Equal(0, Member.FindAll().Length);&#160;&#160;&#160;&#160; }
}</pre>
</div>

<p>Initial runs are quite slow due to the AR Init, but the whole test-suite should run quite fast since only the schema creation is run before each test.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>631</wp:post_id>
<wp:post_date>2009-07-15 19:17:52</wp:post_date>
<wp:post_date_gmt>2009-07-15 17:17:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>activerecord-gotchas-when-testing-with-an-in-memory-database</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/imagepng-2/</link>
<pubDate>Sat, 18 Jul 2009 00:30:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>634</wp:post_id>
<wp:post_date>2009-07-18 02:30:57</wp:post_date>
<wp:post_date_gmt>2009-07-18 00:30:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>638</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"217";s:6:"height";s:3:"181";s:14:"hwstring_small";s:23:"height='96' width='115'";s:4:"file";s:18:"2009/07/image8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/image-thumbpng-2/</link>
<pubDate>Sat, 18 Jul 2009 00:30:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>635</wp:post_id>
<wp:post_date>2009-07-18 02:30:58</wp:post_date>
<wp:post_date_gmt>2009-07-18 00:30:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>638</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"221";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height='96' width='114'";s:4:"file";s:24:"2009/07/image-thumb5.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/imagepng-3/</link>
<pubDate>Sat, 18 Jul 2009 00:30:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>636</wp:post_id>
<wp:post_date>2009-07-18 02:30:59</wp:post_date>
<wp:post_date_gmt>2009-07-18 00:30:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>638</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"509";s:6:"height";s:3:"109";s:14:"hwstring_small";s:23:"height='27' width='127'";s:4:"file";s:18:"2009/07/image9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image9-150x109.png";s:5:"width";s:3:"150";s:6:"height";s:3:"109";}s:6:"medium";a:3:{s:4:"file";s:17:"image9-300x64.png";s:5:"width";s:3:"300";s:6:"height";s:2:"64";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/image-thumbpng-3/</link>
<pubDate>Sat, 18 Jul 2009 00:30:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>637</wp:post_id>
<wp:post_date>2009-07-18 02:30:59</wp:post_date>
<wp:post_date_gmt>2009-07-18 00:30:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>638</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"513";s:6:"height";s:3:"113";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:24:"2009/07/image-thumb6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb6-150x113.png";s:5:"width";s:3:"150";s:6:"height";s:3:"113";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb6-300x66.png";s:5:"width";s:3:"300";s:6:"height";s:2:"66";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Building a databound contact form with MonoRail &#8211; Part 1: Views and Databinding</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/</link>
<pubDate>Sat, 18 Jul 2009 00:31:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/</guid>
<description></description>
<content:encoded><![CDATA[<p>In this tutorial we will look the steps necessary to create a form with Castle MonoRail that then gets sent off by email. It will touch FormsHelpers, DataBinding and using the EmailTemplateService to style and EmailSender to send a message. </p>  <p>The tutorial will probably be split into three parts:</p>  <ul>   <li><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/">Views and Databinding</a> </li>    <li><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/">Sending Emails</a></li>    <li>Validation </li> </ul>  <h1>Views and Databinding</h1>  <p>I assume you already have a (maybe blank) MonoRail site running, if not you could check out <a href="http://bitbucket.org/Tigraine/tigraine-samples/changeset/d881325e46f8/">this changeset</a> on my sample-repository where the MonoRail sample app is still pristine.</p>  <h3>1 – Creating the Controller</h3>  <p>There are two components to a contact form: The form and the thanks screen.    <br />In MVC speech that means we’ll have one Index action just serving up the view, and one Thanks action doing the email sending / heavy lifting.     <br />Anyway the controller for now looks fairly simple:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:221c6661-d580-4367-ae40-4e94cb7f8baf" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ContactController : SmartDispatcherController
{
&#160;&#160;&#160;&#160;public void Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<h3>2 – Creating the View</h3>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image8.png"><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb5.png" width="221" height="185" /></a> The usual routine for creating MonoRail NVelocity views applies here. The <tt>\Views\&lt;controllername&gt;\&lt;actionname&gt;.vm</tt> convention dictates that our View is called “Index.vm” and placed inside the <tt>\Views\Contact\</tt> folder</p>

<p>(Btw, you probably want to tell Visual Studio to open .vm files in HTML view with Rightclick .vm file –&gt; Open With –&gt; select HTML Editor –&gt; Hit Set as Default)</p>

<p>Inside the View we need textfields for Name, Email and Subject. And of course one big textarea for the user’s text.</p>

<p>We all know how HTML works: we could go ahead and build a nice <a href="http://www.alistapart.com/articles/prettyaccessibleforms">accessible form</a> by putting together &lt;input type… tags there and hand-coding everything ourselves. Or we’d just rely on the MonoRail <a href="http://www.castleproject.org/monorail/documentation/trunk/helpers/form/index.html">FormsHelper</a> to provide methods to generate the inputs for us:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a0f816bb-9cd1-4edd-8fcb-1f071ec71023" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;form method="post" action="$UrlHelper.For("%{action='Thanks'}")"&gt;
&lt;fieldset&gt;
&#160;&#160;&#160;&#160;&lt;legend&gt;Contact Form&lt;/legend&gt;
&#160;&#160;&#160;&#160;&lt;ol&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;$FormHelper.LabelFor("FormData.Name", "Name")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.TextField("FormData.Name")&lt;/li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;$FormHelper.LabelFor("FormData.Email", "Email")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.TextField("FormData.Email")&lt;/li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;$FormHelper.LabelFor("FormData.Subject", "Subject")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.TextField("FormData.Subject")&lt;/li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;$FormHelper.LabelFor("FormData.Text", "Message")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.TextArea("FormData.Text", "%{rows='14', cols='0'}")&lt;/li&gt;
&#160;&#160;&#160;&#160;&lt;/ol&gt;
&#160;&#160;&#160;&#160;&lt;input type="submit" id="submit" value="Send" /&gt;
&lt;/fieldset&gt;
&lt;/form&gt;
</pre></div>

<p>Note the <tt>$FormHelper.TextField(“FormData.Name”)</tt>call that results in a <tt>&lt;input type=&quot;text&quot; id=&quot;FormData_Name&quot; name=&quot;FormData.Name&quot; value=&quot;&quot; /&gt;</tt>. One nice side-effect of using this helper is that it will look at the current request parameters and if a FormData.Email value is set display it as the textfields value. </p>

<p>Also Interesting here is the syntax NVelocity uses to specify Dictionary data inside the view: <tt>“%{key=’value’}</tt>” specifies a IDictionary that gets passed off to our helpers. </p>

<h3>3 – Creating the DTO</h3>

<p>A contact-request is a message, so I like to have a data-object to represent that message during processing. This also makes it easier for us to retrieve the inputs sent from the Form (more on that later). 
  <br />So we create a class called <tt>ContactRequest</tt> in the <tt>Models\</tt> folder that can easily hold our form data:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f9268e86-eb37-4fdf-8a93-7db255017f19" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
namespace MonoRail.ContactForm.Models
{
&#160;&#160;&#160;&#160;public class ContactRequest
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public string Name { get; set; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public string Email { get; set; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public string Subject { get; set; }
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public string Text { get; set; }
&#160;&#160;&#160;&#160;}
}
</pre></div>

<h3>4 – Databinding the DTO to our Form</h3>

<p>You may have noticed that I named all TextFields in step 2 <tt>FormData.something</tt> where something corresponds to the fields inside the DTO from step 3. FormData is just a arbitrary string to prefix all of my inputs, where the latter will be used by MonoRail’s DataBinder to map the values onto my DTO. 

  <br />We just need to instruct MonoRail on our action method to bind to all Query parameters starting with FormData and stuff them into our ContactRequest object. Our controller now looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e1508cd9-9bf7-4ec4-8fc0-c910a4c9aad7" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ContactController : SmartDispatcherController
{
&#160;&#160;&#160;&#160;public void Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Thanks([DataBind("FormData")] ContactRequest request)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p></p>

<p>If we debug into this action you can see that the request parameter gets filled by MonoRail with the values from the Query:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image9.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb6.png" width="513" height="113" /></a> </p>

<p></p>

<p>Since we now have a <tt>Thanks</tt> action on our Controller we also need to create a <tt>Thanks.vm</tt> view inside our <tt>Views\Contact\</tt> folder. A blank one will do for this tutorial.</p>

<p>Now that we have the form up and bound our DTO to it, we’ll continue in our <a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/">next tutorial step</a> with rendering and email and sending it.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>638</wp:post_id>
<wp:post_date>2009-07-18 02:31:00</wp:post_date>
<wp:post_date_gmt>2009-07-18 00:31:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>building-a-databound-contact-form-with-monorail-part-1-views-and-databinding</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2698</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Building a databound contact form with MonoRail &ndash; Part 2: Sending Emails]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-18 15:04:53</wp:comment_date>
<wp:comment_date_gmt>2009-07-18 13:04:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] with Castle Monorail that gets sent off by email. We already touched FormHelpers and DataBinding in Part1: Views and Databinding, now we’ll see how easy it is to send a email template with [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/imagepng-2/</link>
<pubDate>Sat, 18 Jul 2009 13:03:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>640</wp:post_id>
<wp:post_date>2009-07-18 15:03:20</wp:post_date>
<wp:post_date_gmt>2009-07-18 13:03:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>643</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"183";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:19:"2009/07/image10.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/imagepng-3/</link>
<pubDate>Sat, 18 Jul 2009 13:03:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image11.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>641</wp:post_id>
<wp:post_date>2009-07-18 15:03:20</wp:post_date>
<wp:post_date_gmt>2009-07-18 13:03:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>643</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image11.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image11.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"294";s:6:"height";s:3:"174";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:19:"2009/07/image11.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/image-thumbpng-2/</link>
<pubDate>Sat, 18 Jul 2009 13:03:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>642</wp:post_id>
<wp:post_date>2009-07-18 15:03:21</wp:post_date>
<wp:post_date_gmt>2009-07-18 13:03:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>643</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"298";s:6:"height";s:3:"178";s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:24:"2009/07/image-thumb7.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Building a databound contact form with MonoRail &#8211; Part 2: Sending Emails</title>
<link>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/</link>
<pubDate>Sat, 18 Jul 2009 13:03:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=643</guid>
<description></description>
<content:encoded><![CDATA[<p>This is part 2 of a 3 part tutorial on writing a databound contact form with Castle Monorail that gets sent off by email. We already touched FormHelpers and DataBinding in <a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/">Part1: Views and Databinding</a>, now we’ll see how easy it is to send a email template with MonoRail.</p>  <p>The other parts of this tutorial:</p>  <ul>   <li><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/">Views and Databinding</a> </li>    <li><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/">Sending Emails</a> </li>    <li>Validation </li> </ul>  <h1>Sending Emails</h1>  <p>We left off with a <tt>Thanks</tt> controller method that gets a ContactRequest parameter and now should send off the data by email. </p>  <h3>1 – Configuring our Servers</h3>  <p>Anything involving emails usually requires a SMTP server. The same thing goes for MonoRail, yet MR will default the SMTPServer setting to <tt>127.0.0.1</tt> if you don’t explicitly configure it through your <tt>web.config</tt>. Unfortunately for me I don’t have a SMTP server sitting on my box, so I had to change that setting through the monorail configuration node inside our web.config:</p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:98a93a66-1f10-4d5b-bfcf-38cfaa484ce9" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
&lt;monorail smtpHost="smtp.server.com"&gt;
&#160;&#160;&lt;controllers&gt;
	&#160;&#160;&lt;assembly&gt;MonoRail.ContactForm&lt;/assembly&gt;
&#160;&#160;&lt;/controllers&gt;
&#160;&#160;.
&#160;&#160;.
</pre></div>

<p>You can optionally also optionally configure <tt>smtpPort</tt>, <tt>smtpUsername</tt> and <tt>smtpPassword</tt>.</p>

<h3>2 – Sending a sample Message</h3>

<p>We’ll jump ahead a bit and send a email message right away to verify that our settings so far have been working. Sending emails is as simple as calling the <tt>DeliverEmail</tt> method from within our <tt>Thanks</tt> controller action:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6df74c77-b1a9-431b-8289-d5037d6fe718" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Thanks([DataBind("FormData")] ContactRequest request)
{
&#160;&#160;&#160;&#160;var message = new Message
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To = "tigraine@tigraine.at",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;From = "tigraine@tigraine.at",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Subject = "Hello World",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Body = "My first message"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};
&#160;&#160;&#160;&#160;DeliverEmail(message);
}
</pre></div>

<p>It’s really that easy.</p>

<h3>3 – Templating the Message</h3>

<p>It’s simple to send emails as seen in step 2, but having to chop strings together to send emails is just awful and error prone. Especially when you want some fancy HTML layout in your emails you’ll want to leverage the power of your ViewEngine to create the email message.</p>

<p>MonoRail provides such a method with it’s <tt>RenderMailMessage</tt> method. RenderMailMessage takes in a viewname, a layout and a IDictionary of parameters that will get passed on to the view. 

  <br />For this simple tutorial I chose not to use a layout, so I pass in null. Also make sure you cast your Dictionary to the non-generic IDictionary since there is a <a href="http://groups.google.com/group/castle-project-devel/browse_thread/thread/8f2c7af8cee46c5f?hl=en">little bug with the generic IDictionary</a> overload.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:1476f64f-9619-433e-baf7-845be996e583" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Thanks([DataBind("FormData")] ContactRequest request)
{
&#160;&#160;&#160;&#160;var parameters = new Dictionary&lt;string, object&gt;{{"request", request}};
&#160;&#160;&#160;&#160;var message = RenderMailMessage("contact", null, (IDictionary)parameters);
&#160;&#160;&#160;&#160;DeliverEmail(message);
}
</pre></div>

<p></p>

<p>MonoRail will look for email-templates inside the <tt>Views\mail\</tt> folder, so we’ll add our <tt>contact.vm</tt> there:</p>

<p><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image10.png" width="183" height="244" /> One thing you’ll notice immediately is that all information about from, to, subject and body have not disappeared from our action method. This data will now get extracted from the view, allowing for easy customization. </p>

<p>To do so we need our view to look like this: </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6e8e35c3-23cf-4425-93c6-8f207a4bd703" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
to: tigraine@tigraine.at
from: $request.Email
subject: $request.Subject

This is where the body starts
Message from $request.Name

$request.Text
</pre></div>

<p>MonoRail will extract the information from the to: from: fields and use them to send the message. The above also uses the parameters we passed in to render. <tt>$request</tt> here refers to the object passed into our dictionary with name <tt>request</tt>.</p>

<p style="clear: both">If run we’ll end up with a email simiar to this:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image11.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb7.png" width="298" height="178" /></a> </p>

<h3>4 – Testing it</h3>

<p></p>

<p></p>

<p>Email interactions are perfect examples of stuff that goes wrong without anyone noticing. Someone does some changes in the controller and all of a sudden you don’t get those annoying contact requests for a week. Usually you blame it on a slow week and by the time you suspect something is wrong you already ignored a month of customer feedback.</p>

<p>To avoid this we’ll want to unit test this, and while I usually write my tests first – it’s easier to follow if you know the code under test. Testing in MonoRail is quite simple once you know where to look, unfortunately the documentation is scattered and scarce. </p>

<p>We’ll begin by making our testclass derive from <tt>BaseControllerTest</tt>, a class inside the <tt>Castle.MonoRail.TestSupport</tt> assembly that is used to facilitate testing.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:88c0d712-04e7-4678-a9ce-64cdd86b2740" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ContactBehaviorTest : BaseControllerTest
{
&#160;&#160;&#160;&#160;
}
</pre></div>

<p>This provides us with a neat little function that allows us to sandbox our controller called <tt>PrepareController</tt>.</p>

<p>Testing that a message has been rendered through the template engine would therefore look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:84f165e5-f3ca-4d00-bb8f-efc4765256c5" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void Thanks_RendersTemplatedEmail()
{
&#160;&#160;&#160;&#160;var controller = new ContactController();
&#160;&#160;&#160;&#160;PrepareController(controller);

&#160;&#160;&#160;&#160;controller.Thanks(null);

&#160;&#160;&#160;&#160;Assert.True(HasRenderedEmailTemplateNamed("contact"));
}
</pre></div>

<p>This test merely verifies that a template was rendered, but we probably want to verify that the view gets passed the correct arguments:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3770f67f-ac1d-4e0a-826b-9a53be9b044e" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void Thanks_MailRendering_ParametersGetPassed()
{
&#160;&#160;&#160;&#160;var controller = new ContactController();
&#160;&#160;&#160;&#160;PrepareController(controller);

&#160;&#160;&#160;&#160;var request = new ContactRequest();
&#160;&#160;&#160;&#160;controller.Thanks(request);

&#160;&#160;&#160;&#160;var parameters = RenderedEmailTemplates[0].Parameters["request"];
&#160;&#160;&#160;&#160;Assert.Same(request, parameters);
}
</pre></div>

<p>We now have verified that the “request” parameter object is indeed the one passed into the action method. This is not perfect since we’d just want to verify that the correct values get passed around, not references. But for this tutorial this will suffice. </p>

<p>Next on our checklist should be the fact that the created message is indeed sent off. We do so by using the <tt>StubEngineContext</tt> our <tt>BaseControllerTest</tt> provides us with:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b6b9e5da-bd4f-4119-a0f8-2316828e576f" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void Thanks_EmailSending_SendsOutOneEmail()
{
&#160;&#160;&#160;&#160;var controller = new ContactController();
&#160;&#160;&#160;&#160;PrepareController(controller);
&#160;&#160;&#160;&#160;var context = (StubEngineContext)Context;

&#160;&#160;&#160;&#160;controller.Thanks(new ContactRequest());

&#160;&#160;&#160;&#160;Assert.Equal(1, context.MessagesSent.Count);
}
</pre></div>

<p>This now simply verifies that we did indeed send a mail message.</p>

<p>Now we have a fully working contact form that gets sent off by email through a template. We may want to protect that form from bad input by validating some of our fields. Check back tomorrow for part 3 of this tutorial.</p>

<p>Ps: As always the source for this tutorial is available in my <a href="http://bitbucket.org/Tigraine/tigraine-samples/">BitBucket samples repository</a>. Usually one <a href="http://bitbucket.org/Tigraine/tigraine-samples/changesets/">changeset</a> represents one tutorial step.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>643</wp:post_id>
<wp:post_date>2009-07-18 15:03:22</wp:post_date>
<wp:post_date_gmt>2009-07-18 13:03:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>building-a-databound-contact-form-with-monorail-part-2-sending-emails</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2699</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Building a databound contact form with MonoRail &ndash; Part 1: Views and Databinding]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-18 15:06:17</wp:comment_date>
<wp:comment_date_gmt>2009-07-18 13:06:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Sending Emails [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2709</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Windows Live Writer Plugin: Wrap code in &lt;tt&gt;]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/07/19/windows-live-writer-plugin-wrap-code-in-tt/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-07-19 19:14:01</wp:comment_date>
<wp:comment_date_gmt>2009-07-19 17:14:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] parts inside normal text with the &lt;tt&gt; tags to make them stand out as code. While writing my MonoRail tutorial yesterday I got really annoyed by switching between source and normal view inside Windows Live [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Windows Live Writer Plugin: Wrap code in &lt;tt&gt;</title>
<link>http://www.tigraine.at/2009/07/19/windows-live-writer-plugin-wrap-code-in-tt/</link>
<pubDate>Sun, 19 Jul 2009 17:13:33 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/19/windows-live-writer-plugin-wrap-code-in-tt/</guid>
<description></description>
<content:encoded><![CDATA[<p>As of late I try to mark code parts inside normal text with the <tt>&lt;tt&gt;</tt> tags to make them stand out as code. While writing my <a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/">MonoRail tutorial</a> yesterday I got really annoyed by switching between source and normal view inside Windows Live writer to add <tt>&lt;tt&gt;</tt> all over the place, so I figured I’d use the <a href="http://msdn.microsoft.com/en-us/library/aa738863.aspx">WLW Plugin API</a> to write a plugin that wraps text inside <tt>&lt;tt&gt;</tt>. </p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:dbe6f6ea-0f9f-47a6-a00b-63c073b159a1" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
namespace wlwWrapIn
{
&#160;&#160;&#160;&#160;using System;
&#160;&#160;&#160;&#160;using System.Windows.Forms;
&#160;&#160;&#160;&#160;using WindowsLive.Writer.Api;

&#160;&#160;&#160;&#160;[WriterPlugin("37CB2E7F-1809-4344-9527-526768A99E9F", "WrapInTT", PublisherUrl = "http://www.tigraine.at")]
&#160;&#160;&#160;&#160;[InsertableContentSource("Wrap in &lt;tt&gt;", MenuText = "Wrap in &lt;tt&gt;", SidebarText = "Wrap in &lt;tt&gt;")]
&#160;&#160;&#160;&#160;public class WlwWrapIn : ContentSource
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public override System.Windows.Forms.DialogResult CreateContent(System.Windows.Forms.IWin32Window dialogOwner, ref string content)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;content = String.Format("&lt;tt&gt;{0}&lt;/tt&gt;", content);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return DialogResult.OK;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}

</pre></div>

<p>Oh yeah it is that simple, just reference the WindowsLive.Writer.Api class and you can write a plugin like that. </p>

<p>In case someone needs my <tt>&lt;tt&gt;</tt> wrapping plugin, you can get it here: <a href="http://bitbucket.org/Tigraine/tigraine-samples/downloads/WrapInTT.dll">WrapInTT.dll</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>647</wp:post_id>
<wp:post_date>2009-07-19 19:13:33</wp:post_date>
<wp:post_date_gmt>2009-07-19 17:13:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-live-writer-plugin-wrap-code-in-tt</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>ARFetch attribute in MonoRail</title>
<link>http://www.tigraine.at/2009/07/20/arfetch-attribute-in-monorail/</link>
<pubDate>Mon, 20 Jul 2009 21:45:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/20/arfetch-attribute-in-monorail/</guid>
<description></description>
<content:encoded><![CDATA[<p>MonoRail and ASP.NET MVC while being very different both almost mirror their features. Few things are impossible in one of both and the only really major difference between those two is that MonoRail comes packed with a suggested data access strategy: ActiveRecord. </p>  <p>This pre-packing is completely optional, it’s very easy to implement whatever data access logic you like, but if you choose ActiveRecord you’ll benefit from some nice things like the <tt>ARFetch </tt>attribute.</p>  <p>See this action method and judge for yourself:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2d3646ac-f75b-495a-8743-645083bb02ad" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Detail([ARFetch("Id")] NewsPost post)
{
&#160;&#160;&#160;&#160;PropertyBag["post"] = post;
}
</pre></div>

<p>You just tell MonoRail through <tt>ARFetch </tt>what request-parameter is the object’s Id and it will fetch that entity from your DB and pass it into your method. It’s so simple that it’s almost tragic, yet it’s a huge time saver in most CRUD cases (edit, update and delete usually involve fetching the entity first). </p>

<p>Also, for a change, <tt>ARFetch </tt>is one of those few things inside MonoRail that needs zero documentation. It just works! (Besides the fact that you need to know it exists of course).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>658</wp:post_id>
<wp:post_date>2009-07-20 23:45:15</wp:post_date>
<wp:post_date_gmt>2009-07-20 21:45:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>arfetch-attribute-in-monorail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3280</wp:comment_id>
<wp:comment_author><![CDATA[Fábio Batista]]></wp:comment_author>
<wp:comment_author_email>fabio.david.batista@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>189.6.228.70</wp:comment_author_IP>
<wp:comment_date>2009-08-28 07:33:07</wp:comment_date>
<wp:comment_date_gmt>2009-08-28 05:33:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The [ARFetch] was one of my first contributions to Castle Project ;) I was trying to get away from the heavyweight [ARDataBind] attribute. I'm glad more people liked it.

Don't forget the even simpler use:
public void Detail([ARFetch] NewsPost post) { ... }
This will search for a parameter named "post".]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Articles</title>
<link>http://www.tigraine.at/articles/</link>
<pubDate>Mon, 20 Jul 2009 22:01:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?page_id=659</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/xanxhor/3712189122/"><img style="float: left" title="Photo by Mutasim Billah Pritam [EWU]" alt="Photo by Mutasim Billah Pritam [EWU]" src="http://farm3.static.flickr.com/2459/3712189122_9917d10fdd_m.jpg" /></a> Over the years I accumulated a number of (at least sometimes) useful how-to articles and tutorials on various topics that I frequently lookup through Google when I need to refresh my memory on something.     <br />Unfortunately, I don’t always find my own stuff right away so I thought it may be useful to have a page where all of this content is linked to.</p>  <h3 style="clear: both">MonoRail</h3>  <p><a href="http://www.tigraine.at/2009/07/03/using-elmah-error-logging-with-castle-monorail/">Using ELMAH Error logging with Castle MonoRail Rescues</a></p>  <p><a href="http://www.tigraine.at/2009/07/14/mixing-static-strings-with-nvelocity-variables/">Mixing static strings with NVelocity variables</a></p>  <p><a href="http://www.tigraine.at/2009/07/15/activerecord-gotchas-when-testing-with-an-in-memory-database/">ActiveRecord gotchas when testing with an in memory database.</a></p>  <p><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-1-views-and-databinding/">Building a databound contact form with MonoRail – Part 1: Views and Databinding</a></p>  <p><a href="http://www.tigraine.at/2009/07/18/building-a-databound-contact-form-with-monorail-part-2-sending-emails/">Building a databound contact form with MonoRail – Part 2: Sending Emails</a></p>  <p><a href="http://www.tigraine.at/2009/07/20/arfetch-attribute-in-monorail/">ARFetch attribute in MonoRail</a></p>  <h3>Castle Windsor</h3>  <p><a href="http://www.tigraine.at/2009/01/27/castle-windsor-xml-configuration-schema/">Castle Windsor XML Configuration Schema</a></p>  <p><a href="http://www.tigraine.at/2009/02/02/extensibility-can-equal-configurability/">Extensibility can equal configurability</a></p>  <h3>Continous Integration</h3>  <p><a href="http://www.tigraine.at/2008/06/05/setting-up-cruise-control-net/">Setting up Cruide Control .NET</a></p>  <p><a href="http://www.tigraine.at/2008/10/08/another-take-on-contiuous-integration/">Another take on Continous Integration</a></p>  <h3>ASP.NET</h3>  <p><a href="http://www.tigraine.at/2008/07/08/custom-aspnet-membership-provider/">Custom ASP.NET Membership Provider</a></p>  <p><a href="http://www.tigraine.at/2008/07/04/aspnet-httpmodule-that-detects-debug-mode-on-production-servers/">ASP.NET HttpModule that detects debug mode</a></p>  <p><a href="http://www.tigraine.at/2008/07/17/session-handling-in-aspnet/">Session handling in ASP.NET</a></p>  <p><a href="http://www.tigraine.at/2008/07/15/validation-controls-in-aspnet/">Validation controls in ASP.NET</a></p>  <p><a href="http://www.tigraine.at/2008/08/07/precompiled-deployment-in-aspnet/">Precompiled deployment in ASP.NET</a></p>  <h3>ASP.NET MVC</h3>  <h4><a href="http://www.tigraine.at/2009/01/21/aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory/"></a></h4>  <p><a href="http://www.tigraine.at/2009/01/21/aspnet-mvc-hide-the-httpcontext-services-with-windsor-and-a-custom-controllerfactory/">Hide the HttpContext services with Windsor and a custom ControllerFactory</a></p>  <p><a href="http://www.tigraine.at/2009/01/15/datetime-parsing-in-aspnet-mvc-routeengine/">DateTime parsing in ASP.NET MVC RouteEngine</a></p>  <p><a href="http://www.tigraine.at/2009/04/20/elmah-aspnet-error-logging-on-mvc/">ELMAH ASP.NET Error logging on MVC</a> (<a href="http://code.google.com/p/elmah/wiki/MVC">Elmah wiki</a>)</p>  <h3>Visual Studio</h3>  <p><a href="http://www.tigraine.at/2008/09/02/id-injection-can-be-stopped/">Stop VS from injecting IDs into your markup</a></p>  <p><a href="http://www.tigraine.at/2008/10/23/come-to-the-dark-side-we-have-cookies/">Dark Visual Studio Theme – Come to the dark side</a></p>  <p><a href="http://www.tigraine.at/2008/11/11/conditional-breakpoints-in-visual-studio/">Conditional breakpoints in Visual Studio</a></p>  <p><a href="http://www.tigraine.at/2009/01/22/sharing-a-common-assemblyinfo-between-projects-in-a-solution/">Sharing a common AssemblyInfo between projects in a solution</a></p>  <p><a href="http://www.tigraine.at/2009/05/31/essential-tools-for-net-developers/">Essential tools for .NET Developers</a></p>  <h3>jQuery</h3>  <p><a href="http://www.tigraine.at/2008/09/24/the-deprecated-target-attribute-and-jquery/">The deprecated target attribute and jQuery</a></p>  <h3>Project organization</h3>  <p><a href="http://www.tigraine.at/2008/10/13/handling-dependencies/">Handling dependencies</a></p>  <p><a href="http://www.tigraine.at/2008/10/30/sourcecontrol-and-databases-when-orm-comes-in-handy/">Sourcecontrol and Databases, when ORM comes in handy</a></p>  <h3>Unit-Testing</h3>  <p><a href="http://www.tigraine.at/2008/11/04/unit-testing-with-mocks-part-1/">Unit testing with mocks (Part 1)</a></p>  <p><a href="http://www.tigraine.at/2008/11/05/unit-testing-with-mocks-rhino-mocks-basics-part-2/">Unit testing with mocks – Rhino Mocks basics (Part 2)</a></p>  <p><a href="http://www.tigraine.at/2009/03/25/tests-should-last-forever/">Tests should last forever</a></p>  <p><a href="http://www.tigraine.at/2009/05/31/net-unit-testing-tools/">.NET Unit testing tools</a></p>  <p><a href="http://www.tigraine.at/2009/07/01/dont-forget-the-refactor-in-red-green-refactor/">Don’t forget the Refactor in Red-Green-Refactor</a></p>  <h3>C#</h3>  <p><a href="http://www.tigraine.at/2008/12/12/delegates-and-eventing-in-c/">The power of delegates in C#</a></p>  <p><a href="http://www.tigraine.at/2008/12/16/dont-get-spoiled-by-linq-to-sql/">LinQ isn’t only for SQL but also for memory</a></p>  <p><a href="http://www.tigraine.at/2009/02/25/override-vs-new-in-c/">override vs new in C#</a></p>  <p><a href="http://www.tigraine.at/2009/03/23/static-members-in-generic-classes/">Static members in generic classes</a></p>  <p><a href="http://www.tigraine.at/2009/06/10/juggling-generics/">Juggling generics</a></p>  <h3>NHibernate</h3>  <p><a href="http://www.tigraine.at/2008/12/19/mapping-large-text-or-binary-values-with-nhibernate/">Mapping large text or binary values with NHibernate</a></p>  <p><a href="http://www.tigraine.at/2009/05/29/fluent-nhibernate-gotchas-when-testing-with-an-in-memory-database/">Fluent NHibernate gotchas when testing with an in memory database.</a></p>  <h3>WPF</h3>  <p><a href="http://www.tigraine.at/2009/06/22/webkit-like-focus-indicator-for-wpf-windows/">WebKit like focus indicator for WPF Windows</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>659</wp:post_id>
<wp:post_date>2009-07-21 00:01:48</wp:post_date>
<wp:post_date_gmt>2009-07-20 22:01:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>articles</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>1</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_wp_page_template</wp:meta_key>
<wp:meta_value>default</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248127448</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/imagepng-2/</link>
<pubDate>Thu, 23 Jul 2009 16:03:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image12.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>663</wp:post_id>
<wp:post_date>2009-07-23 18:03:15</wp:post_date>
<wp:post_date_gmt>2009-07-23 16:03:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>667</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image12.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image12.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"582";s:6:"height";s:3:"197";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:19:"2009/07/image12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"image12-299x101.png";s:5:"width";s:3:"299";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/image-thumbpng-2/</link>
<pubDate>Thu, 23 Jul 2009 16:03:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>664</wp:post_id>
<wp:post_date>2009-07-23 18:03:16</wp:post_date>
<wp:post_date_gmt>2009-07-23 16:03:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>667</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"586";s:6:"height";s:3:"201";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:24:"2009/07/image-thumb8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb8-300x102.png";s:5:"width";s:3:"300";s:6:"height";s:3:"102";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/imagepng-3/</link>
<pubDate>Thu, 23 Jul 2009 16:03:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image13.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>665</wp:post_id>
<wp:post_date>2009-07-23 18:03:17</wp:post_date>
<wp:post_date_gmt>2009-07-23 16:03:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>667</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image13.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image13.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"360";s:6:"height";s:2:"67";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:19:"2009/07/image13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image13-150x67.png";s:5:"width";s:3:"150";s:6:"height";s:2:"67";}s:6:"medium";a:3:{s:4:"file";s:18:"image13-300x55.png";s:5:"width";s:3:"300";s:6:"height";s:2:"55";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/image-thumbpng-3/</link>
<pubDate>Thu, 23 Jul 2009 16:03:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>666</wp:post_id>
<wp:post_date>2009-07-23 18:03:18</wp:post_date>
<wp:post_date_gmt>2009-07-23 16:03:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>667</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"364";s:6:"height";s:2:"71";s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:24:"2009/07/image-thumb9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb9-150x71.png";s:5:"width";s:3:"150";s:6:"height";s:2:"71";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb9-300x58.png";s:5:"width";s:3:"300";s:6:"height";s:2:"58";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Troublesome SQL Server 2008 installation</title>
<link>http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/</link>
<pubDate>Thu, 23 Jul 2009 16:03:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/23/troublesome-sql-server-2008-installation/</guid>
<description></description>
<content:encoded><![CDATA[<p>Since Visual Studio 2008 ships with a SQL Server Express 2005 installation I never really bothered to change that. All tools I work with support that and I never needed any of the 2008 specific features before.</p>  <p>Only, the current <a href="http://www.imagineclub.at">imagineClub Website</a> is hosted on a SQL Server 2008 installation, so in order to access that database on my development machine I needed to install a 2008 version.     <br />I figured it would be best to upgrade to Microsoft SQL Server 2008 Developer edition since I can get that for free through the imagineClub MSDN AA agreement so I downloaded the ISO and started the install, expecting the setup to figure out how to upgrade my current installation.</p>  <p>Unfortunately that is not possible. The SQL Server 2008 setup failed miserably and the setup is not automatically rolling back. That means that I ended up with a partial 2008 install and a partial 2005 install.   <br />Most services were installed twice and neither would work. </p>  <p>Unfortunately the SQL Server Setup is just a collection of MSI files that get called in some weird order through the main setup routine. Therefore the errorlog of the main install just references other logfiles that should contain error-details, but skipping through an alien 30k logfile isn’t the easiest task. </p>  <p>I could finally complete the setup by running the uninstall on ALL things that contained SQL in their name on my machine, until only “Microsoft Sql Server 2008 (64-bit)” was left.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image12.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb8.png" width="586" height="201" /></a> </p>  <p>The main SQL Server 2008 entry then told me that apparently all parts of SQL Server 2008 are gone and it will remove itself from my programs list. </p>  <p>I then was able to re-run the standard installation and now I’m finally up and running with SQL Server 2008!</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image13.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb9.png" width="364" height="71" /></a> </p>  <p></p>  <p>Apparently I was lucky to get away so easy. If the above isn’t working you could try to follow <a href="http://mark.michaelis.net/Blog/SQLServer2008InstallNightmare.aspx">Mark Michaelis tips on how to get rid of SQl Server 2005/2008 manually</a>.</p>  <p>Anyway, uninstall SQL Server 2005 Express <u><strong>before</strong></u> attempting to install a SQL Server 2008. Saves time in the long run!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>667</wp:post_id>
<wp:post_date>2009-07-23 18:03:18</wp:post_date>
<wp:post_date_gmt>2009-07-23 16:03:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>troublesome-sql-server-2008-installation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>FileUpload in MonoRail</title>
<link>http://www.tigraine.at/2009/07/24/fileupload-in-monorail/</link>
<pubDate>Fri, 24 Jul 2009 15:44:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/24/fileupload-in-monorail/</guid>
<description></description>
<content:encoded><![CDATA[<p>After a stressful week of non-computer related stuff eating up my time today I finally got around to continue some work on the imagineClub website.    <br />I approached the section of file uploads and just wanted to quickly point out an excellent post by <a href="http://www.kenegozi.com/blog/">Ken Egozi</a> about how to properly handle file uploads with MonoRail. </p>  <blockquote>   <p><a href="http://www.kenegozi.com/blog/2008/06/28/filebinderattribute-to-ease-fileupload-in-monorail.aspx">FileBinderAttribute to ease FileUpload in MonoRail</a> – by <a href="http://www.kenegozi.com/blog/">Ken Egozi</a></p> </blockquote>  <p>It’s really nice to see that MonoRail has File upload baked directly into the framework. It’s as easy as that:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2e3a4dfb-861a-45df-99ae-814696ea1f63" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Upload([DataBind("Document")] Document document, HttpPostedFile uploadedFile)
{
	if (uploadedFile != null)
	{
		//TODO: Save File to Disk, Test this properly
	}
}
</pre></div>

<p>But what Ken addresses is a neat way to keep this testable without obscuring the controller code.</p>

<p>Also, apparently Ken has written his <a href="http://code.google.com/p/kenegozi-weblog/">own weblog engine ontop of MonoRail</a> and even opensourced it for the public to look at and hopefully learn something from it. It’s really great to see real application code somewhere instead of just samples and short demos. Also from what I saw in the repository it’s not too complex to make you cry and yet real enough to show you some interesting things about MonoRail.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>668</wp:post_id>
<wp:post_date>2009-07-24 17:44:55</wp:post_date>
<wp:post_date_gmt>2009-07-24 15:44:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fileupload-in-monorail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248450329</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3112</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; The fairy tale of binary blob fields]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-17 14:59:12</wp:comment_date>
<wp:comment_date_gmt>2009-08-17 12:59:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] theory this sounds really simple, especially since the file upload in MonoRail is so trivial I figured it wouldn’t be a problem to [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Keeping up with Castle</title>
<link>http://www.tigraine.at/2009/07/25/keeping-up-with-castle/</link>
<pubDate>Sat, 25 Jul 2009 12:45:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/25/keeping-up-with-castle/</guid>
<description></description>
<content:encoded><![CDATA[<p>Especially when trying to follow the development of a big project like Castle you can get lost quickly. There is no real “main” endpoint to refer to. Some news get out there through the development mailing list, sometimes they come through blogs and sometimes they are only present in code.</p>  <p>What I found useful in following the project are the following places:</p>  <ol>   <li><a href="http://pipes.yahoo.com/pipes/pipe.run?_id=bGjr2c1s3hGi5qx20EypaA&amp;_render=rss&amp;limit=200">Castle Project aggregator</a> – a aggregate feed of most known figures involved in the castle development process</li>    <li><a href="http://groups.google.com/group/castle-project-devel?hl=en">Castle Project development mailing list</a> – The place where discussion about features and structure happens</li>    <li><a href="http://www.castleproject.org:8090/viewType.html?buildTypeId=bt2&amp;tab=buildTypeChangeLog">Castle Project svn log</a> – I like to look at commits to see what’s going on</li> </ol>  <ol>Note: Especially with castle where the last “official” release was in 2007 it’s imo quite important to know what’s going on when you are running the trunk version.</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>670</wp:post_id>
<wp:post_date>2009-07-25 14:45:47</wp:post_date>
<wp:post_date_gmt>2009-07-25 12:45:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>keeping-up-with-castle</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3226</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Castle blog aggregator]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/25/castle-blog-aggregator/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-25 12:05:53</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 10:05:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] I already told you about the Castle blog aggregator as a source for keeping up to date with the Castle project. Turns out the idea was taken even further and the feed has now been integrated into the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Keeping up with Castle binaries through NAnt</title>
<link>http://www.tigraine.at/2009/07/25/keeping-up-with-castle-binaries-through-nant/</link>
<pubDate>Sat, 25 Jul 2009 13:55:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/25/keeping-up-with-castle-binaries-through-nant/</guid>
<description></description>
<content:encoded><![CDATA[<p>One of the main annoyances of running from the castle trunk for me was copying new assemblies to my projects. Whenever I see something interesting pop up in the mailing list I usually run a SVN update to see what changed. While the castle build process is pretty simple at this point, picking the right assemblies and copying them to an ongoing project manually is just painful. </p>  <p>I did this exactly twice before I remembered the golden rule: <strong><u>automate</u></strong>!</p>  <p>This little NAnt target is now in charge of copying assemblies I need to my <a href="http://www.tigraine.at/2008/10/13/handling-dependencies/">project’s lib directory</a>:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:51228e84-0f73-4551-b35c-725a6f6ae28a" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;target name="castle-update"&gt;
&lt;if test="${property::exists('castle-trunk-dir')}"&gt;
	
	&lt;if test="${property::exists('skip-castle-compile') == false}"&gt;
		&lt;echo message="Compiling castle trunk release binaries..." /&gt;
		&lt;exec program="build.cmd" basedir="${castle-trunk-dir}" workingdir="${castle-trunk-dir}"&gt;
		&lt;/exec&gt;
	&lt;/if&gt;
	
	&lt;echo message="copying castle binaries" /&gt;
	
	&lt;copy todir="lib\castle"&gt;
		&lt;fileset basedir="${castle-trunk-dir}\build\net-3.5\release\"&gt;
			&lt;include name="Castle.ActiveRecord.???" /&gt;
			&lt;include name="Castle.Components.Binder.???" /&gt;
			&lt;include name="Castle.Components.Common.EmailSender.???" /&gt;
			&lt;include name="Castle.Components.Common.TemplateEngine.???" /&gt;
			&lt;include name="Castle.Components.Common.TemplateEngine.NVelocityTemplateEngine.???" /&gt;
			&lt;include name="Castle.Components.DictionaryAdapter.???" /&gt;
			&lt;include name="Castle.Components.Pagination.???" /&gt;
			&lt;include name="Castle.Components.Validator.???" /&gt;
			&lt;include name="Castle.Core.???" /&gt;
			&lt;include name="Castle.DynamicProxy2.???" /&gt; 
			&lt;include name="Castle.MonoRail.ActiveRecordSupport.???" /&gt;
			&lt;include name="Castle.MonoRail.Framework.???" /&gt;
			&lt;include name="Castle.MonoRail.Framework.Views.NVelocity.???" /&gt;
			&lt;include name="Castle.MonoRail.TestSupport.???" /&gt;
			&lt;include name="Castle.Services.Logging.Log4netIntegration.???" /&gt;
			&lt;include name="Iesi.Collections.???" /&gt;
			&lt;include name="log4net.???" /&gt;
			&lt;include name="*.license.txt" /&gt;
			&lt;include name="NHibernate.ByteCode.Castle.???" /&gt;
			&lt;include name="NHibernate.???" /&gt;
			&lt;include name="NVelocity.???" /&gt;
		&lt;/fileset&gt;
	&lt;/copy&gt;
&lt;/if&gt;
&lt;if test="${property::exists('castle-trunk-dir') == false}"&gt;
	&lt;fail message="Please specify the directory to castle-trunk through -D:castle-trunk-dir=&lt;directory&gt;" /&gt;
&lt;/if&gt;
&lt;/target&gt;

</pre></div>

<p>This little script will compile castle and then copy over all files I need to my <tt>/lib/castle</tt> folder, making a castle update as easy as writing:</p>

<blockquote><tt>
    <p>build castle-update -D:castle-trunk-dir=..\open-source\castle-trunk</p>
  </tt></blockquote>

<p>Make sure you have your <tt>/lib/</tt> folder under source control in case some breaking changes come from the new castle binaries. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>671</wp:post_id>
<wp:post_date>2009-07-25 15:55:25</wp:post_date>
<wp:post_date_gmt>2009-07-25 13:55:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>keeping-up-with-castle-binaries-through-nant</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/28/ssl-errors-can-indicate-wrong-system-time/imagepng-2/</link>
<pubDate>Tue, 28 Jul 2009 12:12:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image14.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>672</wp:post_id>
<wp:post_date>2009-07-28 14:12:16</wp:post_date>
<wp:post_date_gmt>2009-07-28 12:12:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>674</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image14.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image14.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"559";s:6:"height";s:3:"213";s:14:"hwstring_small";s:23:"height='48' width='128'";s:4:"file";s:19:"2009/07/image14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"image14-300x114.png";s:5:"width";s:3:"300";s:6:"height";s:3:"114";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/28/ssl-errors-can-indicate-wrong-system-time/image-thumbpng-2/</link>
<pubDate>Tue, 28 Jul 2009 12:12:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>673</wp:post_id>
<wp:post_date>2009-07-28 14:12:18</wp:post_date>
<wp:post_date_gmt>2009-07-28 12:12:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>674</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"563";s:6:"height";s:3:"217";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:25:"2009/07/image-thumb10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"image-thumb10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"image-thumb10-300x115.png";s:5:"width";s:3:"300";s:6:"height";s:3:"115";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>SSL Errors can indicate wrong system time</title>
<link>http://www.tigraine.at/2009/07/28/ssl-errors-can-indicate-wrong-system-time/</link>
<pubDate>Tue, 28 Jul 2009 12:12:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/28/ssl-errors-can-indicate-wrong-system-time/</guid>
<description></description>
<content:encoded><![CDATA[<p>Imagine my face when I got the following screen while logging into Gmail in the morning:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image14.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb10.png" width="563" height="217" /></a> </p>  <p>Chrome really suggested that <a href="http://www.google.com">www.google.com</a> has no valid SSL certificate and may be dangerous.     <br />Also services like Windows Live Messenger and Windows Update refused to work due to broken SSL certificates. </p>  <p>Turns out, I accidentally set the system clock after a bios reset to 28. July 2008 instead of 2009. I guess I looked at the system time about 3 times before noticing the error :(. </p>  <p>Funny: The wrong year also prevented me from syncing the time with time.windows.com to get to the right one. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>674</wp:post_id>
<wp:post_date>2009-07-28 14:12:18</wp:post_date>
<wp:post_date_gmt>2009-07-28 12:12:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ssl-errors-can-indicate-wrong-system-time</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/imagepng-2/</link>
<pubDate>Fri, 31 Jul 2009 19:02:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image15.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>675</wp:post_id>
<wp:post_date>2009-07-31 21:02:48</wp:post_date>
<wp:post_date_gmt>2009-07-31 19:02:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>677</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image15.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image15.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"424";s:6:"height";s:3:"110";s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:19:"2009/07/image15.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image15-150x110.png";s:5:"width";s:3:"150";s:6:"height";s:3:"110";}s:6:"medium";a:3:{s:4:"file";s:18:"image15-300x77.png";s:5:"width";s:3:"300";s:6:"height";s:2:"77";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/image-thumbpng-2/</link>
<pubDate>Fri, 31 Jul 2009 19:02:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb11.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>676</wp:post_id>
<wp:post_date>2009-07-31 21:02:49</wp:post_date>
<wp:post_date_gmt>2009-07-31 19:02:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>677</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb11.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/image-thumb11.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"444";s:6:"height";s:3:"130";s:14:"hwstring_small";s:23:"height='37' width='128'";s:4:"file";s:25:"2009/07/image-thumb11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"image-thumb11-150x130.png";s:5:"width";s:3:"150";s:6:"height";s:3:"130";}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb11-300x87.png";s:5:"width";s:3:"300";s:6:"height";s:2:"87";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>MVC vs MonoRail &#8211; Action Methods</title>
<link>http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/</link>
<pubDate>Fri, 31 Jul 2009 19:02:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/</guid>
<description></description>
<content:encoded><![CDATA[<p>Many people have said nasty things about the Castle MonoRail framework since ASP.NET MVC has come out. Both serve the same purpose but both frameworks are pretty different. I did/do projects in both these days, and usually all features of A are also present in B, just slightly different. </p>  <p>One thing where this isn’t true is the layout of ActionMethods in MVC:</p>  <p>In short, MonoRail can have unlimited method overloads for ActionMethods while MVC can only overload twice (once for each HttpVerb). </p>  <p>What do I mean?</p>  <p>MVC:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c76a91dc-46e8-4fde-bd10-3d0879fe7f46" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class HomeController : Controller
{
&#160;&#160;&#160;&#160;public ActionResult Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return View();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;[AcceptVerbs(HttpVerbs.Post)]
&#160;&#160;&#160;&#160;public ActionResult Index(int id)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return View();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>MonoRail:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3392e32c-3548-4c97-bfb0-e1d9902dc228" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class ContactController : SmartDispatcherController
{
&#160;&#160;&#160;&#160;public void Index()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Index(int id)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Index(int id, string name)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>You can see clearly, MonoRail as a framework is much smarter about what action method it will invoke. Based on what parameters you supply it will pick the best match.&#160; <br />MVC will simply use reflection to invoke any method with that name that matches the <tt>HttpVerb</tt>, so once you remove the <tt>AcceptVerbs </tt>attribute MVC will break with a <tt>AmbiguousMatchException</tt>.</p>

<h4>MVC vs MonoRail</h4>

<p>Just to get bias out of the way: I believe MVC is technically still inferior to MonoRail but makes that up in larger community and (much) better documentation. What you pick is largely dependant on how well you know your way around missing documentation and open source code mailing lists. </p>

<p>To illustrate this I went to <a href="http://stackoverflow.com/">stackoverflow</a> and compared the number of questions tagged with <a href="http://stackoverflow.com/questions/tagged/asp.net-mvc">asp.net-mvc</a> with those tagged <a href="http://stackoverflow.com/questions/tagged/castle-monorail">castle-monorail</a>. The results may very well speak for themselves:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/07/image15.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/07/image-thumb11.png" width="444" height="130" /></a> </p>

<p>It’s a shame I have to say. MonoRail is such a nice framework and it really does not deserve getting stomped by ASP.NET MVC. As funny as this may sound for a OSS project, currently the best way to contribute to MonoRail is <a href="http://www.tigraine.at/category/programmierung/net/castle/">to write about it</a> and if possible <a href="http://www.tigraine.at/2009/05/26/rails-with-obstacles/">improve documentation around it</a>. I guess that says everything about the quality/maturity of the framework. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>677</wp:post_id>
<wp:post_date>2009-07-31 21:02:50</wp:post_date>
<wp:post_date_gmt>2009-07-31 19:02:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mvc-vs-monorail-action-methods</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3274</wp:comment_id>
<wp:comment_author><![CDATA[Haacked]]></wp:comment_author>
<wp:comment_author_email>haacked@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://haacked.com/</wp:comment_author_url>
<wp:comment_author_IP>131.107.0.73</wp:comment_author_IP>
<wp:comment_date>2009-08-27 23:43:30</wp:comment_date>
<wp:comment_date_gmt>2009-08-27 21:43:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Heh. :) Hammet suggested that we do the same heuristic based overload resolution like Monorail does but we decided against it for now. We wanted to do the simplest thing that works. It keeps the code simpler and the behavior easier to understand, in my opinion. For example, you might add a new hidden input to the form for some reason and suddenly a form submission is calling another action method you didn't expect.

However, I'm always open to suggestions for improvement. You've described a neat feature, but you haven't sold me on why it's important or necessary. :)

After all, you can pretty much get the same result with: 

public ActionResult Index(int? id, string name)   
{   
  return View();   
}

Also, you were innacurate about MVC. You can have more than two overloads. After all, there are more than 2 HTTP Verbs, right? :)

If you only use AcceptVerbsAttribute, you can have an action method per HTTP verb. There are four standard verbs, but many more than that.

Also, AcceptVerbsAttribute derives from ActionMethodSelectorAttribute. You could write your own attribute that derives from ActionMethodSelectorAttribute and implement any number of overloads of an action method, as long as one action method is selected for a given request.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3275</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-27 23:56:23</wp:comment_date>
<wp:comment_date_gmt>2009-08-27 21:56:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Phil,

I agree with you, although I doubt that anybody is using more than 2 HttpVerbs on a standard Data input form. 
While reading through the MVC source (literally 30 seconds ago) I found out that the Exception only occurs if > 1 method remains after filtering.
I'll update the post tomorrow (it's 0:00 in Austria)

Now, for why I wrote this post in the first place:

I wanted to have a page that lists all users of a site, and the ability to search for names:

public ActionResult List();
public ActionResult List(string query);

Since the first would just invoke GetAll() and the latter a query with a Like clause, I'd like to have those in two different methods instead of one with a if statement when using nullable types. 

Anyway, thanks for your comment.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3053</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-13 12:17:19</wp:comment_date>
<wp:comment_date_gmt>2009-08-13 10:17:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I don't think you can say that.

MonoRail's documentation is rather lacking and there are many questions that have to be asked before you know everything. 

The graph just illustrates how much more traction ASP.NET MVC has in the community than MonoRail. 

:D

It's like with most things MS does. They come years late to the party, but once they decide it's going to be their way they get behind it with all their enourmous manpower and surpass them. 

greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2921</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; DefaultValue attribute for Castle MonoRail]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-04 12:09:36</wp:comment_date>
<wp:comment_date_gmt>2009-08-04 10:09:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] is much smarter about action methods than MVC so there are already things going on with default values through routing etc. But this [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3049</wp:comment_id>
<wp:comment_author><![CDATA[Chris Carter]]></wp:comment_author>
<wp:comment_author_email>chris@panteravb.com</wp:comment_author_email>
<wp:comment_author_url>http://www.panteravb.com</wp:comment_author_url>
<wp:comment_author_IP>24.9.71.107</wp:comment_author_IP>
<wp:comment_date>2009-08-13 06:00:58</wp:comment_date>
<wp:comment_date_gmt>2009-08-13 04:00:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Really though, your graph on monorail vs microsoft potentially says that monorail is BETTER than asp.net mvc, right? A framework that's so good, no questions even need to be asked?? :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Bad poor man&#8217;s IoC in default MVC template</title>
<link>http://www.tigraine.at/2009/07/31/bad-poor-mans-ioc-in-default-mvc-template/</link>
<pubDate>Fri, 31 Jul 2009 21:43:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/07/31/bad-poor-mans-ioc-in-default-mvc-template/</guid>
<description></description>
<content:encoded><![CDATA[<p>This is directly from the standard MVC template upon starting a new project:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:de8ad31e-fe3e-4077-9c56-65a13eec187b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
// This constructor is used by the MVC framework to instantiate the controller using
// the default forms authentication and membership providers.

public AccountController()
&#160;&#160;&#160;&#160;: this(null, null)
{
}

// This constructor is not used by the MVC framework but is instead provided for ease
// of unit testing this type. See the comments at the end of this file for more
// information.
public AccountController(IFormsAuthentication formsAuth, IMembershipService service)
{
&#160;&#160;&#160;&#160;FormsAuth = formsAuth ?? new FormsAuthenticationService();
&#160;&#160;&#160;&#160;MembershipService = service ?? new AccountMembershipService();
}
</pre></div>

<p>I didn’t realize this is in the default template of <strong><u>ANY</u></strong> MVC install when <a href="http://ayende.com/Blog/archive/2009/07/30/reviewing-nerddinner.aspx">Ayende pointed this out in his NerdDinner review</a> yesterday. Wow, speaking of bad defaults.. </p>

<p>If you don’t want to burden yourself with “real” IoC, at least do it right:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:5094e05a-5c7f-4432-8ea4-f304068c58ce" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
// This constructor is used by the MVC framework to instantiate the controller using
// the default forms authentication and membership providers.

public AccountController()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;: this(new FormsAuthenticationService(), new AccountMembershipService())
{
}

// This constructor is not used by the MVC framework but is instead provided for ease
// of unit testing this type. See the comments at the end of this file for more
// information.
public AccountController(IFormsAuthentication formsAuth, IMembershipService service)
{
&#160;&#160;&#160;&#160;FormsAuth = formsAuth;
&#160;&#160;&#160;&#160;MembershipService = service;
}
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>680</wp:post_id>
<wp:post_date>2009-07-31 23:43:40</wp:post_date>
<wp:post_date_gmt>2009-07-31 21:43:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bad-poor-mans-ioc-in-default-mvc-template</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/02/most-annoying-thing-to-ever-happen-configuration-manager-screwup/imagepng-2/</link>
<pubDate>Sun, 02 Aug 2009 12:05:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>681</wp:post_id>
<wp:post_date>2009-08-02 14:05:53</wp:post_date>
<wp:post_date_gmt>2009-08-02 12:05:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>683</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"396";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:17:"2009/08/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x185.png";s:5:"width";s:3:"300";s:6:"height";s:3:"185";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/02/most-annoying-thing-to-ever-happen-configuration-manager-screwup/image-thumbpng-2/</link>
<pubDate>Sun, 02 Aug 2009 12:05:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>682</wp:post_id>
<wp:post_date>2009-08-02 14:05:54</wp:post_date>
<wp:post_date_gmt>2009-08-02 12:05:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>683</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"710";s:6:"height";s:3:"441";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:23:"2009/08/image-thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image-thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb-300x186.png";s:5:"width";s:3:"300";s:6:"height";s:3:"186";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Most annoying thing to ever happen: Configuration manager screwup</title>
<link>http://www.tigraine.at/2009/08/02/most-annoying-thing-to-ever-happen-configuration-manager-screwup/</link>
<pubDate>Sun, 02 Aug 2009 12:05:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/02/most-annoying-thing-to-ever-happen-configuration-manager-screwup/</guid>
<description></description>
<content:encoded><![CDATA[<p>I think I was pretty close to a major nervous breakdown due to this one misconfiguration of my Visual Studio that I have no explanation for:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb.png" width="710" height="441" /></a> </p>  <p>Imagine yourself trying to test some new behavior that according to your unit tests works, but simply refuses to work inside your web-app because the call to it hasn’t been compiled yet!</p>  <p>Breakpoints don’t get hit, changes don’t appear.. Mayhem! (Oh, and to top it off, since views aren’t compile you still see <em>some </em>of your changes, just not the ones in real code).</p>  <p>I first thought it’s some problem with the ASP.NET MVC project type, but eventually I noticed that if I don’t manually recompile the project none of my changes appear. </p>  <p>Way to go, I should have seen that yesterday instead of spending almost an hour hunting bugs where none where to be found.</p>  <p><strong>Update</strong>: To add insult to injury I again forgot that checkbox turned off after taking the above screenshot.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>683</wp:post_id>
<wp:post_date>2009-08-02 14:05:55</wp:post_date>
<wp:post_date_gmt>2009-08-02 12:05:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>most-annoying-thing-to-ever-happen-configuration-manager-screwup</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1251193700</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/02/a-better-way-to-write-enumerations/imagepng-2/</link>
<pubDate>Sun, 02 Aug 2009 14:18:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>685</wp:post_id>
<wp:post_date>2009-08-02 16:18:20</wp:post_date>
<wp:post_date_gmt>2009-08-02 14:18:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>686</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"525";s:6:"height";s:3:"201";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:18:"2009/08/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x114.png";s:5:"width";s:3:"300";s:6:"height";s:3:"114";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>A better way to write enumerations</title>
<link>http://www.tigraine.at/2009/08/02/a-better-way-to-write-enumerations/</link>
<pubDate>Sun, 02 Aug 2009 14:18:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/02/a-better-way-to-write-enumerations/</guid>
<description></description>
<content:encoded><![CDATA[<p>One thing I constantly struggle with is enumerations. They are inherently dumb, carry little more than one integer of actual information and usually mean a lot more than their name conveys.</p>  <p>Let aside Enumerations as method option flags (where they actually do make sense!), the usual line of business application will have these three enumerations somewhere:</p>  <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image1.png" width="525" height="201" /> </p>  <p>Now, let’s ignore all the others our most basic example would be the Sex enumeration that has usually one but only one use: How to salute your user when communicating. </p>  <p>Like the obvious emails you get:</p>  <blockquote>   <p><font style="background-color: #ffffff">Hello Mr. Hölbling, we’d like to thank you for your …</font></p> </blockquote>  <p>You get the drift. If I’d perform a sex change someday the system should address me as Mrs. Hölbling (and actually, that type of thing is much more of a problem in German than in English, but anyway).    <br />And the code to do that would look something like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:df83d890-fbd2-4e80-99f0-d781107a665b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
string salutation = "Mr.";
if (sex == Sex.Female) salutation = "Mrs.";

Console.WriteLine("Dear {0} Hölbling", salutation);
</pre></div>

<p></p>

<p>In a typical web application you’ll be repeating this piece of code numerous times, since being polite doesn’t hurt. Where this would actually hurt is if you’d mindlessly copy&amp;paste that piece of code wherever you have to greet your user. You’d be violating DRY and the guy maintaining your code in 2 or 3 years will find out where you live and kill you in your sleep some day.</p>

<p>What I’d like to see as a solution to this is to simply have a method living on that enumeration. Like:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:79937318-d37c-4c8f-a501-71825992431f" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
Console.WriteLine("Dear {0} Hölbling", sex.GetSalutation());
</pre></div>

<p>And that’s possible, just not very convenient. You’ll have to emulate the enumeration through a class:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a0277c62-c688-44f1-979c-41e5636fa278" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Sex
{
&#160;&#160;&#160;&#160;public int Id { get; private set; }
&#160;&#160;&#160;&#160;public string Salutation { get; private set; }
}
</pre></div>

<p>Should work like a charm, but you loose the benefit of typing Sex.Female when setting a gender. So here is how to make a class look &amp; feel like a enum without the limitations:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:55b255b6-7710-4b3c-a632-b651e30ac32d" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Sex
{
&#160;&#160;&#160;&#160;public static Sex Male = new Sex{Id = 0, Salutation = "Mr."};
&#160;&#160;&#160;&#160;public static Sex Female = new Sex{Id = 1, Salutation = "Mrs."};

&#160;&#160;&#160;&#160;public int Id { get; private set; }
&#160;&#160;&#160;&#160;public string Salutation { get; private set; }
}
</pre></div>

<p>You can now do stuff like: </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e552147c-43e5-499e-bdb7-4cfc24182470" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
new User()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Name = "Daniel",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Sex = Sex.Male
&#160;&#160;&#160;&#160;};
</pre></div>

<p>And if you have added equality on the id (<u>as you always should</u>) you could make decisions like with real enumerations:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c9d8edd5-fb3a-4593-ae63-1502815054df" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
if (user.Sex == Sex.Female)
{
&#160;&#160;&#160;&#160;//Do Something
}
</pre></div>

<p>Now you could even go ahead and subclass your Sex class and dump logic in there if you please. Hell, even persist that type to a database <a href="http://fabiomaulo.blogspot.com/2009/08/from-db-to-ram-wellknowinstancetype.html">using NH and the WellKnownInstanceType as Fabio points out</a>.</p>

<p>The full implementation of our above Sex enumeration is beyond the jump.</p>
<!--more-->

<p>
  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2896ba89-734f-4a5c-926a-2fef2b7cfe52" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Sex
{
&#160;&#160;&#160;&#160;public static Sex Male = new Sex {Id = 0, Salutation = "Mr."};
&#160;&#160;&#160;&#160;public static Sex Female = new Sex {Id = 1, Salutation = "Mrs."};

&#160;&#160;&#160;&#160;public int Id { get; private set; }
&#160;&#160;&#160;&#160;public string Salutation { get; private set; }

&#160;&#160;&#160;&#160;#region Equality methods

&#160;&#160;&#160;&#160;public bool Equals(Sex other)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ReferenceEquals(null, other)) return false;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ReferenceEquals(this, other)) return true;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return other.Id == Id;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public override bool Equals(object obj)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ReferenceEquals(null, obj)) return false;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (ReferenceEquals(this, obj)) return true;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (obj.GetType() != typeof (Sex)) return false;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Equals((Sex) obj);
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public override int GetHashCode()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Id;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;#endregion
}
</pre></div></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>686</wp:post_id>
<wp:post_date>2009-08-02 16:18:20</wp:post_date>
<wp:post_date_gmt>2009-08-02 14:18:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-better-way-to-write-enumerations</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2962</wp:comment_id>
<wp:comment_author><![CDATA[Richard Hein]]></wp:comment_author>
<wp:comment_author_email>richard.hein@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>99.224.120.152</wp:comment_author_IP>
<wp:comment_date>2009-08-07 02:05:19</wp:comment_date>
<wp:comment_date_gmt>2009-08-07 00:05:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Nice.  I like it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2963</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-07 02:11:08</wp:comment_date>
<wp:comment_date_gmt>2009-08-07 00:11:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Glad you like it. 
Actually I learned this trick from Jon Skeet a very long time ago.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3358</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Using ActiveRecord&rsquo;s Field mapping to map custom enumeration classes]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/09/03/using-activerecords-field-mapping-to-map-custom-enumeration-classes/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-09-03 13:28:17</wp:comment_date>
<wp:comment_date_gmt>2009-09-03 11:28:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] private ones). This little feature came in very handy when I was looking for a way to persist a class based enumeration. I’ll tell you why in a [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>step19.png</title>
<link>http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/step19png/</link>
<pubDate>Tue, 04 Aug 2009 10:09:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/step19.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>687</wp:post_id>
<wp:post_date>2009-08-04 12:09:25</wp:post_date>
<wp:post_date_gmt>2009-08-04 10:09:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>step19png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>688</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/step19.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/step19.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"621";s:6:"height";s:2:"78";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:18:"2009/08/step19.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step19-150x78.png";s:5:"width";s:3:"150";s:6:"height";s:2:"78";}s:6:"medium";a:3:{s:4:"file";s:17:"step19-300x37.png";s:5:"width";s:3:"300";s:6:"height";s:2:"37";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>DefaultValue attribute for Castle MonoRail</title>
<link>http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/</link>
<pubDate>Tue, 04 Aug 2009 10:09:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/</guid>
<description></description>
<content:encoded><![CDATA[<p>While reading through <a href="http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx">ScottGu’s announcement of the ASP.NET MVC 2 Preview 1</a> I noticed this rather interesting little feature that’s in there:</p>  <p><a href="http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx" target="_blank"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="DefaultValue attribute in ActionMethod" border="0" alt="DefaultValue attribute in ActionMethod" src="http://www.tigraine.at/wp-content/uploads/2009/08/step19.png" width="621" height="78" /></a> </p>  <p>MonoRail is <a href="http://www.tigraine.at/2009/07/31/mvc-vs-monorail-action-methods/" target="_blank">much smarter about action methods</a> than MVC so there are already things going on with default values through routing etc. But this particular thing wasn’t in the framework until now. So I took <a href="http://www.kenegozi.com/blog/2008/09/15/creating-a-custom-parameter-binder-for-monorail-actions-iparameterbinder.aspx" target="_blank">Ken Egozi’s sample</a> about using <tt>IParameterBinder </tt>to implement the <tt>DefaultValueAttribute </tt>in MonoRail.</p>  <p>The result in syntax is identical to ASP.NET MVC 2 P1 and it was very easy to do:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6720626e-6c92-4f24-8966-4562a682642c" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Browse([DefaultValue("beer")] string category, [DefaultValue(1)] int page)
{
&#160;&#160;&#160;&#160;
}
</pre></div>

<p>How is this done? Well, I suggest you read <a href="http://www.kenegozi.com/blog/2008/09/15/creating-a-custom-parameter-binder-for-monorail-actions-iparameterbinder.aspx" target="_blank">Ken Egozi’s post</a> since he does a much better job at explaining that thing. Anyway, here is the code to make that happen:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:377739e2-84f1-4f8d-a880-717ccccb7ef7" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
using System;
using System.Reflection;
using Castle.MonoRail.Framework;

[AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = false)]
public class DefaultValueAttribute : Attribute, IParameterBinder
{
	private readonly object value;
	public DefaultValueAttribute(object value)
	{
		this.value = value;
	}

	public int CalculateParamPoints(IEngineContext context, IController controller, IControllerContext controllerContext, ParameterInfo parameterInfo)
	{
		var token = context.Request[parameterInfo.Name];
		if (CanConvert(parameterInfo.ParameterType, token))
			return 10;
		return 0;
	}
	
	private static bool CanConvert(Type targetType, string token)
	{
		if (token == null)
			return false;

		try
		{
			Convert.ChangeType(token, targetType);
			return true;
		}
		catch (FormatException)
		{
			return false;
		}
	}

	public object Bind(IEngineContext context, IController controller, IControllerContext controllerContext, ParameterInfo parameterInfo)
	{
		string token = context.Request[parameterInfo.Name];
		Type type = parameterInfo.ParameterType;
		if (CanConvert(type, token))
			return Convert.ChangeType(token, type);
		return value;
	}
}

</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>688</wp:post_id>
<wp:post_date>2009-08-04 12:09:25</wp:post_date>
<wp:post_date_gmt>2009-08-04 10:09:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>defaultvalue-attribute-for-castle-monorail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3250</wp:comment_id>
<wp:comment_author><![CDATA[James Curran]]></wp:comment_author>
<wp:comment_author_email>jamescurran@mvps.org</wp:comment_author_email>
<wp:comment_author_url>http://www.honestillusion.com</wp:comment_author_url>
<wp:comment_author_IP>167.206.189.6</wp:comment_author_IP>
<wp:comment_date>2009-08-26 15:44:14</wp:comment_date>
<wp:comment_date_gmt>2009-08-26 13:44:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thinking about this more, you are right.  

If we return 0, then 
/Home/Browser.rails?page=2
would probably be a non-match for 
public void Browse([DefaultValue("beer")] string category, int page) 
which is not what we want.
However, if we return 10, then for 
/Home/Browser.rails?page=2&amp;source=db
then 
public void Browse([DefaultValue("beer")] string category, int page) 
and 
public void Browse(int page, string source) 
become equally good, which is also not what we want.

I think always returning 5 may work best, but mostly I think that this is going to require a bit more investigation of how CalculateParamPoints works.  (I smell at least one of us getting a blog post out of that)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3235</wp:comment_id>
<wp:comment_author><![CDATA[James Curran]]></wp:comment_author>
<wp:comment_author_email>jamescurran@mvps.org</wp:comment_author_email>
<wp:comment_author_url>http://www.honestillusion.com</wp:comment_author_url>
<wp:comment_author_IP>167.206.189.6</wp:comment_author_IP>
<wp:comment_date>2009-08-25 21:05:09</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 19:05:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I not sure about this, (as neither you nor Ken really explains CalculateParamPoints), but I think you are saying that, given the method:

public void Browse([DefaultValue("beer")] string category, int page)   

then,
/Home/Browser.rails?category=xxxx&amp;page=2

is a better match for that method than 

/Home/Browser.rails?page=2

However, with the DefaultValue, both are equally good.  The DefaultValue attribute shouldn't affect how good a match a request is to a method, so it really should just return 0 for everything.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3237</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-25 21:07:05</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 19:07:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Very good point. I'll try that out and possibly update the post.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3267</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; How MonoRail selects it&rsquo;s best ActionMethod candidate: CalculateParamPoints]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/08/27/how-monorail-selects-its-best-actionmethod-candidate-calculateparampoints/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-08-27 15:47:22</wp:comment_date>
<wp:comment_date_gmt>2009-08-27 13:47:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Curran pointed me at one interesting flaw with my implementation of the DefaultValueAttribute for MonoRail I blogged [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3239</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-25 21:48:31</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 19:48:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hmm.. actually a tough question.
I'm not totally sold on making it's weight 0. I see your point with the DefaultValue being a value after all so it shouldn't matter if a parameter is passed or not, but setting it to 0 would also take away all the weight from that method overload..

I'll think about it a bit further and maybe we'll continue this discussion on the castle mailing list :)

Anyway, thanks for your comment!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Why Win7 succeeds where Vista failed</title>
<link>http://www.tigraine.at/2009/08/10/why-win7-succeeds-where-vista-failed/</link>
<pubDate>Mon, 10 Aug 2009 14:50:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Windows Vista]]></category>

		<category domain="category" nicename="windows-vista"><![CDATA[Windows Vista]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/10/why-win7-succeeds-where-vista-failed/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve been running Windows Vista since it’s launch day and still think nothing bad about the operating system. It served me well for over 3 years now and I’d never <strong>ever</strong> go back to Windows XP. </p>  <p>Not so much because I hate XP: XP was my operating system of choice before in the day. But because I am a geek that loves spending money on hardware and who loves running the latest “<em>shiny new thingy</em>”. </p>  <p>And while everyone was disappointed with Vista, I loved it. When run on the appropriate hardware, it was exactly what I needed from a operating system: Fast, stable, secure and better than the one before. </p>  <p>But, most people hated Vista. Even my father who has absolutely no idea what an operating system really is came one day to me and said “Hey that dude told me Vista sucks, please don’t put it on my PC”.    <br />And over the years I have developed numerous theories on why Vista was talked down by everyone, but I guess it was a combination of these three mistakes:</p>  <p><strong>1: Biggest mistake: </strong></p>  <p><img style="border-right-width: 0px; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="Vista Capable.jpg" border="0" alt="Vista Capable.jpg" src="http://www.vista-blog.de/wp-content/1.jpg" />This badge was supposed to go on laptops that can run Vista, but won’t be able to deliver Aero and everything.     <br />This thing spelled doom. We where still stuck in a time where 1 gig of ram was considered high-end (I was already running 2 at that time) and people threw this badge on lowest-end computers and laptops that wouldn’t even boot XP properly so preinstalled Vista was just awful.     <br />Perfect scenario: Unknowing computer user boots up system, sees this alien thing called Vista that is so slow that he can’t get anything done. Guess who he will blame?</p>  <p style="clear: both"><strong>2: Vista Ready</strong></p>  <p>This was supposed to tell people that this computer is able to run Vista with Aero. I actually once saw a 512mb Ram computer marketed as Vista Ready with just ridiculous hardware specs. While Vista Capable was a desaster – at least they admitted they won’t run it well. Vista Ready was even worse, most PCs that where sold with WinXP with the VistaReady sticker where nowhere near Vista specs, so once the free upgrade from XP to Vista came around people actually made their machine substantially slower than before, with only one thing to blame: Vista.</p>  <p><strong>3: UAC</strong></p>  <p>The two above where the thing that generally killed Vista, this third one was the last nail in it’s coffin. While even non-techies started hating Vista for 1+2, techies who had the machine to run Vista started hating it for all those prompts that popped up right in their face. Imagine all those people with the “I know what I’m doing”-attitude, running Vista for the first time and having to click this damn UAC dialog for 30 times a day. </p>  <p>Nobody actually cared that the UAC thing was only popping up because you are currently installing all your software back to the system, and that it almost went away after a week or so. All they cared about was getting this thing disabled or reinstalling WinXP on day one. </p>  <p>Vista was left in a spot where even regular users knew it as “the bad thing”, and where the techies where all in rage about how annoying Vista is to them. Now imagine Joe Average&#160; walking up to a techie for computer advice, what OS would you think he’d get recommended?</p>  <p><strong>The solution: Remarket Win7 as Vista</strong></p>  <p>So, Win7 now is the one to deliver what Vista couldn’t because I never had the chance to do so. Win7 is just regular Vista but delivered to capable machines and with enough graphical improvements and tweaks to make it look like a real step forward even for the non-tech-savvy user. (Along with other improvements, but at heart it’s just a WinNT 6.X while Vista was WinNT 6.0)</p>  <p>And it is just so awesome, I can’t keep myself away from it any longer.   <br />Unfortunately I don’t have a active MSDN subscription at the moment since I am a student again, so I am only enrolled in the MSDN-AA agreement through the <a href="http://www.imagineclub.at/" target="_blank">imagineClub</a> at Klagenfurt and we don’t get Win7 until after it’s release. But: We get Win7 RC1.    <br />So while the RTM is already shipping and people are already updating/installing that through MSDN and TechNet I installed Win7 RC1 two days ago on my main machine as my main operating system. </p>  <p>It was the right thing to do, although people will call me crazy. I did an in-place upgrade from Vista-64 Business to Win7-64 Ultimate RC1 with absolutely no trouble. Once Win7 RTM comes out I would have paved the machine anyway, so the upgrade for now saved me the trouble of reinstalling everything and still allows me to enjoy Win7 in all it’s awesome glory. </p>  <p>If you are worried about driver compatibility etc: Don’t, Win7 is mostly the same as Vista under the covers so all the driver issues have been worked out with Vista already. I only had to re-install my network card driver since it didn’t come back after hibernation, but other than that everything has been fine on the two machines I upgraded to Win7.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>689</wp:post_id>
<wp:post_date>2009-08-10 16:50:40</wp:post_date>
<wp:post_date_gmt>2009-08-10 14:50:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>why-win7-succeeds-where-vista-failed</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>I need time-scheduled energy-plans in Windows</title>
<link>http://www.tigraine.at/2009/08/11/i-need-time-scheduled-energy-plans-in-windows/</link>
<pubDate>Tue, 11 Aug 2009 12:06:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/11/i-need-time-scheduled-energy-plans-in-windows/</guid>
<description></description>
<content:encoded><![CDATA[<p>I run my main PC almost 24/7 because I use it to host all sorts of data on it (TV Shows, Music etc) that I then stream to my Laptop, TV or XBox to consume somewhere in the house. So the PC is constantly running and I don’t like wasting energy. </p>  <p>I’ve configured my PC to go to hibernation after 45 minutes of idle time, and Windows is smart enough to detect when files are open over the network and will not hibernate while the data is actively in use.    <br />Where it gets problematic is when I am doing something else (like eating) and then want to watch something off my PC. While I was eating the PC went to hibernation and I need to go up one floor just to hit a spacebar and head back down to the TV. </p>  <p>Obvious solution would be to simply shut off hibernation and let the PC run the whole day. But that then is bad since I like watching stuff on my laptop in bed. So when I turn off the laptop I want confidence that the PC will hibernate shortly after without me having to get out of bad at that time. </p>  <p>So, what I want is a setting that allows me to tell Windows to run energy profile 1 during the day where hibernation is completely off, while running energy profile 2 after 10pm so I don’t need to worry about shutting down the PC. </p>  <p>I guess I could write a service to do exactly that, but I believe it would be a great feature to see out of the box in Windows 8 (if they decide to follow some sane naming rules this time)</p>  <p>The much better solution anyway would be to get some NAS to store my stuff in my server closet so my PC can sleep through 70% of the day while I can still access all my media. Unfortunately most consumer-level NAS solutions are still too expensive or just not performing well enough.</p>  <p>Ps: One nice thing on the green-computing side of things that comes with Win7 is that they hide the “Maximum Power, minimum saving” option by default from the menu. You have to click “More energy-plans” to see that.    <br />I guess it doesn’t matter at all, since most users savvy enough to use that dialog probably know what they want anyway, but it sends the right message.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>690</wp:post_id>
<wp:post_date>2009-08-11 14:06:24</wp:post_date>
<wp:post_date_gmt>2009-08-11 12:06:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>i-need-time-scheduled-energy-plans-in-windows</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3027</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>128.178.183.102</wp:comment_author_IP>
<wp:comment_date>2009-08-11 18:36:54</wp:comment_date>
<wp:comment_date_gmt>2009-08-11 16:36:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[wondering about the possibility of you having lunch at 11pm while your pc decides to go to sleep]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/imagepng-2/</link>
<pubDate>Thu, 13 Aug 2009 23:22:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>693</wp:post_id>
<wp:post_date>2009-08-14 01:22:13</wp:post_date>
<wp:post_date_gmt>2009-08-13 23:22:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>697</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"460";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='92'";s:4:"file";s:18:"2009/08/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image2-287x300.png";s:5:"width";s:3:"287";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/image-thumbpng-2/</link>
<pubDate>Thu, 13 Aug 2009 23:22:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>694</wp:post_id>
<wp:post_date>2009-08-14 01:22:14</wp:post_date>
<wp:post_date_gmt>2009-08-13 23:22:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>697</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"234";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='92'";s:4:"file";s:24:"2009/08/image-thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/imagepng-3/</link>
<pubDate>Thu, 13 Aug 2009 23:22:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>695</wp:post_id>
<wp:post_date>2009-08-14 01:22:17</wp:post_date>
<wp:post_date_gmt>2009-08-13 23:22:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>697</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"460";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='92'";s:4:"file";s:18:"2009/08/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image3-287x300.png";s:5:"width";s:3:"287";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/image-thumbpng-3/</link>
<pubDate>Thu, 13 Aug 2009 23:22:18 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>696</wp:post_id>
<wp:post_date>2009-08-14 01:22:18</wp:post_date>
<wp:post_date_gmt>2009-08-13 23:22:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>697</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"234";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='92'";s:4:"file";s:24:"2009/08/image-thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ImagineClub Website: File upload/download works</title>
<link>http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/</link>
<pubDate>Thu, 13 Aug 2009 23:22:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/14/imagineclub-website-file-uploaddownload-works/</guid>
<description></description>
<content:encoded><![CDATA[<p>Oh it’s been quiet for a very very long time around here imagineClub-wise. And I’m afraid to say that progress has been rather slow.</p>  <p>Well, today I finally around to implement file downloads/uploads and the file listing in the sidebar section. In all it’s glory it was nothing more than 10 lines of C# code and tons and tons of XHTML and CSS that I’d rather not go into. </p>  <p>Here are some screenshots of the current version:</p>  <p>&#160;<a href="http://www.tigraine.at/wp-content/uploads/2009/08/image2.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb1.png" width="234" height="244" /></a> <a href="http://www.tigraine.at/wp-content/uploads/2009/08/image3.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb2.png" width="234" height="244" /></a> </p>  <p></p>  <p></p>  <p>It’s really rough around the edges and I will probably need to bring in a markdown editor to allow formatting when posting. I plan on stealing Ken Egozi’s Windows Live Writer integration for the news section, but when users upload files to the site they need to have some way of formatting their text. </p>  <p>Also I’ll look into <a href="http://blog.smoothfriction.nl/archive/2009/08/13/lesscss-the-.net-edition.aspx" target="_blank">Less.NET</a> to manage my CSS because it is becoming very very verbose at the moment and restructuring it is just painful. This is mainly due to the fact that I want to keep the markup was ignorant to presentation as possible and as expressive as possible. All forms are built with accessibility in mind and are passing the webaim tests.</p>  <p>Next up on my list is a search/list option for uploaded files. Maybe improve the file organization a bit more and then start to write the ELMS integration to allows logged in users access to the MSDN-AA. Once we are done with the ELMS thing I’d dare to launch the site. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>697</wp:post_id>
<wp:post_date>2009-08-14 01:22:19</wp:post_date>
<wp:post_date_gmt>2009-08-13 23:22:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagineclub-website-file-uploaddownload-works</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/imagepng-2/</link>
<pubDate>Mon, 17 Aug 2009 12:59:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>698</wp:post_id>
<wp:post_date>2009-08-17 14:59:06</wp:post_date>
<wp:post_date_gmt>2009-08-17 12:59:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>700</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"586";s:6:"height";s:3:"142";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:18:"2009/08/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x142.png";s:5:"width";s:3:"150";s:6:"height";s:3:"142";}s:6:"medium";a:3:{s:4:"file";s:17:"image4-300x72.png";s:5:"width";s:3:"300";s:6:"height";s:2:"72";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/image-thumbpng-2/</link>
<pubDate>Mon, 17 Aug 2009 12:59:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>699</wp:post_id>
<wp:post_date>2009-08-17 14:59:07</wp:post_date>
<wp:post_date_gmt>2009-08-17 12:59:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>700</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"590";s:6:"height";s:3:"146";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:24:"2009/08/image-thumb3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb3-150x146.png";s:5:"width";s:3:"150";s:6:"height";s:3:"146";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb3-300x74.png";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The fairy tale of binary blob fields</title>
<link>http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/</link>
<pubDate>Mon, 17 Aug 2009 12:59:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/17/the-fairy-tale-of-binary-blob-fields/</guid>
<description></description>
<content:encoded><![CDATA[<p>One of the main advantages students get from being members of imagineClub is that they get access to uploaded course materials through the website. Naturally, the new site has to support file upload and download somehow, and yesterday I started implementation of that feature.</p>  <p>In theory this sounds really simple, especially since the <a href="http://www.tigraine.at/2009/07/24/fileupload-in-monorail/">file upload in MonoRail is so trivial</a> I figured it wouldn’t be a problem to implement.</p>  <p>One major thing to consider when designing a file upload feature is the question: Save to disk or save to database? Let’s look at the two options:</p>  <p><strong>Save to disk: </strong></p>  <p>Pro: Very easy    <br />Con: Requires metadata to be kept in the database. Could go out of sync with the db. Requires backup. Requires special permissions.</p>  <p><strong>Save to db:</strong></p>  <p>Pro: Zero setup. Data all in one place, backup hugely simplified. Enforces data integrity    <br />Con: Non-trivial implementation.</p>  <p>Now, I naturally went with the db option. Deployment is hugely facilitated if you don’t need to look at file permissions, and most hosters have databases backed up anyway. So things go south, the only thing I need to recover the site would be the database file.</p>  <p>Some searching revealed that binary data could be mapped to the database through AR quite easily:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c4ebda2c-eb71-449a-ace5-20028abc0d39" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Property(ColumnType = "BinaryBlob", SqlType = "varbinary(MAX)")]
public byte[] BinaryData { get; set; }
</pre></div>

<p>Problem with that is that it crashed ALL of my database dependant unit-tests:</p>

<blockquote><tt>
    <p>------------ System.Data.SQLite.SQLiteException : SQLite error 
      <br />near &quot;MAX&quot;: syntax error</p>
  </tt></blockquote>

<p>Apparently SqlLite can’t figure out that MAX thing and will crash. Since it would accept a numeric value instead I looked at the <a href="http://msdn.microsoft.com/en-us/library/ms188362.aspx">SqlServer 2008 documentation for varbinary</a> to find out what MAX would be. Turns out it’s exaclty 2147483647 (2^31-1), so my natural reaction was to change the SqlType to be exactly <tt>varbinary(2147483647)</tt> instead of MAX. Now SqlLite can interpret it and all tests run great again, but creating the schema on SqlServer isn’t possible any more due to the following (odd) error:</p>

<blockquote><tt>
    <p>The size (2147483647) given to the column 'BinaryData' exceeds the maximum allowed for any data type (8000).</p>
  </tt></blockquote>

<p>So, what we just saw is a leaky abstraction inside the ORM. But NHibernate never claimed to abstract the DB completely away from me, so we’ll not use that against it. NHibernate explicitly supports these scenarios and in a real NHibernate scenario it’s just a matter of having two different mapping files, one mapping to the appropriate SQLite datatype and the other mapping to the Sql2008 datatype that would be varbinary(MAX). 
  <br />But, I’m not using NHibernate here, I’m using ActiveRecord that handles mapping through attributes on the data classes, and I’ve no intention of using <tt>#ifdef</tt> statements anywhere around my code. </p>

<p>The problem here is mainly that whenever you are trying to use two different <a href="http://en.wikipedia.org/wiki/Relational_database_management_system" target="_blank">RDBMS</a> at once you are limiting yourself to the least common denominator, and you have to deal with that. 

  <br />I won’t be able to use advanced Sql2008 features, and I also won’t be able to use anything fancy inside SQLite either. </p>

<p>The <u>least common denominator in this case is the datatype <tt>IMAGE</tt></u>, something that Microsoft is discouraging people to do in their documentation:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image4.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb3.png" width="590" height="146" /></a> </p>

<p>This puts me in a delicate position since the <a href="http://www.tigraine.at/category/programmierung/projects/imagineclub-website/" target="_blank">imagineClub website</a> is hosted on a server I don’t control. So I could just wake up one morning and seeing the <a href="http://www.tigraine.at" target="_blank">iC website</a> down because the hosting company decided to upgrade all users to 2010 (or whatever version the next SQL Server will have). 

  <br />And I know, usually providers send out warning for stuff like this, but I doubt that through all the <a href="http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/" target="_blank">structural changes with imagineClub lately</a> they even know where to send those warnings to.</p>

<p>So: Long story short, use <tt>image </tt>over <tt>varbinary(MAX)</tt> if you plan on doing in-memory SQLite testing, just keep in mind that your app will break when you upgrade to a newer version of SqlServer.</p>

<p><em>Update: Looks like </em><a href="http://devlicio.us/blogs/krzysztof_kozmic/default.aspx"><em>Krzysztof Kozmic</em></a><em> had the same issues and found </em><a href="http://devlicio.us/blogs/krzysztof_kozmic/archive/2009/08/17/adjusting-nhibernate-mapping-for-tests.aspx" target="_blank"><em>a quite clever solution for that</em></a><em>. I’m not totally clear on how to do this with ActiveRecord, but it’s a very pragmatic approach to a problem that seems to not have a perfect solution anyway.</em></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>700</wp:post_id>
<wp:post_date>2009-08-17 14:59:07</wp:post_date>
<wp:post_date_gmt>2009-08-17 12:59:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-fairy-tale-of-binary-blob-fields</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3139</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Koźmic]]></wp:comment_author>
<wp:comment_author_email>krzysztof@kozmic.pl</wp:comment_author_email>
<wp:comment_author_url>http://kozmic.pl</wp:comment_author_url>
<wp:comment_author_IP>195.205.243.130</wp:comment_author_IP>
<wp:comment_date>2009-08-19 09:15:29</wp:comment_date>
<wp:comment_date_gmt>2009-08-19 07:15:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel,

There's another option, as Fabio mentioned on Twitter (http://twitter.com/fabiomaulo/statuses/3361342631) if you set type to string and length to 10000 it should work with both SQL Server and SQLite.
I didn't try that yet though.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3141</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-19 12:32:20</wp:comment_date>
<wp:comment_date_gmt>2009-08-19 10:32:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi,
yes I read Fabio's comment on Twitter. But I didn't have time to try it out either.

It just doesn't strike me as a really "well documented" solution to the problem. But I guess if anyone knows about NH it's Fabio.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/imagepng-2/</link>
<pubDate>Wed, 19 Aug 2009 15:47:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>703</wp:post_id>
<wp:post_date>2009-08-19 17:47:08</wp:post_date>
<wp:post_date_gmt>2009-08-19 15:47:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>707</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"217";s:6:"height";s:3:"128";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:18:"2009/08/image5.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x128.png";s:5:"width";s:3:"150";s:6:"height";s:3:"128";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/image-thumbpng-2/</link>
<pubDate>Wed, 19 Aug 2009 15:47:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>704</wp:post_id>
<wp:post_date>2009-08-19 17:47:09</wp:post_date>
<wp:post_date_gmt>2009-08-19 15:47:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>707</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"221";s:6:"height";s:3:"132";s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:24:"2009/08/image-thumb4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb4-150x132.png";s:5:"width";s:3:"150";s:6:"height";s:3:"132";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/imagepng-3/</link>
<pubDate>Wed, 19 Aug 2009 15:47:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>705</wp:post_id>
<wp:post_date>2009-08-19 17:47:10</wp:post_date>
<wp:post_date_gmt>2009-08-19 15:47:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>707</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"159";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:18:"2009/08/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image6-300x74.png";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/image-thumbpng-3/</link>
<pubDate>Wed, 19 Aug 2009 15:47:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>706</wp:post_id>
<wp:post_date>2009-08-19 17:47:10</wp:post_date>
<wp:post_date_gmt>2009-08-19 15:47:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>707</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"676";s:6:"height";s:3:"171";s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:24:"2009/08/image-thumb5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image-thumb5-300x75.png";s:5:"width";s:3:"300";s:6:"height";s:2:"75";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Storing binary data in NHibernate / ActiveRecord</title>
<link>http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/</link>
<pubDate>Wed, 19 Aug 2009 15:47:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/19/storing-binary-data-in-nhibernate-activerecord/</guid>
<description></description>
<content:encoded><![CDATA[<p>I believe the simplest way to store binary data is to just put in the database. Whenever I’ve agreed to throw data to a disk I’ve had issues with deployment, administration or disaster recovery. </p>  <p>Simply put: Once you have a dependency from your database to your file system, you no longer have the luxury of only thinking about recovering the database. You now need to keep two pieces of your system “safe”, both requiring a completely different toolset than the other. </p>  <p>Besides the obvious second point of headache for backup/recovery, you also bring yourself into a world of hurt for deployment / maintenance scenarios.    <br />Filesystem access rights can be a huge pain in the ass, and having to set them right (and keep them that way) is usually a time-bomb waiting to go off. </p>  <p>So, storing your binary data in the db solves many problems, but some new ones arise. Mostly implementation details, but I’d like to show you some things to keep in mind when writing binary data to db. </p>  <p><strong>NHibernate supports no lazy loading of instance fields</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image5.png"><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb4.png" width="221" height="132" /></a> While with conventional ADO.NET I’d just put the binary data as a column inside the table it belongs to, NHibernate requires you to do things different. If you map your data like that NHibernate will fetch it whenever you read objects from that table, meaning that you’ll be querying large binary data fields for no reason, causing you application performance to significantly degrade over time. </p>  <p>&#160;</p>  <p>What you want is to have NHibernate fetch that field only if it is accessed (lazy load it), and that’s not possible for fields inside a class, but it is possible for references. So your database schema should look like this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image6.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb5.png" width="676" height="171" /></a> </p>  <p></p>  <p>And your mapping will look similar to this (I’ll use ActiveRecord for easier understanding):</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9799a8e6-f500-4709-b2b1-715dace4fa21" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[ActiveRecord]
public class Invoice : ActiveRecordBase&lt;Invoice&gt;
{
&#160;&#160;&#160;&#160;[PrimaryKey]
&#160;&#160;&#160;&#160;public int Id { get; set; }

&#160;&#160;&#160;&#160;[BelongsTo(Lazy = FetchWhen.OnInvoke, Cascade = CascadeEnum.SaveUpdate)]
&#160;&#160;&#160;&#160;public BinaryData ScannedInvoice { get; set; }
}

[ActiveRecord]
public class BinaryData : ActiveRecordBase&lt;BinaryData&gt;
{
&#160;&#160;&#160;&#160;[PrimaryKey]
&#160;&#160;&#160;&#160;public int Id { get; set; }

&#160;&#160;&#160;&#160;[Property(ColumnType = "BinaryBlob", SqlType = "IMAGE", NotNull = true)]
&#160;&#160;&#160;&#160;public byte[] Data { get; set; }
}
</pre></div>

<p>Now whenever your Invoice is saved/inserted NHibernate will also check if <tt>BinaryData </tt>has to be updated/inserted, while only loading the binary field if you actually access the <tt>Invoices.ScannedInvoice </tt>field. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>707</wp:post_id>
<wp:post_date>2009-08-19 17:47:11</wp:post_date>
<wp:post_date_gmt>2009-08-19 15:47:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>storing-binary-data-in-nhibernate-activerecord</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3231</wp:comment_id>
<wp:comment_author><![CDATA[Craig Neuwirt]]></wp:comment_author>
<wp:comment_author_email>cneuwirt@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>198.211.192.162</wp:comment_author_IP>
<wp:comment_date>2009-08-25 17:52:15</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 15:52:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Shouldn't the BinaryData class be marked as lazy too via [ActiveRecord(Lazy = true)]?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3233</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-25 19:22:54</wp:comment_date>
<wp:comment_date_gmt>2009-08-25 17:22:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Isn't the (Lazy = FetchWhen.OnInvoke) on the property enough?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3433</wp:comment_id>
<wp:comment_author><![CDATA[microdatam]]></wp:comment_author>
<wp:comment_author_email>hamdi@microdata.com.tr</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.56.207.128</wp:comment_author_IP>
<wp:comment_date>2010-04-18 23:53:08</wp:comment_date>
<wp:comment_date_gmt>2010-04-19 04:53:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.<br><a href="http://www.microdata.com.tr" title="web tasarım izmir" rel="nofollow">web tasarım izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3878</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3923</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4881</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4880</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4977</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4972</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4058</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4067</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4071</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4077</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4140</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4151</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4212</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4538</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4571</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5378</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5384</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5399</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4667</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4685</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4731</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4828</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4847</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4996</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4999</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5106</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5191</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-04-18 21:53:00</wp:comment_date>
<wp:comment_date_gmt>2010-04-18 21:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks ... looking forward your another articles.rn<a href="http://www.microdata.com.tr" title="web tasaru0131m izmir">web tasaru0131m izmir</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/imagepng-2/</link>
<pubDate>Mon, 24 Aug 2009 16:33:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>708</wp:post_id>
<wp:post_date>2009-08-24 18:33:44</wp:post_date>
<wp:post_date_gmt>2009-08-24 16:33:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>712</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"606";s:6:"height";s:3:"274";s:14:"hwstring_small";s:23:"height='57' width='128'";s:4:"file";s:18:"2009/08/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image7-300x135.png";s:5:"width";s:3:"300";s:6:"height";s:3:"135";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/image-thumbpng-2/</link>
<pubDate>Mon, 24 Aug 2009 16:33:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>709</wp:post_id>
<wp:post_date>2009-08-24 18:33:45</wp:post_date>
<wp:post_date_gmt>2009-08-24 16:33:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>712</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"610";s:6:"height";s:3:"278";s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:24:"2009/08/image-thumb6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image-thumb6-300x136.png";s:5:"width";s:3:"300";s:6:"height";s:3:"136";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/imagepng-3/</link>
<pubDate>Mon, 24 Aug 2009 16:33:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>710</wp:post_id>
<wp:post_date>2009-08-24 18:33:46</wp:post_date>
<wp:post_date_gmt>2009-08-24 16:33:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>712</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"233";s:6:"height";s:3:"262";s:14:"hwstring_small";s:22:"height='96' width='85'";s:4:"file";s:18:"2009/08/image8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image-thumb.png</title>
<link>http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/image-thumbpng-3/</link>
<pubDate>Mon, 24 Aug 2009 16:33:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>711</wp:post_id>
<wp:post_date>2009-08-24 18:33:46</wp:post_date>
<wp:post_date_gmt>2009-08-24 16:33:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-thumbpng-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>712</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image-thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"253";s:6:"height";s:3:"282";s:14:"hwstring_small";s:22:"height='96' width='86'";s:4:"file";s:24:"2009/08/image-thumb7.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image-thumb7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Introducing IronLess.Net &#8211; your duct tape solution to LessCss in ASP.NET</title>
<link>http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/</link>
<pubDate>Mon, 24 Aug 2009 16:33:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/24/introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet/</guid>
<description></description>
<content:encoded><![CDATA[<p>Some time ago while writing the CSS for the <a href="http://www.tigraine.at/category/programmierung/projects/imagineclub-website/" target="_blank">ImagineClub website</a> I found out the hard way that there are two ways of developing XHTML sites: Clean presentation/markup separation or mixing of the both to achieve CSS reusability. </p>  <p>What I mean by mixing is markup code like the following:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:a4fdffe0-bd5d-4dc0-9274-d8f6c9894e34" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;div class="floated thick-border highlight"&gt;
	&lt;p&gt;Stuff&lt;/p&gt;
&lt;/div&gt;
</pre></div>

<p>I have problems with the above, since I am clearly mixing presentation with data. I want my XHTML to transport structured data that gets styled through CSS. Separation of concerns teaches us that we should rarely have to touch the markup if we want to change appearance, and we should not have to touch the markup if we change the data we are presenting. 
  <br />So the above code clearly blurs the line somewhat, and while still being somewhat semantic markup, it’s also intermingled with presentation concerns what I don’t like at all. </p>

<p>Why code like the above exists has a reason: CSS is endlessly verbose and leads to tons and tons of code-duplication if only applied to DOM structures and IDs, so naturally webdesigners have started to use the mixing of classes in markup to avoid some of the duplication while still leveraging the power of CSS. </p>

<p>During a chat with <a href="http://www.nephilistic.com/" target="_blank">Kristof</a> about this particular issue the conclusion we reached was that my way of doing it was theoretically better, but only if backed by some sort of server-side framework that would enhance CSS to avoid duplication and verbosity that comes with my approach. </p>

<p>And looking over the Microsoft fence, somewhere in those fluffy green lands inhabited by Ruby people, I found the answer to my problems: <a href="http://lesscss.org/" target="_blank">LessCss</a>! 

  <br />But I don’t do ruby development so I filed it away under “cool but unreachable”, until I came across this tweet some two weeks ago: </p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image7.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb6.png" width="610" height="278" /></a> </p>

<p>I was immediately sold to the idea and contacted <a href="http://blog.smoothfriction.nl/" target="_blank">Erik</a>, to contribute to the project. Turns out, he’s a really nice guy and working hard on writing a parser to read LessCss fully in managed code through the use of ANTLR. </p>

<p>But being the simple guy I am one of the first questions I had for Erik was: “Why don’t we just wrap the original Less project inside the DLR and run it from there?”.</p>

<p>Well, at that time Erik had no real answer for that, and I didn’t either so I decided to give it a try while Erik had some <a href="http://blog.smoothfriction.nl/archive/2009/08/17/less.net-update.aspx" target="_blank">very valid reasons to continue working</a> on a full C# implementation. 

  <br />And now this is the post to tell you of my <a href="http://en.wikipedia.org/wiki/Pyrrhic_victory" target="_blank">pyrrhic victory</a>:</p>

<p>First: I did it. It’s here and it can be used: <a href="http://github.com/Tigraine/IronLess.Net/tree/master" target="_blank">IronLess.Net</a>.

  <br /><em><strong><u>Disclaimer: It’s a pain in the ass to use.</u></strong></em> </p>

<p><strong>Installing IronLess.Net</strong></p>

<p>When I write a library I want it to be one thing: self-contained. I don’t want to mess with your local IronRuby installation or with your current gem setup on the machine. So IronLess comes packed with a full catalog of IronRuby/Ruby class libraries all packed into a 0.9mb <a href="http://www.7-zip.org/" target="_blank">7zip</a> file. This file contains 2.228 files in 482 folders all together forming the complete IronRuby environment needed to run the original LessCss.</p>

<p>I did some (simple) magic with NAnt to alleviate that pain, so if you checkout the code you’ll just have to run <tt>build.bat</tt> and NAnt will compile IronLess and also extract the IronRuby libraries to your build folder, making it completely self-contained. You’ll end up with the following folder structure you just need to move (copy will take forever) to your /bin folder:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/08/image8.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image-thumb7.png" width="253" height="282" /></a> </p>

<p>Once that’s done you only have to add the following HttpHandler to your ASP.NET web.config and add some initialization code to your <tt>Global.asax.cs</tt> to be all set.</p>

<p>web.config</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b82e3cbb-be8e-4d9a-9bea-3930aea081a6" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;add verb="*" path="*.less" type="IronLess.Wrapper.IronLessHandler, IronLess.Wrapper" validate="false"/&gt;
</pre></div>

<p>Global.asax:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b1260150-b250-41b1-8581-7655a6fd8dfe" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
protected void Application_Start()
{
&#160;&#160;&#160;&#160;IronLess.Wrapper.RubyEngine.Initialize(Context);
}
</pre></div>

<p>That should suffice to redirect all request for a <tt>.less</tt> file to the <tt>IronLessHandler </tt>that will compile <tt>.less</tt> to <tt>.css </tt>using LessCss.</p>

<p><strong><u>Downsides:</u></strong></p>

<p>There are a thousand reasons to use this, but I’ve another thousand why you shouldn’t: </p>

<ol>
  <li>Startup is painfully slow: Initializing the LessCss ruby script takes &gt;20 seconds. So every application start takes 20 seconds now since we call the RubyEngine initializer in Application_Start (that will kick off the init of the LessCss script that itselfs makes IronRuby parse all the imported libraries resulting in a 20 second library load). That itself makes it completely unbearable since every debug run in Visual Studio now takes 20 seconds to load.</li>

  <li>LessCss through the DLR can’t read windows line-endings. You have to open up your<tt>.less </tt>file in a editor like <a href="http://notepad-plus.sourceforge.net/de/site.htm" target="_blank">Notepad++</a> and convert it to UNIX style endings (CR-LF -&gt; LF). Not pretty and even less practicable.</li>

  <li>Error handling / debugging is impossible. I didn’t dare to modify the LessCss.rb script so errors will be outputted to the command-line that you aren’t seeing. So if your .less file has errors you’ll see no useable results on why it failed to load. </li>

  <li>Compilation of <tt>.less </tt>to <tt>.css </tt>takes between 50 to 200ms inside a running web-app. Running the IronLess.Compiler takes about 30 seconds. Both figures are way to slow to be actually useable, going with the native Ruby gem from the commandline would be much faster.</li>
</ol>

<p>So, why bother? 
  <br />Actually, that’s the question I asked myself halfway through doing IronLess. Since it’s so painful to deploy and startup, I don’t see any real use for this at this point. If someone has the skills to make the DLR run LessCss faster than light by flipping some magic bit, please go ahead and <a href="http://github.com/Tigraine/IronLess.Net/tree/master" target="_blank">fork my repository on github</a> and tell the world about it.

  <br />Also I find the installation process to be just too painful. C’mon, 2.228 files in the <tt>/bin</tt> directory just to write CSS just isn’t cutting it for me. What I want is one simple dll I reference from <tt>/lib</tt> and I’m set. </p>

<p><strong><u>Going further</u></strong></p>

<p>I’ll be going to help Erik get Less.Net out of the door as quickly as possible, in the hopes of bringing something much needed to the ASP.NET world while avoiding all the troubles with external dependencies you get when trying to call into the ruby world from .NET code.
  <br />Also it’s a nice excuse for me to dig into ANTLR.</p>

<p>So finally, if you decide to use this you are entering a world of hurt. Either you can improve IronLess to a point where it gets useable (I can’t), or you wait for Less.Net.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>712</wp:post_id>
<wp:post_date>2009-08-24 18:33:47</wp:post_date>
<wp:post_date_gmt>2009-08-24 16:33:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>introducing-ironlessnet-your-duct-tape-solution-to-lesscss-in-aspnet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3499</wp:comment_id>
<wp:comment_author><![CDATA[Charles C Strahan]]></wp:comment_author>
<wp:comment_author_email>charles.c.strahan@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>71.96.146.34</wp:comment_author_IP>
<wp:comment_date>2010-08-05 04:02:56</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 09:02:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Very cool.  Here are a couple ideas:<br><br>1) The "2,228 files" problem can be easily handled.  IronRuby (and other well implemented DLR languages) use a "PlatformAdaptationLater" instance to manipulate file system entries.  The default PAL uses the System.IO namespace to access your HDD, but there&#39;s nothing holding you back from creating your own virtual file system of sorts.  It&#39;s pretty straightforward to create a PAL that provides access to assembly resources, in which case you can bundle all of the *.rb files into the assembly itself.<br><br>2) IronRuby is probably a lot more zippy, now that it&#39;s been 10 months since your post :)<br><br>3) The line ending problem could probably be handled if you just remove all occurrences of &#39;r&#39; before processing.<br><br>Cheers,<br>-Charles]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3501</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.254</wp:comment_author_IP>
<wp:comment_date>2010-08-05 12:00:45</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 17:00:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment. You are probably right, IronRuby has evolved over the last year. Only problem is that Cloudhead has also abandoned the Ruby Less project and moved on to less.js, so there is no real point in trying to run Less on IronRuby any more.<br>We also made progress here on the .NET front and ported less.js to .NET through the dotless project (<a href="http://www.dotlesscss.com" rel="nofollow">http://www.dotlesscss.com</a>).<br><br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3976</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-05 10:00:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 10:00:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment. You are probably right, IronRuby has evolved over the last year. Only problem is that Cloudhead has also abandoned the Ruby Less project and moved on to less.js, so there is no real point in trying to run Less on IronRuby any more.nWe also made progress here on the .NET front and ported less.js to .NET through the dotless project (http://www.dotlesscss.com).nngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4145</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-05 10:00:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 10:00:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment. You are probably right, IronRuby has evolved over the last year. Only problem is that Cloudhead has also abandoned the Ruby Less project and moved on to less.js, so there is no real point in trying to run Less on IronRuby any more.nWe also made progress here on the .NET front and ported less.js to .NET through the dotless project (http://www.dotlesscss.com).nngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5398</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-05 10:00:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 10:00:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the comment. You are probably right, IronRuby has evolved over the last year. Only problem is that Cloudhead has also abandoned the Ruby Less project and moved on to less.js, so there is no real point in trying to run Less on IronRuby any more.nWe also made progress here on the .NET front and ported less.js to .NET through the dotless project (http://www.dotlesscss.com).nngreetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>I&#8217;m in on the Castle blog aggregator</title>
<link>http://www.tigraine.at/2009/08/25/castle-blog-aggregator/</link>
<pubDate>Tue, 25 Aug 2009 10:05:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/25/castle-blog-aggregator/</guid>
<description></description>
<content:encoded><![CDATA[<p>Well, I already told you about the Castle blog aggregator as a source for <a href="http://www.tigraine.at/2009/07/25/keeping-up-with-castle/" target="_blank">keeping up to date with the Castle project</a>. Turns out the idea was taken even further and the feed has now been integrated into the <a href="http://www.castleproject.org">www.castleproject.org</a> under <a href="http://www.castleproject.org/community/blogs.aspx" target="_blank">Community/Blogs</a>.</p>  <p>What I never anticipated was that I’d one day get this email by <a href="http://bugsquash.blogspot.com/" target="_blank">Mauricio Scheffer</a>:</p>  <blockquote>   <p>Hi Daniel, would you be interested in being included in the <a href="http://www.castleproject.org/community/blogs.aspx">Castle blog aggregator</a>?       <br />Your posts tagged as &quot;Castle&quot; would be automatically included.</p>    <p>Cheers,      <br />Mauricio</p> </blockquote>  <p>My immediate answer was <u>Yes</u>! I’m very happy to be able to contribute to castle in any way possible, and seeing people consider my posts interesting is very rewarding to me. Thanks Mauricio!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>714</wp:post_id>
<wp:post_date>2009-08-25 12:05:20</wp:post_date>
<wp:post_date_gmt>2009-08-25 10:05:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>castle-blog-aggregator</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/26/translation-taken-too-far/imagepng-2/</link>
<pubDate>Wed, 26 Aug 2009 08:14:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>716</wp:post_id>
<wp:post_date>2009-08-26 10:14:46</wp:post_date>
<wp:post_date_gmt>2009-08-26 08:14:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>717</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"113";s:6:"height";s:3:"153";s:14:"hwstring_small";s:22:"height='96' width='70'";s:4:"file";s:18:"2009/08/image9.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image9-113x150.png";s:5:"width";s:3:"113";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Translation taken too far</title>
<link>http://www.tigraine.at/2009/08/26/translation-taken-too-far/</link>
<pubDate>Wed, 26 Aug 2009 08:14:48 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/26/translation-taken-too-far/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve said in the past that I believe <a href="http://www.tigraine.at/2008/11/21/you-have-to-know-english-to-be-a-programmer/">you have to know English to be a programmer</a>, and sometimes I get a painful reminder about how right I was.</p>  <p>After installing git on my laptop today I found out that GitGui has been set to German instead of English. Look at this wonderful commit dialog:</p>  <p><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; float: left; border-bottom-width: 0px; border-right-width: 0px" height="153" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image9.png" width="113" border="0" /> Isn’t that awesome? I speak German and can’t tell you what they could possible mean with words like <em>“<a href="http://dict.leo.org/ende?lp=ende&amp;lang=de&amp;searchLoc=0&amp;cmpType=relaxed&amp;sectHdr=on&amp;spellToler=on&amp;chinese=both&amp;pinyin=diacritic&amp;search=abzeichnen&amp;relink=on">Abzeichnen</a>”</em> (to sign sth.) and <em>“<a href="http://dict.leo.org/ende?lp=ende&amp;lang=de&amp;searchLoc=0&amp;cmpType=relaxed&amp;sectHdr=on&amp;spellToler=on&amp;chinese=both&amp;pinyin=diacritic&amp;search=eintragen&amp;relink=on">Eintragen</a>”</em> (to chart sth?) since they don’t even remotely translate to words like commit. They don’t use the words all the others use, thus alienating everyone and separating German GitGui users from the rest of the world.</p>  <p style="clear: both">Desaster, I think I’ll have to point this out to the GitGui mailing list. It just doesn’t make sense this way.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>717</wp:post_id>
<wp:post_date>2009-08-26 10:14:48</wp:post_date>
<wp:post_date_gmt>2009-08-26 08:14:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>translation-taken-too-far</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3247</wp:comment_id>
<wp:comment_author><![CDATA[peter]]></wp:comment_author>
<wp:comment_author_email>p.macher@aon.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>194.199.64.90</wp:comment_author_IP>
<wp:comment_date>2009-08-26 13:00:56</wp:comment_date>
<wp:comment_date_gmt>2009-08-26 11:00:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[one could also translate 'abzeichnen' with 'to copy something by hand' and 'eintragen' with 'getting money out of something' which, in my opinion, makes it even a bit more awesome :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>How MonoRail selects it&#8217;s best ActionMethod candidate: CalculateParamPoints</title>
<link>http://www.tigraine.at/2009/08/27/how-monorail-selects-its-best-actionmethod-candidate-calculateparampoints/</link>
<pubDate>Thu, 27 Aug 2009 13:47:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/27/how-monorail-selects-its-best-actionmethod-candidate-calculateparampoints/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://honestillusion.com/Default.aspx" target="_blank">James Curran</a> <a href="http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/#comment-3250" target="_blank">pointed me at</a> one interesting flaw with my implementation of the <a href="http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/" target="_blank">DefaultValueAttribute for MonoRail</a> I blogged about some weeks ago. This tipped me off to actually read the MonoRail code to find out how exactly MonoRail selects what overload of a ActionMethod to call.</p>  <p>MonoRail’s approach is as simple as it is brilliant, and reading the code that does this is a very pleasant experience. It took about 5 minutes to figure out the following:</p>  <p><font style="background-color: #ffffff">If there are multiple public methods in a <tt>SmartDispatcherController </tt>that match the request’s action, MonoRail calculates a score of parameter points of each overload, picking the “heaviest” and executes it.       <br /></font>How that score is calculated is quite simple: Every matched parameter gets 10 points, unmatched 0.</p>  <p><font style="background-color: #ffffff">But there’s more detail to this:</font></p>  <p><font style="background-color: #ffffff">Every regular parameter (types not defining a attribute of IParameterBinder) where the parameter-name could be matched to the request parameter’s key, MR assumes assumes a weight of 10</font></p>  <p><font style="background-color: #ffffff">In detail this means: Given the following ActionMethod with two parameters:      <br /></font></p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ba5280de-2599-41f5-a0fe-834f37099c81" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Test(string category, int page)
{&#160;&#160;&#160;&#160;
}
</pre></div>

<p>Monorail will assign 10 points if the key “category” could be found in the server’s request object (<tt>Request[&quot;category&quot;]</tt>) and another 10 if a parameter key called “page” is also present. 

  <br />So the following call <a href="http://localhost/Home/Test.rails?category=beer&amp;page=1">/Test.rails?category=beer&amp;page=1</a> would account for 20 parameter points, whereas omitting <tt>page</tt> would result in only 10 points. MonoRail will then pick the method with the highest score of matched parameter points and call it with those parameters.</p>

<p>Now, obviously the following would lead to a disambiguation:</p>

<p><a href="http://localhost/">/Test.rails?category=beer</a></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3157342b-b5df-4aad-86d4-b9ac5cc078cd" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Test(string category, int page)
{&#160;&#160;&#160;&#160;
}
public void Test(string category)
{
}
</pre></div>

<p>Category is present in both cases and page is unmatched, so both methods get 10 points and no useful distinction can be made. This is where MonoRail will award <u>a bonus of 5 points </u>to a method where all parameters could be matched. Thus giving <tt>Test(string)</tt> 15 points and <tt>Test(string, int)</tt> only 10, leading to the right match.</p>

<p>Now, in case of a parameter that is decorated with a <tt>IParameterBinder</tt> attribute (like ARFetch, DataBind etc) calculating those parameter points is delegated to the attribute class that then returns a score following it’s own logic (e.g.: if one attribute collects data from multiple request parameters it could return more than 10)</p>

<p>Let’s look at a sample implementation of <tt>CalculateParamPoints</tt> of the <tt>ARFetchAttribute</tt>:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2532bfc5-a66c-437d-9e0a-01b6030c3bd0" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public virtual int CalculateParamPoints(IEngineContext context, IController controller, IControllerContext controllerContext, ParameterInfo parameterInfo)
{
	String paramName = RequestParameterName ?? parameterInfo.Name;

	return context.Request.Params.Get(paramName) != null ? 10 : 0;
}
</pre></div>

<p>As you can see, ARFetch follows the usual MonoRail behavior and will return 10 in case it’s parameter-name could be matched, or 0 otherwise. </p>

<p>Still, all this doesn’t negate the fact that you could end up with ambiguities between action methods. In case many methods received the same number of parameter points MonoRail will simply call the first.</p>

<p>Oh, and did I mention that ASP.NET MVC can overload only on a per-http-verb basis? (Given that that’s a quite finite number <a href="http://msdn.microsoft.com/en-us/library/system.web.mvc.httpverbs.aspx" target="_blank">of exactly 5</a>)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>719</wp:post_id>
<wp:post_date>2009-08-27 15:47:07</wp:post_date>
<wp:post_date_gmt>2009-08-27 13:47:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-monorail-selects-its-best-actionmethod-candidate-calculateparampoints</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/2009/08/30/win7-shortcoming-notetaking-widget/imagepng-2/</link>
<pubDate>Sat, 29 Aug 2009 23:59:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/08/image10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>721</wp:post_id>
<wp:post_date>2009-08-30 01:59:54</wp:post_date>
<wp:post_date_gmt>2009-08-29 23:59:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagepng-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>722</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/08/image10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/08/image10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"243";s:6:"height";s:3:"190";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:19:"2009/08/image10.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Win7 shortcoming: Notetaking widget</title>
<link>http://www.tigraine.at/2009/08/30/win7-shortcoming-notetaking-widget/</link>
<pubDate>Sat, 29 Aug 2009 23:59:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/30/win7-shortcoming-notetaking-widget/</guid>
<description></description>
<content:encoded><![CDATA[<p><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/08/image10.png" width="243" height="190" /> </p>  <p>Oh, I love Win7. I said so after installing the first beta for the first time and I’ve been running my new favorite OS ever since.</p>  <p>But I have one problem with the way Microsoft used their built-in applications to showcase new functionality like jump-lists etc: They broke the Notes widget from the Windows sidebar.</p>  <p>You know, that little widget thingy that allowed you to write down 4 short lines somewhere on your screen.</p>  <p>In Windows Vista it was visible whenever your sidebar was visible (not a perfect solution either), but at least it was visible occasionally. </p>  <p>Windows7 changed this, Notes is now it’s own little application that has to run and that takes away space from my task-bar. And: When I use Aero-Peek to look at my desktop widgets, the Notes app turns transparent too. </p>  <p>So, it became nearly useless, since I want my notes to be a gentle, sometimes visible reminder for things I need to keep track of. Nothing I’d start a program to look at, no – something that is just there sometimes. And the new Win7 implementation of that falls seriously short of that goal. (And I very rarely see my desktop except for Win+D or Aero-Peek – both witch also remove the notes from the screen.)</p>  <p>In fact: I wonder why anyone would sacrifice some valuable taskbar real-estate for such a useless application.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>722</wp:post_id>
<wp:post_date>2009-08-30 01:59:56</wp:post_date>
<wp:post_date_gmt>2009-08-29 23:59:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>win7-shortcoming-notetaking-widget</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1251744481</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3310</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>hoelbling.d@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.95</wp:comment_author_IP>
<wp:comment_date>2009-08-30 11:47:37</wp:comment_date>
<wp:comment_date_gmt>2009-08-30 09:47:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks! That's what I was searching for.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3309</wp:comment_id>
<wp:comment_author><![CDATA[Radenko Zec]]></wp:comment_author>
<wp:comment_author_email>logic.rabbit@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.developers.ba</wp:comment_author_url>
<wp:comment_author_IP>92.241.137.73</wp:comment_author_IP>
<wp:comment_date>2009-08-30 10:50:35</wp:comment_date>
<wp:comment_date_gmt>2009-08-30 08:50:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Try to use Large notes sidebar gadget. It works perfect on Window 7 RTM.This gadget does n't turns transparent or goes away when you click show desktop.
http://gallery.live.com/liveItemDetail.aspx?li=fe36621b-bf1c-42b9-b823-11c4bfea1241]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3341</wp:comment_id>
<wp:comment_author><![CDATA[Radenko Zec]]></wp:comment_author>
<wp:comment_author_email>logic.rabbit@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.developers.ba</wp:comment_author_url>
<wp:comment_author_IP>80.87.240.30</wp:comment_author_IP>
<wp:comment_date>2009-09-01 14:32:51</wp:comment_date>
<wp:comment_date_gmt>2009-09-01 12:32:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Try also online notes widget. Get your notes from any computer.
http://gallery.live.com/liveItemDetail.aspx?li=04d9777f-46e2-489c-99a1-65aeb737038a&amp;pl=1&amp;bt=1]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>NDC 2009 Videos online</title>
<link>http://www.tigraine.at/2009/08/31/ndc-2009-videos-online/</link>
<pubDate>Mon, 31 Aug 2009 09:22:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/08/31/ndc-2009-videos-online/</guid>
<description></description>
<content:encoded><![CDATA[<p>The Norwegian Developer Conference is over for quite some time now, and by looking at their speaker line-up it’s quite clear that I would have loved to be there.</p>  <p>Good for me that they videotaped all talks and decided to share them with the general public.</p>  <p>So, if you are interested in seeing Ayende, Michael Feathers, Scott Hanselman, Jeremy D. Miller, Phil Haack or Udi Dahan doing their talks, you can either stream them online, or you can go ahead and download a 30GB torrent with all of their talks. </p>  <p>The videos are <a href="http://ndc2009.no/en/agenda.aspx?cat=1071&amp;id=1813" target="_blank">online on the official conference page</a>, or if you prefer a per-speaker listing:    <br />Mark Nijhof has a list of <a href="http://blog.fohjin.com/blog/2009/7/1/NDC_videos_are_published" target="_blank">all NDC videos for your streaming pleasure</a> and <a href="http://blogs.msdn.com/grothaug/pages/downloadable-ndc2009-videos.aspx" target="_blank">Rune Grothaug has the torrent</a>.</p>  <p>(Please keep seeding the torrent for a bit after your download has finished)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>723</wp:post_id>
<wp:post_date>2009-08-31 11:22:00</wp:post_date>
<wp:post_date_gmt>2009-08-31 09:22:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ndc-2009-videos-online</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Howto get rid of *.onetoc2 files using Powershell</title>
<link>http://www.tigraine.at/2009/09/01/howto-get-rid-of-onetoc2-files-using-powershell/</link>
<pubDate>Tue, 01 Sep 2009 10:53:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/01/howto-get-rid-of-onetoc2-files-using-powershell/</guid>
<description></description>
<content:encoded><![CDATA[<p>Today I did one small mistake when trying to open a command-line window on my source folder: Instead of hitting “Open command window here” I accidentally clicked “Open as OneNote notebook”.</p>  <p>Quite innocently, OneNote opened, I closed it. Everything was fine. Until I did a <tt>hg status</tt>:</p>  <blockquote>   <p>? lib\OneNote Inhaltsverzeichnis.onetoc2     <br />? lib\castle\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\elmah\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\extensions\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\extensions\common\2.0\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\extensions\common\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\common\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\common\neutral\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\mono\1.0\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\mono\2.0\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\mono\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\net\1.0\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\net\1.1\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\net\2.0\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\lib\net\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\nant\schema\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\sqllite\OneNote Inhaltsverzeichnis.onetoc2      <br />? lib\xunit\OneNote Inhaltsverzeichnis.onetoc2</p> </blockquote>  <p>Oh snap! OneNote just placed a table of contents file in every subdirectory of my lib folder! And, best of all, despite the setting “show all hidden” I couldn’t see those files through my explorer.    <br />Also, a <tt>del /s *.onetoc2</tt> did not remove the files.</p>  <p>Google to the rescue, I’m not the first to make that mistake, and <a href="http://richardsiddaway.spaces.live.com/Blog/cns!43CFA46A74CF3E96!2382.entry" target="_blank">Richard Siddaway also posted a way how to remove those using Powershell</a>:</p>  <blockquote>   <p>Get-ChildItem -Filter &quot;*.onetoc2&quot; -Force -Recurse | Remove-Item –Force</p> </blockquote>  <p>I’m quite shocked. I’ve been using the regular windows command line for quite some time now, and I have to say: Microsoft really has something going here with Powershell. It works really nice, and once you get a hang of the syntax it is really cool to work with.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>725</wp:post_id>
<wp:post_date>2009-09-01 12:53:58</wp:post_date>
<wp:post_date_gmt>2009-09-01 10:53:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>howto-get-rid-of-onetoc2-files-using-powershell</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3437</wp:comment_id>
<wp:comment_author><![CDATA[Cesar]]></wp:comment_author>
<wp:comment_author_email>cesar@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>189.168.205.126</wp:comment_author_IP>
<wp:comment_date>2010-05-04 23:09:48</wp:comment_date>
<wp:comment_date_gmt>2010-05-05 04:09:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[del *.onetoc2 /s /ahs]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3448</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>159.121.178.234</wp:comment_author_IP>
<wp:comment_date>2010-05-26 17:47:13</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 22:47:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5318</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4579</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3726</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3888</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3899</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3911</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3941</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3960</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4892</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4893</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4028</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4037</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4038</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4039</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4076</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4078</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4079</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5155</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5150</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5203</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4176</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5219</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4180</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5244</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4213</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4453</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4517</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5282</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5325</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5375</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4639</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4640</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4721</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4722</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5047</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5052</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5181</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5192</wp:comment_id>
<wp:comment_author><![CDATA[NIck]]></wp:comment_author>
<wp:comment_author_email>nicholas.farmer@state.or.us</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-26 15:47:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-26 15:47:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can someone tell me how to disable onenote from creating these files in the first place?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>I&#8217;m in love with Android</title>
<link>http://www.tigraine.at/2009/09/02/im-in-love-with-android/</link>
<pubDate>Wed, 02 Sep 2009 09:05:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=726</guid>
<description></description>
<content:encoded><![CDATA[<p>Last year I bought myself a iPhone 2G through friend from the US and was very fond of it, mainly because I didn’t have a Smartphone before. But as time goes by, the limitations of the iPhone platform became more and more obvious.</p>  <p>I made the decision not to buy a newer generation iPhone when I was at the office one evening and needed to carry a large db dump file with me home. Imagine my feelings when carrying a 16GB iPhone that has about 13GB of free space available and not being able to use it as a thumb drive due to it’s lack of a mass storage mode. Luckily I had my DSLR with me so I formatted my 8GB SD card and used that instead. But not being able to place files on a phone is just plain stupid.</p>  <p>Also I’m just tired of iTunes and it’s totally retarded syncing model.    <br />I’m a totally connected person, all my data is in the cloud, be it code (BitBucket, GitHub), email (Gmail), calendar (Google calendar), Google reader or contacts (Gmail). So having to plug my phone into the computer at regular intervals to update information on it is just not the way I wanted it to be. (Especially considering what a headache it is getting data synced between Outlook and Google’s services).</p>  <p>So going to a Android phone was a pretty logical decision for me. I can take all of my current data with me, use the wireless syncing capabilities that come with using Google’s Gmail and Calendar services, and be up and running in less than 5 minutes.</p>  <p>Actually, it only took about 3 minutes for Google to load all of my contact list into the phone and present me with a fully working environment of Contacts, Email and Calendar. And that’s really impressive.</p>  <p>And lastly, I’m a developer! Being able to develop for my own device is very important to me, and not owning a Mac and hating the idea of programming in objective C (believe me I tried) severely limited my ability to do that on the iPhone platform.    <br />Android on the other hand is using Java (not perfect, but still way better than C) and is not constrained to a particular platform with their SDK. </p>  <p>Although the platform choice was easy, the phone one was hard. As of speaking there are only 3 serious Android handsets in the market: HTC Magic, HTC Hero and Samsung Galaxy.    <br />And to be honest: None of the three is perfect. The Magic has no headphone jack, the Hero is very bulky and due to sense UI not always as Snappy as I’d like it to be and the Galaxy didn’t bring any interesting features besides the AMOLED display.&#160; <br />Since none of the current devices is really perfect, I figured buying the cheapest one and letting the platform mature for another year would be the best course of action. So I bought the HTC Magic. </p>  <p>So far, I’ve been using my Magic for about two weeks and love it. It’s fast, having multi-tasking paired with push notification for almost everything from Google makes this phone simply a joy to use. I get email notifications faster on my phone than I get them through the GMail notifier on my PC. I can use Google Talk to chat with friends who use Android instead of writing SMS or look up their position through Latitude.   <br />Also the battery life on my Magic is way better than it was on my iPhone. While I was lucky to get my iPhone through one day without plugging it in, my Magic can easily live through 2 with push services and background tasks enabled.</p>  <p>The Android Market is also filled with lots and lots of apps, so there is no real disadvantage from the iPhone here. I even came to appreciate the ability to scan barcodes on the phone while shopping! </p>  <p>Now, from my limited testing so far I found the following apps really nice and handy:</p>  <ol>   <li>twidroid (Twitter .. ) </li>    <li>Places Dictionary (Gives you POI near you) </li>    <li>My Tracks (Running track recorder) </li>    <li>NewsRob (Very good Google Reader app) </li>    <li>Astrid Task/Todo List </li>    <li>Wikitude World Browser (cool augmented reality from Austria) </li>    <li>Google Maps (make sure to get the newest version manually from the Market) </li>    <li>Battery Widget (from mipping.com) </li>    <li>Barcode Scanner (also scans QR codes) </li>    <li>Quickpedia (Wikipedia app) </li>    <li>Google Sky Map (oh this is so awesome!) </li> </ol>  <p>But what I love most about the phone is simply it’s syncing! I edit all my contacts online through GMail and without even thinking about it they all get updated on my phone too. No hassle with plugging it in or anything, totally zero friction. It just works!</p>  <p>My only gripe with the thing so far: You can have only one input language for the keyboard selected at a time. Since I frequently use the phone to look through twitter or emails, I sometimes need to switch from German to English. The iPhone had that handy little button to switch, while the Android would require me to go through the phone’s settings.</p>  <p>Verdict: I’d never go back to my iPhone. Although the platform is still young and there are some rough edges to be worked out, I feel like Android will be a serious player during the next years.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>726</wp:post_id>
<wp:post_date>2009-09-02 11:05:57</wp:post_date>
<wp:post_date_gmt>2009-09-02 09:05:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>im-in-love-with-android</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3356</wp:comment_id>
<wp:comment_author><![CDATA[Mathias]]></wp:comment_author>
<wp:comment_author_email>mathias@juggle.at</wp:comment_author_email>
<wp:comment_author_url>http://www.semanticmetadata.net/</wp:comment_author_url>
<wp:comment_author_IP>93.111.38.49</wp:comment_author_IP>
<wp:comment_date>2009-09-03 11:16:11</wp:comment_date>
<wp:comment_date_gmt>2009-09-03 16:16:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[conversion_count++<br><br>We got one back from the dark land of the Apple!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3357</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.252</wp:comment_author_IP>
<wp:comment_date>2009-09-03 11:19:41</wp:comment_date>
<wp:comment_date_gmt>2009-09-03 16:19:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes :) .. And guess what I did then?<br>I went out to buy a Apple Keyboard for my PC (Post upcoming). <br>And guess what happened then?<br><br>My old iPhone slipped and fell on my Apple Keyboard to scratch it.. Awesome when the only two Apple things in my household hurt each other..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3379</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Wasted innovation: Google Wave]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/31/wasted-innovation-google-wave/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-31 23:10:35</wp:comment_date>
<wp:comment_date_gmt>2009-10-31 21:10:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Email: Ok, so Email is everywhere and it works (thanks to GMail). I get mails pushed to my Android phone, and all in all: It does everything I want flawlessly and most importantly: EVERYWHERE. Wave on the [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=729</link>
<pubDate>Thu, 03 Sep 2009 11:28:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>729</wp:post_id>
<wp:post_date>2009-09-03 13:28:09</wp:post_date>
<wp:post_date_gmt>2009-09-03 11:28:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"428";s:6:"height";s:3:"267";s:14:"hwstring_small";s:23:"height='79' width='127'";s:4:"file";s:17:"2009/09/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=730</link>
<pubDate>Thu, 03 Sep 2009 11:28:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>730</wp:post_id>
<wp:post_date>2009-09-03 13:28:10</wp:post_date>
<wp:post_date_gmt>2009-09-03 11:28:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"448";s:6:"height";s:3:"287";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:23:"2009/09/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using ActiveRecord&#8217;s Field mapping to map custom enumeration classes</title>
<link>http://www.tigraine.at/2009/09/03/using-activerecords-field-mapping-to-map-custom-enumeration-classes/</link>
<pubDate>Thu, 03 Sep 2009 11:28:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/03/using-activerecords-field-mapping-to-map-custom-enumeration-classes/</guid>
<description></description>
<content:encoded><![CDATA[<p>One thing that may be overlooked sometimes (I certainly did) is the ability of ActiveRecord to not only bind to properties but also to instance fields (yes, even private ones). This little feature came in very handy when I was looking for a way to persist a <a href="http://www.tigraine.at/2009/08/02/a-better-way-to-write-enumerations/" target="_blank">class based enumeration</a>. I’ll tell you why in a minute. </p>  <p>First, I have Users that can be in one of 5 categories. None of which were important enough to warrant a foreign-key relationship modeling in the database, but I still wanted to encapsulate them in some sort of object to avoid doing string checking inside my code. The model looks like this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb.png" width="448" height="287" /></a> </p>  <p>I clearly didn’t want to have a Category table in my database, so I decided on creating the Category class while saving the Name property to the database. </p>  <p>Here is my implementation of the <tt>User.Category</tt> field:</p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:aed6ec28-1ca0-45eb-9b18-bd0ea7676c70" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Field]
private string category;

public Category Category
{
&#160;&#160;&#160;&#160;get { return Category.GetCategoryByName(category); }
&#160;&#160;&#160;&#160;set { category = value.Name; }
}
</pre></div>

<p>As you can clearly see. My code is only dealing with Category objects (that can have implementations attached) while behind the scenes I only write the name of the category to the backing field. This way I get rid of magic strings inside my code while not having to burden my database with foreign key constraints.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>731</wp:post_id>
<wp:post_date>2009-09-03 13:28:10</wp:post_date>
<wp:post_date_gmt>2009-09-03 11:28:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-activerecords-field-mapping-to-map-custom-enumeration-classes</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=732</link>
<pubDate>Mon, 07 Sep 2009 20:45:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>732</wp:post_id>
<wp:post_date>2009-09-07 22:45:52</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"529";s:6:"height";s:3:"169";s:14:"hwstring_small";s:23:"height='40' width='128'";s:4:"file";s:18:"2009/09/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x95.png";s:5:"width";s:3:"300";s:6:"height";s:2:"95";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=733</link>
<pubDate>Mon, 07 Sep 2009 20:45:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>733</wp:post_id>
<wp:post_date>2009-09-07 22:45:54</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"533";s:6:"height";s:3:"173";s:14:"hwstring_small";s:23:"height='41' width='128'";s:4:"file";s:24:"2009/09/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb1-300x97.png";s:5:"width";s:3:"300";s:6:"height";s:2:"97";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=734</link>
<pubDate>Mon, 07 Sep 2009 20:45:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>734</wp:post_id>
<wp:post_date>2009-09-07 22:45:54</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"289";s:6:"height";s:2:"43";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:18:"2009/09/image2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image2-150x43.png";s:5:"width";s:3:"150";s:6:"height";s:2:"43";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=735</link>
<pubDate>Mon, 07 Sep 2009 20:45:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>735</wp:post_id>
<wp:post_date>2009-09-07 22:45:55</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"293";s:6:"height";s:2:"47";s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:24:"2009/09/image_thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb2-150x47.png";s:5:"width";s:3:"150";s:6:"height";s:2:"47";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=736</link>
<pubDate>Mon, 07 Sep 2009 20:45:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>736</wp:post_id>
<wp:post_date>2009-09-07 22:45:55</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"364";s:6:"height";s:2:"66";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:18:"2009/09/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image3-150x66.png";s:5:"width";s:3:"150";s:6:"height";s:2:"66";}s:6:"medium";a:3:{s:4:"file";s:17:"image3-300x54.png";s:5:"width";s:3:"300";s:6:"height";s:2:"54";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=737</link>
<pubDate>Mon, 07 Sep 2009 20:45:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>737</wp:post_id>
<wp:post_date>2009-09-07 22:45:56</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-4</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"368";s:6:"height";s:2:"70";s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:24:"2009/09/image_thumb3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb3-150x70.png";s:5:"width";s:3:"150";s:6:"height";s:2:"70";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb3-300x57.png";s:5:"width";s:3:"300";s:6:"height";s:2:"57";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=738</link>
<pubDate>Mon, 07 Sep 2009 20:45:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>738</wp:post_id>
<wp:post_date>2009-09-07 22:45:56</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"286";s:6:"height";s:2:"52";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:18:"2009/09/image4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image4-150x52.png";s:5:"width";s:3:"150";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=739</link>
<pubDate>Mon, 07 Sep 2009 20:45:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>739</wp:post_id>
<wp:post_date>2009-09-07 22:45:57</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"290";s:6:"height";s:2:"56";s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:24:"2009/09/image_thumb4.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb4-150x56.png";s:5:"width";s:3:"150";s:6:"height";s:2:"56";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=740</link>
<pubDate>Mon, 07 Sep 2009 20:45:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>740</wp:post_id>
<wp:post_date>2009-09-07 22:45:57</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-6</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"318";s:6:"height";s:2:"56";s:14:"hwstring_small";s:23:"height='22' width='128'";s:4:"file";s:18:"2009/09/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image5-150x56.png";s:5:"width";s:3:"150";s:6:"height";s:2:"56";}s:6:"medium";a:3:{s:4:"file";s:17:"image5-300x52.png";s:5:"width";s:3:"300";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=741</link>
<pubDate>Mon, 07 Sep 2009 20:45:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>741</wp:post_id>
<wp:post_date>2009-09-07 22:45:58</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-6</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"322";s:6:"height";s:2:"60";s:14:"hwstring_small";s:23:"height='23' width='127'";s:4:"file";s:24:"2009/09/image_thumb5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb5-150x60.png";s:5:"width";s:3:"150";s:6:"height";s:2:"60";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb5-300x55.png";s:5:"width";s:3:"300";s:6:"height";s:2:"55";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The paging antipattern</title>
<link>http://www.tigraine.at/2009/09/07/the-paging-antipattern/</link>
<pubDate>Mon, 07 Sep 2009 20:45:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/07/the-paging-antipattern/</guid>
<description></description>
<content:encoded><![CDATA[<p>Wherever you look on the internet, everywhere you’ll see pagination. This is especially important in web shop scenarios where you don’t want to overwhelm your user. </p>  <p>Usually you just take these things for granted and use them to navigate around, until you discover a gem of bad design like this one on the German bookstore Thalia:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image1.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb1.png" width="533" height="173" /></a> </p>  <p></p>  <p></p>  <p>This is a 1:1 screenshot, no scaling from the original. And as usual: the one <tt>&lt;</tt> will take you to the previous page, the <tt>&lt;&lt;</tt> will take you to the very first page. </p>  <p>Now, let’s consider these options that are only 3 pixels apart from each other: First page, previous (thus page 4), page 1.    <br />Let’s just assume that unless you are really careful with you mouse you’re looking at a 2/3 chance of finding yourself on page number 1 instead of 4!</p>  <p>Instead of trying to home in on that tiny next button I found myself using the numbers to get to the next page, totally ridiculous. </p>  <p>Upon getting frustrated by this particular eBook store I decided to take a look at the other major players and their pagination solutions.</p>  <p><strong>Amazon:</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image2.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb2.png" width="293" height="47" /></a> </p>  <p>I just measured a distance of over 40 pixels between the 3 and the Next button. And even on a search where with less than 3 pages they keep a distance of at least 20 pixels between Next and 3. Also important that <em>Next</em> is always last and <em>Previous</em> is first. No First and Last button anywhere to be found.</p>  <p><strong>Google:</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image3.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb3.png" width="368" height="70" /></a> </p>  <p>Again, hitboxes for <em>Previous</em> and <em>Next</em> are enormous while completely lacking First and Last. </p>  <p></p>  <p><strong>Ebay:</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image4.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb4.png" width="290" height="56" /></a> </p>  <p><strong>Bing:</strong></p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image5.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb5.png" width="322" height="60" /></a> </p>  <p>&#160;</p>  <p></p>  <p><strong>Conclusion</strong>: Nobody uses these&#160; Last and First any more. Get over it and leave them out! Why should anyone want to go to the last page of a listing that is probably already sorted by relevancy? </p>  <p>Instead use the space for huge Previous and Next buttons that are far away from any other navigational controls. At any rate, never ever use those &lt;&gt; Symbols alone as you means to navigate, always provide a big enough hitbox to avoid frustration.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>742</wp:post_id>
<wp:post_date>2009-09-07 22:45:58</wp:post_date>
<wp:post_date_gmt>2009-09-07 20:45:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-paging-antipattern</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>imagineClub Website source has moved to GitHub</title>
<link>http://www.tigraine.at/2009/09/11/imagineclub-website-source-has-moved-to-github/</link>
<pubDate>Thu, 10 Sep 2009 22:21:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/11/imagineclub-website-source-has-moved-to-github/</guid>
<description></description>
<content:encoded><![CDATA[<p>I have <a href="http://www.tigraine.at/2009/05/30/moving-to-mercurial/">been using Mercurial as my SCM of choice</a> for quite some time now, and I’ve been loving it ever since. Working with a DVCS is a pleasure compared to the slow and painful experience I see when using Subversion. Not that Subversion is a bad product, but my workflow is just totally different from what SVN was built for.</p>  <p>Having used git now a bit while helping Erik on the <a href="http://github.com/erikvanbrakel/less.net/tree/master">Less.Net project</a>, I discovered that it feels a tad better workflow wise. I especially like it’s much better branching support and it’s support for shelving changes. Both things already in hg, but not as easy to use or only available through addons. </p>  <p>Another thing that made the switch tempting was the fact that it seems almost the whole .NET community decided to head over to GitHub to continue development. There are NHibernate forks, there are Castle forks etc etc.. Even Ayende moved there!</p>  <p>So I decided to follow the herd, being familiar with the tools the community uses is very important to me, so today I finally moved the imagineClub website source to GitHub.</p>  <p>Why finally? Well, I’ve been trying to for now 2 days and simply failed. Today i finally decided that it’s OK for me to loose all my history and to start a fresh repo with the existing code. The migration from hg to git seems to be so uncommon that there is a significant lack of tools for that. </p>  <p>There is the hg2git from the GitHub crew, that didn’t work for me. And there is a hg2git script inside fast-export that I couldn’t run on Windows. Although Zerok managed to convert it on his Mac machine, all the linefeeds were wrong and therefore the history was rendered useless. So I decided to quit trying and simply wipe the history, start from scratch and be done with it.</p>  <p>So, now the new home of the imagineClub source is located here:    <br /><a href="http://github.com/Tigraine/ic-website/tree/master">http://github.com/Tigraine/ic-website/tree/master</a></p>  <p>Feel free to watch / fork the repo.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>743</wp:post_id>
<wp:post_date>2009-09-11 00:21:54</wp:post_date>
<wp:post_date_gmt>2009-09-10 22:21:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagineclub-website-source-has-moved-to-github</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>wlw</title>
<link>http://www.tigraine.at/?attachment_id=746</link>
<pubDate>Tue, 15 Sep 2009 13:13:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/wlw.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>746</wp:post_id>
<wp:post_date>2009-09-15 15:13:39</wp:post_date>
<wp:post_date_gmt>2009-09-15 13:13:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wlw</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>745</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/wlw.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/wlw.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"396";s:6:"height";s:3:"277";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:15:"2009/09/wlw.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"wlw-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"wlw-300x209.png";s:5:"width";s:3:"300";s:6:"height";s:3:"209";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=747</link>
<pubDate>Tue, 15 Sep 2009 13:46:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>747</wp:post_id>
<wp:post_date>2009-09-15 15:46:21</wp:post_date>
<wp:post_date_gmt>2009-09-15 13:46:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-7</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"183";s:14:"hwstring_small";s:23:"height='39' width='128'";s:4:"file";s:18:"2009/09/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image6-300x91.png";s:5:"width";s:3:"300";s:6:"height";s:2:"91";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using a Mac Keyboard on Windows</title>
<link>http://www.tigraine.at/2009/09/15/using-a-mac-keyboard-on-windows/</link>
<pubDate>Tue, 15 Sep 2009 13:46:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/15/using-a-mac-keyboard-on-windows/</guid>
<description></description>
<content:encoded><![CDATA[<p>I decided to do something really stupid: Spend 50&euro; on a Apple Keyboard. </p>  <p><a href="http://www.apple.com/keyboard/" target="_blank"><img title="image" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="183" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image6.png" width="600" border="0" /></a> </p>  <p>Why? I was in the market for a keyboard that mirrors my laptop’s key press experience. The Apple Keyboard seemed like the perfect choice at first, and so I bought it at my local Apple retailer. </p>  <p>One thing I didn’t consider at the store was that on the Apple Keyboard ALT and Command have traded places, and the default mapping on Windows is Command = Winkey.</p>  <p>So, I found some handy guides on the internet on how to use the nice little program AutoHotkey to remap keys on the keyboard. So I could flip positions on Winkey and Alt.</p>  <p>Doing so with AutoHotkey is very easy and there are numerous scripts out there to do all sorts of crazy things. Here is the script I came up with after some time:</p>  <blockquote>   <p>LWin::LAlt     <br />LAlt::LWin      <br />RWin::RAlt      <br />RAlt::AppsKey      <br />+F8::Send {Media_Play_Pause}      <br />+F7::Send {Media_Prev}      <br />+F9::Send {Media_Next}      <br />+F10::Send {Volume_Mute}      <br />+F11::Send {Volume_Down 2}      <br />+F12::Send {Volume_Up 2}      <br />F13::Insert      <br />F14::PrintScreen</p> </blockquote>  <p>Also I have found it important to run AutoHotKey as admin, otherwise all these key mappings are lost whenever you enter a UAC protected area.</p>  <p>Now that the Key mappings are all set up I have to say that I am really happy with the keyboard so far. The typing experience takes some time getting used to, but it’s really solid and well manufactured and I am not really all that sure if I’ll go back to my Natural Keyboard 4000 anytime soon. (I might if the Apple one proves to be discomforting after prolonged use, but that remains to be seen).</p>  <p>PS: Windows Live Writer on my main machine decided to break. As of now I can’t write blog posts on my computer any more and I have on explanation for that (besides some Exception text stating that Courier New has no regular cut). And I get really pissed off by that (and by the fact that WLW is saving my drafts in some obscure binary format I can’t read).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>748</wp:post_id>
<wp:post_date>2009-09-15 15:46:22</wp:post_date>
<wp:post_date_gmt>2009-09-15 13:46:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-a-mac-keyboard-on-windows</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>How to ruin my day</title>
<link>http://www.tigraine.at/2009/09/16/how-to-ruin-my-day/</link>
<pubDate>Wed, 16 Sep 2009 11:24:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/16/how-to-ruin-my-day/</guid>
<description></description>
<content:encoded><![CDATA[<p>In case you are somewhere stuck in a plan on how to make my day miserable I’ve got a tip for you: </p>  <p>Write absolutely horrible code like this and leave the maintenance to me:</p>  <p>Method signature:</p>  <div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ba05543b-a89e-4f8a-b348-df828fedd846" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
internal void TryRequestSession(string securityToken, ref Guid secID)
</pre></div>

<p>Call site:</p>

<div class="wlWriterEditableSmartContent" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b42afe73-b6ca-4621-8d69-d34e3f9bc336" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"><pre name="code" class="csharp">
public ActionMethod Open(string securityToken)
{
	Guid secID = Guid.Empty;
	try
	{
		secID = new Guid(securityToken);
	}
	catch
	{}
	Guid oldSecID = secID;
	provider.TryRequestSession(securityToken, ref secID);
	if (oldSecID == Guid.Empty)
	//....
}
</pre></div>

<p>There are many things wrong with this code, but I’ll spare you the details and say that new Guid(securityToken) will <u>always</u> throw a ArgumentException and that I have absolutely no tolerance for void methods that have ref parameters! 

  <br />Whatever was going on in that chimps mind who wrote that, it couldn’t have anything to do with programming.</p>

<p>So, recap: If you expect other people to maintain your code (I’m currently rewriting this thing, it’s easier) make sure you do the following:</p>

<ol>
  <li>Have Unit tests that specify the behavior</li>

  <li>Leave an actual spec that can be looked at</li>

  <li>NEVER use ref if you can use return</li>

  <li>Don’t swallow exceptions (and if you have to, leave a comment!)</li>

  <li>Make it run!</li>
</ol>

<p>Yes that’s right. If you leave a piece of crap behind, at least make it compile! I had to search for 3 totally outdated libraries to even make this piece of junk compile on my machine. Again: <u><strong>The GAC is your enemy!</strong></u></p>

<p>Thank you, you now may go on with your lives while I feel a lot better and my actually start enjoying my coffee :)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>749</wp:post_id>
<wp:post_date>2009-09-16 13:24:08</wp:post_date>
<wp:post_date_gmt>2009-09-16 11:24:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-ruin-my-day</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3386</wp:comment_id>
<wp:comment_author><![CDATA[Its not fair, Ruby can do it, so why can&#8217;t I? &laquo; Chris J Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://enginechris.wordpress.com/2009/11/02/its-not-fair-ruby-can-do-it-so-why-cant-i/</wp:comment_author_url>
<wp:comment_author_IP>72.233.96.150</wp:comment_author_IP>
<wp:comment_date>2009-11-02 16:49:47</wp:comment_date>
<wp:comment_date_gmt>2009-11-02 14:49:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...]  Posted on November 2, 2009 by enginechris   While reading one of Daniel Hoelbling&#8217;s great posts I noticed a strong warning he makes saying: The GAC is your [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=750</link>
<pubDate>Fri, 18 Sep 2009 14:10:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>750</wp:post_id>
<wp:post_date>2009-09-18 16:10:56</wp:post_date>
<wp:post_date_gmt>2009-09-18 14:10:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-8</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:3:"131";s:6:"height";s:3:"149";s:14:"hwstring_small";s:22:"height='96' width='84'";s:4:"file";s:18:"2009/09/image7.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=751</link>
<pubDate>Fri, 18 Sep 2009 14:10:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>751</wp:post_id>
<wp:post_date>2009-09-18 16:10:57</wp:post_date>
<wp:post_date_gmt>2009-09-18 14:10:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-7</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"135";s:6:"height";s:3:"153";s:14:"hwstring_small";s:22:"height='96' width='84'";s:4:"file";s:24:"2009/09/image_thumb6.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb6-135x150.png";s:5:"width";s:3:"135";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Windows 7 RTM available through imagineClub MSDN-AA</title>
<link>http://www.tigraine.at/2009/09/18/windows-7-rtm-available-through-imagineclub-msdn-aa/</link>
<pubDate>Fri, 18 Sep 2009 14:10:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Windows Vista]]></category>

		<category domain="category" nicename="windows-vista"><![CDATA[Windows Vista]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=752</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image7.png"><img style="border-right-width: 0px; margin: 0px 15px 3px 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb6.png" width="135" height="153" /></a> </p>  <p>The Academic Alliance program lags a little bit behind the normal MSDN program, but last week Windows 7 finally hit the virtual shelves of our MSDN-AA subscription.</p>  <p>If you are a student at Klagenfurt University and a <a href="http://www.imagineclub.at">imagineClub</a> member you can <a href="http://imagineclub.at/eAcademy/">log in and download</a> Windows 7 for free today.</p>  <br style="clear: both" />]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>752</wp:post_id>
<wp:post_date>2009-09-18 16:10:58</wp:post_date>
<wp:post_date_gmt>2009-09-18 14:10:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>windows-7-rtm-available-through-imagineclub-msdn-aa</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=756</link>
<pubDate>Sun, 20 Sep 2009 20:01:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>756</wp:post_id>
<wp:post_date>2009-09-20 22:01:54</wp:post_date>
<wp:post_date_gmt>2009-09-20 20:01:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-9</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"671";s:6:"height";s:3:"310";s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:18:"2009/09/image8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image8-300x138.png";s:5:"width";s:3:"300";s:6:"height";s:3:"138";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Make me wait</title>
<link>http://www.tigraine.at/2009/09/20/make-me-wait/</link>
<pubDate>Sun, 20 Sep 2009 20:01:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/20/make-me-wait/</guid>
<description></description>
<content:encoded><![CDATA[<p>1 hour ago I noticed that I need the Castle.Facilities.Logging assembly, so I fired up SVN to checkout the newest trunk and run a build.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image8.png" width="671" height="310" /> </p>  <p></p>  <p>It took 53(!!!) minutes to checkout. Something is seriously wrong with SVN at times, there is no other way to explain the differences in speed I was seeing during checkout: Some files came with 50 kb/s, some with 2 kb/s and others with 100. That said: I’m sitting ontop of a 12 mbit ADSL-2 connection that peaks at about 1.6 mb/sec. </p>  <p>I hate waiting, and waiting an hour for a trivial operation that should not take any longer than 10 seconds is really the end. I only hope most projects get away from svn as soon as possible, the benefit in speed is just massive.</p>  <p>Oh and btw: I know that there are SVN mirrors of the castle project on GitHub, I already did a fork of one of those to pull it down. Only that it was 6 commits behind the current svn trunk and I couldn’t build the solution at that revision so I decided to re-pull the most current svn (big mistake).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>757</wp:post_id>
<wp:post_date>2009-09-20 22:01:54</wp:post_date>
<wp:post_date_gmt>2009-09-20 20:01:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>make-me-wait</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3361</wp:comment_id>
<wp:comment_author><![CDATA[Sander Rijken]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/srijken</wp:comment_author_url>
<wp:comment_author_IP>62.45.87.188</wp:comment_author_IP>
<wp:comment_date>2009-09-21 15:17:53</wp:comment_date>
<wp:comment_date_gmt>2009-09-21 20:17:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It&#39;s not SVN&#39;s fault this time. There&#39;s just something wrong with the server hosting castle. I have the repository svnsynced locally to be able to get the sources in a reasonable amount of time]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3362</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.0</wp:comment_author_IP>
<wp:comment_date>2009-09-21 15:23:35</wp:comment_date>
<wp:comment_date_gmt>2009-09-21 20:23:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Unfortunately I&#39;ve seen this problem with many SVNs out there. Most of the time they don&#39;t suck that mutch, but still doing a svn log on most repositories takes close to forever in my experience.<br><br>But yes, you are right I shouldn&#39;t blame this on SVN alone. It&#39;s just that more often than not SVN performance sucks :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=758</link>
<pubDate>Thu, 24 Sep 2009 23:18:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>758</wp:post_id>
<wp:post_date>2009-09-25 01:18:03</wp:post_date>
<wp:post_date_gmt>2009-09-24 23:18:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-10</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"421";s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:18:"2009/09/image9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image9-300x197.png";s:5:"width";s:3:"300";s:6:"height";s:3:"197";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=759</link>
<pubDate>Thu, 24 Sep 2009 23:18:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>759</wp:post_id>
<wp:post_date>2009-09-25 01:18:07</wp:post_date>
<wp:post_date_gmt>2009-09-24 23:18:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-8</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"644";s:6:"height";s:3:"425";s:14:"hwstring_small";s:23:"height='84' width='127'";s:4:"file";s:24:"2009/09/image_thumb7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb7-300x197.png";s:5:"width";s:3:"300";s:6:"height";s:3:"197";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Git cheatsheet floating on your desktop as Windows 7 gadget</title>
<link>http://www.tigraine.at/2009/09/25/git-cheatsheet-floating-on-your-desktop-as-windows-7-gadget/</link>
<pubDate>Thu, 24 Sep 2009 23:18:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/09/25/git-cheatsheet-floating-on-your-desktop-as-windows-7-gadget/</guid>
<description></description>
<content:encoded><![CDATA[<p>While browsing a bit through the <a href="http://github.com/guides/git-cheat-sheet">GitHub guides section</a> I noticed a wonderful git cheat sheet that outlines the most used commands with some basic usage instructions <a href="http://zrusin.blogspot.com/2007/09/git-cheat-sheet.html">created by Zack Rusin</a>. </p>  <p>I have a love/hate relationship with cheat sheets because most of the time I print them and then they usually merge with all the trash that’s laying around my desk so I hardly ever get to use them (except for when I really need them and they are laying face down below my mouse pad). </p>  <p>So the obvious place for that sheet would be my secondary monitor so I can refer to it when needed. Only problem here is that I really don’t want to run a browser window all the time just to see a cheat sheet, and setting it as my wallpaper would mean no more beautiful images changing every 10 minutes (I love Win7 for this!). </p>  <p>Now, what is between your applications and your desktop? Right: Windows gadgets.</p>  <p>By following the <a href="http://msdn.microsoft.com/de-de/library/aa965850(en-us,VS.85).aspx">guide from the Microsoft developer center</a> I very quickly ended up with a quite nice gadget that now beautifully floats above my desktop with all the common used git commands I need to check while scratching my head (dementia I hate you). </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image9.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb7.png" width="644" height="425" /></a> </p>  <p>Pair this with the awesome Aero Peek at the desktop from Windows 7 (if you hit Win+Space all Windows become glass and you see your gadgets + desktop), and you can quickly glance at the cheat sheet without having to run any application or change your wallpaper. And if I don’t feel like doing git I just close the gadget with one click.</p>  <p>As said above, the cheat sheet is done by Zack Rusin. Thanks for this gem! The code for the gadget and the download is on GitHub and is licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">ASL-2</a> (yeah I like that license a lot).</p>  <p>The GitHub repository is at: <a href="http://github.com/Tigraine/git-cheatsheet-gadget">http://github.com/Tigraine/git-cheatsheet-gadget</a></p>  <p>And to just download the gadget hit the <a href="http://github.com/Tigraine/git-cheatsheet-gadget/downloads">downloads section within GitHub</a> (or <a href="http://cloud.github.com/downloads/Tigraine/git-cheatsheet-gadget/git-cheatsheet.gadget">directly</a>)</p>  <p>Oh and please excuse if GitHub is down sometimes right now. They are in the process of <a href="http://github.com/blog/497-rackspace-move-scheduled-for-sunday-september-27th-at-5pm-pacific-time">moving their servers to a new hoster</a> and hopefully they will be reliably back up by Monday. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>760</wp:post_id>
<wp:post_date>2009-09-25 01:18:08</wp:post_date>
<wp:post_date_gmt>2009-09-24 23:18:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>git-cheatsheet-floating-on-your-desktop-as-windows-7-gadget</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Introducing ELMS-Connector v.1 Beta</title>
<link>http://www.tigraine.at/2009/09/29/introducing-elms-connector-v-1-beta/</link>
<pubDate>Tue, 29 Sep 2009 16:24:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[elmsConnector]]></category>

		<category domain="category" nicename="elmsconnector"><![CDATA[elmsConnector]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=761</guid>
<description></description>
<content:encoded><![CDATA[<p>When I joined the <a href="http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/">imagineClub in Klagenfurt</a> and started building the new website I kept avoiding one major feature for a very long time: Implementing the remote-login for the MSDN-AA system by Microsoft.</p>  <p>The way imagineClub members get to MSDN-AA software is through a web-store called ELMS that handles licensing and downloading for us. ELMS supports two modes: integrated authentication or campus authentication. Integrated means that accounts have to be maintained inside ELMS while campus authentication means you manage accounts in your own system and ELMS will ask your services to authenticate users.</p>  <p>Now the first approach works for very small organizations where you can easily keep track of your members and (as admin) respond to their “oh god I lost my password” requests.    <br />But with about 200 members like the imagineClub this alley leads into a world of pain and despair. So the only real solution is to implement the campus authentication that requires a authentication handshake between ELMS and imagineClub.</p>  <p>The documentation on the whole process is quite scarce, but with some reverse engineering of our old site and some FireBug network analysis I was able to eventually figure out how the whole system was supposed to work. It’s not that complicated after all, yet it’s not funny to have to re-invent it over and over again.</p>  <p>Since I knew that the Institute of Technology at Klagenfurt University has also acquired a MSDN-AA license for it’s staff I started working on the idea of a re-useable and easily pluggable library that could encapsulate all ELMS campus authentication logic to spare others the pain of implementing the thing from not so great documentation.</p>  <p>My main goals for this where:</p>  <ul>   <li>Minimum configuration </li>    <li>Pluggable (being able to drop it into an existing ASP.NET app) </li>    <li>Variable authentication method (not everyone is using the same auth services we do) </li> </ul>  <p>Especially for pluggability I wanted the whole thing to live inside a DLL so I decided to implement a HttpHandler that will then handle the authentication.</p>  <p>The handler will look for a <tt>Login.htm</tt> file in your application’s root folder and display that file to users that need to log in. This means that you can easily modify the look&amp;feel of your login page without having to mess with any ASP.NET code that can break. As long as you leave the name attribute of the username/password field intact all modification is fair game.</p>  <p>Once the user hits login the connector will then look into it’s configuration (I use <a href="http://castleproject.org/container/">Windsor</a> for that) and invoke a supplied IAuthenticationService class. That means that you tell Windsor through the config what class servicing IAuthenticationService you want to call and it will get called with username/password.</p>  <p>This is the interface that users may need to implement:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f67fff59-cc8b-41dc-a2df-8691e0b6fb18" class="wlWriterSmartContent">   <pre class="csharp" name="code">public interface IAuthenticatonService
{&#160;&#160;&#160;&#160; bool AuthenticateUser(string username, string password);
}</pre>
</div>

<p>I intentionally said may because ELMS-Connector comes with a built-in LDAP auth service that you can use to simply hook up the login to your existing LDAP system without having to write any code at all (although that part is still in development).</p>

<p>Now, let’s get to the gory details.</p>

<h3>How to set up:</h3>

<p><strong>1: Grab the release from the project’s download page</strong></p>

<p><a href="http://github.com/Tigraine/elms-connector/downloads">ElmsConnector download</a></p>

<p><strong>2: Add reference to ElmsConnector.dll</strong></p>

<p>ElmsConnector uses Castle Windsor internally but that dependency is merged into ElmsConnector.dll so you won’t run into any versioning issues.</p>

<p><strong>3: Add httphandler to web.config</strong></p>

<p>Add the following to your &lt;httHandlers&gt; section in the web.config:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9dc8198a-76b9-45d7-9e56-dc218143d3fc" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
&lt;add verb="*" path="*.elms" type="ElmsConnector.ElmsHandler, ElmsConnector"/&gt;
</pre></div>

<p>This makes all requests that end in .elms go to the ElmsConnector component that then does it’s magic.</p>

<p><strong>4: Configure ELMS</strong></p>

<p>Log into your ELMS dashboard and go to User Management –&gt; Integrated Campus Authentication.</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/09/image10.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb8.png" width="657" height="230" /></a> </p>

<p>Set the Campus Authentication to Test Mode (while testing the connector). 
  <br />The Campus Authentication URL should look like this: <tt>http://&lt;yourserver&gt;/Login.elms</tt> (or wherever the *.elms HttpHandler will be accessible). 

  <br />Set Department to department (the suggested default value).</p>

<p>Campus CGI Server IP should be set to the IP your Server is using since ELMS will use the destination IP address to verify your identity. </p>

<p>Now don’t forget to copy the ELMS CGI Connector url since it will become of importance during the configuration of the connector.</p>

<p><strong>4: Copy and modify sample elms.xml</strong></p>

<p>Inside the release zip there should be a file called <tt>elms.xml</tt>, this file is the main configuration for the ElmsConnector. Copy it to the root of your web application and open it inside Visual Studio. </p>

<p>You now need to paste the ELMS CGI Connector url into the &lt;cgiConnector&gt; tag:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:41881a0d-4ba6-4d6b-9b70-bdfb11cd1390" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;component
&#160;&#160;id="ElmsSessionRequestService"&gt;
&#160;&#160;&lt;parameters&gt;
&#160;&#160;&#160;&#160;&lt;cgiConnector&gt;https://msdn60.e-academy.com/&lt;campus&gt;/index.cfm?loc=login/cab_cgi&lt;/cgiConnector&gt;
&#160;&#160;&lt;/parameters&gt;
&lt;/component&gt;
</pre></div>

<p>And you’ll have to tell ElmsConnector where to find a type servicing IAuthenticationService. This is done by modifying the type attribute on the AuthenticationService component:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2151f208-b515-4e9c-bd19-a997d1235018" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;component
&#160;&#160;id="AuthenticationService"
&#160;&#160;service="ElmsConnector.IAuthenticatonService, ElmsConnector"
&#160;&#160;type="ElmsConnector.Web.FakeAuthenticatonService, ElmsConnector.Web" /&gt;
</pre></div>

<p>(I suggest you look at the provided sample project <tt>ElmsConnector.Web</tt> to see how this works)</p>

<p><strong>5: Add the Login.htm</strong></p>

<p>Inside the zip there is also a file called <tt>Login.htm</tt>. That file is nothing more than an empty template of the future Login dialog ElmsConnector will expose to users. <u>Copy it to your web application’s root </u>and edit it to your heart’s extend. All modifications are fair game as long as you don’t change the form parameter names or remove the $error$ placeholder.</p>

<p><strong>6: Done</strong></p>

<p>Yes. that’s it. You can now test the whole thing by visiting your ELMS portal page and hit Login. If your Campus Authentication Url is set correctly you should see the ElmsConnector’s Login.htm and be able to log in. </p>

<p><strong>License</strong></p>

<p>ElmsConnector uses the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">ASL-2 license</a> and is therefore open-source-software. ASL-2 is a very permissive license that allows use of the code even in commercial closed-source scenarios. Still I’d appreciate if you’d let me know that you like ElmsConnector.</p>

<p><strong>Problems</strong></p>

<p>There may still be some problems with this release, if you notice anything strange or broken please open a <a href="http://github.com/Tigraine/elms-connector/issues">Ticket on GitHub</a> or shoot me a email. </p>

<p><strong>Extending</strong></p>

<p>ElmsConnector is <em><u>very</u> </em>extensible through the use of Castle.Windsor internally. If you know your way around Windsor XML configuration you should be able to change <u><em>everything</em></u> about the connector without the need to recompile. Still I suggest you check out <a href="http://github.com/Tigraine/elms-connector/tree/master">the source</a> to find out what goes on there. </p>

<p><strong>Future</strong></p>

<p>I’ll be dogfooding this component during this week while getting the iC-Website ready for launch. After that I want to implement the LDAP authentication service that will ship with ElmsConnector so if you have an existing LDAP infrastructure you don’t need to write any real code at all. </p>

<p><strong>Need help?</strong></p>

<p>If you have any more questions regarding ElmsConnector or how to set it up in your special case, please feel free to send me an email or contact me through IM (<a href="http://www.tigraine.at/about-me/">Contact info</a>). I’ll be happy to help you use ElmsConnector!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>761</wp:post_id>
<wp:post_date>2009-09-29 18:24:46</wp:post_date>
<wp:post_date_gmt>2009-09-29 16:24:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>introducing-elms-connector-v-1-beta</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3366</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Using ILMerge to hide your dependencies]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/01/using-ilmerge-to-hide-your-dependencies/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-01 15:12:17</wp:comment_date>
<wp:comment_date_gmt>2009-10-01 13:12:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] in ElmsConnector’s case where Windsor is used internally the ILMerge call looks like [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ELMS-Connector internals</title>
<link>http://www.tigraine.at/?p=762</link>
<pubDate>Tue, 29 Sep 2009 16:25:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=762</guid>
<description></description>
<content:encoded><![CDATA[<p>I tried not to get technical on my last post about how to use ElmsConnector since it shouldn’t really matter to the user of the system (it’s main goal is to not make you think). But since I’m quite happy with the current architecture I’d like to share it anyway.</p>  <p>As said before, ElmsConnector mainly consists of one HttpHandler that picks up requests to *.elms and routes them to so-called Commands. To do so I use Windsor where it will follow the convention that a request to “Login.elms” will end up invoking the class LoginCommand.Execute.</p>  <p>Now the beautiful thing about this is that Windsor is in charge of managing the object’s lifecycle and all of it’s dependencies. By setting the lifestyle to PerWebRequest I can also abstract away all the nasty things from ASP.NET like Session, Response and Request and hide them behind well defined minimal interfaces to facilitate testing.</p>  <p>The basic workflow looks like this: Command requires a set of Http-related services (abstractions) where Windsor will instantiate a Facade class that then requires the real HttpRequest that gets provided by Windsor’s factory-method facility. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>762</wp:post_id>
<wp:post_date>2009-09-29 18:25:07</wp:post_date>
<wp:post_date_gmt>2009-09-29 16:25:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=763</link>
<pubDate>Tue, 29 Sep 2009 19:12:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>763</wp:post_id>
<wp:post_date>2009-09-29 21:12:58</wp:post_date>
<wp:post_date_gmt>2009-09-29 19:12:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-11</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"222";s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:19:"2009/09/image10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"image10-300x104.png";s:5:"width";s:3:"300";s:6:"height";s:3:"104";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=764</link>
<pubDate>Tue, 29 Sep 2009 19:12:59 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>764</wp:post_id>
<wp:post_date>2009-09-29 21:12:59</wp:post_date>
<wp:post_date_gmt>2009-09-29 19:12:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-9</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/09/image_thumb8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/09/image_thumb8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"657";s:6:"height";s:3:"230";s:14:"hwstring_small";s:23:"height='44' width='128'";s:4:"file";s:24:"2009/09/image_thumb8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb8-300x105.png";s:5:"width";s:3:"300";s:6:"height";s:3:"105";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=769</link>
<pubDate>Thu, 01 Oct 2009 13:10:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>769</wp:post_id>
<wp:post_date>2009-10-01 15:10:52</wp:post_date>
<wp:post_date_gmt>2009-10-01 13:10:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-12</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"421";s:6:"height";s:3:"129";s:14:"hwstring_small";s:23:"height='39' width='128'";s:4:"file";s:17:"2009/10/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x129.png";s:5:"width";s:3:"150";s:6:"height";s:3:"129";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x91.png";s:5:"width";s:3:"300";s:6:"height";s:2:"91";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=770</link>
<pubDate>Thu, 01 Oct 2009 13:10:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>770</wp:post_id>
<wp:post_date>2009-10-01 15:10:52</wp:post_date>
<wp:post_date_gmt>2009-10-01 13:10:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-10</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"441";s:6:"height";s:3:"149";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:23:"2009/10/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x149.png";s:5:"width";s:3:"150";s:6:"height";s:3:"149";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x101.png";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=771</link>
<pubDate>Thu, 01 Oct 2009 13:10:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>771</wp:post_id>
<wp:post_date>2009-10-01 15:10:53</wp:post_date>
<wp:post_date_gmt>2009-10-01 13:10:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-13</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"337";s:6:"height";s:3:"215";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:18:"2009/10/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x191.png";s:5:"width";s:3:"300";s:6:"height";s:3:"191";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=772</link>
<pubDate>Thu, 01 Oct 2009 13:10:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>772</wp:post_id>
<wp:post_date>2009-10-01 15:10:54</wp:post_date>
<wp:post_date_gmt>2009-10-01 13:10:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-11</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"341";s:6:"height";s:3:"219";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:24:"2009/10/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb1-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using ILMerge to hide your dependencies</title>
<link>http://www.tigraine.at/2009/10/01/using-ilmerge-to-hide-your-dependencies/</link>
<pubDate>Thu, 01 Oct 2009 13:10:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/01/using-ilmerge-to-hide-your-dependencies/</guid>
<description></description>
<content:encoded><![CDATA[<p>When developing a library that should be used by 3rd parties one major concern is dependency versioning. Meaning, if your code uses a common library like Castle.Windsor, things will get ugly if your users also use Castle.Windsor in another version. </p>  <p>Especially with very popular infrastructure libraries like Castle you can’t expect all your users not to use it, after all you’re probably using it for the same reason they do: Best of breed solution to a common problem.    <br />To avoid trouble, many library authors decide not to take external dependencies so they won’t see versioning issues, while having to re-implement some infrastructure themselves.</p>  <p>Coming up with something simple usually isn’t that hard. If you just need a very limited feature set you can <a href="http://www.tigraine.at/2009/05/21/my-very-own-inversion-of-control-container/">build your own Inversion of Control container</a> quite easily without relying on external libraries. Yet, if you do you still have to spend time building, maintaining and extending the thing over time. </p>  <p>The other option is to use the fabulous tool <a href="http://research.microsoft.com/en-us/people/mbarnett/ilmerge.aspx">ILMerge</a> by Microsoft that allows you to munch multiple assemblies into one DLL. This is also handy if your product consists of many assemblies that you want to bundle, but in this case there is one cool thing ILMerge does: /internalize</p>  <p>ILMerge usually is called from the command line and works like this:</p>  <blockquote>   <p>ILMerge.exe &lt;main-assembly.dll&gt; [&lt;library1.dll&gt; &lt;library2.dll&gt;] /out:&lt;output-file.dll&gt; /t:library</p> </blockquote>  <p>Now if you add the magic parameter <u>/internalize</u> ILmerge will hide all type names inside &lt;library1.dll&gt; and &lt;library2.dll&gt; from assemblies that reference the output assembly.</p>  <p>So in <a href="http://www.tigraine.at/2009/09/29/introducing-elms-connector-v-1-beta/">ElmsConnector’s</a> case where Windsor is used internally the ILMerge call looks like this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/10/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb.png" width="441" height="149" /></a> </p>  <p>ElmsConnector-partial.dll is the original output dll from my msbuild process while ILMerge will merge all of these Castle assemblies into the output ElmsConnector.dll.    <br />Now the real magic here is that if I open the resulting assembly in Reflector it still lists all Castle assemblies:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/10/image1.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/10/image_thumb1.png" width="341" height="219" /></a> </p>  <p>But inside Visual Studio none of the Castle.* namespaces exists because they are hidden. </p>  <p>This technique allows us to use our favorite tools in libraries without having to think too hard about versioning.</p>  <p>Now, obviously there are also some things to consider here:    <br />If you want to expose any class that is inside one of the internalized assemblies, you have to tell ILMerge so through the exclude file (<a href="http://github.com/ayende/rhino-mocks/blob/master/ilmerge.exclude">an example of this</a> can be seen with Rhino.Mocks). Once you exclude one type and your users try to use that type they will see a “ambiguous type” compile-time error. That’s why Rhino.Mocks also comes in a unmerged flavor </p>  <p>Another thing to remember is (especially with web-apps) that your users can’t see any internalized assemblies, so any configuration you put into your web.config for them won’t work. Best example may be the PerWebRequest lifesyle for Windsor: It relies on a httpModule to be registered through the web.config, you can’t make that happen with the externalized assembly (and it leads to versioning problems once you exclude it).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>773</wp:post_id>
<wp:post_date>2009-10-01 15:10:54</wp:post_date>
<wp:post_date_gmt>2009-10-01 13:10:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-ilmerge-to-hide-your-dependencies</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Converting a IEnumerator to IEnumerator&lt;T&gt;</title>
<link>http://www.tigraine.at/2009/10/11/converting-a-ienumerator-to-ienumeratort/</link>
<pubDate>Sun, 11 Oct 2009 17:34:03 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/11/converting-a-ienumerator-to-ienumeratort/</guid>
<description></description>
<content:encoded><![CDATA[<p>When generics where introduced with .NET 2.0 there was a ton of 1.1 code lying around that was still built without generics. So the obvious answer by Microsoft was that most generic specialization classes can be cast to their non-generic counterparts to avoid problems for users.</p>  <p>Now, years later we have the opposite phenomenon. Few people are actually using untyped collections, so a new problem has come: What if you are looking at legacy code that has to call into new API that has no non-generic support.</p>  <p>Well, it’s simple: IEnumerator becomes IEnumerator&lt;object&gt; and all is well. But there is no conversion from IEnumerator to IEnumerator&lt;object&gt;, so you have to write your own little facades when trying to put square blocks into round holes:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:08f8f9af-bac3-4b80-8e73-ce2b0f088d77" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class CastEnumerator&lt;T&gt; : IEnumerator&lt;T&gt;
{
&#160;&#160;&#160;&#160;private readonly IEnumerator enumerator;

&#160;&#160;&#160;&#160;public CastEnumerator(IEnumerator enumerator)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.enumerator = enumerator;
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Dispose()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public bool MoveNext()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return enumerator.MoveNext();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public void Reset()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enumerator.Reset();
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public T Current
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return (T)enumerator.Current; }
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;object IEnumerator.Current
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get { return Current; }
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>The call then looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:c0e83c96-13f1-47ef-aeef-838eeeee946b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public IEnumerator&lt;T&gt; GetEnumerator()
{
&#160;&#160;&#160;&#160;return new CastEnumerator&lt;T&gt;(untypedEnumerator);
}
</pre></div>

<p>As <a href="http://www.colourcoding.net/blog/">Julian Birch</a> explained in the comments, if you are using .NET 3.5 it’s even simpler to get from an untyped IEnumerable to a IEnumerable&lt;T&gt; (while not technically a IEnumerator, the typed one will then return a IEnumerator&lt;T&gt;):</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6fca3fae-7dea-4746-8eea-a5112587e162" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
IEnumerable untypedEnumerable = ...;
IEnumerable&lt;string&gt; typedEnumerable = untypedEnumerable.Cast&lt;T&gt;();
</pre></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>775</wp:post_id>
<wp:post_date>2009-10-11 19:34:03</wp:post_date>
<wp:post_date_gmt>2009-10-11 17:34:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>converting-a-ienumerator-to-ienumeratort</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3376</wp:comment_id>
<wp:comment_author><![CDATA[JulianBirch]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>78.86.226.2</wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:42:20</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 20:42:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you&#39;re on 3.5, you can actually call Cast on an untyped enumerator.<br><br>So you could write <br><br>return untypedEnumerator.Cast&lt;T&gt;();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3377</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.242</wp:comment_author_IP>
<wp:comment_date>2009-10-26 16:53:15</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 21:53:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn&#39;t look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3518</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3519</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3729</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3730</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3741</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3742</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4089</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4090</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4092</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4093</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4094</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4095</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5237</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5238</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5239</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5240</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4547</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4548</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5389</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5390</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4788</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4789</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4798</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4799</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4916</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 15:53:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 15:53:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh thanks for the tip.<br>I didn't look into 3.5 solutions since that particular problem cropped up in a 2.0 solution.. <br><br>greetings Danieln<br /><br />nUpdate:nUpdated the post]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4917</wp:comment_id>
<wp:comment_author><![CDATA[]]></wp:comment_author>
<wp:comment_author_email>julian.birch@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-10-26 14:42:00</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 14:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you're on 3.5, you can actually call Cast on an untyped enumerator.rnrnSo you could write rnrnreturn untypedEnumerator.Cast<T>();]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Beggars can&#8217;t be choosers: Dependency injection through global factories</title>
<link>http://www.tigraine.at/2009/10/14/beggars-cant-be-choosers-dependency-injection-through-global-factories/</link>
<pubDate>Wed, 14 Oct 2009 16:34:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/14/beggars-cant-be-choosers-dependency-injection-through-global-factories/</guid>
<description></description>
<content:encoded><![CDATA[<p>Whenever you listen to testability talks you usually take away one universal truth:</p>  <blockquote>   <p><strong>Global state is bad, singletons are essentially global state. </strong></p> </blockquote>  <p>So, if you want to have it done right, use dependency injection and don’t let your code depend on global state.</p>  <p>But: Sometimes it’s just not possible. My current project for example does not use dependency injection. Why? I didn’t know better and used ActiveRecord with all it’s static design. And besides, I’m just lazy and have no intention of diving into the Castle documentation to find out how to teach ActiveRecord to use an IoC container when creating entity objects. </p>  <p>And if you have no control over your constructor, your options for dependency injection are limited to two things:</p>  <p>Public fields (aka optional dependencies) and Global factories.</p>  <p><strong>Public fields</strong></p>  <p>While in theory a pretty decent method that allows you to swap out parts it falls very short once you have multiple classes that need the same service:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:6a71c5ba-d22f-415d-9a73-254897333427" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Entity
{
&#160;&#160;&#160;&#160;public IDateProvider DateProvider { get; set; }

&#160;&#160;&#160;&#160;public Entity()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DateProvider = new DateProviderImpl();
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Since the default implementation is hardcoded into every consumer, you end up with a big pile of DRY violations that will one day bite you when you try to refactor DateProviderImpl’s constructor. </p>

<p><strong>Global factories</strong></p>

<p>Now the words global and testability don’t go well together, but in this case it’s ok. You try to battle the DRY violation while still making your service optionally interchangeable when testing.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:fc4143bb-d1fb-4361-8523-d8d5466d46f0" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Entity
{
&#160;&#160;&#160;&#160;public Entity()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var now = DateProviderFactory.Provider.Now;
&#160;&#160;&#160;&#160;}
}

public class DateProviderFactory
{
&#160;&#160;&#160;&#160;private static IDateProvider _provider;

&#160;&#160;&#160;&#160;public static void SetProvider(IDateProvider provider)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_provider = provider;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;public static IDateProvider Provider
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;get
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (_provider == null)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_provider = new DateProviderImpl();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Provider;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now obviously you should NEVER call SetProvider inside your production code. It’s a pure testability helper so if you start messing with it expect to see some really hard to debug errors pop up.</p>

<p>But as long as you don’t mess that up, you can write tests like this one:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:72ff7422-5355-46d8-a4aa-8dd95eb6173d" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class TestFixture
{
&#160;&#160;&#160;&#160;[Fact]
&#160;&#160;&#160;&#160;public void DoesSomethingWhenGivenDate()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var mock = new MockedDateProvider();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DateProviderFactory.SetProvider(mock);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var entity = new Entity();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//.....
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>I know it’s not perfect, but nobody expected it to be that way. The best solution to the problem obviously is a very clean separation of object construction and business logic, and the proven way to achieve that is dependency injection through a container like Windsor or StructureMap. Yet, often you have to look at old codebases where you just need to get the job done, and then it’s nice to know your way around the limitations sometimes.</p>

<p>Oh, and btw: The example I did above was chosen deliberately to be something as simple as a abstraction of DateTime.Now. As said before, <a href="http://www.tigraine.at/2009/03/25/tests-should-last-forever/">never depend on moving parts in your tests</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>776</wp:post_id>
<wp:post_date>2009-10-14 18:34:42</wp:post_date>
<wp:post_date_gmt>2009-10-14 16:34:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>beggars-cant-be-choosers-dependency-injection-through-global-factories</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ElmsConnector configurable file extension</title>
<link>http://www.tigraine.at/2009/10/16/elmsconnector-configurable-file-extension/</link>
<pubDate>Fri, 16 Oct 2009 00:23:35 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[elmsConnector]]></category>

		<category domain="category" nicename="elmsconnector"><![CDATA[elmsConnector]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/16/elmsconnector-configurable-file-extension/</guid>
<description></description>
<content:encoded><![CDATA[<p>Seriously, nothing makes you more aware of problems with your stuff than <a href="http://en.wikipedia.org/wiki/Dogfooding">dogfooding</a>! I’ve been busy all day trying to get the new <a href="http://www.imagineclub.at/">imagineClub website</a> out of the door (yes we finally launched!) and just when I thought I had everything nailed one thing about ElmsConnector made me panic:</p>  <p>IIS6 is not passing *.elms requests on to the ASP.NET pipeline, so ElmsConnector was <u>never</u> called.</p>  <p>To fix this you need to have access to the server configuration and change that through IIS Manager. Since we (and I guess many other people) are on a shared host we could not do that, and so I had to change all paths to *.axd on short notice. </p>  <p>But, I felt like *.axd may also not work for everyone, so I decided to just make that an optional setting through the <tt>elms.xml:</tt></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:2af4d287-f5a2-41cc-96e7-8370bfab4646" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;component id="FileExtensionProvider"&gt;
&#160;&#160;&lt;parameters&gt;
&#160;&#160;&#160;&#160;&lt;extension&gt;ashx&lt;/extension&gt;
&#160;&#160;&lt;/parameters&gt;
&lt;/component&gt;
</pre></div>

<p>This little XML will change all paths inside ElmsConnector to .ashx instead of the default .axd. (Omitting that XML will result in all your paths being .axd)</p>

<p>Also note that I had to introduce one additional placeholder into the <tt>Login.htm</tt>. 

  <br />Make sure that you include the $EXTENSION$ placeholder into your form action:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9a06b5cb-c19a-44a1-90f2-52aa2c4f68e9" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;form method="post" action="VerifyUser.$EXTENSION$"&gt;
</pre></div>

<p>This feature is available through release <a href="http://github.com/Tigraine/elms-connector/downloads">v0.1.0.3 from GitHub</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>777</wp:post_id>
<wp:post_date>2009-10-16 02:23:35</wp:post_date>
<wp:post_date_gmt>2009-10-16 00:23:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>elmsconnector-configurable-file-extension</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3378</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; EMLS-Connector v1.0 RTW]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2009/10/27/emls-connector-v1-0-rtw/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2009-10-27 01:37:59</wp:comment_date>
<wp:comment_date_gmt>2009-10-26 23:37:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] 1: Configurable file extensions [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>It&#8217;s a kind of magic: MonoRail</title>
<link>http://www.tigraine.at/2009/10/21/its-a-kind-of-magic-monorail/</link>
<pubDate>Wed, 21 Oct 2009 09:57:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=782</guid>
<description></description>
<content:encoded><![CDATA[<p>I never cease to be amazed about <a href="http://www.castleproject.org/monorail/index.html">Castle MonoRail</a>, but this time I was really puzzled.     <br />While working on a simple CRUD page I wrote code like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:fca376f0-1f33-43c1-a004-5bdd05cb2a7b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void Unlock([ARFetch("id")] Member member)
{
&#160;&#160;&#160;&#160;PropertyBag["member"] = member;
}

public void Unlock([ARFetch("id")] Member member, DateTime expiration)
{
&#160;&#160;&#160;&#160;...
</pre></div>

<p>My view was then just a standard form, a textfield and a submit button. </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4c3ce84b-b357-4c54-822f-e5d9895a74d6" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;form action="" method="POST"&gt;
&#160;&#160;&#160;&#160;&lt;ul&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.LabelFor("expiration", "Account expiration date")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;$FormHelper.TextFieldValue("expiration", "29.01.2010")
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;input type="submit" value="Unlock" /&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/li&gt;
&#160;&#160;&#160;&#160;&lt;/ul&gt;
&lt;/form&gt;
</pre></div>

<p>And, you may have guessed it, I forgot to put a hidden field with the UserId in there somewhere! 
  <br />Yes, I know – what a common mistake and what a bad one at that. But, and that’s the scary part. <em>It worked still</em>! I checked and re-checked, there is no Id anywhere passed as a result of the form submit, yet MonoRail somehow gets the Id from my previous call and works with that. </p>

<p>I couldn’t find the code inside MonoRail responsible for this behavior, and it seems only to work with Post requests to an empty action so far, but still amazing. </p>

<p>Well, since I can’t see the code, I remain skeptical and added the hidden id anyway. Witchcraft like this feels wrong, I like mysteries though.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>782</wp:post_id>
<wp:post_date>2009-10-21 11:57:46</wp:post_date>
<wp:post_date_gmt>2009-10-21 09:57:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>its-a-kind-of-magic-monorail</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>logo.png</title>
<link>http://www.tigraine.at/?attachment_id=784</link>
<pubDate>Fri, 23 Oct 2009 12:31:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/logo.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>784</wp:post_id>
<wp:post_date>2009-10-23 14:31:24</wp:post_date>
<wp:post_date_gmt>2009-10-23 12:31:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/logo.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/logo.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:2:"73";s:6:"height";s:2:"73";s:14:"hwstring_small";s:22:"height='73' width='73'";s:4:"file";s:16:"2009/10/logo.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>imagineClub.at is now finally online</title>
<link>http://www.tigraine.at/2009/10/23/imagineclub-at-is-now-finally-online/</link>
<pubDate>Fri, 23 Oct 2009 12:31:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[imagineClub]]></category>

		<category domain="category" nicename="imagineclub"><![CDATA[imagineClub]]></category>

		<category><![CDATA[imagineClub Website]]></category>

		<category domain="category" nicename="imagineclub-website"><![CDATA[imagineClub Website]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/23/imagineclub-at-is-now-finally-online/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.imagineclub.at"><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="logo" border="0" alt="logo" src="http://www.tigraine.at/wp-content/uploads/2009/10/logo.png" width="73" height="73" /></a> After almost 4 months of work I am pleased to announce that the new <a href="http://www.imagineclub.at">imagineClub</a> Website is finally online at</p>  <p><a href="http://www.imagineclub.at"><strong>http://www.imagineclub.at</strong></a></p>  <p>You can read <a href="http://www.tigraine.at/2009/06/21/imagineclub-students-for-students/">what this is all about here</a>.</p>  <p style="clear: both">Besides the obvious design refresh the new website has numerous administrative improvements that allow us to more easily share information with members and also allow new members to join the fun since we are now able to unlock their accounts without having to hack SQL together.</p>  <p>As you may already know, the new website is also licensed as open-source software and the code is freely available from my <a href="http://github.com/Tigraine/ic-website">GitHub Repository</a>. Since we allow our users to use MSDN-AA the site internally uses my other open-source project <a href="http://www.tigraine.at/category/programmierung/projects/elmsconnector/">elms-connector</a> (<a href="http://github.com/Tigraine/elms-connector">source on GitHub</a>) to connect up to the Microsoft servers.</p>  <p>And to take dogfooding to a new level, I already have a unpublished changeset that will make imagineClub.at use the <a href="http://www.dotlesscss.com/">dotlesscss project</a> to improve the project's CSS.</p>  <p>You may have guessed by now that the whole site is completely built ontop of open-source frameworks. It is based on <a href="http://www.castleproject.org/monorail/index.html">Castle MonoRail</a>, running ontop of <a href="http://www.castleproject.org/activerecord/index.html">Castle ActiveRecord</a> with some (but not deep) <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> integration.     <br />In fact, I would have used Windsor more, but using the ActiveRecord pattern with all it's static goodness somehow limited the use of inversion of control.</p>  <p>I primarily chose Castle MonoRail due to the fact that I had come off a <a href="http://www.tigraine.at/2009/05/12/the-technology-behind-kaerntenat/">ASP.NET MVC project</a> and wanted to learn another MVC framework besides the blue one. I can't say I'm sorry for that decision. MonoRail has proven itself to be a very mature and <a href="http://www.tigraine.at/2009/08/04/defaultvalue-attribute-for-castle-monorail/">very extensible</a> framework that supported me all the way to releasing the site.&#160; <br />I do regret however chosing NVelocity as my viewengine, Spark seems to be the better choice at the moment and NVelocity is really awful when it comes to debugging problems. </p>  <p>Anyway: Thanks to all these great open-source projects that made this possible, and also a big thanks to <a href="http://www.nephilistic.com/">Kristof</a> who sponsored the new design!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>785</wp:post_id>
<wp:post_date>2009-10-23 14:31:25</wp:post_date>
<wp:post_date_gmt>2009-10-23 12:31:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>imagineclub-at-is-now-finally-online</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>EMLS-Connector v1.0 RTW</title>
<link>http://www.tigraine.at/2009/10/27/emls-connector-v1-0-rtw/</link>
<pubDate>Mon, 26 Oct 2009 23:37:50 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[elmsConnector]]></category>

		<category domain="category" nicename="elmsconnector"><![CDATA[elmsConnector]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/27/emls-connector-v1-0-rtw/</guid>
<description></description>
<content:encoded><![CDATA[<p>After almost a month and 3 weeks of having the connector in production I finally feel that it’s time for a v1.0. So, here it is. <a href="http://github.com/Tigraine/elms-connector/commits/v1.0.0.0">I just pushed the v1.0 tag to GitHub</a>!</p>  <p>You can grab the release zip containing everything you need here:</p>  <p><a href="http://github.com/Tigraine/elms-connector/downloads">ELMS-Connector v1.0 RTW</a></p>  <p>Note on this release: Some of the existing code I published in my initial article is now outdated. Some refactoring (and <a href="http://github.com/Tigraine/elms-connector/commit/ed57096164341cba8329c32b3a7ddfece9b18f13">a annoying typo</a>) has gone on and I don’t have any docs ready for people trying to use this. So if you want to use ELMS-Connector on your campus, just contact me through email at <a href="mailto:tigraine@tigraine.at">tigraine@tigraine.at</a> and I’ll be glad to walk you through the setup process. Docs will follow, but at the moment I don’t feel like writing documentation for something only I am using.</p>  <p><strong>Changes since the Beta:</strong></p>  <p>1: <a href="http://www.tigraine.at/2009/10/16/elmsconnector-configurable-file-extension/">Configurable file extensions</a></p>  <p>2: Session Authentication </p>  <p><strong>Session Authentication</strong></p>  <p>The main annoyance with ELMS-Connector so far has been that whenever a User hits the MSDN-AA he has to re-authenticate himself even if he is authenticated to the source system. </p>  <p>I found a way to elegantly prevent that without breaking anything: <tt>IExtendedAuthenticationService</tt></p>  <p>While <tt>IAuthenticationService</tt> only requires you to implement one method:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:43eb6bfd-ed27-420d-b49f-31e6c9cc59c4" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
bool AuthenticateUser(string username, string password);
</pre></div>

<p><tt>IExtendedAuthenticationService</tt> comes with another two:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:630a1ccd-aee1-4696-9acf-f6d00e72efe0" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public interface IExtendedAuthenticationService : IAuthenticationService
{&#160;&#160;
&#160;&#160;&#160;&#160;bool IsAlreadyAuthenticated();
&#160;&#160;&#160;&#160;string Username { get; }
}
</pre></div>

<p><tt>IsAlreadyAuthenticated</tt> should return true if the current user already has a open session, and Username should then return his current username. If you use <tt>IPrincipal</tt> in your web app this would look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:aff403ff-0fc6-4a62-8e8f-5b4837f6f16b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public bool IsAlreadyAuthenticated()
{
&#160;&#160;&#160;&#160;return HttpContext.Current.User != null && HttpContext.Current.User.Identity.IsAuthenticated;
}

public string Username
{
&#160;&#160;&#160;&#160;get
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return HttpContext.Current.User.Identity.Name;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>This way ELMS doesn’t prompt the user again for his credentials but rather directly redirects him to Microsoft’s ELMS server, making for a very smooth user experience. 
  <br />If <tt>IsAlreadyAuthenticated</tt> is false, the user is presented with the usual login form and authentication works like it used to before (this happens if the user comes from the Microsoft ELMS site without having a session on your campus site).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>787</wp:post_id>
<wp:post_date>2009-10-27 01:37:50</wp:post_date>
<wp:post_date_gmt>2009-10-26 23:37:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>emls-connector-v1-0-rtw</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Simplifying releases through git</title>
<link>http://www.tigraine.at/2009/10/27/simplifying-releases-through-git/</link>
<pubDate>Tue, 27 Oct 2009 08:49:21 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/27/simplifying-releases-through-git/</guid>
<description></description>
<content:encoded><![CDATA[<p>I confess: I <strong>love </strong>writing build scripts. They are usually insanely easy to write, and provide you with a disproportional amount of value over time that it’s almost tragic not to have them. And, I love git.     <br />So, what’s better than to see git simplifying my buildfiles :).</p>  <p>Imagine the usual: Your assembly version is encoded in your buildfile, so whenever you want to release you do the following:</p>  <ol>   <li>Increment version number in buildfile </li>    <li>Run buildfile </li>    <li>Create a tag in your SCM for the released version </li> </ol>  <p>Now, thanks to the smart people at the castle mailing list I found out about the <tt>git describe</tt> command. By using <a href="http://mirrors.xservers.ro/software/scm/git-core/docs/git-describe.html">git-describe</a> you can simplify the above to just:</p>  <ol>   <ol>     <li>Create a tag in your SCM </li>      <li>Run buildfile </li>   </ol> </ol>  <p>The function for that is quite simple:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:af8f276f-08e6-475b-83e6-f145e372a2a4" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
function Get-Git-Commit
{
&#160;&#160;&#160;&#160;return git describe
}

function Get-Git-Version
{
&#160;&#160;&#160;&#160;$v = git describe --abbrev=0
&#160;&#160;&#160;&#160;return $v -replace "v", ""
}
</pre></div>

<p>Get-Git-Commit is returning the full name of the build, giving me a string like: <tt>v0.1.0.2-2-gd19ce0f. 
    <br /></tt>And Get-Git-Version will output the tag-name without the leading v so it can be used as the product version inside the assembly info.

  <br />My buildscript then uses this version information from git to write my AssemblyInfo.cs files and build numbers have started to magically change!</p>

<p>This technique helps me to avoid all the hassle of incrementing build numbers, but instead allows me to focus on my work more. Once I feel the release is done, I simply hit:</p>

<p><tt>git tag –a v1.0.0.1</tt></p>

<p>(don’t forget to use <tt>git push –tags</tt> to get them to your server)</p>

<p>Hey, that’s awesome! There has to be a catch right? Indeed, there is:</p>

<p>If git is not installed, you can’t compile. Bummer I know, especially since the unwashed masses are in the process of slowly grasping the concept of SVN, who would want to throw a DVCS like git at them? 
  <br />This is why all of my build script have a step called release that packs everything together in one nice zip file and I can then upload it to some server. In case someone has no git, he’s stuck with my binary files. </p>

<p>You can see this in action by looking at these open-source buildfiles I wrote lately: <a href="http://github.com/Tigraine/nLess/blob/master/default.ps1">dotless</a>, <a href="http://github.com/Tigraine/elms-connector">elms-connector</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>788</wp:post_id>
<wp:post_date>2009-10-27 10:49:21</wp:post_date>
<wp:post_date_gmt>2009-10-27 08:49:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>simplifying-releases-through-git</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3384</wp:comment_id>
<wp:comment_author><![CDATA[ChrisJOwen]]></wp:comment_author>
<wp:comment_author_email>chris.j.owen@hotmail.co.uk</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>90.217.240.120</wp:comment_author_IP>
<wp:comment_date>2009-11-01 21:04:26</wp:comment_date>
<wp:comment_date_gmt>2009-11-02 02:04:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ahhh, I understand what you were banging on about now. Skype chat isn&#39;t the best way of explaining a coding solution (either that or I wasn&#39;t paying attention). Great work on the build script anyway.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3406</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio Scheffer]]></wp:comment_author>
<wp:comment_author_email>mauricioscheffer@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://bugsquash.blogspot.com/</wp:comment_author_url>
<wp:comment_author_IP>201.231.169.60</wp:comment_author_IP>
<wp:comment_date>2009-12-12 16:46:56</wp:comment_date>
<wp:comment_date_gmt>2009-12-12 21:46:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[How are you handling the commit hash? The CLR only admits 16-bit  numbers for each version component...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3407</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.239.147</wp:comment_author_IP>
<wp:comment_date>2009-12-12 16:51:03</wp:comment_date>
<wp:comment_date_gmt>2009-12-12 21:51:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[We don&#39;t use the hash in the version attribute but only in title and description. <br>The version is just straight from the git tag (like v1.1.0)<br><br>But Ayende adds the hash to the version number in Rhino-Mocks. But he has to disable some compiler warning for that.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3425</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.123.24.165</wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:23:06</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 16:23:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3426</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP>212.123.24.165</wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:17:31</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 16:17:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn&#39;t that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a &#39;GIT reset --hard&#39; right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I&#39;m still seeking a good balance myself.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3427</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.194</wp:comment_author_IP>
<wp:comment_date>2010-02-16 12:14:05</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 17:14:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I&#39;ve also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I&#39;ll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3428</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.194</wp:comment_author_IP>
<wp:comment_date>2010-02-16 12:15:46</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 17:15:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. <br>If you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that&#39;s ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3429</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.123.24.165</wp:comment_author_IP>
<wp:comment_date>2010-02-16 12:22:27</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 17:22:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That&#39;s the best option. I&#39;ve read MSI&#39;s and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3748</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3749</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3750</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3751</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3752</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3806</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3807</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3808</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3809</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3810</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3811</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3812</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3813</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3814</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3815</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3851</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3852</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3853</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3854</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3855</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4933</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4934</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4935</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3988</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3989</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3990</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3991</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3992</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4000</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4001</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4002</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4003</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4004</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4194</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4195</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4196</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4197</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4198</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4418</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4419</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4420</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4421</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4422</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4770</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4771</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4772</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4773</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4774</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4807</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4808</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4809</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4810</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4811</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4936</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4937</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5300</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5301</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5302</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5303</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5304</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5319</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That's the best option. I've read MSI's and other installers use the FileVersion, but no clue how exactly...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5320</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually the build script does not commit at all. AssemblyInfo.cs is NOT part of the repository. It gets ignored and therefore there is no need for git-commit. nIf you make a clean clone of the repo you need to run the buildscript at least once before you can start working, but that's ok. After that whenever you commit and do a subsequent build the AssemblyInfo.cs will get updated to the newest version..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5321</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 11:14:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 11:14:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've also seen scripts where you put the hash into the normal version number and disable the warnings you get through some compiler flags. But I decided against it. Still thanks for the tipp, I'll look into it a bit more.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5322</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:23:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:23:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you can put the complete hash in the informationalversion, it takes a string. The other version attributes require numbers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5323</wp:comment_id>
<wp:comment_author><![CDATA[Gregory Van de Wiele]]></wp:comment_author>
<wp:comment_author_email>gregory@eai.be</wp:comment_author_email>
<wp:comment_author_url>http://geekswithblogs.net/gwiele/Default.aspx</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-02-16 10:17:00</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:17:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[When your build script updates the AssemblyInfo.cs files when releasing, doesn't that require an additional GIT commit for the updated AssemblyInfo.cs files? Or does the script do a 'GIT reset --hard' right after releasing and you oonly tag the version in GIT? Or is the build script really doing a GIT commit+ GIT tag for every build? A commit for every build sounds like overkill. I'm still seeking a good balance myself.n]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=789</link>
<pubDate>Tue, 27 Oct 2009 16:08:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>789</wp:post_id>
<wp:post_date>2009-10-27 18:08:39</wp:post_date>
<wp:post_date_gmt>2009-10-27 16:08:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-14</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"577";s:6:"height";s:3:"159";s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:18:"2009/10/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x82.png";s:5:"width";s:3:"300";s:6:"height";s:2:"82";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Setting up TeamCity + git + psake for dotless</title>
<link>http://www.tigraine.at/2009/10/27/setting-up-teamcity-git-psake-for-dotless/</link>
<pubDate>Tue, 27 Oct 2009 16:08:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/10/27/setting-up-teamcity-git-psake-for-dotless/</guid>
<description></description>
<content:encoded><![CDATA[<p>Let me say one thing upfront: Setting this up has been a HUGE pain in the ass (PITA for short), and I really hope this gets fixed sometime in the future, because those 3 hours I just spent getting this done are never coming back.. </p>  <p>Ok, just to make sure everybody understands: dotless is built using a PSake build script that has to be run through Powershell. The script itself calls out to git and therefore relies on git being installed into the PATH. </p>  <p><strong>First: Git-Teamcity</strong></p>  <p>Since our build relies on executing a git command during build the official JetBrains plugin doesn’t cut it (it only copies the sources, not the .git folder). So I downloaded <a href="http://github.com/chrisortman/git-teamcity">git-teamcity from GitHub</a> and built it using maven (at least something worked). </p>  <p>After that <a href="http://www.knowledgetree.com/blog/continuous-integration-with-teamcity-git">I followed this tutorial</a> on how to install the plugin on TeamCity:</p>  <blockquote>   <ul>     <li>package the plugin by following the steps outlined in file pkg in the Git plugin folder: create a folder<strong>gitAgent/lib</strong> in the folder <strong>target</strong>, copy all the .jar files (should only be <strong>Git-vcs.jar</strong>) to this folder, and then zip <strong>gitAgent</strong> to <strong>gitAgent.zip</strong> </li>      <li>deploy the plugin by following the steps outlined in file deploy in the Git plugin folder: copy<strong>gitAgent.zip to</strong> <strong>\webapps\ROOT\update\plugins</strong>, and copy <strong>Git-vcs.jar</strong> to<strong>\webapps\ROOT\WEB-INF\lib</strong> </li>   </ul> </blockquote>  <p>Well, after setting up a new VCS Root inside TeamCity the most important part is to set the VCS checkout mode to <strong>“Automatically on agent (if supported by VCS roots)”</strong></p>  <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/10/image2.png" width="577" height="159" /> </p>  <p>Warning: Also make sure that you have git installed at C:\Program Files\git, because that is <a href="http://github.com/jlewallen/git-teamcity/blob/b714bafe7bd8e41444b320fd7f3d9350f1d3008b/src/main/java/org/hivedb/teamcity/plugin/GitConfiguration.java#L76">the only place git-teamcity will look</a> for the bin (unless you change the code).</p>  <p></p>  <p><strong>Second: Execute Powershell</strong></p>  <p>Apparently there is some major bug with the ConsoleRunner inside TeamCity so all attempts to simply run the Powershell didn’t work. Directly invoking Powershell led to the build timing out. After some digging I found this thread that explained the problem and hinted at a possible solution: <a href="http://www.jetbrains.net/devnet/thread/275854">Touble with Powershell and NAnt during build</a></p>  <p>So, I created a .bat file called TeamCity.bat that calls Powershell directly from it’s full path (C:\Windows\System32\…) like this:</p>  <blockquote><tt>     <p>C:\WINDOWS\system32\windowspowershell\v1.0\Powershell.exe .\psake.ps1</p>   </tt></blockquote>  <p>But this doesn’t work due to the above bug in TeamCity. The build kept hanging and eventually got terminated due to an timeout. So I had to change it to something like this:</p>  <blockquote><tt>     <p>echo abc | C:\WINDOWS\system32\windowspowershell\v1.0\powershell.exe .\psake.ps1</p>   </tt></blockquote>  <p>Putting echo in front of it made it work, I have no idea why, but id worked.    <br />Now the next problem came up: although I explicitly ran Set-Executionpolicy on the box the runner’s executionpolicy was not set. So I added the Set-Executionpolicy to the .bat file:</p>  <blockquote><tt>     <p>echo abc | C:\WINDOWS\system32\windowspowershell\v1.0\powershell.exe Set-ExecutionPolicy remotesigned        <br />echo abc | C:\WINDOWS\system32\windowspowershell\v1.0\powershell.exe .\psake.ps1</p>   </tt></blockquote>  <p>Now, finally the script was executing, but due to no environment variables, my buildscript could not locate git (due to the ConsoleRunner not having ANY environment variables present). </p>  <p>The final version of my TeamCity.bat then included a change to the PATH variable and it finally worked:</p>  <blockquote style="margin-right: 0px" dir="ltr">   <p><tt>Set &quot;path=%path%;C:\Program Files\git\bin&quot;&#160; <br />echo abc | C:\WINDOWS\system32\windowspowershell\v1.0\powershell.exe Set-ExecutionPolicy remotesigned         <br />echo abc | C:\WINDOWS\system32\windowspowershell\v1.0\powershell.exe .\psake.ps1</tt></p> </blockquote>  <p>At that point the build was finally executing and I then only had to tell TeamCity where to find the build artifacts and I was done. </p>  <p><strong>Conclusion</strong></p>  <p>Now that it works, I’m glad I took the time to set it up. But the process could have gone smoother.    <br />Anyway, the good news is:</p>  <p>You can now get a release version from every future commit to the dotless repository right from <a href="http://dotlesscss.com:8081/viewType.html?buildTypeId=bt3&amp;tab=buildTypeStatusDiv">our dotless TeamCity server</a>!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>790</wp:post_id>
<wp:post_date>2009-10-27 18:08:40</wp:post_date>
<wp:post_date_gmt>2009-10-27 16:08:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>setting-up-teamcity-git-psake-for-dotless</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3409</wp:comment_id>
<wp:comment_author><![CDATA[millipo19]]></wp:comment_author>
<wp:comment_author_email>bulljdlkga.brielle@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>124.253.44.113</wp:comment_author_IP>
<wp:comment_date>2009-12-19 08:58:02</wp:comment_date>
<wp:comment_date_gmt>2009-12-19 13:58:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I will bookmark your blog and take the feeds also...Very interesting post to hang on..Iam really impressed with this article..Looking for more info.. <br><br>Thanks<br>Davis<br>______________________________________________<br><a href="http://dietplans908.blogspot.com/2009/12/miracle-cabbage-soup-diet_17.html" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/welcome-to-typepad-this-is-a-sample-post-you-can-edit-or-delete-later.html" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/hello-world/" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/hello-world/" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/cayenne-pepper-detox_17.html" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/cayenne-pepper-detox.html" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/cayenne-pepper-detox/" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/cayenne-pepper-detox/" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://dietplans908.blogspot.com/2009/12/maple-syrup-detox_17.html" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/maple-syrup-detox.html" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/maple-syrup-detox/" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/maple-syrup-detox/" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://dietplans908.blogspot.com/2009/12/british-heart-foundation-diet.html" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/british-heart-foundation-diet.html" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/british-heart-foundation-diet/" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/british-heart-foundation-diet/" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/weight-gain-diets.html" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/weight-gain-diets.html" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/weight-gain-diets/" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/weight-gain-diets/" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://dietplans908.blogspot.com/2009/12/easy-diet-plans.html" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/easy-diet-plans.html" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/easy-diet-plans/" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/easy-diet-plans/" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://dietplans908.blogspot.com/2009/12/sugar-busters-diet.html" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/sugar-busters-diet.html" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/sugar-busters-diet/" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/sugar-busters-diet/" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/diets-for-quick-weight-loss.html" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/diets-for-quick-weight-loss.html" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3410</wp:comment_id>
<wp:comment_author><![CDATA[millipo19]]></wp:comment_author>
<wp:comment_author_email>bulljdlkga.brielle@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>124.253.44.113</wp:comment_author_IP>
<wp:comment_date>2009-12-19 08:58:37</wp:comment_date>
<wp:comment_date_gmt>2009-12-19 13:58:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Excellent read, I just passed this onto a colleague who was doing a little research on that. And he actually bought me lunch because I found it for him smile So let me rephrase that: Thanks for lunch!<br><br>Have a nice day<br>Ecker<br>______________________________________________<br><a href="http://dietplans908.blogspot.com/2009/12/miracle-cabbage-soup-diet_17.html" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/welcome-to-typepad-this-is-a-sample-post-you-can-edit-or-delete-later.html" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/hello-world/" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/hello-world/" target="_blank" rel="nofollow">miracle cabbage soup diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/cayenne-pepper-detox_17.html" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/cayenne-pepper-detox.html" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/cayenne-pepper-detox/" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/cayenne-pepper-detox/" target="_blank" rel="nofollow">cayenne pepper detox</a> | <a href="http://dietplans908.blogspot.com/2009/12/maple-syrup-detox_17.html" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/maple-syrup-detox.html" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/maple-syrup-detox/" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/maple-syrup-detox/" target="_blank" rel="nofollow">maple syrup detox</a> | <a href="http://dietplans908.blogspot.com/2009/12/british-heart-foundation-diet.html" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/british-heart-foundation-diet.html" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/british-heart-foundation-diet/" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/british-heart-foundation-diet/" target="_blank" rel="nofollow">british heart foundation diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/weight-gain-diets.html" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/weight-gain-diets.html" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/weight-gain-diets/" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/weight-gain-diets/" target="_blank" rel="nofollow">weight gain diets</a> | <a href="http://dietplans908.blogspot.com/2009/12/easy-diet-plans.html" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/easy-diet-plans.html" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/easy-diet-plans/" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/easy-diet-plans/" target="_blank" rel="nofollow">easy diet plans</a> | <a href="http://dietplans908.blogspot.com/2009/12/sugar-busters-diet.html" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/sugar-busters-diet.html" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/sugar-busters-diet/" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/sugar-busters-diet/" target="_blank" rel="nofollow">sugar busters diet</a> | <a href="http://dietplans908.blogspot.com/2009/12/diets-for-quick-weight-loss.html" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8h.typepad.com/blog/2009/12/diets-for-quick-weight-loss.html" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.cariblogger.com/2009/12/17/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a> | <a href="http://jamesclark8hf.wordpress.com/2009/12/18/diets-for-quick-weight-loss/" target="_blank" rel="nofollow">diets for quick weight loss</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>wavelogo1.png</title>
<link>http://www.tigraine.at/?attachment_id=791</link>
<pubDate>Sat, 31 Oct 2009 21:03:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/10/wavelogo1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>791</wp:post_id>
<wp:post_date>2009-10-31 23:03:07</wp:post_date>
<wp:post_date_gmt>2009-10-31 21:03:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wavelogo1-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/10/wavelogo1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/10/wavelogo1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"256";s:6:"height";s:3:"256";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:21:"2009/10/wavelogo1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"wavelogo1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Wasted innovation: Google Wave</title>
<link>http://www.tigraine.at/2009/10/31/wasted-innovation-google-wave/</link>
<pubDate>Sat, 31 Oct 2009 21:03:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=792</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://wave.google.com/" target="_blank"><img style="border-right-width: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="wavelogo[1]" border="0" alt="wavelogo[1]" src="http://www.tigraine.at/wp-content/uploads/2009/10/wavelogo1.png" width="256" height="256" /></a> </p>  <p>It was pretty inevitable that Google Wave would fail after being hailed as the <em>solution to all our problems</em>. Still, looking at a defeat gives me a feeling of malicious joy.</p>  <p>Let’s start at the beginning: I got my invite almost 3 weeks ago, and after an initial: wow cool. I found out that nobody I care about had Wave. </p>  <p>After another week or so I finally got 20 invites to give out (if you want one send me an email, I’ve got 13 left) and finally managed to get the most important people I communicate to into Wave. </p>  <p>And, we had a lot of fun watching each other’s cursor spit out text live on the screen. Unfortunately, that was the only thing we found useful, and it was only funny for about 20 minutes. After that, we went back to our lives and that’s it. I’m still waiting for a reply to a Wave I sent Kristof almost 2 weeks ago. </p>  <p>So, what’s the problem? Wave technology is revolutionary, the idea is just not. It’s at heart:</p>  <p><strong>Awesome technology looking for a problem to solve</strong></p>  <p>Wave fails in most/all of it’s goals:</p>  <p><u>Replace Email</u>: Ok, so Email is everywhere and it works (thanks to GMail). I get mails pushed to my <a href="http://www.tigraine.at/2009/09/02/im-in-love-with-android/">Android phone</a>, and all in all: It does everything I want flawlessly and most importantly: EVERYWHERE.     <br />Wave on the other hand: Only inside my browser, no notification tool whatsoever. Pretty much equally useless as Facebook Messaging.</p>  <p><u>Replace Chat</u>: Instant typing is funny, but using the tool for IM just does not cut it usability wise. Live and Skype are great at that too, and even ICQ had that instant typing thing going some versions back (nobody wanted it). Wave once again misses all the major points here: No mobile client, no notifications, no desktop client. </p>  <p><u>Replace Message Boards</u>: Try running a public community off Wave: It’s impossible. Since you have to add people to the wave one by one, there is no way to spawn a new thread unless your community is really really small. Public viewing (the main purpose of most messaging boards) is impossible, thus the whole thing is not suited to replace a message board.</p>  <p><u>Replace Wiki</u>: Again, who cares about a wiki if it’s not publicly available? I know really few people who have a wiki for &lt;5 people, and even those few won’t care for Wave’s wacky and really laggy Playback feature. </p>  <p><u>Be a collaboration tool</u>: Well, Wave does that pretty well. Only that I don’t really see any online collaboration happening anytime soon, since most people are just too used to sending Word documents or Excel sheets around, they won’t dumb down to using a Wave just because they see each other’s cursors. </p>  <p>Well, and that’s about it. Wave tries to do a thousand things, and succeeds at not one of them. It’s totally useless without having any sort of desktop integration and mobile device integration. And once it has all of that, I still see myself sending more “Hey check your wave” emails than receiving a answer through wave.</p>  <p>What I want now? I want Google to use the awesome technology they created with Wave and bring it over to GMail. I want to be able to drag&amp;drop files to my GMail and have them be attached to my mails. I want this incredible spellchecker inside GMail and I want it now. That’s all. I don’t care for your revolutionary shiny thingy that does everything but nothing. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>792</wp:post_id>
<wp:post_date>2009-10-31 23:03:08</wp:post_date>
<wp:post_date_gmt>2009-10-31 21:03:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wasted-innovation-google-wave</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3392</wp:comment_id>
<wp:comment_author><![CDATA[Bowets]]></wp:comment_author>
<wp:comment_author_email>bowaccounts@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.mytoobits.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.184.94.205</wp:comment_author_IP>
<wp:comment_date>2009-11-10 23:51:02</wp:comment_date>
<wp:comment_date_gmt>2009-11-10 21:51:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is definitely the best post I've read since the Wave hype began. It's being promoted as a must have for everyone, but I see absolutely no purpose for my needs... Or the needs of most people for that matter. 
Maybe in a few years it'll be relevant, but not now. Google is always a step ahead, but this time I think they went further than they should have.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3380</wp:comment_id>
<wp:comment_author><![CDATA[ChrisJOwen]]></wp:comment_author>
<wp:comment_author_email>chris.j.owen@hotmail.co.uk</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>90.217.240.120</wp:comment_author_IP>
<wp:comment_date>2009-11-01 15:30:28</wp:comment_date>
<wp:comment_date_gmt>2009-11-01 20:30:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Daniel, Ill take a wave invite if you&#39;ve some left. I know, I know... I DID read your post, I just want the 20 minutes novelty of seeing other peoples cursors move around :-).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3381</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.242</wp:comment_author_IP>
<wp:comment_date>2009-11-01 15:35:49</wp:comment_date>
<wp:comment_date_gmt>2009-11-01 20:35:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sure no problem. Just send me your Gmail account by Email or Skype. (It only works with google accounts)<br><br>Oh, and I strongly encourage you to look at it :) those 20 minutes are great ;)<br><br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3382</wp:comment_id>
<wp:comment_author><![CDATA[zerok]]></wp:comment_author>
<wp:comment_author_email>zerok@zerokspot.com</wp:comment_author_email>
<wp:comment_author_url>http://zerokspot.com</wp:comment_author_url>
<wp:comment_author_IP>80.109.208.227</wp:comment_author_IP>
<wp:comment_date>2009-11-01 19:20:46</wp:comment_date>
<wp:comment_date_gmt>2009-11-02 00:20:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[For me personally Wave is primarily a collaboration tool and I&#39;ve already participated in at least one really good one through Wave. That said, Wave in its current state is definitely over-hyped. Too many things are still very half-baked (if even remotely close to an oven.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3383</wp:comment_id>
<wp:comment_author><![CDATA[Askhari]]></wp:comment_author>
<wp:comment_author_email>cid.askhari@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.nephilistic.com</wp:comment_author_url>
<wp:comment_author_IP>80.109.230.94</wp:comment_author_IP>
<wp:comment_date>2009-11-01 20:39:24</wp:comment_date>
<wp:comment_date_gmt>2009-11-02 01:39:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well, after trying out wave, I must agree that it does seem interesting, there are good ideas in this, but it fails to work for me right now.<br><br>Problem 01: as you said, it does a lot of things, but it does it with very little structure. Maybe I&#39;m not used to it quite yet, but I got lost in my first wave with 3 participants after missing 20 blips, and that sucked - honestly, in an email, it would have been similar, but I would have got it splitted up.<br><br>Problem 02: Simultanously writing with a lot of people actually messed up the communication - who is answering to what blip and what does he mean? I&#39;m missing titling and structure, micro-conversations between 2 participiants quickly messed up a whole wave.<br><br>Problem 03: Strangely Wave isn&#39;t working well in Chrome, so I have to use Firefox - as I only use FF for developing (with all the plugins I use it tend to get too "heavy" for surfing), I didn&#39;t check my waves a lot (so that&#39;s why your still waiting for your answer ;)<br><br>- So I could imagine Wave for in-house communication in the office. But that&#39;s managable quite well with ICQ, the Fileserver and just going to the other room and talking. <br>- For communication with clients it&#39;s definitely not good, because it make you expect an answer RIGHT NOW. <br>- And for everything else, wave will be interesting in a year or two, where you can expect more people to use it. Until then, a lot of those usability inconvenience will be fixed, i hope. <br><br>So for now, it&#39;s what it is: a very early beta - let&#39;s see how it developes]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3387</wp:comment_id>
<wp:comment_author><![CDATA[Alexandru]]></wp:comment_author>
<wp:comment_author_email>alexut@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://alexut.creations.ro/</wp:comment_author_url>
<wp:comment_author_IP>188.25.238.239</wp:comment_author_IP>
<wp:comment_date>2009-11-02 19:30:21</wp:comment_date>
<wp:comment_date_gmt>2009-11-03 00:30:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I tend to agree with your remarks but  let&#39;s see how it develops further, all technologies need some time to become important tools in our day to day lives,  wave could prove more useful than u think . I&#39;m curious about it, can u give me an invite, please :).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3388</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.242</wp:comment_author_IP>
<wp:comment_date>2009-11-02 23:26:48</wp:comment_date>
<wp:comment_date_gmt>2009-11-03 04:26:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[An invite should arrive during the coming week.<br><br>I agree that the technology has still way to go and mature, but at the moment I just feel like it tries really hard to replace email, while email already hat like 20 years to develop exactly into the tool we need it to be.<br><br>I&#39;ve still got 4 invites to spare if anyone is interested.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3389</wp:comment_id>
<wp:comment_author><![CDATA[Sander Rijken]]></wp:comment_author>
<wp:comment_author_email>sr@d-90.nl</wp:comment_author_email>
<wp:comment_author_url>http://sander.rijken.info/</wp:comment_author_url>
<wp:comment_author_IP>83.98.246.15</wp:comment_author_IP>
<wp:comment_date>2009-11-04 17:55:08</wp:comment_date>
<wp:comment_date_gmt>2009-11-04 22:55:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I agree that wave isn&#39;t very useful when only very few people use it, and the lack of tools. However I don&#39;t agree with your "Replace message boards" and "Replace wiki" comments. There are lots of ways already to make waves public (well public for people with invites so far), like:<br>- public to anyone (search for with:public to find them, add the contact <a href="mailto:easypublic@appspot.com" rel="nofollow">easypublic@appspot.com</a> to make it fully public)<br>- search for group:&lt;some google <a href="mailto:group@googlegroups.com" rel="nofollow">group@googlegroups.com</a>&gt; (public when you&#39;re a member of this group, hidden to others)<br>- embed in a blog. You get auto-added somehow when you interact with the embedded wave. See <a href="http://sander.rijken.info/2009/10/16/wave-test/" rel="nofollow">http://sander.rijken.info/2009/10/16/wave-test/</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3390</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.3.242</wp:comment_author_IP>
<wp:comment_date>2009-11-04 18:01:23</wp:comment_date>
<wp:comment_date_gmt>2009-11-04 23:01:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well Sander,<br>what I meant by replace a message board is that one wave is hardly enough to replace a message board. There is no way in Wave at the moment to have multiple waves be somehow grouped to people. By making it public anyone can participate (something I found out only yesterday..), but how do you allow people to start a new topic inside a community of let&#39;s say 50 people?<br>That&#39;s where I see the problem. <br><br>greetings Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3391</wp:comment_id>
<wp:comment_author><![CDATA[michael]]></wp:comment_author>
<wp:comment_author_email>michael.inniss@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>81.246.1.226</wp:comment_author_IP>
<wp:comment_date>2009-11-05 13:57:13</wp:comment_date>
<wp:comment_date_gmt>2009-11-05 18:57:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hello Daniel,<br><br>Just a long shot - have you got any invites left ? (<a href="mailto:michael.inniss@gmail.com" rel="nofollow">michael.inniss@gmail.com</a>)<br><br>Thanks]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3393</wp:comment_id>
<wp:comment_author><![CDATA[Mourya]]></wp:comment_author>
<wp:comment_author_email>kchintal@uni-klu.ac.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>143.205.142.88</wp:comment_author_IP>
<wp:comment_date>2009-11-19 15:55:39</wp:comment_date>
<wp:comment_date_gmt>2009-11-19 20:55:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I expected much from Wave and i am dissapointed. Like you said, the only feature that i can see is live typing and i am not able to uderstand how to make use of it ...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4710</wp:comment_id>
<wp:comment_author><![CDATA[Mourya]]></wp:comment_author>
<wp:comment_author_email>kchintal@uni-klu.ac.at</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-11-19 14:55:00</wp:comment_date>
<wp:comment_date_gmt>2009-11-19 14:55:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I expected much from Wave and i am dissapointed. Like you said, the only feature that i can see is live typing and i am not able to uderstand how to make use of it ...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ELMS-Connector documentation available</title>
<link>http://www.tigraine.at/2009/11/14/elms-connector-documentation-available/</link>
<pubDate>Sat, 14 Nov 2009 19:43:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[elmsConnector]]></category>

		<category domain="category" nicename="elmsconnector"><![CDATA[elmsConnector]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/14/elms-connector-documentation-available/</guid>
<description></description>
<content:encoded><![CDATA[<p>I decided not to invest any work in writing docs for a tool only I am using, due to the fact that it quite rapidly outdates during active development. </p>  <p>Well, <a href="http://www.tigraine.at/category/programmierung/projects/elmsconnector/" target="_blank">ELMS-Connector</a> development is mostly finished and after getting an email by someone from Amsterdam asking how to use ELMS-Connector I decided to finally write the docs. </p>  <p>The documentation is in the <a href="http://github.com/Tigraine/elms-connector" target="_blank">GitHub repository</a> alongside the code, but I also <a href="http://cloud.github.com/downloads/Tigraine/elms-connector/ELMS_Documentation.pdf" target="_blank">saved it as PDF and uploaded it</a>.</p>  <p>It’s by no means perfect, but it should be enough to get anyone who wants to use ELMS-Connector up and running quite smoothly. Comments are always welcome.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>794</wp:post_id>
<wp:post_date>2009-11-14 21:43:57</wp:post_date>
<wp:post_date_gmt>2009-11-14 19:43:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>elms-connector-documentation-available</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>The joy of working with dotless</title>
<link>http://www.tigraine.at/2009/11/17/the-joy-of-working-with-dotless/</link>
<pubDate>Tue, 17 Nov 2009 21:15:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/17/the-joy-of-working-with-dotless/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, I just spent some time on the <a href="http://www.imagineclub.at/" target="_blank">imagineClub website</a> adding our board’s <a href="http://www.imagineclub.at/Team/List.aspx" target="_blank">bio page</a>. The HTML is not really interesting, but since imagineClub was written while <a href="http://www.dotlesscss.com/" target="_blank">dotless</a> was still in development I wrote the CSS the old fashioned way. </p>  <p>Since <a href="http://www.dotlesscss.com/" target="_blank">dotless</a> has reached some maturity I’ve been dogfooding it on imagineClub to make use of the minifier and the caching, but never had any real LESS code in there.     <br />When I had to fix something today I was so happy to be able to write CSS like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0e883ed5-13b7-458a-a7a7-adbf63e7a330" class="wlWriterEditableSmartContent"><pre name="code" class="css">
div#team
{
&#160;&#160;&#160;&#160;width: 414px;
&#160;&#160;&#160;&#160;p
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;float: right;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width: 300px;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;h2
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;clear: right;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;font-size: @title-fontsize - 4;
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;img
&#160;&#160;&#160;&#160;{&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width: 100px;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;margin-bottom: 4px;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>This is how CSS was supposed to be, and with <a href="http://www.dotlesscss.com/" target="_blank">dotless</a> it has become just mindlessly easy to do.. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>795</wp:post_id>
<wp:post_date>2009-11-17 23:15:11</wp:post_date>
<wp:post_date_gmt>2009-11-17 21:15:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-joy-of-working-with-dotless</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=797</link>
<pubDate>Sun, 22 Nov 2009 18:43:57 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>797</wp:post_id>
<wp:post_date>2009-11-22 20:43:57</wp:post_date>
<wp:post_date_gmt>2009-11-22 18:43:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-15</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"462";s:6:"height";s:3:"243";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:17:"2009/11/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x157.png";s:5:"width";s:3:"300";s:6:"height";s:3:"157";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Writing ELMAH Exceptions to Log4Net</title>
<link>http://www.tigraine.at/2009/11/22/writing-elmah-exceptions-to-log4net/</link>
<pubDate>Sun, 22 Nov 2009 18:43:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/22/writing-elmah-exceptions-to-log4net/</guid>
<description></description>
<content:encoded><![CDATA[<p>Yesterday a friend asked me if I know how to make ELMAH write exceptions to a Log4Net appender.    <br />My first idea was to write a custom ErrorLog that would do that, but that’s not really possible since ELMAH must be able to retrieve errors after the fact so they can be displayed in ELMAH’s web interface. </p>  <p>Well, turns out it’s even simpler and more obvious by simply subclassing an existing ErrorLog and hook into the Log method:</p>  <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/11/image.png" width="462" height="243" /> </p>  <p>Assuming you use the <tt>XmlFileErrorLog</tt> (you can use this method with all of them) you simply subclass it and put your call to Log4Net before the base.Log call:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:3a461e0c-b9b3-44d3-afeb-5cee090c5518" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public class Log4NetErrorLog : XmlFileErrorLog
{
&#160;&#160;&#160;&#160;public Log4NetErrorLog(IDictionary config) : base(config)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;public Log4NetErrorLog(string logPath) : base(logPath)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;readonly ILog log = LogManager.GetLogger("bla");
&#160;&#160;&#160;&#160;public override string Log(Error error)
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//Write whatever you want to Log4Net
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;log.Fatal("Exception logged through ELMAH: " + error.Message, error.Exception);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return base.Log(error);
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Now the only thing you have to do is change the errorLog line in your ELMAH configuration (found in web.config) to reference your new ErrorLog subclass:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7acc9b50-ccf0-4c2e-836c-6bda319deda2" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
&lt;elmah&gt;&#160;&#160;
&#160;&#160;&#160;&#160;&lt;errorLog type="MyAssembly.Log4NetErrorLog, MyAssembly" logPath="~/App_Data" /&gt;&#160;&#160;
&lt;/elmah&gt;
</pre></div>

<p>It will still log to XML, but also generate one entry per log to Log4Net. If you don’t want to save anything you can simply subclass the <tt>MemoryErrorLog</tt> class and set it’s size to 1. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>798</wp:post_id>
<wp:post_date>2009-11-22 20:43:58</wp:post_date>
<wp:post_date_gmt>2009-11-22 18:43:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>writing-elmah-exceptions-to-log4net</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Pandora used in dotless and moved to GitHub</title>
<link>http://www.tigraine.at/2009/11/23/pandora-used-in-dotless-and-moved-to-github/</link>
<pubDate>Mon, 23 Nov 2009 17:18:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Pandora]]></category>

		<category domain="category" nicename="pandora"><![CDATA[Pandora]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/23/pandora-used-in-dotless-and-moved-to-github/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/category/programmierung/projects/pandora/" target="_blank">Pandora</a>, my personal IoC Container (mostly written for educational purposes) has recently been integrated into <a href="http://www.dotlesscss.com/" target="_blank">dotless</a>. This has helped us improve the design of dotless without having to take on a big dependency like Windsor or StructureMap. </p>  <p>I chose to implement Pandora through the <a href="http://www.tigraine.at/2009/06/04/common-service-locator-adapter-for-pandora/" target="_blank">Common Service Locator</a> interface by Microsoft, so if we ever feel restricted by Pandora we can easily switch to a more potent container without touching the actual dotless code. </p>  <p>This step also made me bring the Pandora repository from mercurial to git with some help from Horst. He was kind enough to run hg-fast-import for me. </p>  <p>Pandora can now be found on GitHub with a similar build process as dotless and <a href="http://www.tigraine.at/category/programmierung/projects/elmsconnector/" target="_blank">elms-connector</a>.</p>  <p><a href="http://github.com/Tigraine/pandora-container" target="_blank">Pandora on GitHub</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>801</wp:post_id>
<wp:post_date>2009-11-23 19:18:42</wp:post_date>
<wp:post_date_gmt>2009-11-23 17:18:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>pandora-used-in-dotless-and-moved-to-github</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Removing .svn folders with Powershell</title>
<link>http://www.tigraine.at/2009/11/24/removing-svn-folders-with-powershell/</link>
<pubDate>Tue, 24 Nov 2009 19:38:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/24/removing-svn-folders-with-powershell/</guid>
<description></description>
<content:encoded><![CDATA[<p>I needed one simple thing: Delete all .svn folders from a repository so I can send it to my customer. While searching most of the results I got where either wrong, or completely besides the point, so I decided it may be worth sharing:</p>  <blockquote>   <p><tt>get-childitem -Include .svn -Recurse -force | Remove-Item -Force –Recurse</tt></p></blockquote>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>802</wp:post_id>
<wp:post_date>2009-11-24 21:38:40</wp:post_date>
<wp:post_date_gmt>2009-11-24 19:38:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>removing-svn-folders-with-powershell</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3396</wp:comment_id>
<wp:comment_author><![CDATA[Chris Carter]]></wp:comment_author>
<wp:comment_author_email>chris@panteravb.com</wp:comment_author_email>
<wp:comment_author_url>http://panteravb.com/</wp:comment_author_url>
<wp:comment_author_IP>24.9.71.107</wp:comment_author_IP>
<wp:comment_date>2009-11-25 03:15:42</wp:comment_date>
<wp:comment_date_gmt>2009-11-25 08:15:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Good one.  I&#39;ve been using the one from Jon Galloway: <a href="http://weblogs.asp.net/jgalloway/archive/2007/02/24/shell-command-remove-svn-folders.aspx" rel="nofollow">http://weblogs.asp.net/jgalloway/archive/2007/0...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3397</wp:comment_id>
<wp:comment_author><![CDATA[bonskijr]]></wp:comment_author>
<wp:comment_author_email>jedi_knyt23@yahoo.com</wp:comment_author_email>
<wp:comment_author_url>http://devpinoy.org/blogs/bonskijr/</wp:comment_author_url>
<wp:comment_author_IP>202.138.168.189</wp:comment_author_IP>
<wp:comment_date>2009-11-25 08:59:10</wp:comment_date>
<wp:comment_date_gmt>2009-11-25 13:59:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[or you could just use svn export <a href="http://devpinoy.org/blogs/bonskijr/archive/2007/02/26/getting-rid-of-svn-folders.aspx" rel="nofollow">http://devpinoy.org/blogs/bonskijr/archive/2007...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3398</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.68.45</wp:comment_author_IP>
<wp:comment_date>2009-11-25 09:56:53</wp:comment_date>
<wp:comment_date_gmt>2009-11-25 14:56:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh.. I didn&#39;t think about that.. Thanks]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3438</wp:comment_id>
<wp:comment_author><![CDATA[ongamesite]]></wp:comment_author>
<wp:comment_author_email>qdngg86147@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>60.168.238.33</wp:comment_author_IP>
<wp:comment_date>2010-05-06 05:58:37</wp:comment_date>
<wp:comment_date_gmt>2010-05-06 10:58:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi every friends,<br><br>    Welcome to Flash Games, the online games resource website. Free arcade games Play on 4000 games,Nice <br><br>Video and counting . The best of online games is on <a href="http://www.ongamesite.com.We" rel="nofollow">http://www.ongamesite.com.We</a> have fun playing some of <br><br>the best online games ever created and remember to check back often because we are always adding new <br><br>games.<br><br>Good luck.<br>Donald.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=803</link>
<pubDate>Thu, 26 Nov 2009 14:34:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>803</wp:post_id>
<wp:post_date>2009-11-26 16:34:06</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-16</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"218";s:14:"hwstring_small";s:23:"height='54' width='128'";s:4:"file";s:18:"2009/11/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x127.png";s:5:"width";s:3:"300";s:6:"height";s:3:"127";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=804</link>
<pubDate>Thu, 26 Nov 2009 14:34:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>804</wp:post_id>
<wp:post_date>2009-11-26 16:34:07</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-12</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"106";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:23:"2009/11/image_thumb.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x106.png";s:5:"width";s:3:"150";s:6:"height";s:3:"106";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=805</link>
<pubDate>Thu, 26 Nov 2009 14:34:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>805</wp:post_id>
<wp:post_date>2009-11-26 16:34:08</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-17</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"536";s:6:"height";s:3:"258";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:18:"2009/11/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image2-300x144.png";s:5:"width";s:3:"300";s:6:"height";s:3:"144";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=806</link>
<pubDate>Thu, 26 Nov 2009 14:34:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>806</wp:post_id>
<wp:post_date>2009-11-26 16:34:08</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-13</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"120";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:24:"2009/11/image_thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb1-150x120.png";s:5:"width";s:3:"150";s:6:"height";s:3:"120";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=807</link>
<pubDate>Thu, 26 Nov 2009 14:34:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>807</wp:post_id>
<wp:post_date>2009-11-26 16:34:10</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-18</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"217";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:18:"2009/11/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image3-300x101.png";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=808</link>
<pubDate>Thu, 26 Nov 2009 14:34:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>808</wp:post_id>
<wp:post_date>2009-11-26 16:34:11</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-14</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/image_thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"684";s:6:"height";s:3:"235";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:24:"2009/11/image_thumb2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb2-300x103.png";s:5:"width";s:3:"300";s:6:"height";s:3:"103";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Thanks Lijit!</title>
<link>http://www.tigraine.at/2009/11/26/thanks-lijit/</link>
<pubDate>Thu, 26 Nov 2009 14:34:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Site-News]]></category>

		<category domain="category" nicename="site-news"><![CDATA[Site-News]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/26/thanks-lijit/</guid>
<description></description>
<content:encoded><![CDATA[<p>You may have seen that I use <a href="http://www.lijit.com/" target="_blank">Lijit</a> to power the on-site search for my blog. Since Lijit by default uses a Google custom search to power this (nothing really wrong with that) I became quite unhappy with the results (Google for some reason doesn’t like to index articles but rather indexes categories :(). Since I didn’t find my own stuff through Google, getting the same bad results through Lijit was quite annoying. </p>  <p>So I tweeted this one day:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/11/image1.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb.png" width="244" height="106" /></a> </p>  <p>Well, took about 45 minutes to receive this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/11/image2.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb1.png" width="244" height="120" /></a> </p>  <p>And this very nice Email alongside:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/11/image3.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/11/image_thumb2.png" width="684" height="235" /></a> </p>  <p></p>  <p>Well, that was 2 days ago. Search results that I get when using the on-site search are back to what I expect them to be and I’m once again able to find my own stuff. </p>  <p>Thanks Lijit. Great service!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>809</wp:post_id>
<wp:post_date>2009-11-26 16:34:11</wp:post_date>
<wp:post_date_gmt>2009-11-26 14:34:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>thanks-lijit</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3399</wp:comment_id>
<wp:comment_author><![CDATA[Kristof]]></wp:comment_author>
<wp:comment_author_email>cid.askhari@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.109.230.94</wp:comment_author_IP>
<wp:comment_date>2009-11-26 23:33:26</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 04:33:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Nice to see such good support!<br>Nonetheless, I think your problem with Google indexing the category pages might have been caused by your blog configuration - as your category pages contain far more links to your deep content, they look more important - so no-indexing them and giving your posts and pages a higher priority might have solved your problem. There are some <a href="http://wordpress.org/extend/plugins/search.php?q=SEO" rel="nofollow">good plugins out there</a> to automate this process.<br><br>Even if your on-site-search is fixed now, your blogs SEO would definitely profit from this]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3400</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.68.45</wp:comment_author_IP>
<wp:comment_date>2009-11-26 23:39:17</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 04:39:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes I know. I already run the All-In-One SEO Pack and it didn&#39;t help at all. Fixing the on-site search did the most important thing for me:<br>Fix my search.<br><br>That google is not finding my stuff is very unfortunate and I&#39;ll address the problem for sure. But doing SEO is pretty arcane and does not always net the right results. Especially if you don&#39;t care at all about that crap (like I do). <br>I hate doing this, I hate anything that even resembles Blog engine maintenance, so why should I be happy to do SEO ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3401</wp:comment_id>
<wp:comment_author><![CDATA[Kristof]]></wp:comment_author>
<wp:comment_author_email>cid.askhari@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.109.230.94</wp:comment_author_IP>
<wp:comment_date>2009-11-26 23:56:33</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 04:56:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can&#39;t quite understand how this happens if your category-pages are non-indexed. But netherless, knowing where to find good content is still worth more than finding bad one, so seo isn&#39;t that important for people who aren&#39;t selling stuff online ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3402</wp:comment_id>
<wp:comment_author><![CDATA[tarable]]></wp:comment_author>
<wp:comment_author_email>anderson.tara76@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://talltara.com/</wp:comment_author_url>
<wp:comment_author_IP>24.9.11.20</wp:comment_author_IP>
<wp:comment_date>2009-11-27 16:31:35</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 21:31:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, I&#39;m glad we could sort things out for you. Keeping our users satisfied is of utmost priority for us at Lijit and I appreciate the kind post. If you run into any other trouble or have additional questions, you know what to do. I&#39;m tara [at] lijit [dot] com and I&#39;m happy to help!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4625</wp:comment_id>
<wp:comment_author><![CDATA[tarable]]></wp:comment_author>
<wp:comment_author_email>anderson.tara76@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://talltara.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-11-27 15:31:00</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 15:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, I'm glad we could sort things out for you. Keeping our users satisfied is of utmost priority for us at Lijit and I appreciate the kind post. If you run into any other trouble or have additional questions, you know what to do. I'm tara [at] lijit [dot] com and I'm happy to help!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4626</wp:comment_id>
<wp:comment_author><![CDATA[tarable]]></wp:comment_author>
<wp:comment_author_email>anderson.tara76@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://talltara.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-11-27 15:31:00</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 15:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, I'm glad we could sort things out for you. Keeping our users satisfied is of utmost priority for us at Lijit and I appreciate the kind post. If you run into any other trouble or have additional questions, you know what to do. I'm tara [at] lijit [dot] com and I'm happy to help!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4627</wp:comment_id>
<wp:comment_author><![CDATA[tarable]]></wp:comment_author>
<wp:comment_author_email>anderson.tara76@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://talltara.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-11-27 15:31:00</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 15:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, I'm glad we could sort things out for you. Keeping our users satisfied is of utmost priority for us at Lijit and I appreciate the kind post. If you run into any other trouble or have additional questions, you know what to do. I'm tara [at] lijit [dot] com and I'm happy to help!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4628</wp:comment_id>
<wp:comment_author><![CDATA[tarable]]></wp:comment_author>
<wp:comment_author_email>anderson.tara76@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://talltara.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2009-11-27 15:31:00</wp:comment_date>
<wp:comment_date_gmt>2009-11-27 15:31:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Daniel, I'm glad we could sort things out for you. Keeping our users satisfied is of utmost priority for us at Lijit and I appreciate the kind post. If you run into any other trouble or have additional questions, you know what to do. I'm tara [at] lijit [dot] com and I'm happy to help!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Don&#8217;t forget to turn of the debugger when doing performance testing</title>
<link>http://www.tigraine.at/2009/11/28/dont-forget-to-turn-of-the-debugger-when-doing-performance-testing/</link>
<pubDate>Sat, 28 Nov 2009 10:18:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/11/28/dont-forget-to-turn-of-the-debugger-when-doing-performance-testing/</guid>
<description></description>
<content:encoded><![CDATA[<p>Recently our dotless lead tester Gert discovered a little bug in the dotless minifier that made the minifier “loose” css expressions that where not followed by a semicolon. </p>  <p>The fix to this was in theory quite simple, simply treat all closing braces } as semicolons so expressions are still terminated. Doing so then led to one new cause for problems: ; }.</p>  <p>Semicolons followed by a closing brace call the ExpressionBuilder with a empty value, the ExpressionBuilder can now either throw an exception or return null. I decided to try throwing exceptions first.</p>  <p>Returning null somehow felt less elegant and I did not consider the performance impact of throwing an exception. So after implementing I decided to test this and wrote a little benchmark console program to test my theories. </p>  <p>In Shock I watched the exception case to be 10 times slower than simply doing a null check. Hastily I reverted the exception check and started implementing the null-check in the dotless code when I remembered the debugger.</p>  <p>Doh! How could I run a performance test with the debugger attached. Ran the program without the debugger: exceptions where only twice as slow as the null check. Not too bad, but still not fast enough for dotless. </p>  <p>So, here some wisdom: Always make sure you run without the debugger when testing performance. Exceptions while debugging are roughly 10 times more expensive than without debugger.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>810</wp:post_id>
<wp:post_date>2009-11-28 12:18:15</wp:post_date>
<wp:post_date_gmt>2009-11-28 10:18:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-forget-to-turn-of-the-debugger-when-doing-performance-testing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Castle.Pagination v1.1.0 released</title>
<link>http://www.tigraine.at/2009/12/05/castle-pagination-v1-1-0-released/</link>
<pubDate>Sat, 05 Dec 2009 15:38:20 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/12/05/castle-pagination-v1-1-0-released/</guid>
<description></description>
<content:encoded><![CDATA[<p>Finally the Castle.Pagination component has reached v1.1.0 and is ready to be incorporated into the upcoming Castle Monorail 2.0 release. </p>  <p>As for the changes: There are hardly any. Pagination is a solved problem and most of the code changes where bug fixes and minor improvements. </p>  <p>Anyway, thanks Jonathan Rossi for helping me with the release! I can’t wait for Castle to move to GitHub so we can finally put that whole “non-committer sends patches” misery behind us.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>811</wp:post_id>
<wp:post_date>2009-12-05 17:38:20</wp:post_date>
<wp:post_date_gmt>2009-12-05 15:38:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>castle-pagination-v1-1-0-released</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3403</wp:comment_id>
<wp:comment_author><![CDATA[jonorossi]]></wp:comment_author>
<wp:comment_author_email>jono@jonorossi.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>58.96.37.61</wp:comment_author_IP>
<wp:comment_date>2009-12-06 04:02:43</wp:comment_date>
<wp:comment_date_gmt>2009-12-06 09:02:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Happy to help. Full steam ahead to get MonoRail ready!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3404</wp:comment_id>
<wp:comment_author><![CDATA[ChrisJOwen]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP>81.138.70.233</wp:comment_author_IP>
<wp:comment_date>2009-12-11 16:17:28</wp:comment_date>
<wp:comment_date_gmt>2009-12-11 21:17:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulations, I really need you to convince me to use Monorail over ASP MVC. I feel like I&#39;m missing a trick here. Congratulations, I really need you to convince me to use Monorail over ASP MVC. I feel like I&#39;m missing a trick here.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3405</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.239.147</wp:comment_author_IP>
<wp:comment_date>2009-12-11 16:29:24</wp:comment_date>
<wp:comment_date_gmt>2009-12-11 21:29:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well .. That&#39;s a tricky question.<br>MonoRail is imo more feature complete and also a lot older.<br>MVC feels a lot more lightweight at first, but has it&#39;s design issues and also it&#39;s limitations.<br>MonoRail on the other hand is a really great framework, only with some back-compatibility burdens that feel awkward at times.. But I don&#39;t know anything that can&#39;t be done with MonoRail (the opposite doesn&#39;t hold true with MVC)<br><br>Also MR integrates very well with the rest of the Castle stack. So if you look for Windsor, ActiveRecord (or NHibernate) integration etc.. MR just rocks..<br><br>I&#39;d just suggest giving it a try. The frameworks feel similar and they both do their thing quite well. boils down to taste imo.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3411</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Koźmic]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP>78.131.137.62</wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:49:15</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 23:49:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )<br>About changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: <a href="http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.html" rel="nofollow">http://www.castleproject.org/monorail/documenta...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3412</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.240.52</wp:comment_author_IP>
<wp:comment_date>2010-01-03 19:15:11</wp:comment_date>
<wp:comment_date_gmt>2010-01-04 00:15:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I&#39;ll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4578</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Kou017amic]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 17:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 17:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )nAbout changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.htmln]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4577</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 18:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I'll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4853</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 18:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I'll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4854</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Kou017amic]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 17:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 17:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )nAbout changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.htmln]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4706</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 18:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I'll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4707</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Kou017amic]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 17:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 17:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )nAbout changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.htmln]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5070</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 18:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I'll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5071</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Kou017amic]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 17:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 17:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )nAbout changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.htmln]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5109</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 18:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 18:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks.. I'll look at the doc and update it if necessary.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5110</wp:comment_id>
<wp:comment_author><![CDATA[Krzysztof Kou017amic]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/kkozmic</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-03 17:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-03 17:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Congratulation with the release (a little late but still :) )nAbout changes, there must have been some, since the documentation page is pretty much completely out of sync with current code: http://www.castleproject.org/monorail/documentation/trunk/helpers/pagination/index.htmln]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=812</link>
<pubDate>Sun, 27 Dec 2009 15:50:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/12/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>812</wp:post_id>
<wp:post_date>2009-12-27 17:50:23</wp:post_date>
<wp:post_date_gmt>2009-12-27 15:50:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-19</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/12/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/12/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"377";s:6:"height";s:3:"177";s:14:"hwstring_small";s:23:"height='60' width='128'";s:4:"file";s:17:"2009/12/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x140.png";s:5:"width";s:3:"300";s:6:"height";s:3:"140";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=813</link>
<pubDate>Sun, 27 Dec 2009 15:50:23 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>813</wp:post_id>
<wp:post_date>2009-12-27 17:50:23</wp:post_date>
<wp:post_date_gmt>2009-12-27 15:50:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-15</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/12/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"181";s:14:"hwstring_small";s:23:"height='60' width='128'";s:4:"file";s:23:"2009/12/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x142.png";s:5:"width";s:3:"300";s:6:"height";s:3:"142";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=814</link>
<pubDate>Sun, 27 Dec 2009 15:50:24 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/12/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>814</wp:post_id>
<wp:post_date>2009-12-27 17:50:24</wp:post_date>
<wp:post_date_gmt>2009-12-27 15:50:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-20</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/12/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/12/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"236";s:6:"height";s:3:"124";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:18:"2009/12/image1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x124.png";s:5:"width";s:3:"150";s:6:"height";s:3:"124";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=815</link>
<pubDate>Sun, 27 Dec 2009 15:50:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>815</wp:post_id>
<wp:post_date>2009-12-27 17:50:25</wp:post_date>
<wp:post_date_gmt>2009-12-27 15:50:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-16</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/12/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"240";s:6:"height";s:3:"128";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:24:"2009/12/image_thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb1-150x128.png";s:5:"width";s:3:"150";s:6:"height";s:3:"128";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Introducing: Tigraine.Logging</title>
<link>http://www.tigraine.at/2009/12/27/introducing-tigraine-logging/</link>
<pubDate>Sun, 27 Dec 2009 15:50:25 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2009/12/27/introducing-tigraine-logging/</guid>
<description></description>
<content:encoded><![CDATA[<p>Stop rolling your eyes, I know there are more logging infrastructure libraries out there than there are projects using them. And I won’t say this one is different, it’s not. It’s more or less a little experiment I did to get accustomed to VS2010 and R#5.    <br />Also note that most of the code originated from me writing a logging architecture for a <a href="http://github.com/unixtam/EvoPaint" target="_blank">Java OSS project</a> I’m involved with and I wanted to carry the idea over to .NET.</p>  <p>But: I believe it turned out to be quite nice while very very lightweight. So I thought I’d just go ahead and share it. </p>  <p><strong>Usage</strong></p>  <p>Tigraine.Logging has a ILogger interface that exposes the usual suspects:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2009/12/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb.png" width="381" height="181" /></a> </p>  <p>You just instantiate the appropriate ILogger implementation and are set to go, it will write everything you pass to it.</p>  <p>What makes out most of the code though is the ability to render objects passed into the logger as parameters. This idea came from the Java codebase where there was code like this scattered all over the place:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:be5acfb2-0948-4aa4-9b25-2df594d9d293" class="wlWriterEditableSmartContent"><pre name="code" class="java">
@Override
public String toString() {
	String ret = this.getClass().getSimpleName();

	if (Config.logVerbosity &gt;= Log.Verbosity.VERBOSE) {
		ret += "(" + this.hashCode() + ")";
	}
	
	if&#160;&#160;(Config.logVerbosity &gt;= Log.Verbosity.VERBOSE) {
			ret += " A={" + this.a + "}, B={" + this.b + "}";
	}

	return ret;
}

</pre></div>

<p>Now, I hate that sort of code. It’s just noise and it tends to get messy really soon. And so I started implementing my idea of <strong>ObjectRenderers</strong> (I know this term is already used by other logging frameworks, and the idea is not new either):</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2009/12/image1.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; margin-left: 0px; border-top: 0px; margin-right: 0px; border-right: 0px" title="image" border="0" alt="image" align="left" src="http://www.tigraine.at/wp-content/uploads/2009/12/image_thumb1.png" width="240" height="128" /></a> </p>

<p>You add a renderer to the logger and whenever a object is passed in of the type, the renderer is invoked to transform the object to a string representation of your choosing. So instead of having to rely on .ToString() to give accurate results, you implement a class that takes care of writing all relevant information of your object down. </p>

<p>Here is a sample:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bf0de663-935d-4170-b828-7d223390aaca" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var consoleLogger = new ConsoleLogger(LogLevel.Debug);
consoleLogger.AddObjectRenderer&lt;TestClass&gt;(new TestClassRenderer());

consoleLogger.Error("Something went wrong with {0}", new TestClass());
</pre></div>

<p></p>

<p>The logging framework will call TestClassRenderer.Render to get a string representation of TestClass. This now also means you can have two different renderers, one verbose and one brief, and only hook up the one that’s right for you right now. The calling code does not need to be touched.</p>

<p>You can also define a renderer for a supertype and all subclasses will use that one if no more specific renderer is hooked up. If no renderer is found whatsoever .ToString() will get called.</p>

<p>And since implementing all renderers in their own classes would lead to a lot of code, there is a little helper class that should work for most of you by using some lambda syntax:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:576c2341-5ddc-423e-a499-2bbceb1dc602" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var compositeRenderer = new CompositeRenderer&lt;TestClass&gt;
&#160;&#160;&#160;&#160;(p =&gt; p.Firstname + " " + p.Nickname + " " + p.Age);
</pre></div>

<p><strong>Where to get</strong></p>

<p>You may have already guessed, Tigraine.Logging <a href="http://github.com/Tigraine/Tigraine.Logging" target="_blank">can be found on GitHub</a> and is open-source under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html" target="_blank">Apache License Version 2</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>816</wp:post_id>
<wp:post_date>2009-12-27 17:50:25</wp:post_date>
<wp:post_date_gmt>2009-12-27 15:50:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>introducing-tigraine-logging</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>Happy New Year 2010!</title>
<link>http://www.tigraine.at/2010/01/01/happy-new-year-2010/</link>
<pubDate>Fri, 01 Jan 2010 14:03:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/01/01/happy-new-year-2010/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.flickr.com/photos/15594453@N02/4232991383/"><img src="http://farm3.static.flickr.com/2563/4232991383_3a39df5cf6_o.jpg" /></a></p>  <p>It’s been a busy year 2009, and I’m quite pleased with how things turned out. </p>  <p>I had a lot of fun going back to university, working on various open source projects like <a href="http://www.dotlesscss.com/" target="_blank">.less</a>, <a href="http://www.tigraine.at/category/programmierung/projects/elmsconnector/" target="_blank">elmsConnector</a>, <a href="http://www.tigraine.at/category/programmierung/projects/pandora/" target="_blank">Pandora</a>. </p>  <p>I can only hope you enjoyed 2009 as much as I did, and hope 2010 turns out even better. Thanks for reading my blog and have a nice 2010!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>817</wp:post_id>
<wp:post_date>2010-01-01 16:03:26</wp:post_date>
<wp:post_date_gmt>2010-01-01 14:03:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>happy-new-year-2010</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>.Less now supports files from the VirtualPathProvider!</title>
<link>http://www.tigraine.at/2010/01/06/less-now-supports-files-from-the-virtualpathprovider/</link>
<pubDate>Wed, 06 Jan 2010 18:14:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/01/06/less-now-supports-files-from-the-virtualpathprovider/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, I’ve just spent almost the whole day refactoring the hell out of our <a href="http://github.com/Tigraine/nLess" target="_blank">.less codebase</a> just to add one tiny change:</p>  <p>Allow users to not only load files present on the current file system, but also directly from in-memory strings and VirtualPaths (<a href="http://groups.google.com/group/dotless/browse_thread/thread/55b43a8dce165cd7?hl=en" target="_blank">as requested on the list</a>). The problem here being that not everyone wants to serve his .less files right from the server’s file system but sometimes people have pretty sophisticated virtualized storage systems in place that require them to use the VirtualPathProvider abstraction that was added to .NET 2.0.     <br />You can read up on that in <a href="http://weblogs.asp.net/scottgu/archive/2005/11/27/431650.aspx" target="_blank">ScottGu’s blog</a> or <a href="http://blogs.msdn.com/davidebb/archive/2005/11/27/497339.aspx" target="_blank">David Ebbo’s blog</a>, but in a nutshell it’s just another way to open files besides using System.IO.File.Open(), letting you forget about all the nasty stuff of where the file is really located.&#160; </p>  <p>To do so I had to allow uses to plug in different “Sources” for .less code, and so I also had to make a breaking change to the main ILessEngine interface. The Interface was taking a filename as parameter, but in light of our recent support emails on the <a href="http://groups.google.com/group/dotless" target="_blank">development list</a> I decided that has to go away in favor of a more open approach (mainly to allow users to simply throw in-memory strings at the engine). </p>  <p>Because I know this will break some code, all implementors of ILessEngine still offer the old string parameter as an overload that then defaults to the default FileSource.</p>  <p>Now, for changing the source provider:</p>  <p>If you want to use anything besides the default filesystem based FileSource provider, you now have the ability to plug in a type implementing ILessSource through the DotLessConfiguration (thus through web.config).    <br />.Less comes with three sources built in: <tt>VirtualPathSource</tt>, <tt>FileSource</tt> (default).</p>  <p>FileSource by default just opens a file through System.IO.File, while VirtualPathSource will use the <tt>HostingEnvironment.VirtualPathProvider.GetFile()</tt> method to open a Stream and read the .less code from there. </p>  <p>To enable the VirtualPathSource in your web application you simply need to modify your web.config a bit:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:7eb6542b-0319-4942-95cf-9188bd8cb816" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
&lt;dotless minifyCss="false" cacheEnabled="true" source="dotless.Core.VirtualPathSource"&gt;
&#160;&#160;
&lt;/dotless&gt;
</pre></div>

<p>The important part is the <u>source attribute</u> as it has to reference a type name implementing ILessSource. So if you want to create your own less source you could simply create another implementation of ILessSource and reference it’s name in the .less config.</p>

<p>If you want to use .less directly from your code to transform something you can just new up a LessSourceObject (the very output we get from ILessSource) and throw your code in there like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:60b3fc68-e78d-4c8b-91ba-4ebc6cbc8158" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
ILessEngine lessEngine = new EngineFactory().GetEngine(new DotlessConfiguration());
var output = lessEngine.TransformToCss(new LessSourceObject() {Content = "my .less code here"});
</pre></div>

<p>As always you can get the latest code from <a href="http://github.com/chrisjowen/nLess" target="_blank">GitHub</a>, or the latest binary release through our <a href="http://www.dotlesscss.com:8081/viewLog.html?buildId=lastPinned&amp;buildTypeId=bt3&amp;tab=artifacts&amp;guest=1" target="_blank">TeamCity build server</a>. You can read more about .less (pronounced dot-less) on the project’s website at <a href="http://www.dotlesscss.com">http://www.dotlesscss.com</a>. 

  <br />And while at it, we’d appreciate it if you spread the word about .less :).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>818</wp:post_id>
<wp:post_date>2010-01-06 20:14:09</wp:post_date>
<wp:post_date_gmt>2010-01-06 18:14:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>less-now-supports-files-from-the-virtualpathprovider</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3413</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP>93.97.45.26</wp:comment_author_IP>
<wp:comment_date>2010-01-07 10:42:22</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 15:42:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3764</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3887</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3948</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4149</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4534</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4581</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4592</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4794</wp:comment_id>
<wp:comment_author><![CDATA[Chris Owen]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://chiefos.myopenid.com/</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-01-07 09:42:00</wp:comment_date>
<wp:comment_date_gmt>2010-01-07 09:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great work, as usual!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Print dialog not showing up on Windows 64 Bit on a AMD CPU</title>
<link>http://www.tigraine.at/2010/01/22/print-dialog-not-showing-up-on-windows-64-bit-on-a-amd-cpu/</link>
<pubDate>Fri, 22 Jan 2010 00:35:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/01/22/print-dialog-not-showing-up-on-windows-64-bit-on-a-amd-cpu/</guid>
<description></description>
<content:encoded><![CDATA[<p>Imagine the following: Clint calls telling me “Hey Daniel, I just got a new computer with Windows 7 64 Bit installed, everything is working great so far. The Software you wrote a year ago works fine on it too, only problem: I can’t print”</p>  <p>My immediate reaction: “Reboot the system” (ok kinda lame, but I have spent too much time with problems that went away through a reboot to not suggest it).    <br />Well, but the reboot didn’t help here. Even after rebooting the print dialog was still not showing up. </p>  <p>Now, I know for a fact that the Software runs fine on Win7, I also know it runs fine on Win7 x64 (since I developed it running both x32 and x64 Win7 Beta builds back in the day). And since I am using the <a href="http://msdn.microsoft.com/en-us/library/system.windows.forms.printdialog.aspx" target="_blank">PrintDialog</a> class provided by the .NET framework I wasn’t really sure what&#160; could be the issue. I mean, hey that’s a framework class, those things are supposed to run cross platform and be CPU ignorant. But hey, why not simply ask Google the most stupid question I could think of: “<a href="http://www.google.at/search?q=windows+64+.net+print+dialog&amp;hl=de&amp;esrch=FT1" target="_blank">windows 64 .net print dialog</a>” .. </p>  <p>And the answer was right there on Microsoft’s MSDN page as a remark:</p>  <blockquote>   <p>Also, The <a href="http://msdn.microsoft.com/en-us/library/system.windows.forms.printdialog.aspx">PrintDialog</a> class may not work on AMD64 microprocessors unless you set the UseEXDialog property to true.</p> </blockquote>  <p>WTF? (Ok more words come to mind, but since I don’t want to get hatemail for my language I’ll leave it at that).</p>  <p>We are talking about a class in the .NET BCL that is supposed to work cross plattform (at least Windows), be completely CPU ignorant (fully managed), and yet I have to set UseExDialog to true to see this dialog on a AMD CPU? Are you kidding me Microsoft?</p>  <p>Well, the fix was quite easy (thankfully). I went into my PrintDialogFactory and changed one line of code, packed a new release and sent it to my client, yet my confidence in BCL classes has been severely shaken.</p>  <p>I really don’t know anything about the reasons for this odd (to say the least) behavior, but I can say that I am a bit sad to see it monkey-patched like this. Especially in a VM environment like the .NET framework I expect Microsoft to solve their system-specific problems under the hood where I can’t see them and don’t have to care about them.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>819</wp:post_id>
<wp:post_date>2010-01-22 02:35:08</wp:post_date>
<wp:post_date_gmt>2010-01-22 00:35:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>print-dialog-not-showing-up-on-windows-64-bit-on-a-amd-cpu</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3430</wp:comment_id>
<wp:comment_author><![CDATA[Dave Milne]]></wp:comment_author>
<wp:comment_author_email>dave_milne@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.192.19.4</wp:comment_author_IP>
<wp:comment_date>2010-03-14 11:22:22</wp:comment_date>
<wp:comment_date_gmt>2010-03-14 16:22:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It doesn&#39;t work on an Intel Quad Core 6600 processor either ... Thank goodness for your post !]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3436</wp:comment_id>
<wp:comment_author><![CDATA[Online Printing]]></wp:comment_author>
<wp:comment_author_email>leofsd@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.design2express.com/</wp:comment_author_url>
<wp:comment_author_IP>122.129.68.62</wp:comment_author_IP>
<wp:comment_date>2010-04-29 17:30:41</wp:comment_date>
<wp:comment_date_gmt>2010-04-29 22:30:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well i was looking for a solution to same problem too.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3447</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>91.4.82.19</wp:comment_author_IP>
<wp:comment_date>2010-05-21 15:15:49</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 20:15:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.<br><br>And thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3524</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5343</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3709</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3768</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3769</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3957</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4023</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4024</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4025</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4026</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4081</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5151</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4141</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4142</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4144</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4159</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4199</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5265</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4564</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4567</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4568</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4569</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4605</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5359</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4633</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4642</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4643</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4658</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4665</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4682</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4723</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4797</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4833</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4834</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4949</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4991</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4992</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5021</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5125</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5193</wp:comment_id>
<wp:comment_author><![CDATA[hans]]></wp:comment_author>
<wp:comment_author_email>jw4711@live.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-05-21 13:15:00</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 13:15:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It is not an AMD problem only. I got the same printing problem with INTEL i5 Core.nnAnd thx for your hint. It worked!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Bcklu2010.png</title>
<link>http://www.tigraine.at/?attachment_id=820</link>
<pubDate>Sun, 31 Jan 2010 10:07:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/01/Bcklu2010.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>820</wp:post_id>
<wp:post_date>2010-01-31 12:07:16</wp:post_date>
<wp:post_date_gmt>2010-01-31 10:07:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bcklu2010-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/01/Bcklu2010.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/01/Bcklu2010.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"144";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:21:"2010/01/Bcklu2010.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"Bcklu2010-150x144.png";s:5:"width";s:3:"150";s:6:"height";s:3:"144";}s:6:"medium";a:3:{s:4:"file";s:20:"Bcklu2010-300x67.png";s:5:"width";s:3:"300";s:6:"height";s:2:"67";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Presenting .less at the Barcamp Klagenfurt 2010</title>
<link>http://www.tigraine.at/2010/01/31/presenting-less-at-the-barcamp-klagenfurt-2010/</link>
<pubDate>Sun, 31 Jan 2010 10:07:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Barcamp]]></category>

		<category domain="category" nicename="barcamp"><![CDATA[Barcamp]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/01/31/presenting-less-at-the-barcamp-klagenfurt-2010/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.barcamp.at/BarCamp_Klagenfurt_2010" target="_blank"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Barcamp Klagenfurt 2010" border="0" alt="Barcamp Klagenfurt 2010" src="http://www.tigraine.at/wp-content/uploads/2010/01/Bcklu2010.png" width="640" height="144" /></a> </p>  <p>Time goes by way faster than I’d like it to and the <a href="http://www.barcamp.at/BarCamp_Klagenfurt_2010" target="_blank">Barcamp Klagenfurt 2010</a> is coming up really fast. (6-7. February)</p>  <p>While usually I was quite hesitant to choose a topic due to the diversity of the attending crowd (unfortunately not really enough real technical topics represented there), this year I think I can bring something very interesting to the camp: <a href="http://www.dotlesscss.com/" target="_blank">.less</a>.</p>  <p>The advantages are obvious, with a crowd of bloggers, artists and also technical people talking about something as ubiquitous as CSS, and ways to improve it, will surely resonate well, allowing me to be a bit technical without raising too many question marks above my audience’s heads like last year (where I talked about IoC and Windsor).</p>  <p>As for the talk itself, I plan on first going over general features of Less (since we are a port I can also point people over to the Ruby version if they are more comfortable with that than with .NET ), and then into a tiny bit of detail about how .less works internally.</p>  <p>Finally, I hope to see as many people as possible at Barcamp Klagenfurt! Thanks to the team for organizing this year after year!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>821</wp:post_id>
<wp:post_date>2010-01-31 12:07:17</wp:post_date>
<wp:post_date_gmt>2010-01-31 10:07:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>presenting-less-at-the-barcamp-klagenfurt-2010</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=822</link>
<pubDate>Wed, 03 Feb 2010 12:30:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/02/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>822</wp:post_id>
<wp:post_date>2010-02-03 14:30:05</wp:post_date>
<wp:post_date_gmt>2010-02-03 12:30:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-21</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/02/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/02/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"585";s:6:"height";s:3:"223";s:14:"hwstring_small";s:23:"height='48' width='128'";s:4:"file";s:17:"2010/02/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x114.png";s:5:"width";s:3:"300";s:6:"height";s:3:"114";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=823</link>
<pubDate>Wed, 03 Feb 2010 12:30:05 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>823</wp:post_id>
<wp:post_date>2010-02-03 14:30:05</wp:post_date>
<wp:post_date_gmt>2010-02-03 12:30:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-17</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/02/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"589";s:6:"height";s:3:"227";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:23:"2010/02/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x115.png";s:5:"width";s:3:"300";s:6:"height";s:3:"115";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=824</link>
<pubDate>Wed, 03 Feb 2010 12:30:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/02/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>824</wp:post_id>
<wp:post_date>2010-02-03 14:30:06</wp:post_date>
<wp:post_date_gmt>2010-02-03 12:30:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-22</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/02/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/02/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"386";s:6:"height";s:2:"35";s:14:"hwstring_small";s:23:"height='11' width='128'";s:4:"file";s:18:"2010/02/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image1-150x35.png";s:5:"width";s:3:"150";s:6:"height";s:2:"35";}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x27.png";s:5:"width";s:3:"300";s:6:"height";s:2:"27";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=825</link>
<pubDate>Wed, 03 Feb 2010 12:30:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>825</wp:post_id>
<wp:post_date>2010-02-03 14:30:06</wp:post_date>
<wp:post_date_gmt>2010-02-03 12:30:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-18</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/02/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"390";s:6:"height";s:2:"39";s:14:"hwstring_small";s:23:"height='12' width='128'";s:4:"file";s:24:"2010/02/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb1-150x39.png";s:5:"width";s:3:"150";s:6:"height";s:2:"39";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb1-300x30.png";s:5:"width";s:3:"300";s:6:"height";s:2:"30";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Disable AutCrlf in MsysGit!</title>
<link>http://www.tigraine.at/2010/02/03/disable-autcrlf-in-msysgit/</link>
<pubDate>Wed, 03 Feb 2010 12:30:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/02/03/disable-autcrlf-in-msysgit/</guid>
<description></description>
<content:encoded><![CDATA[<p>Ok, today I got this really cool pull request from <a href="http://weblogs.asp.net/jgalloway/" target="_blank">Jon Galloway</a> for .less. He did some improvements to the T4 Template for .less so that it will run the template on every build if you want that, or that Visual Studio opens up .less.css files. Cool stuff, and thanks a lot Jon! Of course I quickly looked through the changesets and then went ahead and committed it, but I noticed one novice mistake many people run into with MsysGit on Windows.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/02/image.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb.png" width="589" height="227" /></a> </p>  <p>I am pretty sure Jon only changed a few lines of code, yet the changeset logs every file in the document as changed, thus making it pretty unreadable. This happened to me a lot when I started out with GIT, and finding the solution to this wasn’t easy either. So here is how to fix your MsysGit.</p>  <p>This is caused by a little setting called <tt>core.AutoCrlf </tt>that is set in <a href="http://code.google.com/p/msysgit/issues/detail?id=21" target="_blank">MsysGit by default to true</a>. MsysGit will then go ahead and localize the line-ending depending on what machine you are running on. This happens on checkout, so even with abolutely zero changes to the repository you’ll see a lot of local changes where there haven’t been any.</p>  <p>Needless to say how stupid this setting is, it only generates a ton of useless insertions and deletions while sticking to the pipe dream that everyone on the team will use the same tools to generate consistent line feeds (I’ve even had issues with only Windows machines and this setting). </p>  <p>Now the solution to this is rather simple:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/02/image1.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/02/image_thumb1.png" width="390" height="39" /></a> </p>  <p>By running “<tt>git config –global core.autocrlf false</tt>” you disable this and the text files will not get changed upon checkout. This now means that Visual Studio will maybe ask you to fix inconsistent line endings when opening a file, but it is still better than having your source control screw you over upon checkout.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>826</wp:post_id>
<wp:post_date>2010-02-03 14:30:07</wp:post_date>
<wp:post_date_gmt>2010-02-03 12:30:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>disable-autcrlf-in-msysgit</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3481</wp:comment_id>
<wp:comment_author><![CDATA[cheap uggs]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.bootoutletstore.co.uk</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-09 09:23:14</wp:comment_date>
<wp:comment_date_gmt>2010-07-09 14:23:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/ajf-2.html" rel="nofollow">ajf 2</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>dotless Presentation slides from Barcamp Klagenfurt</title>
<link>http://www.tigraine.at/2010/02/06/dotless-presentation-slides-from-barcamp-klagenfurt/</link>
<pubDate>Sat, 06 Feb 2010 13:01:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Barcamp]]></category>

		<category domain="category" nicename="barcamp"><![CDATA[Barcamp]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/02/06/dotless-presentation-slides-from-barcamp-klagenfurt/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just finished my presentation about <a href="http://www.dotlesscss.com">dotless</a> at <a href="http://www.barcamp.at">Barcamp Klagenfurt</a> and promised to upload my presentation slides to Slideshare. </p>  <p></p>  <div style="text-align: left; width: 425px" id="__ss_3087035"><a style="margin: 12px 0px 3px; display: block; font: 14px helvetica,arial,sans-serif; text-decoration: underline" title=".Less - CSS done right" href="http://www.slideshare.net/Tigraine/less-css-done-right">.Less - CSS done right</a><object style="margin:0px" width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=barcamppresentation-100206062007-phpapp01&amp;stripped_title=less-css-done-right" /><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=barcamppresentation-100206062007-phpapp01&amp;stripped_title=less-css-done-right" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object>    <div style="font-family: tahoma,arial; height: 26px; font-size: 11px; padding-top: 2px">View more <a style="text-decoration: underline" href="http://www.slideshare.net/">presentations</a> from <a style="text-decoration: underline" href="http://www.slideshare.net/Tigraine">Daniel Hölbling</a>.</div> </div>  <p></p>  <p>The feedback for the talk was quite good. Turned out better than I hoped. I just hope that the slides do make some sense without me talking alongside. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>827</wp:post_id>
<wp:post_date>2010-02-06 15:01:36</wp:post_date>
<wp:post_date_gmt>2010-02-06 13:01:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dotless-presentation-slides-from-barcamp-klagenfurt</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3417</wp:comment_id>
<wp:comment_author><![CDATA[Askhari]]></wp:comment_author>
<wp:comment_author_email>cid.askhari@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.nephilistic.com</wp:comment_author_url>
<wp:comment_author_IP>80.109.230.94</wp:comment_author_IP>
<wp:comment_date>2010-02-06 14:52:02</wp:comment_date>
<wp:comment_date_gmt>2010-02-06 19:52:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hope it&#39;s going to be a success. Sadly I couldn&#39;t make it to this barcamp, I hope to be there next time.<br><br>Yet there&#39;s a thing I wanted to point out: Your CSS Zen Garden example does violate DRY, but it&#39;s not well written either. Those declarations can be done otherwise, like assigning the block of code to h1 itself, and then declaring the background image for the specific ID.<br><br>This way, you sometimes have to put multiple, successive declarations for one element, but I seldomly find myself writing a block of attributes twice. The power I see in .LESS here is avoiding to write selectors like: #ID &gt; #otherID &gt;.class.class &gt; e<br>Cause you mostly can DRY when using plain CSS, except for the selectors.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3418</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>143.205.215.24</wp:comment_author_IP>
<wp:comment_date>2010-02-06 15:36:29</wp:comment_date>
<wp:comment_date_gmt>2010-02-06 20:36:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Actually this was a made up sample since I did not find any sufficiently bad enough code in CSS Zen garden. <br>The headline may have been misleading, but I meant it as the "CSS Zen garden approach" not that actual code from CSS Zen garden was harmed.<br><br>The main point of the sample was to illustrate a simple usage szenario that is also understandable to non-css gods. <br>Also, the main point of the sample was that there are ample szenarios where DRY is violated when using straight CSS. (<a href="http://www.kaernten.at" rel="nofollow">www.kaernten.at</a> comes to mind here).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3419</wp:comment_id>
<wp:comment_author><![CDATA[Askhari]]></wp:comment_author>
<wp:comment_author_email>cid.askhari@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.nephilistic.com</wp:comment_author_url>
<wp:comment_author_IP>80.109.230.94</wp:comment_author_IP>
<wp:comment_date>2010-02-06 18:01:35</wp:comment_date>
<wp:comment_date_gmt>2010-02-06 23:01:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well on this site, the main concern is the massive use of classes in the HTML markup. There are better ways to solve this problem, but as many people are working on the markup and stuff has to be added continously, it would be a rather tedious task to redo the CSS in a better way - well, you know the story. .LESS would have been pretty handy here]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3421</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine » Blog Archive » dotless Presentation slides from Barcamp &#8230;]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://overheadblog.com/2010/02/tigraine-%c2%bb-blog-archive-%c2%bb-dotless-presentation-slides-from-barcamp/</wp:comment_author_url>
<wp:comment_author_IP>174.133.217.162</wp:comment_author_IP>
<wp:comment_date>2010-02-10 07:10:15</wp:comment_date>
<wp:comment_date_gmt>2010-02-10 05:10:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Continued here: Tigraine » Blog Archive » dotless Presentation slides from Barcamp &#8230; [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3483</wp:comment_id>
<wp:comment_author><![CDATA[ugg sale]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.saleboots.co.uk</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-09 09:22:58</wp:comment_date>
<wp:comment_date_gmt>2010-07-09 14:22:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.bootoutletstore.co.uk" rel="nofollow">discount ugg boots</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>New stuff in .less</title>
<link>http://www.tigraine.at/2010/02/22/new-stuff-in-less/</link>
<pubDate>Mon, 22 Feb 2010 13:10:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=828</guid>
<description></description>
<content:encoded><![CDATA[Do you remember that little project I am involved in? That <a href="http://www.dotlesscss.com" target="_blank">.less thingy</a> I always forget to write about? Well, it’s still around and we are going very strong. We are seeing a decent amount of activity on our mailing list and people throw code at me at various occasions for fixing different problems within the the project.

One of those persons is <a href="http://github.com/jamesfoster" target="_blank">James Foster</a>, a really nice guy from the UK with some mad programming skills who set out to make .less awesome. Well, he sort of did already, by contributing some major code changes to the .less parser that enabled him to port over some SASS functions to .less. Sadly he does not blog himself, so the honor is mine to report to the world what he did.

<strong><span style="text-decoration: underline;">Color functions</span></strong>

Before going into details, the main idea is that you are now able to modify any component of a color separately. So far .less has only supported arithmetic operations on colors (like #abc000+ #000def =&gt; #abcdef) so if you e.g. want to darken a color while adding 10 points of green to it you where out of luck, making the feature not really all that useful. Well, thanks to James now we can!

<strong>Creating colors</strong>

.less understands that #FFFF is supposed to be treated as a color, so if you start working off web colors you can just use the hex notation and ignore the following functions. In case you are more the designer type settled in the RGB world and want to have lightness and alpha around, you will need functions to create the colors. And while at it James also added color literals so .less detects a @color: blue; instruction just like it would a @color:#0000FF one. Anyway, if you have your colors RGB or HSL you need to use the following functions to create them:
<blockquote>rgb(red, green, blue)
rgba(red, green, blue, alpha)
hsl(hue, saturation, lightness)
hsla(hue, saturation, lightness, alpha)</blockquote>
You might guess from the parameter names how they work. But to be thorough:
<div id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ae4a85ee-51c8-47ce-a04a-87f1a0d8e68d" class="wlWriterEditableSmartContent" style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px">
<pre class="css">@mainColor: rgb(0, 0, 255); //Blue</pre>
</div>
<strong>Modifying colors</strong>

Now, once you hold on to a variable that contains a color you can do some pretty exciting stuff with the following color manipulation functions:
<blockquote>red(color, value)
green(color, value)
blue(color, value)
hue(color, value)
saturation(color, value)
lightness(color, value)
alpha(color, value)

the value can be positive or negative, for instance, to darken a color by 20% you can use "lightness(color, -20%)".</blockquote>
You pass in a color and then the amount you want to change it. If you omit the change value part the method will return the appropriate component of the given color (meaning: red(@color) will return the red portion of that color, while red(@color, 10%) will increase the amount of red by 10%).

And while at it, James also added some convenience functions for good measure to make your day easier:
<blockquote>greyscale(color)
this is equivalent to saturation(color, -100%)

complement(color)
this is equivalent to hue(color, 180)

mix(color1, color2, weight)
mixes 2 colors together. The weight argument is optional and specifies the percentage of the first color to use compared to the second color. it also takes into account transparency - if a color is more transparent it has less effect on the resulting color.</blockquote>
You can get all of that functionality through the latest .less build from our website <a href="http://www.dotlesscss.com">http://www.dotlesscss.com</a> or just grab the code from GitHub. If you have any questions or suggestions feel free to participate through <a href="http://groups.google.com/group/dotless?pli=1" target="_blank">our mailing list</a>.

And lastly, let’s give credit where credit is due: Thanks to James for the great work he put into .less. James himself stated that he based most of his work on stuff he saw on the Sass project, you can read about their color functions implementation here: <a href="http://nex-3.com/posts/89-powerful-color-manipulation-with-sass" target="_blank">Powerful Color Manipulation with Sass</a>. The initial code for Sass was created by Chris Eppstein for the “compass-colors” project which has now been merged into the main Sass codebase. You can also see his pretty impressive demo here: <a title="http://chriseppstein.github.com/compass-colors/" href="http://chriseppstein.github.com/compass-colors/">http://chriseppstein.github.com/compass-colors/</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>828</wp:post_id>
<wp:post_date>2010-02-22 15:10:46</wp:post_date>
<wp:post_date_gmt>2010-02-22 13:10:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-stuff-in-less</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1267434590</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>github.png</title>
<link>http://www.tigraine.at/?attachment_id=838</link>
<pubDate>Tue, 02 Mar 2010 15:43:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/03/github.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>838</wp:post_id>
<wp:post_date>2010-03-02 17:43:17</wp:post_date>
<wp:post_date_gmt>2010-03-02 15:43:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>github-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/03/github.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/03/github.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:3:"100";s:6:"height";s:2:"45";s:14:"hwstring_small";s:23:"height='45' width='100'";s:4:"file";s:18:"2010/03/github.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=841</link>
<pubDate>Wed, 03 Mar 2010 13:03:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/03/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>841</wp:post_id>
<wp:post_date>2010-03-03 15:03:36</wp:post_date>
<wp:post_date_gmt>2010-03-03 13:03:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-23</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/03/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/03/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"473";s:6:"height";s:3:"169";s:14:"hwstring_small";s:23:"height='45' width='128'";s:4:"file";s:17:"2010/03/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x107.png";s:5:"width";s:3:"300";s:6:"height";s:3:"107";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>.less Compiler now supports &#8211;watch</title>
<link>http://www.tigraine.at/2010/03/03/less-compiler-now-supports-watch/</link>
<pubDate>Wed, 03 Mar 2010 13:03:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/03/03/less-compiler-now-supports-watch/</guid>
<description></description>
<content:encoded><![CDATA[<p>It’s been on our feature list for some time and it’s been in the code for some time too. But after fixing a final bug today I guess we can tell the world about it. </p>  <p>The main idea behind –watch is to free you of the burden of having to configure anything but lets you just run the console-compiler once and it keeps refreshing the resulting .css files whenever a change occurs to the .less input file. </p>  <p>How to use? Well, simple. First grab the latest release from our website <a href="http://www.dotlesscss.com">http://www.dotlesscss.com</a> and then go to your favorite commandline and start the compiler with the –watch parameter:</p>  <blockquote>   <p><tt>dotless.Compiler.exe &lt;filename&gt; –watch</tt></p> </blockquote>  <p>You will then get a nice console output telling you what is going on (and informing you of errors if any happen during compilation)</p>  <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/03/image.png" width="473" height="169" /></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>842</wp:post_id>
<wp:post_date>2010-03-03 15:03:37</wp:post_date>
<wp:post_date_gmt>2010-03-03 13:03:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>less-compiler-now-supports-watch</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>.less repository has moved to it&#8217;s own GitHub account</title>
<link>http://www.tigraine.at/2010/03/04/less-repository-has-moved-to-its-own-github-account/</link>
<pubDate>Thu, 04 Mar 2010 08:24:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/03/02/less-repository-has-moved-to-its-own-github-account/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.github.com"><img style="border-right-width: 0px; display: inline; margin-bottom: 10px; float: left; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 10px" title="github" border="0" alt="github" src="http://www.tigraine.at/wp-content/uploads/2010/03/github.png" width="100" height="45" /></a> Until now we stored the main source of the .less project in Chris Owen’s GitHub account. We now decided to create a dedicated GitHub user to host the project since Chris is no longer actively contributing and may or may not want to add changes that are not meant to be immediately committed into the mainline. </p>  <p>The new repository is at: <a href="http://github.com/dotless/dotless">http://github.com/dotless/dotless</a></p>  <p>We are still updating all references to the old project (website etc) but the move should be done fairly soon. If you are watching Chris’ repository make sure to also watch the new one as Chris’ repository may start lagging behind the mainline (depends on how often Chris will update his fork).</p>  <p>Oh, and btw: Thanks to the GitHub guys for providing this awesome service. Git + GitHub has simply revolutionized the way I write code and collaborate with people.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>839</wp:post_id>
<wp:post_date>2010-03-04 10:24:17</wp:post_date>
<wp:post_date_gmt>2010-03-04 08:24:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>less-repository-has-moved-to-its-own-github-account</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1267694757</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3431</wp:comment_id>
<wp:comment_author><![CDATA[ChrisH]]></wp:comment_author>
<wp:comment_author_email>chrishamant@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>76.243.40.225</wp:comment_author_IP>
<wp:comment_date>2010-03-25 22:11:31</wp:comment_date>
<wp:comment_date_gmt>2010-03-26 03:11:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Seems the AssemblyInfo files are missing from the project files/properties folder on the github sources]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3432</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>80.45.65.186</wp:comment_author_IP>
<wp:comment_date>2010-03-30 00:32:09</wp:comment_date>
<wp:comment_date_gmt>2010-03-30 05:32:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sorry for the late reply, but I&#39;m on vacation right now so I didn&#39;t get to it earlier.<br>These files are intentionally not in the repository as they are generated by our build script at compile time. You need powershell and git installed and when running the psake.ps1 script the AssemblyInfo.cs files will be created.<br>If you don&#39;t want to run the script you can simply remove those files from the VS project and the source should compile just fine. <br>Of course you can just grab the latest build from our buildserver that does the compiling work for you. It can be found through the big download button on our website: <a href="http://www.dotlesscss.com" rel="nofollow">www.dotlesscss.com</a><br><br>cheers, Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3745</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-03-29 22:32:00</wp:comment_date>
<wp:comment_date_gmt>2010-03-29 22:32:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sorry for the late reply, but I'm on vacation right now so I didn't get to it earlier.nThese files are intentionally not in the repository as they are generated by our build script at compile time. You need powershell and git installed and when running the psake.ps1 script the AssemblyInfo.cs files will be created.nIf you don't want to run the script you can simply remove those files from the VS project and the source should compile just fine. nOf course you can just grab the latest build from our buildserver that does the compiling work for you. It can be found through the big download button on our website: www.dotlesscss.comnncheers, Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4686</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-03-29 22:32:00</wp:comment_date>
<wp:comment_date_gmt>2010-03-29 22:32:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sorry for the late reply, but I'm on vacation right now so I didn't get to it earlier.nThese files are intentionally not in the repository as they are generated by our build script at compile time. You need powershell and git installed and when running the psake.ps1 script the AssemblyInfo.cs files will be created.nIf you don't want to run the script you can simply remove those files from the VS project and the source should compile just fine. nOf course you can just grab the latest build from our buildserver that does the compiling work for you. It can be found through the big download button on our website: www.dotlesscss.comnncheers, Daniel]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=845</link>
<pubDate>Wed, 21 Apr 2010 22:27:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>845</wp:post_id>
<wp:post_date>2010-04-22 00:27:14</wp:post_date>
<wp:post_date_gmt>2010-04-21 22:27:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-24</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"439";s:6:"height";s:3:"258";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:17:"2010/04/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x176.png";s:5:"width";s:3:"300";s:6:"height";s:3:"176";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=846</link>
<pubDate>Wed, 21 Apr 2010 22:27:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>846</wp:post_id>
<wp:post_date>2010-04-22 00:27:15</wp:post_date>
<wp:post_date_gmt>2010-04-21 22:27:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-19</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"443";s:6:"height";s:3:"262";s:14:"hwstring_small";s:23:"height='75' width='127'";s:4:"file";s:23:"2010/04/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x177.png";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The dark side strikes again!</title>
<link>http://www.tigraine.at/2010/04/22/the-dark-side-strikes-again/</link>
<pubDate>Wed, 21 Apr 2010 22:27:16 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/04/22/the-dark-side-strikes-again/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2010/04/image.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb.png" width="443" height="262" /></a></p>  <p>Oh, Microsoft took it’s sweet time with Visual Studio 2010 and C#4 but now that it’s finally here I had to find out that the <a href="http://www.tigraine.at/2008/10/23/come-to-the-dark-side-we-have-cookies/">Vibrant Ink theme I’ve been using</a> for years now needs an update to match new stuff in the language.</p>  <p>Thank god I did a quick search to see if someone already did that, and I stumbled on a pretty cool little website: <a href="http://studiostyles.info/">studiostyles.info</a>     <br />A website dedicated to Visual Studio Themes, apparently written in ASP.NET MVC it allows users to create styles with a pretty simple editor and then share it with the world. They also added voting and some community stuff to it, but even if it was only a user-generated theme gallery for VS I’d love it. Cool stuff.</p>  <p>Anyway, Luke Sampson (the creator of <a href="http://studiostyles.info/">studiostyles.info</a>) updated <a href="http://blog.wekeroad.com/2007/10/17/textmate-theme-for-visual-studio-take-2/">Rob’s Vibrant Ink theme</a> for VS2010 and shared it through studiostyles. <strong>Thanks a lot</strong>.</p>  <p>You can find it here: <a href="http://studiostyles.info/schemes/wekeroad-ink">http://studiostyles.info/schemes/wekeroad-ink</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>847</wp:post_id>
<wp:post_date>2010-04-22 00:27:16</wp:post_date>
<wp:post_date_gmt>2010-04-21 22:27:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-dark-side-strikes-again</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=849</link>
<pubDate>Fri, 23 Apr 2010 10:20:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>849</wp:post_id>
<wp:post_date>2010-04-23 12:20:09</wp:post_date>
<wp:post_date_gmt>2010-04-23 10:20:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-25</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"342";s:6:"height";s:3:"192";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:18:"2010/04/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image1-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=850</link>
<pubDate>Fri, 23 Apr 2010 10:20:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>850</wp:post_id>
<wp:post_date>2010-04-23 12:20:09</wp:post_date>
<wp:post_date_gmt>2010-04-23 10:20:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-20</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"346";s:6:"height";s:3:"196";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:24:"2010/04/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb1-300x169.png";s:5:"width";s:3:"300";s:6:"height";s:3:"169";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=851</link>
<pubDate>Fri, 23 Apr 2010 10:20:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>851</wp:post_id>
<wp:post_date>2010-04-23 12:20:10</wp:post_date>
<wp:post_date_gmt>2010-04-23 10:20:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-26</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"513";s:6:"height";s:3:"226";s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:18:"2010/04/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image2-300x132.png";s:5:"width";s:3:"300";s:6:"height";s:3:"132";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Keep away from regions!</title>
<link>http://www.tigraine.at/2010/04/23/keep-away-from-regions/</link>
<pubDate>Fri, 23 Apr 2010 10:20:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/04/23/keep-away-from-regions/</guid>
<description></description>
<content:encoded><![CDATA[<p>Well, I’m currently digging a bit deeper into WPF and the thousand little things you can do with it. Naturally I’ve been looking through my fair share of demo apps and tutorials too. And that’s where I stumbled upon this little gem of information hiding:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/04/image1.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb1.png" width="346" height="196" /></a> </p>  <p>Exactly, that is what you get to see of a 200 LoC file when opening it up in Visual Studio. And the author did that for every single file, so whenever I opened a file I had to hit “Toggle all outlining” (Shortcut by default is CRTL+M, L).</p>  <p>Now, I’m all for clean code and tidy classes. But there are one thing fundamentally flawed with regions:</p>  <p><strong>Once you need regions – Your code is simply too long</strong>.     <br />My most successful (and biggest) project to date had no class that exceeded 100 lines of code, and you simply can’t imagine what a joy it was to work with that codebase. You simply can’t put enough logic into 100 LoC to make it hard to test, just by limiting the length of a class&#160; you also lower the possible complexity of test and maintenance by a huge amount. Nice side effect: 100 LoC almost fit onto one screen so you understand the code without having to scroll through 3 pages of code to look up the name of a field.</p>  <p>Fix the root problem, not hide it! </p>  <p>What again reminds me of Jeff Atwood and he is totally right:</p>  <p><a href="http://twitter.com/codinghorror/statuses/837284151"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/04/image2.png" width="513" height="226" /></a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>852</wp:post_id>
<wp:post_date>2010-04-23 12:20:11</wp:post_date>
<wp:post_date_gmt>2010-04-23 10:20:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>keep-away-from-regions</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3495</wp:comment_id>
<wp:comment_author><![CDATA[www.discountbootsstores.co.uk]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:42</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I&#39;ve been looking for a similar to this post. Not only extensively but also detailly. We can learn a lot from the post. <a href="http://www.moncler-down-jackets.com"  rel="nofollow">moncler jackets</a> I recommend to you , <a href="http://www.bootonsale.co.uk"  rel="nofollow">ugg boots sale</a> you can come communication in here. Let us grow up together.On the other hand ,I know some websites content is very well.you can go and see.Such as<a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=853</link>
<pubDate>Thu, 29 Apr 2010 17:13:29 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>853</wp:post_id>
<wp:post_date>2010-04-29 19:13:29</wp:post_date>
<wp:post_date_gmt>2010-04-29 17:13:29</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-27</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"232";s:6:"height";s:3:"189";s:14:"hwstring_small";s:23:"height='96' width='117'";s:4:"file";s:18:"2010/04/image3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=854</link>
<pubDate>Thu, 29 Apr 2010 17:13:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>854</wp:post_id>
<wp:post_date>2010-04-29 19:13:30</wp:post_date>
<wp:post_date_gmt>2010-04-29 17:13:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-21</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/image_thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"236";s:6:"height";s:3:"193";s:14:"hwstring_small";s:23:"height='96' width='117'";s:4:"file";s:24:"2010/04/image_thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Useful Resharper Live Template for WPF development</title>
<link>http://www.tigraine.at/2010/04/29/useful-resharper-live-template-for-wpf-development/</link>
<pubDate>Thu, 29 Apr 2010 17:13:30 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[WPF]]></category>

		<category domain="category" nicename="wpf"><![CDATA[WPF]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/04/29/useful-resharper-live-template-for-wpf-development/</guid>
<description></description>
<content:encoded><![CDATA[<p>While doing some work in WPF for a customer project I found myself writing far too often code like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b615157c-4b99-4860-ba0b-66974eecb1b5" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
private bool isSelected;

public bool IsSelected
{
&#160;&#160;&#160;&#160;get { return isSelected; }
&#160;&#160;&#160;&#160;set
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;isSelected = value;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OnPropertyChanged("IsSelected");
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>Auto-properties simply don’t work with INotifyPropertyChanged so you have to do all the grunt work over again .. Thank god there is Resharper!</p>

<p>It’s said lazyness is a virtue on a programmer, so I made this little Live Template that will create all that code with you only having to fill in type and name of your property:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2010/04/image3.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/04/image_thumb2.png" width="236" height="193" /></a> </p>

<p>Download it here: <a href="http://tigraine.at/wpfprop.xml">wpfprop.xml</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>855</wp:post_id>
<wp:post_date>2010-04-29 19:13:30</wp:post_date>
<wp:post_date_gmt>2010-04-29 17:13:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>useful-resharper-live-template-for-wpf-development</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3439</wp:comment_id>
<wp:comment_author><![CDATA[ChrisJOwen]]></wp:comment_author>
<wp:comment_author_email>chris.j.owen@hotmail.co.uk</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>82.152.201.109</wp:comment_author_IP>
<wp:comment_date>2010-05-09 15:14:42</wp:comment_date>
<wp:comment_date_gmt>2010-05-09 20:14:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Alternatively you could use an AOP framework like PostSharp, see here: <a href="http://doc.sharpcrafters.com/postsharp/2.0/##PostSharp.chm/UserGuide/Overview.html" rel="nofollow">http://doc.sharpcrafters.com/postsharp/2.0/##Po...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3440</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.221</wp:comment_author_IP>
<wp:comment_date>2010-05-09 17:34:12</wp:comment_date>
<wp:comment_date_gmt>2010-05-09 22:34:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the tip.. I&#39;ll look into that :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3487</wp:comment_id>
<wp:comment_author><![CDATA[nike air force shoes]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-12 04:46:57</wp:comment_date>
<wp:comment_date_gmt>2010-07-12 09:46:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The post of content is very interesting and exciting. I learned a lot from here.The content from simple to complex, <a href="http://www.air-jordan-8.com"  rel="nofollow">air jordan 8</a>  so all of you can come in .<a href="http://www.discountbootsstores.co.uk"  rel="nofollow">ugg boots for sale</a> No matter you want to see what can be found.By the way ,there are some websites is also very wonderful,you can go and see.such as<a href="http://www.nike-air-force-one.com"  rel="nofollow">air force 1 shoes</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Never assume! Stack iterators in Java</title>
<link>http://www.tigraine.at/2010/05/12/never-assume-stack-iterators-in-java/</link>
<pubDate>Wed, 12 May 2010 08:43:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Java]]></category>

		<category domain="category" nicename="java"><![CDATA[Java]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/05/12/never-assume-stack-iterators-in-java/</guid>
<description></description>
<content:encoded><![CDATA[<p>I spent almost 2 hours of debugging Java code yesterday due to one assumption that proved fatally wrong: I assumed a Stack, by definition a <a href="http://en.wikipedia.org/wiki/LIFO">LIFO</a> data structure would iterate over it’s elements from the top of the stack to the bottom. </p>  <p>So inserting 1, 2, 3 the resulting order when iterating through the stack should be 3, 2, 1.</p>  <p>Well, at least that’s what .NET does. Java is different. Look at the following Java code:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:ce41b27c-d44a-4660-a061-e7dbd1266df2" class="wlWriterEditableSmartContent"><pre name="code" class="java">
Stack&lt;Integer&gt; stack = new Stack&lt;Integer&gt;();
stack.push(1);
stack.push(2);
stack.push(3);

for(Integer i : stack) {
	System.out.println(i);
}
</pre></div>

<p>And this C#:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:e36e607a-e4c1-4b13-adeb-c0b33588b3ab" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var stack = new Stack&lt;int&gt;();
stack.Push(1);
stack.Push(2);
stack.Push(3);

foreach (var i in stack)
{
&#160;&#160;&#160;&#160;Console.WriteLine(i);
}
</pre></div>

<p>Well, they look exactly the same, but Java will return 1,2,3 while C# will honor the Stack’s special semantics and return 3,2,1. Great stuff isn’t it?</p>

<p>The workaround was quite simple, yet it had cost me 2 hours of my life trying to hunt a bug in my code, never thinking the bug could lie in a simple foreach iteration through the stack.. </p>

<p>Lesson learned: Never assume you know anything about data structure semantics unless you have checked that your assumptions are indeed true. Implementations differ and sometimes this will bite you.</p>

<p>Oh and did I mention that the way Java does it is simply wrong?</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>856</wp:post_id>
<wp:post_date>2010-05-12 10:43:13</wp:post_date>
<wp:post_date_gmt>2010-05-12 08:43:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>never-assume-stack-iterators-in-java</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3502</wp:comment_id>
<wp:comment_author><![CDATA[Ladlestein]]></wp:comment_author>
<wp:comment_author_email>ladlestein@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>204.14.239.168</wp:comment_author_IP>
<wp:comment_date>2010-08-13 22:33:21</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 03:33:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[See <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4475301" rel="nofollow">http://bugs.sun.com/bugdatabase/view_bug.do?bug...</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3858</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3859</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3860</wp:comment_id>
<wp:comment_author><![CDATA[Ladlestein]]></wp:comment_author>
<wp:comment_author_email>ladlestein@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-13 20:33:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-13 20:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4475301]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3861</wp:comment_id>
<wp:comment_author><![CDATA[Ladlestein]]></wp:comment_author>
<wp:comment_author_email>ladlestein@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-13 20:33:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-13 20:33:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4475301]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3900</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4086</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4187</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4214</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4546</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4624</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4898</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4943</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5048</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5053</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5065</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-14 10:25:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-14 10:25:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the pointer.. Unfortunate design decisions that will haunt developers for the next 20 years :(]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=857</link>
<pubDate>Sun, 16 May 2010 11:50:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>857</wp:post_id>
<wp:post_date>2010-05-16 13:50:12</wp:post_date>
<wp:post_date_gmt>2010-05-16 11:50:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-28</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"519";s:6:"height";s:2:"88";s:14:"hwstring_small";s:23:"height='21' width='128'";s:4:"file";s:17:"2010/05/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"image-150x88.png";s:5:"width";s:3:"150";s:6:"height";s:2:"88";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x50.png";s:5:"width";s:3:"300";s:6:"height";s:2:"50";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=858</link>
<pubDate>Sun, 16 May 2010 11:50:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>858</wp:post_id>
<wp:post_date>2010-05-16 13:50:12</wp:post_date>
<wp:post_date_gmt>2010-05-16 11:50:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-22</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"523";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height='22' width='128'";s:4:"file";s:23:"2010/05/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"image_thumb-150x92.png";s:5:"width";s:3:"150";s:6:"height";s:2:"92";}s:6:"medium";a:3:{s:4:"file";s:22:"image_thumb-300x52.png";s:5:"width";s:3:"300";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Displaying git branch in your powershell prompt</title>
<link>http://www.tigraine.at/2010/05/16/displaying-git-branch-in-your-powershell-prompt/</link>
<pubDate>Sun, 16 May 2010 11:50:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/05/16/displaying-git-branch-in-your-powershell-prompt/</guid>
<description></description>
<content:encoded><![CDATA[<p>When I started out with git I didn’t start using the commandline right away. I fiddled around with TortoiseGit and GitGui quite a bit before I found out that it’s just so much faster to do all those things from the commandline. As we all know, the windows commandline is not the most powerful thing on the planet, but I also loathe the unix commandline that comes installed with git (gitbash). Obviously, the only alternative is Powershell so I went with that and am very happy with it. </p>  <p>One thing though: I envied Linux users who could extend their bash prompt to display git specific information directly on the shell. Well, after a bit of digging and through some Stackoverflow articles, I managed to find this:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/05/image.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/05/image_thumb.png" width="523" height="92" /></a> </p>  <p>Powershell is quite extensible, and by placing a file called <em>Microsoft.PowerSehll_profile.ps1</em> in your <em>Documents\WindowsPowerShell</em> folder you can define a function called prompt that allows you to modify your prompt text. </p>  <p>I’ve been using this now for quite some time, so I can’t recall where I found the script before I modified it, but here it is anyway (credit goes to whoever created it in the first place): <a href="http://www.tigraine.at/Microsoft.PowerShell_profile.ps1">Microsoft.PowerShell_profile.ps1</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>859</wp:post_id>
<wp:post_date>2010-05-16 13:50:13</wp:post_date>
<wp:post_date_gmt>2010-05-16 11:50:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>displaying-git-branch-in-your-powershell-prompt</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3494</wp:comment_id>
<wp:comment_author><![CDATA[nike air force shoes]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:28</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thread! I&#39;m not agree you standpoint,but toally approve your view!Anybody has his own dream,someone makes them reality , <a href="http://www.air-jordan-9.com"  rel="nofollow">air jordan 9</a> another leaves it just dreams.So it lie on how hard you  distribute,how long you persist! This post make a way to lead to success,<a href="http://www.discountbootsstores.co.uk"  rel="nofollow">ugg boots for sale</a>any only insist on studying  new knowledge and digest them for your own that can make you gradually growing up , <a href="http://www.nike-air-force-one.com/Nike-Air-Force-1-low.html"  rel="nofollow">Nike Air Force 1 Low</a>thank you for this outline,it will be very useful for those who are in the lost! <a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Barcamp_Vienna_2010.jpg</title>
<link>http://www.tigraine.at/?attachment_id=860</link>
<pubDate>Sat, 22 May 2010 07:34:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>860</wp:post_id>
<wp:post_date>2010-05-22 09:34:44</wp:post_date>
<wp:post_date_gmt>2010-05-22 07:34:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>barcamp_vienna_2010-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/Barcamp_Vienna_2010.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"100";s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:31:"2010/05/Barcamp_Vienna_2010.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"Barcamp_Vienna_2010-150x100.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"100";}s:6:"medium";a:3:{s:4:"file";s:30:"Barcamp_Vienna_2010-300x75.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"75";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Barcamp_Vienna_2010_thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=861</link>
<pubDate>Sat, 22 May 2010 07:34:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010_thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>861</wp:post_id>
<wp:post_date>2010-05-22 09:34:44</wp:post_date>
<wp:post_date_gmt>2010-05-22 07:34:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>barcamp_vienna_2010_thumb-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010_thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/Barcamp_Vienna_2010_thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"100";s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:37:"2010/05/Barcamp_Vienna_2010_thumb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"Barcamp_Vienna_2010_thumb-150x100.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"100";}s:6:"medium";a:3:{s:4:"file";s:36:"Barcamp_Vienna_2010_thumb-300x75.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"75";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Presenting dotless at Barcamp Vienna</title>
<link>http://www.tigraine.at/2010/05/22/presenting-dotless-at-barcamp-vienna/</link>
<pubDate>Sat, 22 May 2010 07:34:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Barcamp]]></category>

		<category domain="category" nicename="barcamp"><![CDATA[Barcamp]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/05/22/presenting-dotless-at-barcamp-vienna/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010.jpg"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Barcamp_Vienna_2010" border="0" alt="Barcamp_Vienna_2010" src="http://www.tigraine.at/wp-content/uploads/2010/05/Barcamp_Vienna_2010_thumb.jpg" width="400" height="100" /></a> </p>  <p>Next weekend (29-30th of May) I’ll be attending <a href="http://www.barcamp.at/BarCamp_Vienna_2010">Barcamp Vienna</a> and plan on having a talk about <a href="http://www.dotlesscss.com">dotless</a> and it’s advantages over regular CSS. Since my last dotless presentation at Barcamp Klagenfurt was a pretty huge success I guess I’ll keep to the basic structure of the talk and also go into some detail around the organizational stuff that’s involved when managing an OSS project. </p>  <p>Since I expect the crowd in Vienna to be more technical than the usual web2.0 enthusiasts/blogger mix we see in Klagenfurt I also plan on maybe delivering a talk on the best SCM there is: <a href="http://git-scm.com/">Git</a>. </p>  <p>Since the whole thing is hosted by Microsoft I expect a lot more .NET developers to show up, so it should be a fun and interesting weekend. </p>  <p>See you there!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>862</wp:post_id>
<wp:post_date>2010-05-22 09:34:45</wp:post_date>
<wp:post_date_gmt>2010-05-22 07:34:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>presenting-dotless-at-barcamp-vienna</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:comment>
<wp:comment_id>3449</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Barcamp Vienna 2010]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/05/30/barcamp-vienna-2010/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-05-30 21:39:46</wp:comment_date>
<wp:comment_date_gmt>2010-05-30 19:39:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] and funny when we met during breakfast randomly chatting about our stuff and I noted that I’ll be presenting dotless when he said: “Wow that’s you? I wanted to contact you for some time now about dotless. I’m [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3485</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 8]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-12 04:45:10</wp:comment_date>
<wp:comment_date_gmt>2010-07-12 09:45:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yeah,<a href="http://www.nike-air-force-one.com"  rel="nofollow">air force 1 shoes</a> I have to admire the landlord&#39;s unique point of view,<a href="http://www.discountbootsstores.co.uk"  rel="nofollow">ugg boots for sale</a> this article is very comprehensive and considerable on the analyse, and greatly inspired me. In addition, I would like to share that some other blog&#39;s article, content is also very good, if you scan it,there will be a suprise!<a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3492</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 9]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:25</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This article  comes on and on, <a href="http://www.moncler-down-jackets.com"  rel="nofollow">moncler jackets</a> successful, without any beautification ingredient, but  have the very strong power. Especially  make the detailed elaboration at the first view,<a href="http://www.louis-vuitton-outlet-store.com"  rel="nofollow">louis vuitton outlet</a>   caused the human to look easily to have the sympathetic chord, I also very approved author&#39;s viewpoint. Approves! <a href="http://www.louis-vuitton-outlet-store.com/Louis-vuitton-bags.html"  rel="nofollow">Louis vuitton bags</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=863</link>
<pubDate>Sun, 30 May 2010 19:39:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>863</wp:post_id>
<wp:post_date>2010-05-30 21:39:38</wp:post_date>
<wp:post_date_gmt>2010-05-30 19:39:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-29</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"156";s:6:"height";s:3:"122";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:18:"2010/05/image1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image1-150x122.png";s:5:"width";s:3:"150";s:6:"height";s:3:"122";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=864</link>
<pubDate>Sun, 30 May 2010 19:39:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/05/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>864</wp:post_id>
<wp:post_date>2010-05-30 21:39:38</wp:post_date>
<wp:post_date_gmt>2010-05-30 19:39:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-30</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/05/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/05/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:3:"148";s:6:"height";s:3:"120";s:14:"hwstring_small";s:23:"height='96' width='118'";s:4:"file";s:18:"2010/05/image2.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Barcamp Vienna 2010</title>
<link>http://www.tigraine.at/2010/05/30/barcamp-vienna-2010/</link>
<pubDate>Sun, 30 May 2010 19:39:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Barcamp]]></category>

		<category domain="category" nicename="barcamp"><![CDATA[Barcamp]]></category>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/05/30/barcamp-vienna-2010/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just booted my PC after 4 hours of drive through heavy rain and thunderstorms back from Vienna where I attended Barcamp. I have to say it was just fantastic! All Barcamps I attended before had a very diverse crowd, but usually lacking developers thus the social media enthusiasts usually dominated the attendees. </p>  <p>Barcamp Vienna was different, maybe it was the awesome location at Microsoft Austria headquarters or just the fact that it was in Vienna.. But I met more coders there in 2 days than in the last 2 yeas in Klagenfurt. </p>  <p>Coolest thing, I even met a <a href="http://www.subsonicproject.com/">Subsonic</a> developer: <a href="http://github.com/saintedlama">Saintedlama</a>! That was really awesome and funny when we met during breakfast randomly chatting about our stuff and I noted that I’ll be <a href="http://www.tigraine.at/2010/05/22/presenting-dotless-at-barcamp-vienna/">presenting dotless</a> when he said: “Wow that’s you? I wanted to contact you for some time now about dotless. I’m working on Subsonic btw.. &quot; (Imagine my jaw dropping right there.. ). He showed me some really cool demos of the simple repository they introduced in SubSonic 3 and it’s uses with MVC.. and I have to tell you: wow.. Using a ORM was really never so easy.. </p>  <p>Anyway, I really had a great time either chatting up really interesting people or doing my two presentations.    <br />On Saturday I talked about <a href="http://wwww.dotlesscsss.com">dotless</a> while on Sunday I talked about <a href="http://git-scm.org">Git</a>. Both talks went great in my opinion, but if anyone was there and has additional feedback on my presentations I’d be glad to hear them. I uploaded both slide decks to <a href="http://www.docs.com">http://www.docs.com</a> and you can find them here:</p>  <p><a href="http://docs.com/17TX"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/05/image1.png" width="156" height="122" /></a> </p>  <p><a href="http://docs.com/17TX">dotless – CSS done right</a></p>  <p><a href="http://docs.com/17U1"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/05/image2.png" width="148" height="120" /></a> </p>  <p><a href="http://docs.com/17U1">Git</a></p>  <p>At any rate: Thanks to <a href="http://wissenbelastet.com/">Max</a> and <a href="http://rolfgeneratedcontent.com/">Rolf</a> for organizing this awesome event and to Microsoft for so generously hosting it! </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>865</wp:post_id>
<wp:post_date>2010-05-30 21:39:39</wp:post_date>
<wp:post_date_gmt>2010-05-30 19:39:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>barcamp-vienna-2010</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3450</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Git Source Control Provider for Visual Studio 2010]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/05/30/git-source-control-provider-for-visual-studio-2010/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-05-30 23:41:01</wp:comment_date>
<wp:comment_date_gmt>2010-05-30 21:41:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] my presentation at Barcamp Vienna today I got asked what GUI to use with Git. My plain and simple answer was: “Use the command [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3451</wp:comment_id>
<wp:comment_author><![CDATA[Barcamp Vienna 2010 — Fotos und Fazit auf datenschmutz.net]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://blog.datenschmutz.net/2010-05/barcamp-vienna-2010-fotos-und-fazit/</wp:comment_author_url>
<wp:comment_author_IP>188.40.54.132</wp:comment_author_IP>
<wp:comment_date>2010-05-31 20:23:15</wp:comment_date>
<wp:comment_date_gmt>2010-05-31 18:23:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Daniel Hölbling hat’s auch gut gefallen. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3491</wp:comment_id>
<wp:comment_author><![CDATA[air jordan 9]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:20</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yeah,<a href="http://www.nike-air-force-one.com"  rel="nofollow">air force 1 shoes</a> I have to admire the landlord&#39;s unique point of view,<a href="http://www.discountbootsstores.co.uk"  rel="nofollow">ugg boots for sale</a> this article is very comprehensive and considerable on the analyse, and greatly inspired me. In addition, I would like to share that some other blog&#39;s article, content is also very good, if you scan it,there will be a suprise!<a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Git Source Control Provider for Visual Studio 2010</title>
<link>http://www.tigraine.at/2010/05/30/git-source-control-provider-for-visual-studio-2010/</link>
<pubDate>Sun, 30 May 2010 21:40:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/05/30/git-source-control-provider-for-visual-studio-2010/</guid>
<description></description>
<content:encoded><![CDATA[<p>During <a href="http://www.tigraine.at/2010/05/30/barcamp-vienna-2010/">my presentation at Barcamp Vienna</a> today I got asked what GUI to use with Git. My plain and simple answer was: “Use the command line, its just better that way.. “. Well, after the talk <a href="http://www.andreas-schlapsi.com/">Andreas</a> approached me and raised a very good point: Mainstream adoption of tools (like Git) often depends on GUIs to help people during the transition phase. </p>  <p>Besides the obvious Guis like TortoiseGit or GitGui there is now one more tool aimed at .NET developers to make the transition easier: <a href="http://visualstudiogallery.msdn.microsoft.com/en-us/63a7e40d-4d71-4fbb-a23b-d262124b8f4c">Git Source Control Provider for Visual Studio 2010</a>. It looks like Microsoft got VS2010 extensibility right this time, and someone managed to implement Git integration right into the VS2010 solution explorer:</p>  <p><img style="border-bottom: 0px; border-left: 0px; border-top: 0px; border-right: 0px" border="0" alt="Git Source Control Provider" src="http://visualstudiogallery.msdn.microsoft.com/en-us/63a7e40d-4d71-4fbb-a23b-d262124b8f4c/image/file/29104/1/screenshot.png?Id=29104" /></p>  <p>The Plugin is available through Visual Studio Gallery and seems to be Ms-Pl licensed and free, although I couldn’t find the code anywhere, it’s still worth checking out: <a href="http://visualstudiogallery.msdn.microsoft.com/en-us/63a7e40d-4d71-4fbb-a23b-d262124b8f4c">Git Source Control Provider</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>866</wp:post_id>
<wp:post_date>2010-05-30 23:40:56</wp:post_date>
<wp:post_date_gmt>2010-05-30 21:40:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>git-source-control-provider-for-visual-studio-2010</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3486</wp:comment_id>
<wp:comment_author><![CDATA[louis vuitton handbags]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-12 04:45:00</wp:comment_date>
<wp:comment_date_gmt>2010-07-12 09:45:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thread! I&#39;m not agree you standpoint,but toally approve your view!Anybody has his own dream,someone makes them reality , <a href="http://www.air-jordan-9.com"  rel="nofollow">air jordan 9</a> another leaves it just dreams.So it lie on how hard you  distribute,how long you persist! This post make a way to lead to success,<a href="http://www.discountbootsstores.co.uk"  rel="nofollow">ugg boots for sale</a>any only insist on studying  new knowledge and digest them for your own that can make you gradually growing up , <a href="http://www.nike-air-force-one.com/Nike-Air-Force-1-low.html"  rel="nofollow">Nike Air Force 1 Low</a>thank you for this outline,it will be very useful for those who are in the lost! <a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>ASP.NET MVC2 &#8211; Make Custom ControllerFactory less painful</title>
<link>http://www.tigraine.at/2010/06/04/asp-net-mvc2-make-custom-controllerfactory-less-painful/</link>
<pubDate>Fri, 04 Jun 2010 14:03:01 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/06/04/asp-net-mvc2-make-custom-controllerfactory-less-painful/</guid>
<description></description>
<content:encoded><![CDATA[<p>When starting a new project on ASP.NET MVC2 I noticed something very annoying. When used with a custom ControllerFactory the framework will throw a HttpException whenever a browser requests a file that is not present on the file system or not mapped by a route. </p>  <p>That means you’ll hit an exception about once per page-load just because Google Chrome is requesting the favicon all the time unless it finds one. </p>  <p>The solution to this is to make the Debugger just step through your CreateController method so no Exceptions will be visible to Visual Studio there:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9f744adf-66c0-4f23-ad28-6e41bfe796c2" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[System.Diagnostics.DebuggerStepThrough]
public override IController CreateController(System.Web.Routing.RequestContext requestContext,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;string controllerName)
{
&#160;&#160;&#160;&#160;return base.CreateController(requestContext, controllerName);
}
</pre></div>

<p>This works reasonably well for me right now, at least the pain of hitting F5 every 10 seconds while debugging has gone away. It’s still not perfect since it makes it impossible to actually debug the method if something really goes wrong, but you’ve always got the yellow screen of death to figure out what’s wrong.</p>

<p>Hope this helps!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>867</wp:post_id>
<wp:post_date>2010-06-04 16:03:01</wp:post_date>
<wp:post_date_gmt>2010-06-04 14:03:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>asp-net-mvc2-make-custom-controllerfactory-less-painful</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3456</wp:comment_id>
<wp:comment_author><![CDATA[jakescott]]></wp:comment_author>
<wp:comment_author_email>jake.net@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>94.8.169.65</wp:comment_author_IP>
<wp:comment_date>2010-06-12 11:16:15</wp:comment_date>
<wp:comment_date_gmt>2010-06-12 16:16:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I think you have a problem with your routes... the favicon should be ignored, or else setup IIS to handle it correctly]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3457</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.254</wp:comment_author_IP>
<wp:comment_date>2010-06-12 13:56:02</wp:comment_date>
<wp:comment_date_gmt>2010-06-12 18:56:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes I could have ignored it. But this solution just keeps all HttpExceptions from me that are not originating from actual code, so I&#39;m pretty happy with it.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3489</wp:comment_id>
<wp:comment_author><![CDATA[Louis vuitton bags]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-12 04:44:54</wp:comment_date>
<wp:comment_date_gmt>2010-07-12 09:44:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The details  upstairs  are really sensible<a href="http://www.louis-vuitton-outlet-store.com"  rel="nofollow">louis vuitton outlet</a>  you remind us that anybody who gotta succeeed should make extensive social intercourse<a href="http://www.louis-vuitton-outlet-store.com/Louis-vuitton-bags.html"  rel="nofollow">Louis vuitton bags</a>,optimistic is a vital personality anybody gonna have!Another,it is important to keep calm when you encounter difficulty,and think out the method to solve problem! <a href="http://www.air-jordan-7.com"  rel="nofollow">air jordan 7</a>  You should try you best to make more friends and good friends are the bridge to help you lead to success!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3490</wp:comment_id>
<wp:comment_author><![CDATA[louis vuitton handbags]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:09</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Never better evaluation than the upper article says,<a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>.And I am very pleased I read it by accident.I will go a sightseeing here again ,and of course ,I will tell my friend here I hope more better thing can be whrite in here.I have so many profound or funny thing do benefits to our daily life.By the way, <a href="http://www.bootonsale.co.uk"  rel="nofollow">ugg boots sale</a>here are some sites also useful for life,such as shopping online,just have a look. <a href="http://www.moncler-down-jackets.com"  rel="nofollow">moncler jackets</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>logo.jpg</title>
<link>http://www.tigraine.at/?attachment_id=868</link>
<pubDate>Wed, 16 Jun 2010 08:20:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/06/logo.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>868</wp:post_id>
<wp:post_date>2010-06-16 10:20:49</wp:post_date>
<wp:post_date_gmt>2010-06-16 08:20:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/06/logo.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/06/logo.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:3:"131";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:16:"2010/06/logo.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dotless Version 1.1 Released!</title>
<link>http://www.tigraine.at/2010/06/16/dotless-version-1-1-released/</link>
<pubDate>Wed, 16 Jun 2010 08:20:49 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/06/16/dotless-version-1-1-released/</guid>
<description></description>
<content:encoded><![CDATA[<p><img style="border-right-width: 0px; margin: 0px 10px 10px 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="logo" border="0" alt="logo" align="left" src="http://www.tigraine.at/wp-content/uploads/2010/06/logo.jpg" width="131" height="92" /></p>  <p>After a lot of work we finally released a new version of dotless. And this release is really sweet. We switched parsers from the troubled PEG parser we had to an all-new implementation of the <a href="http://github.com/cloudhead/less.js">less.js</a> parser that gave us a ton of room for improvements and little tweaks.</p>  <p>Here’s a rundown of the most important features:</p>  <p><strong>New Parser</strong></p>  <p>New parser also means we finally have meaningful error messages and if there are syntax errors we tell you what line the error occured and what went wrong. So that’s a huge improvement for all the people who saw empty .css files trying to figure out what broke the compilation.</p>  <p><strong>Parameter passing</strong></p>  <p>One thing users have&#160; been asking us for are parameters to be passed to the scripts. We finally found a good way to implement this and now it’s in.</p>  <p>If you use the HttpHandler you can simply pass parameters through the querystring. Let’s say you have a basecolor you want to pass to your .less file you simply call it from the site like this:</p>  <blockquote>   <p><a href="http://www.myserver.com/site.less?basecolor=#34679a">http://www.myserver.com/site.less?basecolor=#34679a</a></p> </blockquote>  <p>and the variable @basecolor will be set to #34679a for you in your script. This is especially handy if you are using the <a href="http://dotlesscss.com/docs.aspx/functions">HSL functions</a> where you can modify saturation, lightness etc.</p>  <p>If you are using the console compiler you can also leverage this new functionality through a very Ant like parameter syntax:</p>  <blockquote>   <p>dotless.Compiler.exe test.less –D<strong>basecolor=%2334679a</strong></p> </blockquote>  <p>Note: <strong>Parameters in querystrings have to be URL encoded</strong> or some browsers will act up.</p>  <p><strong>Improved Caching</strong></p>  <p>We also made sure that the cache works properly with parameters, so if two requests have the same parameters the cache will be used. If not, dotless will insert for every parameter/file combination one cache entry. Since parameters are by no means user-input values but usually limited to a set of values the designers specify this should still give you very good performance. Behind the scenes we are still using the ASP.NET cache infrastructure.</p>  <p>While at the topic of caching, we also improved cache invalidation. The old version did not watch all imported files for changes but only the main .less file. This has changed, you should now never have to think about disabling the cache during development.</p>  <p>The same change was also applied to the console compiler, if you start it with <em>–watch</em> the compiler will regenerate the CSS whenever any of the imported changes or the main file gets changed.</p>  <p><strong>Runnable in medium trust</strong></p>  <p>Well, nothing really exciting here, but you should now be able to run dotless in a shared hosting environment.</p>  <p><strong>Other improvements</strong></p>  <ol>   <li>Cleaner output </li>    <li>better support for CSS3 </li>    <li>Many more.. </li> </ol>  <ol>A big thanks goes to <a href="http://github.com/jamesfoster">James Foster</a> who did most of the heavy lifting involved with bringing you this new release. You can download the new version from our website at <a href="http://www.dotlesscss.com">http://www.dotlesscss.com</a>. Remember, dotless is open source and released under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, Version 2.0</a>, the source can be easily found on <a href="http://github.com/dotless/dotless">GitHub</a>.</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>869</wp:post_id>
<wp:post_date>2010-06-16 10:20:49</wp:post_date>
<wp:post_date_gmt>2010-06-16 08:20:49</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dotless-version-1-1-released</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3459</wp:comment_id>
<wp:comment_author><![CDATA[The Morning Brew - Chris Alcock &raquo; The Morning Brew #623]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://blog.cwa.me.uk/2010/06/17/the-morning-brew-623/</wp:comment_author_url>
<wp:comment_author_IP>212.227.118.27</wp:comment_author_IP>
<wp:comment_date>2010-06-17 09:38:09</wp:comment_date>
<wp:comment_date_gmt>2010-06-17 07:38:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] dotless Version 1.1 Released! - Daniel Hoelbling announces the release of version 1.1 of dotless the dynamic CSS implementation for ASP.NET. This new release includes their new and improved parser, bringing improved error reporting, along with query string parameter passing and improvements to caching. [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3482</wp:comment_id>
<wp:comment_author><![CDATA[gucci handbags]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.gucci-outlet-store.com/</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-09 09:23:59</wp:comment_date>
<wp:comment_date_gmt>2010-07-09 14:23:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.gucci-outlet-store.com/gucci-muffler.html" rel="nofollow">gucci muffler</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>nh.png</title>
<link>http://www.tigraine.at/?attachment_id=872</link>
<pubDate>Sat, 19 Jun 2010 16:48:36 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/06/nh.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>872</wp:post_id>
<wp:post_date>2010-06-19 18:48:36</wp:post_date>
<wp:post_date_gmt>2010-06-19 16:48:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>nh-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/06/nh.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"502";s:6:"height";s:3:"287";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:14:"2010/06/nh.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"nh-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"nh-300x171.png";s:5:"width";s:3:"300";s:6:"height";s:3:"171";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/06/nh.png</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>nh_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=873</link>
<pubDate>Sat, 19 Jun 2010 16:48:37 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/06/nh_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>873</wp:post_id>
<wp:post_date>2010-06-19 18:48:37</wp:post_date>
<wp:post_date_gmt>2010-06-19 16:48:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>nh_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/06/nh_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/06/nh_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"506";s:6:"height";s:3:"291";s:14:"hwstring_small";s:23:"height='73' width='127'";s:4:"file";s:20:"2010/06/nh_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"nh_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"nh_thumb-300x172.png";s:5:"width";s:3:"300";s:6:"height";s:3:"172";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=874</link>
<pubDate>Sat, 19 Jun 2010 16:48:38 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/06/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>874</wp:post_id>
<wp:post_date>2010-06-19 18:48:38</wp:post_date>
<wp:post_date_gmt>2010-06-19 16:48:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-31</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/06/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/06/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"348";s:6:"height";s:3:"201";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:17:"2010/06/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x173.png";s:5:"width";s:3:"300";s:6:"height";s:3:"173";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=875</link>
<pubDate>Sat, 19 Jun 2010 16:48:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/06/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>875</wp:post_id>
<wp:post_date>2010-06-19 18:48:39</wp:post_date>
<wp:post_date_gmt>2010-06-19 16:48:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-23</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/06/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/06/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"352";s:6:"height";s:3:"205";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:23:"2010/06/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-300x174.png";s:5:"width";s:3:"300";s:6:"height";s:3:"174";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>NHibernate removes items from Many-To-Many upon Update of Entity due to Model Binding</title>
<link>http://www.tigraine.at/2010/06/19/nhibernate-removes-items-from-many-to-many-upon-update-of-entity-due-to-model-binding/</link>
<pubDate>Sat, 19 Jun 2010 16:48:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/06/19/nhibernate-removes-items-from-many-to-many-upon-update-of-entity-due-to-model-binding/</guid>
<description></description>
<content:encoded><![CDATA[<p>Imagine the following scenario: </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/06/nh.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="nh" border="0" alt="nh" src="http://www.tigraine.at/wp-content/uploads/2010/06/nh_thumb.png" width="506" height="291" /></a> </p>  <p>Townships has two <strong>m:n</strong> collections mapped to Region. My Controller has special actions for updating these collections, while there is a generic Edit method that takes care of updating normal properties on Township. The code in question looks quite innocent:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:95acc901-53bc-434a-b2e1-f3efa1e5d230" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[HttpPost]
public virtual ActionResult Edit([Bind]T item)
{
&#160;&#160;&#160;&#160;if (!ModelState.IsValid) return View(item);
&#160;&#160;&#160;&#160;using (var trans = session.BeginTransaction())
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;session.Update(item);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;trans.Commit();
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;return RedirectToAction("List");
}
</pre></div>

<p>Well, the problem is quickly found using NHProf:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2010/06/image.png"><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/06/image_thumb.png" width="352" height="205" /></a> </p>

<p>Whenever I updated the Township entity all it’s associated Regions where cleared. </p>

<p>Turns out, the problem lies with the ModelBinder in MVC2: Since it reconstructs a new Township item and populates it with values from the request, there is no way for MVC to fill the WinterRegions and SummerRegions collection. So NHibernate got empty collections and assumed I removed all items from them and decided to persist that removal to the database, resulting in a DELETE. </p>

<p>There are two solutions to the problem: a) turn off Cascade.All b) Fill the collections before the update. </p>

<p>Since I already used the Cascade Behavior in other places I decided to go with b and select the entity prior to updating it. The resulting code looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:bcff4113-8ffc-4b78-bfb8-1b7f19852b48" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[HttpPost]
public override ActionResult Edit([Bind]Township item)
{
&#160;&#160;&#160;&#160;using (var trans = session.BeginTransaction())
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var township = session.Get&lt;Township&gt;(item.Id);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;session.Evict(township);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;item.WinterRegions = township.WinterRegions;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;item.SummerRegions = township.SummerRegions;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;session.Update(item);
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;trans.Commit();
&#160;&#160;&#160;&#160;}
&#160;&#160;&#160;&#160;return RedirectToAction("List");
}
</pre></div>

<p>Notice that it is important to first evict the fetched entity from the session, otherwise you’ll get an Exception stating that the same identified is already associated with this session cache.</p>

<p>To be honest: I don’t feel particularly fond of this solution, if anyone can point out a better solution please leave a comment or email me. While at it, it would be nice to be able to change the cascade behavior of entities for one session (like FetchMode for one criteria).</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>876</wp:post_id>
<wp:post_date>2010-06-19 18:48:39</wp:post_date>
<wp:post_date_gmt>2010-06-19 16:48:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>nhibernate-removes-items-from-many-to-many-upon-update-of-entity-due-to-model-binding</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3461</wp:comment_id>
<wp:comment_author><![CDATA[Mogens Heller Grabe]]></wp:comment_author>
<wp:comment_author_email>None</wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/mookid8000</wp:comment_author_url>
<wp:comment_author_IP>90.185.106.43</wp:comment_author_IP>
<wp:comment_date>2010-06-19 20:13:15</wp:comment_date>
<wp:comment_date_gmt>2010-06-20 01:13:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[IMO your "real problem" is that you are letting a model binder deserialize directly into your domain entities. I think you would benefit from creating separate models to receive form posts, and then let some code fetch the right entity and call some methods on it. This way, you will not run into weird issues like the one you mention.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3462</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hölbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP>85.127.238.254</wp:comment_author_IP>
<wp:comment_date>2010-06-19 20:31:12</wp:comment_date>
<wp:comment_date_gmt>2010-06-20 01:31:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Agreed, I do have Dtos for some of my models that I use, but in this case it was just simpler to do it this way :)<br>And deserialization of the model binder works for 90% of the entities pretty well..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3466</wp:comment_id>
<wp:comment_author><![CDATA[Chris J Owen]]></wp:comment_author>
<wp:comment_author_email>chris.j.owen@hotmail.co.uk</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>82.153.193.236</wp:comment_author_IP>
<wp:comment_date>2010-07-03 14:26:37</wp:comment_date>
<wp:comment_date_gmt>2010-07-03 19:26:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I flick between agreeing and disagreeing that you should pass View Models in and DTOs out. In theory it should be what you do, though in practice its a real PITA, especially if your domain is simple and your DTOs look remarkably like your domain objects. I totally agree that it would be nice to change the cascade mode on a per session basis, in fact I would like to be able to do it per session tracked domain object instance. <br><br>One thing that did slightly confuse me here, is how are you managing session, because if you a session per request then how is your item even bound to the session when after model binding?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3477</wp:comment_id>
<wp:comment_author><![CDATA[Svante]]></wp:comment_author>
<wp:comment_author_email>svante@svinto.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.216.160.194</wp:comment_author_IP>
<wp:comment_date>2010-07-05 12:37:47</wp:comment_date>
<wp:comment_date_gmt>2010-07-05 17:37:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I like to:<br><br>public ActionResult Edit(int id, FormCollection collection) {<br>  var item = session.Get&lt;Township&gt;(id);<br>  UpdateModel&lt;Township&gt;(Township);<br><br><br>or rather having an interface with bindable members that the model implements:<br><br>public ActionResult Edit(int id, FormCollection collection) {<br>  var item = session.Get&lt;Township&gt;(id);<br>  UpdateModel&lt;ITownshipBindable&gt;(Township);]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3484</wp:comment_id>
<wp:comment_author><![CDATA[nike air jordan]]></wp:comment_author>
<wp:comment_author_email>328739804@qq.com</wp:comment_author_email>
<wp:comment_author_url>http://www.discount-air-jordan.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-09 09:23:37</wp:comment_date>
<wp:comment_date_gmt>2010-07-09 14:23:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Mark S. is definitely on the right track. If you want to get a professional looking email address, Id recommend buying your name domain name, like or  <br><a href="http://www.discount-air-jordan.com/air-jordan-17.5.html" rel="nofollow">air jordan 17.5</a><br> If its common it might be difficult to get, however, be creative and you can usually find something.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3488</wp:comment_id>
<wp:comment_author><![CDATA[louis vuitton outlet]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-12 04:44:46</wp:comment_date>
<wp:comment_date_gmt>2010-07-12 09:44:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I&#39;ve been looking for a similar to this post. Not only extensively but also detailly. We can learn a lot from the post. <a href="http://www.moncler-down-jackets.com"  rel="nofollow">moncler jackets</a> I recommend to you , <a href="http://www.bootonsale.co.uk"  rel="nofollow">ugg boots sale</a> you can come communication in here. Let us grow up together.On the other hand ,I know some websites content is very well.you can go and see.Such as<a href="http://www.bootonlineshop.co.uk"  rel="nofollow">ugg boots for sale</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3493</wp:comment_id>
<wp:comment_author><![CDATA[louis vuitton outlet]]></wp:comment_author>
<wp:comment_author_email>yolly8899@hotmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.moncler-down-jackets.com</wp:comment_author_url>
<wp:comment_author_IP>218.104.234.16</wp:comment_author_IP>
<wp:comment_date>2010-07-13 09:40:05</wp:comment_date>
<wp:comment_date_gmt>2010-07-13 14:40:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you very much for sharing!!To top!<a href="http://www.louis-vuitton-outlet-store.com"  rel="nofollow">louis vuitton outlet</a>   is a professional webside which offer lots of common sense of life and I have learnt a lot since my friends recommended it to me.There are several articles about this theme in <a href="http://www.louis-vuitton-outlet-store.com/Louis-vuitton-bags.html"  rel="nofollow">Louis vuitton bags</a>,come on and have a discussion! <a href="http://www.air-jordan-7.com"  rel="nofollow">air jordan 7</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>C# Object Initializers are Expressions!</title>
<link>http://www.tigraine.at/2010/08/14/c-object-initializers-are-expressions/</link>
<pubDate>Sat, 14 Aug 2010 14:03:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=878</guid>
<description></description>
<content:encoded><![CDATA[<p>Object initializers got introduced into C# as part of .NET 3.5 and allow you to define properties through a nice concise syntax that makes code easier to read. Here’s an example:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:af75cd57-21e8-4c8c-8901-454161968bb6" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var daniel = new User()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username = "Tigraine",
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Age = 25,
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Email = "tigraine@tigraine.at"
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};
</pre></div>

<p>In a .NET 2.0 environment the above code would have looked like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:34c02d3b-6914-4685-9181-0ae4f8c0695b" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
var daniel = new User();
daniel.Username = "Tigraine";
daniel.Age = 25;
daniel.Email = "tigraine@tigraine.at";
</pre></div>

<p>The funny thing here is that the .NET 2 code is not thread safe. If daniel is a public field or static field anywhere, the scheduler could interrupt the Thread right after setting the age, leaving you with an empty email field. This is also the reason why I’d call object initializers expressions: Expressions do by definition yield a value. And if we look at the code the compiler generates for an object initializer you will see this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:af4f2650-90a8-41dc-bf60-4695cdb68991" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
User &lt;&gt;g__initLocal0 = new User();
&lt;&gt;g__initLocal0.Username = "Tigraine";
&lt;&gt;g__initLocal0.Age = 0x19;
&lt;&gt;g__initLocal0.Email = "tigraine@tigraine.at";
User daniel = &lt;&gt;g__initLocal0;
</pre></div>

<br />

<p>The compiler does emit code that constructs the new object in a local variable that gets discarded right afterwards, and only the completed object, with all properties initialized will then be assigned to the variable. This makes this code thread safe. But, you’ll say it doesn’t yield a result thus it’s not really an expression. </p>

<p>Well, rewrite it a bit and you get a expression:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:4fce257e-d23c-4c96-a627-ea3d15bbd334" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
Func&lt;User&gt; expr = () =&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;var user = new User();
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user.Username = "Tigraine";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user.Age = 25;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user.Email = "tigraine@tigraine.at";
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return user;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;};
var daniel = expr();
</pre></div>

<br />

<p>It’s essentially a function that the compiler generates inline to save the cost of a method call, but it’s semantically a function, thus it yields a value and is a expression.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>878</wp:post_id>
<wp:post_date>2010-08-14 16:03:56</wp:post_date>
<wp:post_date_gmt>2010-08-14 14:03:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>c-object-initializers-are-expressions</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3523</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3526</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3527</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3528</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3529</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3532</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3533</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3538</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3539</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3542</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3543</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3544</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3545</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3546</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3547</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3548</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3549</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3552</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3553</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3554</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3555</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3556</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3557</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3558</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3559</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3560</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3561</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3562</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3563</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3564</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3565</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3566</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3567</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3568</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3569</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3570</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3571</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3572</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3573</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3574</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3575</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3576</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3577</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3578</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3579</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3580</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3581</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3582</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3583</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3584</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3585</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3588</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3589</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3590</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3591</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3592</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3593</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3594</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3595</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3596</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3597</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3598</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3599</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3600</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3601</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3602</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3603</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3604</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3605</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3607</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3608</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3609</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3610</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3611</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3612</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3613</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3614</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3615</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3616</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3617</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3618</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3619</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3620</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3623</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3624</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3625</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3626</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3627</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3628</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3629</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3630</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3631</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3632</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3633</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3634</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3635</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3636</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3637</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3638</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3639</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3640</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3641</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3642</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3643</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3644</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3645</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3646</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3655</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3656</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3657</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3658</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3659</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3660</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3661</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3662</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3669</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3670</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3671</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3672</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3673</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3674</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3676</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3677</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3678</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3679</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3685</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3686</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3691</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3692</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3693</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3694</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3695</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3696</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3699</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3700</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3703</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3704</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3714</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3715</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3727</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3728</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3731</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3732</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3734</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3735</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3746</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3747</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3762</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3763</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3784</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3785</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3793</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3794</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3883</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3884</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3906</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3907</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3908</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3909</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3952</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3953</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4007</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4008</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4052</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4053</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4169</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4170</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4616</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4617</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4659</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4660</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4779</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4780</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5043</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 15:11:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 15:11:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh, I forgot about that.. ;) You are right of course, but the lambda could be rewritten as a delegate expression or a function, so the sample is still valid :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5044</wp:comment_id>
<wp:comment_author><![CDATA[Manuel Warum]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://twitter.com/CammyManny</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-08-15 14:36:00</wp:comment_date>
<wp:comment_date_gmt>2010-08-15 14:36:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In a .NET 2.0 environment there probably won't be a var keyword. Or u03bbs :-PnBut good to know that object initializers are thread safe.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>www.dotlesscss.com is down</title>
<link>http://www.tigraine.at/2010/08/17/www-dotlesscss-com-is-down/</link>
<pubDate>Tue, 17 Aug 2010 11:12:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/08/17/www-dotlesscss-com-is-down/</guid>
<description></description>
<content:encoded><![CDATA[<p><img style="margin: 0px 10px 3px 0px" src="http://i637.photobucket.com/albums/uu91/Vordreller/artistic-mess-cormacphelan.jpg" /></p>  <p>In case you haven’t noticed, the main <a href="http://www.dotlesscss.com">dotless</a> website is down. To be frank: We have no clue why, and I couldn’t reach Chris who owns the server we are running on.     <br />Unfortunately Chris also owns the hostname so we can’t easily migrate to a new host so see this post as a guide to where to get your stuff while we are working to resolve this.</p>  <p>Getting the Source is straight forward, just hit the <a href="http://github.com/dotless/dotless">GitHub repository</a>.</p>  <p>Documentation: I’ve moved all our Documentation to the <a href="http://github.com/dotless/dotless/wiki">GitHub Wiki</a>. We do lose the ability to let you try out dotless, but at least the docs are somewhere to be found.</p>  <p>Binary releases: Unfortunately we don’t have a build server, but I’ll try to keep the latest version of the binaries uploaded to the <a href="http://github.com/dotless/dotless/downloads">GitHub downloads page</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>880</wp:post_id>
<wp:post_date>2010-08-17 13:12:40</wp:post_date>
<wp:post_date_gmt>2010-08-17 11:12:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>www-dotlesscss-com-is-down</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284384594</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5313</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5314</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5315</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5316</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5317</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5331</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5269</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5270</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5287</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5276</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5273</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5367</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5352</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5358</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5391</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5392</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5396</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5397</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5299</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5306</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5307</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5327</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5334</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5335</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5336</wp:comment_id>
<wp:comment_author><![CDATA[Richard Versluis]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:10:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 13:10:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for letting us know, link to github was very helpful. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>wlEmoticonsmile.png</title>
<link>http://www.tigraine.at/?attachment_id=882</link>
<pubDate>Fri, 20 Aug 2010 12:18:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/08/wlEmoticonsmile.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>882</wp:post_id>
<wp:post_date>2010-08-20 14:18:58</wp:post_date>
<wp:post_date_gmt>2010-08-20 12:18:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wlemoticonsmile-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/08/wlEmoticonsmile.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/08/wlEmoticonsmile.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:2:"19";s:6:"height";s:2:"19";s:14:"hwstring_small";s:22:"height='19' width='19'";s:4:"file";s:27:"2010/08/wlEmoticonsmile.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Don&#8217;t rely on exception messages</title>
<link>http://www.tigraine.at/2010/08/20/dont-rely-on-exception-messages/</link>
<pubDate>Fri, 20 Aug 2010 12:18:58 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/08/20/dont-rely-on-exception-messages/</guid>
<description></description>
<content:encoded><![CDATA[<p>Since the dotless 1.1 release we are finally able to present you with good error messages, telling you what line/column the problem was encountered etc. This has led to some tests like this one:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:733eab7e-0d12-43b3-bf8a-9d43ea9e9823" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public void DivisionByZero()
{
&#160;&#160;&#160;&#160;AssertExpressionError("Attempted to divide by zero.", 5, "20px / 0");
&#160;&#160;&#160;&#160;AssertExpressionError("Attempted to divide by zero.", 14, "1 + 2 - 3 * 4 / 0");
&#160;&#160;&#160;&#160;AssertExpressionError("Attempted to divide by zero.", 6, "1 + 2 / 0 - 3 * 4 / 0");
}
</pre></div>

<br />

<p>Usually you just check the exception type, but in this case it’s a generic ParseException that has the additional line/column&#160; info on it and does not wrap the DivideByZeroException in it’s InnerException. Obviously the above failed on my machine due to my German locale and I was getting a different exception message. </p>

<p>I first tried to set the thread’s culture to en-GB but this only changes how formats are handled, there are no English exception texts installed on a German Windows machine. </p>

<p>The obvious solution then was to not hard-code the exception message but retrieve it from the DivideByZeroException:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:81b984bc-65a5-4e72-bb60-dc7ab1783d51" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Test]
public void DivisionByZero()
{
&#160;&#160;&#160;&#160;var divideByZeroException = new DivideByZeroException();
&#160;&#160;&#160;&#160;AssertExpressionError(divideByZeroException.Message, 5, "20px / 0");
&#160;&#160;&#160;&#160;AssertExpressionError(divideByZeroException.Message, 14, "1 + 2 - 3 * 4 / 0");
&#160;&#160;&#160;&#160;AssertExpressionError(divideByZeroException.Message, 6, "1 + 2 / 0 - 3 * 4 / 0");
}
</pre></div>

<br />

<p>Takeaway: Make sure you tests run on all locales if your tests rely on exception messages. <img style="border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.tigraine.at/wp-content/uploads/2010/08/wlEmoticonsmile.png" /></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>883</wp:post_id>
<wp:post_date>2010-08-20 14:18:58</wp:post_date>
<wp:post_date_gmt>2010-08-20 12:18:58</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dont-rely-on-exception-messages</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>I like Exceptions</title>
<link>http://www.tigraine.at/?p=885</link>
<pubDate>Fri, 20 Aug 2010 23:57:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/?p=885</guid>
<description></description>
<content:encoded><![CDATA[We just had a very interesting issue come up on the dotless mailing list. 
Apparently there is quite a sizeable chunk of people who run their debugger with the break on ALL exceptions option, so naturally the see all exceptions a framework generates. Even those that get handled inside the framework. 

This is then getting annoying to the user and they complain about it, thinking there is something wrong with the code since the debugger halted. 

Well, there Is nothing wrong and you should really turn that off. Exceptions are an information carrier and much more expressive than error codes or returning null. Let's look at the code in question:

It's Pandora, my little IoC container we are using inside dotless to cut down on external dependencies. When trying to construct an instance it will recursively invoke the resolve method for all dependencies a class has and all it's dependencies. 
If a class has one dependency and that dependency can't be satisfied, the resolve method has to notify the resolve method higher in it's call stack that it's impossible to get the instance and the parent resolve then has to pass that information onto it's parent. 

The obvious solution here would be to just return null and check for null. But that also means nobody has a clue what component was not found because the whole call stack starts returning null. 

Meanwhile, throwing exceptions allows me to either wrap the exception at every level, giving my caller a pretty good overview what n-th dependency down the stack was missing, or just rethrow the same exception, giving me at least a definitive source of the problem. ]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>885</wp:post_id>
<wp:post_date>2010-08-21 01:57:34</wp:post_date>
<wp:post_date_gmt>2010-08-20 23:57:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=886</link>
<pubDate>Wed, 25 Aug 2010 08:50:53 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/08/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>886</wp:post_id>
<wp:post_date>2010-08-25 10:50:53</wp:post_date>
<wp:post_date_gmt>2010-08-25 08:50:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-32</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/08/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/08/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"721";s:6:"height";s:3:"179";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:17:"2010/08/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x74.png";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=887</link>
<pubDate>Wed, 25 Aug 2010 08:50:54 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>887</wp:post_id>
<wp:post_date>2010-08-25 10:50:54</wp:post_date>
<wp:post_date_gmt>2010-08-25 08:50:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-24</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/08/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"725";s:6:"height";s:3:"183";s:14:"hwstring_small";s:23:"height='32' width='127'";s:4:"file";s:23:"2010/08/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"image_thumb-300x75.png";s:5:"width";s:3:"300";s:6:"height";s:2:"75";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=888</link>
<pubDate>Wed, 25 Aug 2010 08:50:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/08/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>888</wp:post_id>
<wp:post_date>2010-08-25 10:50:55</wp:post_date>
<wp:post_date_gmt>2010-08-25 08:50:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-33</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/08/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/08/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"535";s:6:"height";s:2:"88";s:14:"hwstring_small";s:23:"height='21' width='128'";s:4:"file";s:18:"2010/08/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image1-150x88.png";s:5:"width";s:3:"150";s:6:"height";s:2:"88";}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x49.png";s:5:"width";s:3:"300";s:6:"height";s:2:"49";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=889</link>
<pubDate>Wed, 25 Aug 2010 08:50:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>889</wp:post_id>
<wp:post_date>2010-08-25 10:50:56</wp:post_date>
<wp:post_date_gmt>2010-08-25 08:50:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-25</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/08/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"539";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height='21' width='128'";s:4:"file";s:24:"2010/08/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb1-150x92.png";s:5:"width";s:3:"150";s:6:"height";s:2:"92";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb1-300x51.png";s:5:"width";s:3:"300";s:6:"height";s:2:"51";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The fastest way to install dotless : nubular (nu)!</title>
<link>http://www.tigraine.at/2010/08/25/the-fastest-way-to-install-dotless-nubular-nu/</link>
<pubDate>Wed, 25 Aug 2010 08:50:56 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Projects]]></category>

		<category domain="category" nicename="projects"><![CDATA[Projects]]></category>

		<category><![CDATA[dotless]]></category>

		<category domain="category" nicename="dotless"><![CDATA[dotless]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/08/25/the-fastest-way-to-install-dotless-nubular-nu/</guid>
<description></description>
<content:encoded><![CDATA[<p>Did you know that dependency management in the .NET open source space <a href="http://www.tigraine.at/2009/05/30/running-from-trunks-can-be-tough/">really sucks</a>? For a long time have we been looking at Ruby Gems in envy of the ease of use and simplicity, spawning projects like <a href="http://code.google.com/p/hornget/">Horn</a> or&#160; <a href="http://jonorossi.com/blog/archive/2010/04/11/bricks-a-preview-of-a-.net-package-manager.aspx">Bricks</a>. And while some of these projects were promising, none really took off in a big way, so here comes another take at it: Some clever guys just talked to the RubyGem people about (ab-)using their existing infrastructure for .NET assemblies. And hey, they agreed to let us use their Gem system to distribute .NET assemblies just the way Ruby people can get Rails and all other Ruby projects. </p>  <p><strong>And behold there it is: </strong><a href="http://nu.wikispot.org/"><strong>nubular (nu)</strong></a></p>  <p>I won’t go too deep into what nu does and why it’s awesome, read <a href="http://devlicio.us/blogs/rob_reynolds/archive/2010/07/26/the-future-of-net-open-source-software-delivery.aspx">Rob Reynold’s article</a> and you’ll see the light pretty soon. Suffice it to say that nu is to assemblies what apt-get and gems is to Linux people. You just drop to the command line and tell nu you need assembly X, and if a package exists with that name it will automagically pull it down and with it all dependencies and install it to your /lib folder. Best of all, it also allows you to install binaries with it, a feature that turned out to be really cool for dotless. </p>  <p>Anyway, I promised you a really fast way to install dotless. Well, it can’t get any simpler than this, just drop to the command line and type (install instructions on nu are further down in this article):</p>  <blockquote>   <p>nu install dotless</p> </blockquote>  <p>And now nu goes out to the gem server and just fetches dotless for you:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/08/image.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb.png" width="725" height="183" /></a></p>  <p>The installation just took 3 seconds, and we have the dotless.Core.dll now sitting neatly in our &lt;currentdir&gt;/lib/dotless folder alongside all other libraries we got through nu. </p>  <p>What this install also gives you is a shortcut to the dotless.Compiler.exe. Nu will install a dotless.bat in your C:\Ruby\bin (that should be in your PATH) that you can now use to compile .less files from anywhere:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/08/image1.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/08/image_thumb1.png" width="539" height="92" /></a></p>  <p>That’s pretty cool I dare say. And now the best part: Updating dotless just got a lot easier too. Whenever we publish a new version to nu you can just hit </p>  <blockquote>   <p>gem update dotless</p> </blockquote>  <p><strong>Installing nu</strong></p>  <p>So far I’ve shown you how to get dotless installed once you already run ruby gems + nubular, but for that all to work you need to install Ruby on your machine first. </p>  <p>Doing so is probably the simplest thing in the world right now, just hit <a title="http://rubyinstaller.org/" href="http://rubyinstaller.org/">http://rubyinstaller.org/</a> and you are almost set. You just need to install the nu gem afterwards and you are done installing (takes together under 2 minutes). (Note: Make sure to let the installer add Ruby to your PATH or the whole exercise is futile)</p>  <p>To install the nu gem just type:</p>  <blockquote>   <p><font style="background-color: #ffffff">gem install nu</font></p> </blockquote>  <p>It can’t get any simpler than this does it? Oh and btw: Ruby is completely xcopy deployable and will leave no traces behind on your machine. No services are being run and no bad things can happen to you, so there is really no excuse for a developer out there to no just go ahead and install it.</p>  <p>Oh, and after you’ve installed nu you can then go ahead and fetch a complete Fluent Nhibernate + Castle Windsor stack in a matter of seconds, disregarding all dependency issues since nu is handling that for you. And people are putting more stuff there by the minute: Rhino.Mocks, Fluent Nhibernate, Nhibernate, Castle Windsor, Castle DynProxy, Automapper.. etc etc.. Look at the <a href="http://nu.wikispot.org/Current_Packages">full list</a> and see for your self how much easier you life can become by a simple installation!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>890</wp:post_id>
<wp:post_date>2010-08-25 10:50:56</wp:post_date>
<wp:post_date_gmt>2010-08-25 08:50:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-fastest-way-to-install-dotless-nubular-nu</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4954</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Untangling the dependency ball! Windsor + NServiceBus + Caliburn + Fluent Nhibernate in one package]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/09/06/untangling-the-dependency-ball-windsor-nservicebus-caliburn-fluent-nhibernate-in-one-package/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-09-06 22:47:46</wp:comment_date>
<wp:comment_date_gmt>2010-09-06 20:47:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] nu is still falling short on one thing: Making sure that all the stuff you install is actually [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=892</link>
<pubDate>Wed, 01 Sep 2010 15:23:06 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>892</wp:post_id>
<wp:post_date>2010-09-01 17:23:06</wp:post_date>
<wp:post_date_gmt>2010-09-01 15:23:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-34</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"494";s:6:"height";s:2:"77";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:17:"2010/09/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"image-150x77.png";s:5:"width";s:3:"150";s:6:"height";s:2:"77";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x46.png";s:5:"width";s:3:"300";s:6:"height";s:2:"46";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=893</link>
<pubDate>Wed, 01 Sep 2010 15:23:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>893</wp:post_id>
<wp:post_date>2010-09-01 17:23:07</wp:post_date>
<wp:post_date_gmt>2010-09-01 15:23:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-26</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"498";s:6:"height";s:2:"81";s:14:"hwstring_small";s:23:"height='20' width='127'";s:4:"file";s:23:"2010/09/image_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"image_thumb-150x81.png";s:5:"width";s:3:"150";s:6:"height";s:2:"81";}s:6:"medium";a:3:{s:4:"file";s:22:"image_thumb-300x48.png";s:5:"width";s:3:"300";s:6:"height";s:2:"48";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=894</link>
<pubDate>Wed, 01 Sep 2010 15:23:07 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>894</wp:post_id>
<wp:post_date>2010-09-01 17:23:07</wp:post_date>
<wp:post_date_gmt>2010-09-01 15:23:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-35</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"565";s:6:"height";s:2:"65";s:14:"hwstring_small";s:23:"height='14' width='128'";s:4:"file";s:18:"2010/09/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image1-150x65.png";s:5:"width";s:3:"150";s:6:"height";s:2:"65";}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x34.png";s:5:"width";s:3:"300";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=895</link>
<pubDate>Wed, 01 Sep 2010 15:23:08 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb1.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>895</wp:post_id>
<wp:post_date>2010-09-01 17:23:08</wp:post_date>
<wp:post_date_gmt>2010-09-01 15:23:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-27</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb1.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb1.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"569";s:6:"height";s:2:"69";s:14:"hwstring_small";s:23:"height='15' width='127'";s:4:"file";s:24:"2010/09/image_thumb1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb1-150x69.png";s:5:"width";s:3:"150";s:6:"height";s:2:"69";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb1-300x36.png";s:5:"width";s:3:"300";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using git from Powershell just got easier: Posh-git</title>
<link>http://www.tigraine.at/2010/09/01/using-git-from-powershell-just-got-easier-posh-git/</link>
<pubDate>Wed, 01 Sep 2010 15:23:09 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/01/using-git-from-powershell-just-got-easier-posh-git/</guid>
<description></description>
<content:encoded><![CDATA[<p>Whenever someone asks me at the end of my <a href="http://docs.com/17U1">git presentation</a> about what tools to use with git my answer was always be the same:</p>  <p>Learn to use the commandline. It’s by far the most convenient way to get stuff done. That’s the way git was intended to be used, and with msysgit and Powershell you get a pretty powerful shell to do your stuff. I work exclusively from the commandline, rarely using gitk to take a look at the history.    <br />Unfortunately the basic Windows commandline (cmd) is just awful and outdated. And while some people swear by the MinGW stuff, I loathe the Unix commandline. So Powershell was the only good way for me on Windows to use git. </p>  <p>Now, thanks to some great work from <a href="http://solutionizing.net/">Keith Dahlby</a>, <a href="http://www.markembling.info/">Jeremy Skinner</a> and <a href="http://www.jeremyskinner.co.uk/">Mark Embling</a> using git from Powershell just got a whole lot more comfortable with <a href="http://github.com/dahlbyk/posh-git">Posh-Git</a>.</p>  <p>Documentation is still a bit sparse, but Posh-Git at it’s core gives you two things: It modifies your Powershell prompt to display relevant git information (branch name and staged/unstaged changes) and adds tab-completion to all git commands. Tab completion also works on branches so you can even hit tab on a git checkout and it will auto-complete to a branch. Really really nice I have to say.</p>  <p>Here is how my git shell looks like now with Posh-Git:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb.png" width="498" height="81" /></a></p>  <p>Once you have changes it will display them also on the prompt:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image1.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb1.png" width="569" height="69" /></a></p>  <p>(Meaning: 1 new file, 1 deleted and 0 old ones changed)</p>  <p><strong>Installing</strong></p>  <p>Unfortunately not everyone is a Powershell buff like Keith and friends, so I had a bit of trouble finding out how to set up Posh-Git. Actually, it’s dead simple, but nobody told me: Just put all files from the <a href="http://github.com/dahlbyk/posh-git">Posh-Git repository</a> into the folder:</p>  <blockquote>   <p><em>C:\Users\&lt;username&gt;\Documents\WindowsPowerShell\</em></p> </blockquote>  <p>And rename the file <em>profile.example.ps1</em> to <em>Microsoft.PowerShell_profile.ps1</em>. If you already had a PowerShell_profile.ps1 file set up with some custom settings, you can just add the code from profile.example.ps1 to your existing profile (assuming you didn’t change your prompt before).</p>  <p>After that, restart your Powershell prompt and enjoy!</p>  <p><strong>Important: </strong></p>  <p>The latest Posh-Git is only working with git 1.7.1 and higher, so if you are still running the 1.7.0.2 release you have to use the <a href="http://github.com/dahlbyk/posh-git/zipball/v0.2">v0.2 Posh-Git</a> release.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>896</wp:post_id>
<wp:post_date>2010-09-01 17:23:09</wp:post_date>
<wp:post_date_gmt>2010-09-01 15:23:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-git-from-powershell-just-got-easier-posh-git</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=897</link>
<pubDate>Sun, 05 Sep 2010 14:28:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>897</wp:post_id>
<wp:post_date>2010-09-05 16:28:40</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-36</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"701";s:6:"height";s:2:"55";s:14:"hwstring_small";s:23:"height='10' width='128'";s:4:"file";s:18:"2010/09/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image2-150x55.png";s:5:"width";s:3:"150";s:6:"height";s:2:"55";}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x23.png";s:5:"width";s:3:"300";s:6:"height";s:2:"23";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=898</link>
<pubDate>Sun, 05 Sep 2010 14:28:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb2.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>898</wp:post_id>
<wp:post_date>2010-09-05 16:28:41</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-28</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb2.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb2.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"705";s:6:"height";s:2:"59";s:14:"hwstring_small";s:23:"height='10' width='128'";s:4:"file";s:24:"2010/09/image_thumb2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb2-150x59.png";s:5:"width";s:3:"150";s:6:"height";s:2:"59";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb2-300x25.png";s:5:"width";s:3:"300";s:6:"height";s:2:"25";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=899</link>
<pubDate>Sun, 05 Sep 2010 14:28:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>899</wp:post_id>
<wp:post_date>2010-09-05 16:28:41</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-37</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"254";s:6:"height";s:3:"107";s:14:"hwstring_small";s:23:"height='53' width='128'";s:4:"file";s:18:"2010/09/image3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image3-150x107.png";s:5:"width";s:3:"150";s:6:"height";s:3:"107";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=900</link>
<pubDate>Sun, 05 Sep 2010 14:28:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb3.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>900</wp:post_id>
<wp:post_date>2010-09-05 16:28:42</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-29</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb3.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb3.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"258";s:6:"height";s:3:"111";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:24:"2010/09/image_thumb3.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb3-150x111.png";s:5:"width";s:3:"150";s:6:"height";s:3:"111";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=901</link>
<pubDate>Sun, 05 Sep 2010 14:28:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>901</wp:post_id>
<wp:post_date>2010-09-05 16:28:43</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-38</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"180";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:18:"2010/09/image4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image4-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=902</link>
<pubDate>Sun, 05 Sep 2010 14:28:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb4.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>902</wp:post_id>
<wp:post_date>2010-09-05 16:28:44</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-30</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb4.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb4.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"324";s:6:"height";s:3:"184";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:24:"2010/09/image_thumb4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb4-300x170.png";s:5:"width";s:3:"300";s:6:"height";s:3:"170";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Weird errors with .NET Framework Client Profile referencing Full Profile Assemblies</title>
<link>http://www.tigraine.at/2010/09/05/weird-errors-with-net-framework-client-profile-referencing-full-profile-assemblies/</link>
<pubDate>Sun, 05 Sep 2010 14:28:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/05/weird-errors-with-net-framework-client-profile-referencing-full-profile-assemblies/</guid>
<description></description>
<content:encoded><![CDATA[<p>I am currently working on a little demo project with NServiceBus and ran into this so I thought I’d share it:</p>  <p>If you create a new WPF project in VS2010 it will target by default the .NET FX Client Profile. That’s nice for a&#160; number of reasons, but you will see very weird behavior once you reference an assembly that requires the full .NET profile. </p>  <p>In my case it was NServiceBus that I was referencing. Although the using directives where there, and I got full IntelliSense (and the reference showed up in VS) I got this compile error:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image2.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb2.png" width="705" height="59" /></a></p>  <p>The code in question looks innocent:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image3.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb3.png" width="258" height="111" /></a></p>  <p>Well: The reason for this weirdness is the .NET Client Profile. NSB requires stuff that’s not in the Client Profile thus the compiler will not resolve the reference. Visual Studio has no clue about that and isn’t displaying meaningful errors. </p>  <p>The solution is obviously simple: Go to the project preferences and select the appropriate Target framework:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image4.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb4.png" width="324" height="184" /></a></p>  <p>Hope this helps!</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>903</wp:post_id>
<wp:post_date>2010-09-05 16:28:44</wp:post_date>
<wp:post_date_gmt>2010-09-05 14:28:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>weird-errors-with-net-framework-client-profile-referencing-full-profile-assemblies</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>confusingroadsignlargewebview.jpg</title>
<link>http://www.tigraine.at/?attachment_id=904</link>
<pubDate>Mon, 06 Sep 2010 20:47:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>904</wp:post_id>
<wp:post_date>2010-09-06 22:47:39</wp:post_date>
<wp:post_date_gmt>2010-09-06 20:47:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>confusingroadsignlargewebview-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/confusingroadsignlargewebview.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"347";s:14:"hwstring_small";s:22:"height='96' width='82'";s:4:"file";s:41:"2010/09/confusingroadsignlargewebview.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"confusingroadsignlargewebview-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:41:"confusingroadsignlargewebview-259x300.jpg";s:5:"width";s:3:"259";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>confusingroadsignlargewebview_thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=905</link>
<pubDate>Mon, 06 Sep 2010 20:47:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview_thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>905</wp:post_id>
<wp:post_date>2010-09-06 22:47:40</wp:post_date>
<wp:post_date_gmt>2010-09-06 20:47:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>confusingroadsignlargewebview_thumb-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview_thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/confusingroadsignlargewebview_thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"211";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='83'";s:4:"file";s:47:"2010/09/confusingroadsignlargewebview_thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"confusingroadsignlargewebview_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Untangling the dependency ball! Windsor + NServiceBus + Caliburn + Fluent Nhibernate in one package</title>
<link>http://www.tigraine.at/2010/09/06/untangling-the-dependency-ball-windsor-nservicebus-caliburn-fluent-nhibernate-in-one-package/</link>
<pubDate>Mon, 06 Sep 2010 20:47:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Castle]]></category>

		<category domain="category" nicename="castle"><![CDATA[Castle]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[NHibernate]]></category>

		<category domain="category" nicename="nhibernate"><![CDATA[NHibernate]]></category>

		<category><![CDATA[WPF]]></category>

		<category domain="category" nicename="wpf"><![CDATA[WPF]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/06/untangling-the-dependency-ball-windsor-nservicebus-caliburn-fluent-nhibernate-in-one-package/</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview.jpg"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="confusing-road-sign-large-web-view" border="0" alt="confusing-road-sign-large-web-view" src="http://www.tigraine.at/wp-content/uploads/2010/09/confusingroadsignlargewebview_thumb.jpg" width="211" height="244" /></a></p>  <p>Unfortunately <a href="http://www.tigraine.at/2010/08/25/the-fastest-way-to-install-dotless-nubular-nu/">nu</a> is still falling short on one thing: Making sure that all the stuff you install is actually compatible with the other stuff you have already installed. There is a <a href="http://github.com/nu/nu/issues/issue/13">ticket for this</a> and I’m fairly confident this will get resolved (please vote the ticket up), but for now I was back to figuring out what version of what framework to use to make my app compile.</p>  <p>As always, the main problem was Castle.Core, being present in 3 different versions. (NSB used version 1.1, Caliburn 1.2 and the latest Windsor release targets 2.5) </p>  <p>I decided to back down and use 1.2 since there is a NHibernate gem for 1.2 and a Windsor gem for 1.2. I’m now using NHibernate 3.0 alpha so think about using this “stack”. </p>  <p>Anyway, this is a collection of:</p>  <ol>   <li>NServiceBus 2.0 .NET 4 (2.0.0.1219)</li>    <li>NServiceBus.ObjectBuilder.CastleWindsor</li>    <li>Castle.Windsor (2.1)</li>    <li>Caliburn 2.0 (still unreleased from the trunk)</li>    <li>NHibernate 3.0.0.1002</li>    <li>FluentNhibernate 1.1 (Updated to NHibernate 3.0)</li>    <li>AutoMapper</li> </ol>  <p>Disclaimer: The whole thing is built for .NET 4.0 and works on my machine. Don’t blame me if it’s broken for you.</p>  <p>Anyway. You can download the whole package of libraries here: <a href="http://www.tigraine.at/wp-content/uploads/2010/09/castle-stack.rar">castle-stack.rar</a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>906</wp:post_id>
<wp:post_date>2010-09-06 22:47:41</wp:post_date>
<wp:post_date_gmt>2010-09-06 20:47:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>untangling-the-dependency-ball-windsor-nservicebus-caliburn-fluent-nhibernate-in-one-package</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5377</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-14 21:24:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 21:24:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Slow: yes, since it builds *everything*. Setup: not so bad actually, it only needs a path to git. Build against trunk: nope, it has different descriptors for each version (e.g. there's a descriptor for Windsor 2.1 and another one for trunk): http://github.com/dagda1/hornget/tree/master/ioc/castle.windsor/nAnother advantage of horn is that you could configure it to run tests for each project it builds, to make sure the stack you build actually works. This would have to be done for each descriptor though...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5141</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5142</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5148</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5149</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5201</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5202</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5217</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5218</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5235</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5236</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5241</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5242</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5245</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5246</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5372</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-14 21:24:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 21:24:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Slow: yes, since it builds *everything*. Setup: not so bad actually, it only needs a path to git. Build against trunk: nope, it has different descriptors for each version (e.g. there's a descriptor for Windsor 2.1 and another one for trunk): http://github.com/dagda1/hornget/tree/master/ioc/castle.windsor/nAnother advantage of horn is that you could configure it to run tests for each project it builds, to make sure the stack you build actually works. This would have to be done for each descriptor though...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5373</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5374</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5394</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-14 21:24:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 21:24:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Slow: yes, since it builds *everything*. Setup: not so bad actually, it only needs a path to git. Build against trunk: nope, it has different descriptors for each version (e.g. there's a descriptor for Windsor 2.1 and another one for trunk): http://github.com/dagda1/hornget/tree/master/ioc/castle.windsor/nAnother advantage of horn is that you could configure it to run tests for each project it builds, to make sure the stack you build actually works. This would have to be done for each descriptor though...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5395</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-14 21:24:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 21:24:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Slow: yes, since it builds *everything*. Setup: not so bad actually, it only needs a path to git. Build against trunk: nope, it has different descriptors for each version (e.g. there's a descriptor for Windsor 2.1 and another one for trunk): http://github.com/dagda1/hornget/tree/master/ioc/castle.windsor/nAnother advantage of horn is that you could configure it to run tests for each project it builds, to make sure the stack you build actually works. This would have to be done for each descriptor though...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4985</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4986</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4987</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4988</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4989</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4990</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4998</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5000</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5003</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5004</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5005</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5006</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5007</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5009</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5011</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5012</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5014</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5015</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5016</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5017</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5018</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5019</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5025</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5026</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5045</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5046</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5056</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5057</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5061</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5062</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5063</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5064</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5068</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5069</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5072</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5073</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5077</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5078</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5082</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5083</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5088</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5089</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5090</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5091</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5093</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5094</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5095</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5096</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5097</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5098</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5100</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5101</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5102</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5103</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5111</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5112</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5113</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5114</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5118</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5119</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5137</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5138</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5179</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5180</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5182</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5183</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5210</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5211</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5212</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5213</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5291</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5292</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5294</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5295</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5337</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5338</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5339</wp:comment_id>
<wp:comment_author><![CDATA[Daniel Hu00f6lbling]]></wp:comment_author>
<wp:comment_author_email>tigraine@tigraine.at</wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 18:49:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 18:49:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes.. But horn also had it's drawbacks. Mainly being very slow and when I tried it it took a fair amount of setup too..nAlso horn was building against trunk IIRC, and I wanted to go with releases.. ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5340</wp:comment_id>
<wp:comment_author><![CDATA[Mauricio]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.google.com/profiles/mauricioscheffer</wp:comment_author_url>
<wp:comment_author_IP></wp:comment_author_IP>
<wp:comment_date>2010-09-07 13:52:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-07 13:52:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is exactly where Horn shines (or should I say shone). You would just create a descriptor for each project (or edit an existing one, from that list I think only Caliburn is missing in the descriptor repo) with the needed dependencies and versions, and then just send Horn to build them.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>WPF FormatString and it&#8217;s localization bugs</title>
<link>http://www.tigraine.at/2010/09/10/wpf-formatstring-and-its-localization-bugs/</link>
<pubDate>Fri, 10 Sep 2010 13:03:55 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/10/wpf-formatstring-and-its-localization-bugs/</guid>
<description></description>
<content:encoded><![CDATA[<p>As some of you may know, I am from Austria. That means that I get to pay my bills in Euro and we format our decimals with a comma instead of a period (yes I know I’m weird). </p>  <p>So naturally my culture setting is de-AT and I really expect to see my decimals formatted this way: &euro; 19,99   <br />Turns out, WPF doesn’t give a damn and if you use FormatString in a binding it will just go ahead and return en-US formats!</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:16a98245-b48d-4b23-9025-9e1fe611e766" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;TextBox Text="{Binding Path=Model.Price, StringFormat=\{0:c\}}"/&gt;
</pre></div>

<p>This is a bug in WPF and has been there for more than 2 years now from what I can gather. There is a <a href="http://www.nbdtech.com/Blog/archive/2009/02/22/wpf-data-binding-cheat-sheet-update-the-internationalization-fix.aspx">fix to it</a> as suggested by <a href="http://twitter.com/nirdobovizki">Nir Dobovizki</a>, who coincidentally also has a pretty cool <a href="http://go.nbdtech.com?94E138EA">CheatSheet on WPF Databinding</a> that I now have taped to the wall.</p>

<p>For the sake of completeness here is the code you have to put in your App startup code (I’ve thrown it in my App constructor):</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:543174bf-e84f-4f00-ba38-76b53eae9512" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
FrameworkElement.LanguageProperty.OverrideMetadata(
&#160;&#160;&#160;&#160;typeof(FrameworkElement), 
&#160;&#160;&#160;&#160;new FrameworkPropertyMetadata(
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;XmlLanguage.GetLanguage(CultureInfo.CurrentCulture.IetfLanguageTag)));
</pre></div>

<p>While at it I also found out another pretty cool thing that managed to save me a lot of markup in XAML: MultiBinding! You can apply StringFormat to single elements through the {Binding} blocks, but sometimes you want to show stuff like “Showing Page x of y” somewhere. 
  <br />My naïve approach was to just create 4 elements and bind 2 of them to the appropriate values. As <a href="http://elegantcode.com/author/blagunas/">Brian</a> points out in his post on <a href="http://elegantcode.com/2009/04/07/wpf-stringformat-in-xaml-with-the-stringformat-attribute/">WPF StringFormat</a> you can just do stuff like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:0523d3f4-907f-4a8e-845b-5e0ad668dd81" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;TextBlock VerticalAlignment="Center" Margin="0, 0, 0, 10"&gt;
&#160;&#160;&#160;&#160;&lt;TextBlock.Text&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;MultiBinding StringFormat="Showing Page {0} of {1}"&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Binding Path="CurrentPage" /&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;Binding Path="NumberOfPages" /&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/MultiBinding&gt;
&#160;&#160;&#160;&#160;&lt;/TextBlock.Text&gt;
&lt;/TextBlock&gt;
</pre></div>

<p>The StringFormat attribute works exactly like the String.Format method whereas the &lt;Binding&gt; children are the parameters passed into it. Pretty cool to say the least. </p>

<p>Now if only someone explained to me why WPF Grids have this hideous way of cluttering up my markup with Grid.Row=”0” Grid.Column=”1” I may finally make my peace with WPF (aka the display technology I stayed away until now because learning it seemed like an impossible task)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>907</wp:post_id>
<wp:post_date>2010-09-10 15:03:55</wp:post_date>
<wp:post_date_gmt>2010-09-10 13:03:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wpf-formatstring-and-its-localization-bugs</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5268</wp:comment_id>
<wp:comment_author><![CDATA[Tigraine &raquo; Blog Archive &raquo; Beware of &lt;Button IsDefault=&rdquo;True&rdquo;&gt; in WPF/Silverlight]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.tigraine.at/2010/09/13/beware-of-button-isdefaulttrue-in-wpfsilverlight/</wp:comment_author_url>
<wp:comment_author_IP>80.67.17.203</wp:comment_author_IP>
<wp:comment_date>2010-09-13 13:59:07</wp:comment_date>
<wp:comment_date_gmt>2010-09-13 11:59:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] very simple dialog uses a StringFormat to display the Price field. This prevents me from using any other binding than a [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>IMG_0119.png</title>
<link>http://www.tigraine.at/?attachment_id=908</link>
<pubDate>Fri, 10 Sep 2010 21:38:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>908</wp:post_id>
<wp:post_date>2010-09-10 23:38:13</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0119-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0119.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"768";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:20:"2010/09/IMG_0119.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"IMG_0119-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"IMG_0119-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0119_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=909</link>
<pubDate>Fri, 10 Sep 2010 21:38:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>909</wp:post_id>
<wp:post_date>2010-09-10 23:38:17</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0119_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0119_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:26:"2010/09/IMG_0119_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"IMG_0119_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"IMG_0119_thumb-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0121.png</title>
<link>http://www.tigraine.at/?attachment_id=910</link>
<pubDate>Fri, 10 Sep 2010 21:38:22 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>910</wp:post_id>
<wp:post_date>2010-09-10 23:38:22</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0121-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0121.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"768";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:20:"2010/09/IMG_0121.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"IMG_0121-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"IMG_0121-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0121_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=911</link>
<pubDate>Fri, 10 Sep 2010 21:38:26 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>911</wp:post_id>
<wp:post_date>2010-09-10 23:38:26</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:26</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0121_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0121_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:26:"2010/09/IMG_0121_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"IMG_0121_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"IMG_0121_thumb-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0114.png</title>
<link>http://www.tigraine.at/?attachment_id=912</link>
<pubDate>Fri, 10 Sep 2010 21:38:34 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>912</wp:post_id>
<wp:post_date>2010-09-10 23:38:34</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0114-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0114.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"768";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:20:"2010/09/IMG_0114.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"IMG_0114-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"IMG_0114-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0114_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=913</link>
<pubDate>Fri, 10 Sep 2010 21:38:39 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>913</wp:post_id>
<wp:post_date>2010-09-10 23:38:39</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0114_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0114_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:26:"2010/09/IMG_0114_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"IMG_0114_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"IMG_0114_thumb-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0117.png</title>
<link>http://www.tigraine.at/?attachment_id=914</link>
<pubDate>Fri, 10 Sep 2010 21:38:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>914</wp:post_id>
<wp:post_date>2010-09-10 23:38:45</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0117-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0117.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"768";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:20:"2010/09/IMG_0117.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"IMG_0117-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"IMG_0117-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IMG_0117_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=915</link>
<pubDate>Fri, 10 Sep 2010 21:38:47 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117_thumb.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>915</wp:post_id>
<wp:post_date>2010-09-10 23:38:47</wp:post_date>
<wp:post_date_gmt>2010-09-10 21:38:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>img_0117_thumb-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117_thumb.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/IMG_0117_thumb.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"324";s:6:"height";s:3:"484";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:26:"2010/09/IMG_0117_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"IMG_0117_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"IMG_0117_thumb-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Using Readability on the iPhone</title>
<link>http://www.tigraine.at/2010/09/11/using-readability-on-the-iphone/</link>
<pubDate>Sat, 11 Sep 2010 21:37:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

		<category><![CDATA[Tools]]></category>

		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/11/using-readability-on-the-iphone/</guid>
<description></description>
<content:encoded><![CDATA[<p>Disclaimer: This is not a post about programming. No code was harmed during the creation of this blogpost.</p>  <p>As you may have guessed from the title, I got myself an iPhone4 some weeks ago and love it ever since. The browser in particular is great, yet sometimes even the best browser can’t change that a website is badly designed. Too often you can’t make the content out in between all the Google Adwords, the fonts are hideous or it’s a fixed width layout that’s way too wide. </p>  <p>On my PC I just hit the <a href="http://lab.arc90.com/experiments/readability/">Readability</a> bookmarklet and through magic all the ugly stuff goes away and only the content remains. Well, since Readability is just JavaScript you can do the same thing on the iPhone too, it’s just a bit trickier to install.</p>  <p>Here is how a badly readable site looks with Readability (note that it does not remove images that belong to the post!):</p>  <p>Before – After Readability</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="IMG_0119" border="0" alt="IMG_0119" src="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0119_thumb.png" width="320" height="480" /></a><a href="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="IMG_0121" border="0" alt="IMG_0121" src="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0121_thumb.png" width="320" height="480" /></a></p>    <p>As you can see, the width of the layout is too wide to be easily readable in portrait orientation. </p>  <p>Step 1: Go to <a href="http://lab.arc90.com/experiments/readability/">http://lab.arc90.com/experiments/readability/</a> on your iPhone</p>  <p>Select all the text from the textbox on the right and copy it:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="IMG_0114" border="0" alt="IMG_0114" src="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0114_thumb.png" width="320" height="480" /></a></p>  <p>Next, just hit add bookmark on the site and save the Readability site.    <br />Now go into your bookmarks and edit the readability bookmark. </p>  <p>Delete the previous address and paste the code we copied earlier. </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="IMG_0117" border="0" alt="IMG_0117" src="http://www.tigraine.at/wp-content/uploads/2010/09/IMG_0117_thumb.png" width="324" height="484" /></a></p>  <p>Et voila, whenever you want to see a page clearer, just open that bookmark and it will convert any ugly site into a rather pleasant read. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>916</wp:post_id>
<wp:post_date>2010-09-11 23:37:00</wp:post_date>
<wp:post_date_gmt>2010-09-11 21:37:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-readability-on-the-iphone</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=917</link>
<pubDate>Mon, 13 Sep 2010 11:59:01 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>917</wp:post_id>
<wp:post_date>2010-09-13 13:59:01</wp:post_date>
<wp:post_date_gmt>2010-09-13 11:59:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-39</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"324";s:6:"height";s:3:"237";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:18:"2010/09/image5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image5-300x219.png";s:5:"width";s:3:"300";s:6:"height";s:3:"219";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=918</link>
<pubDate>Mon, 13 Sep 2010 11:59:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb5.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>918</wp:post_id>
<wp:post_date>2010-09-13 13:59:02</wp:post_date>
<wp:post_date_gmt>2010-09-13 11:59:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-31</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb5.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb5.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"328";s:6:"height";s:3:"241";s:14:"hwstring_small";s:23:"height='94' width='128'";s:4:"file";s:24:"2010/09/image_thumb5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb5-300x220.png";s:5:"width";s:3:"300";s:6:"height";s:3:"220";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Beware of &lt;Button IsDefault=&#8221;True&#8221;&gt; in WPF/Silverlight</title>
<link>http://www.tigraine.at/2010/09/13/beware-of-button-isdefaulttrue-in-wpfsilverlight/</link>
<pubDate>Mon, 13 Sep 2010 11:59:02 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[WPF]]></category>

		<category domain="category" nicename="wpf"><![CDATA[WPF]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/13/beware-of-button-isdefaulttrue-in-wpfsilverlight/</guid>
<description></description>
<content:encoded><![CDATA[<p>I’ve spent the better part of my weekend finding this bug and thought I’d share it in case someone else is having the problem. I’m building a WPF user interface with a NServiceBus backend and started noticing that sometimes changing data on the client didn’t generate UPDATE statements in my Database. I first assumed it had to do with my backend code, then I started digging through the various libraries I am using (NHibernate and NServiceBus) to find the problem. </p>  <p>After 2 days debugging through the backend code I finally found out that it’s the WPF application that sometimes sent wrong data. The scenario is quite simple:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image5.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb5.png" width="328" height="241" /></a></p>  <p>This very simple dialog uses a <a href="http://www.tigraine.at/2010/09/10/wpf-formatstring-and-its-localization-bugs/">StringFormat</a> to display the Price field. This prevents me from using any other binding than a <em>UpdateSourceTrigger=”OnLostFocus”</em> because otherwise it would reformat the field on every key-press. Rendering it unusable due to a jumping focus caret.&#160; </p>  <p>The issue was that upon hitting Save, sometimes the Save method was executed before the data was bound to the model, sometimes the other way around. I genuinely thought I had a race condition until I noticed one little thing: Since it’s a decimal field I usually fill those in by using the number pad. That also led to me hitting the Enter quite often without thinking about it, thus invoking the Save method while still having the focus on the Price Textbox. </p>  <p>If you set a Button to<em> IsDefault=”True”</em> and hit Enter the Command will be executed without triggering the OnLostFocus Databindings in your Textbox, making your code act on stale model data. The only way around this is to either use <em>UpdateSourceTrigger=”OnPropertyChanged”</em> (not always applicable) or remove the IsDefault attribute from your form. </p>  <p>I still believe this is a bug in WPF, but at least now I know about it and can avoid it.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>919</wp:post_id>
<wp:post_date>2010-09-13 13:59:02</wp:post_date>
<wp:post_date_gmt>2010-09-13 11:59:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>beware-of-button-isdefaulttrue-in-wpfsilverlight</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=920</link>
<pubDate>Wed, 15 Sep 2010 14:55:27 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>920</wp:post_id>
<wp:post_date>2010-09-15 16:55:27</wp:post_date>
<wp:post_date_gmt>2010-09-15 14:55:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-40</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"330";s:14:"hwstring_small";s:23:"height='66' width='128'";s:4:"file";s:18:"2010/09/image6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image6-300x154.png";s:5:"width";s:3:"300";s:6:"height";s:3:"154";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Git: Unstaging all changes and reset the working tree</title>
<link>http://www.tigraine.at/2010/09/15/git-unstaging-all-changes-and-reset-the-working-tree/</link>
<pubDate>Wed, 15 Sep 2010 14:55:28 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Git]]></category>

		<category domain="category" nicename="git"><![CDATA[Git]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/15/git-unstaging-all-changes-and-reset-the-working-tree/</guid>
<description></description>
<content:encoded><![CDATA[<p>When you commit something to git you first have to stage (add to the index) your changes. This means you have to git add all the files you want to have included in this commit before git considers them part of the commit. To some this added complexity feels like a burden, but to me it’s a blessing.</p>  <p><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="git working dir / index / repository diagram" src="http://www.tigraine.at/wp-content/uploads/2010/09/image6.png" width="640" height="330" /></p>  <p>Ever forgot that you just did 2 distinct features that really should be in 2 different commits? Well, just add the changes of the first feature, commit, repeat for the second commit and you have everything organized the way you want it to show up in your history. </p>  <p>But: You usually don’t do individual <em>git add</em> commands anyway, if you are anything like me you just hit <em>git add –A </em>(adding all changes in the working directory) and while writing the commit message you realize that there are two files that should not go into this commit. But how do you remove something from the index? </p>  <p>Since you used <em>git add</em> to put them in the index it would be logical to use<em> git rm</em>? Wrong! <em>Git rm</em> will simply delete the file and add the deletion to the index. Meet: </p>  <p><strong><u>git reset </u></strong></p>  <p><font style="font-size: 10.5pt">As with all things in git, git reset can be used in a number of ways. So here is the most common usage in day to day usage:</font></p>  <p><strong>git reset</strong> : Clears your index, leaves your working directory untouched. (simply unstaging everything)</p>  <p><strong>git reset --hard</strong> : Clears your index, reverts all changes in your working directory to the last commit. (the same thing as svn revert would do)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>921</wp:post_id>
<wp:post_date>2010-09-15 16:55:28</wp:post_date>
<wp:post_date_gmt>2010-09-15 14:55:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>git-unstaging-all-changes-and-reset-the-working-tree</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Good ideas worth spreading: SystemDateTime abstractions</title>
<link>http://www.tigraine.at/2010/09/16/good-ideas-worth-spreading-systemdatetime-abstractions/</link>
<pubDate>Thu, 16 Sep 2010 17:00:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[Patterns]]></category>

		<category domain="category" nicename="patterns"><![CDATA[Patterns]]></category>

		<category><![CDATA[Testing]]></category>

		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/16/good-ideas-worth-spreading-systemdatetime-abstractions/</guid>
<description></description>
<content:encoded><![CDATA[<p>I brought this example up a lot on this blog, but while looking at the code of <a href="http://www.cre8ivethought.com/blog/index">Mark Nijhof</a> yesterday I noticed a rather nice solution to my ongoing problem of abstracting away System.DateTime.Now calls for testing purposes. </p>  <p>As stated before: <a href="http://www.tigraine.at/2009/03/25/tests-should-last-forever/">Don’t make your tests depend on external factors</a> like the current time or Date, and I even <a href="http://www.tigraine.at/2009/10/14/beggars-cant-be-choosers-dependency-injection-through-global-factories/">had a solution</a> until now that solved the problem rather nicely through a static factory that returns an instance to your DateProvider.     <br />Why a global factory? Simple: having your IDateProvider be a mandatory dependency on all your objects and services will quite simply clutter up your design. IDateProvider is by no means a really important dependency, and modeling it the same way as say IImportantBusinessRule would not only require you to think about that DateTimeProvider in every test that you run against your object, but also reduce the readability of your constructors dramatically. </p>  <p>What I didn’t think about when writing my IDateProvider abstraction almost a year ago was that with C# 3.5 and lambdas, passing around a function is essentially the same as using a strategy class, but with a lot less ceremony. And obviously so thought <a href="http://www.cre8ivethought.com/">Mark Nijhof</a> when he wrote <a href="http://github.com/MarkNijhof/Fohjin">Fohjin</a> (a very nice CQRS example you really should check out on GitHub). </p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:9163dd0e-7ff8-4d9b-8e81-24f814a05e37" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
public static class SystemDateTime
{
&#160;&#160;&#160;&#160;public static Func&lt;DateTime&gt; Now = () =&gt; DateTime.Now;
&#160;&#160;&#160;&#160;public static void Reset()
&#160;&#160;&#160;&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Now = () =&gt; DateTime.Now;
&#160;&#160;&#160;&#160;}
}
</pre></div>

<p>So simple yet so elegant. In your tests you hardly have to think about this stuff, but if there is a test that depends on the date you can just go ahead and set it like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:b2ac2a37-ed2e-4ef4-b93b-3fd2b1c0736c" class="wlWriterEditableSmartContent"><pre name="code" class="csharp">
[Fact]
public void ctor_SetsDateAddedTo_CurrentDate()
{
&#160;&#160;&#160;&#160;SystemDateTime.Now = () =&gt; DateTime.MaxValue;
&#160;&#160;&#160;&#160;var orderLine = new OrderLine(TestData.Product, 1);

&#160;&#160;&#160;&#160;Assert.Equal(DateTime.MaxValue, orderLine.DateAdded);
}
</pre></div>

<p>It’s just a small touch, but it saves you 2 classes and still solves the problem nicely. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>922</wp:post_id>
<wp:post_date>2010-09-16 19:00:00</wp:post_date>
<wp:post_date_gmt>2010-09-16 17:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>good-ideas-worth-spreading-systemdatetime-abstractions</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1284632070</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=930</link>
<pubDate>Fri, 17 Sep 2010 15:40:10 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>930</wp:post_id>
<wp:post_date>2010-09-17 17:40:10</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-41</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"314";s:6:"height";s:3:"167";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:18:"2010/09/image7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"image7-300x159.png";s:5:"width";s:3:"300";s:6:"height";s:3:"159";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=931</link>
<pubDate>Fri, 17 Sep 2010 15:40:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb6.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>931</wp:post_id>
<wp:post_date>2010-09-17 17:40:11</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-32</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb6.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb6.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"318";s:6:"height";s:3:"171";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:24:"2010/09/image_thumb6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb6-300x161.png";s:5:"width";s:3:"300";s:6:"height";s:3:"161";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=932</link>
<pubDate>Fri, 17 Sep 2010 15:40:11 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>932</wp:post_id>
<wp:post_date>2010-09-17 17:40:11</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-42</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"212";s:6:"height";s:3:"162";s:14:"hwstring_small";s:23:"height='96' width='125'";s:4:"file";s:18:"2010/09/image8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=933</link>
<pubDate>Fri, 17 Sep 2010 15:40:12 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb7.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>933</wp:post_id>
<wp:post_date>2010-09-17 17:40:12</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-33</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb7.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb7.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"216";s:6:"height";s:3:"166";s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:24:"2010/09/image_thumb7.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=934</link>
<pubDate>Fri, 17 Sep 2010 15:40:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>934</wp:post_id>
<wp:post_date>2010-09-17 17:40:13</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-43</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"245";s:6:"height";s:3:"152";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:18:"2010/09/image9.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=935</link>
<pubDate>Fri, 17 Sep 2010 15:40:13 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb8.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>935</wp:post_id>
<wp:post_date>2010-09-17 17:40:13</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-34</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb8.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb8.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"153";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:24:"2010/09/image_thumb8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=936</link>
<pubDate>Fri, 17 Sep 2010 15:40:14 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>936</wp:post_id>
<wp:post_date>2010-09-17 17:40:14</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-44</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"151";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:19:"2010/09/image10.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=937</link>
<pubDate>Fri, 17 Sep 2010 15:40:15 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb9.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>937</wp:post_id>
<wp:post_date>2010-09-17 17:40:15</wp:post_date>
<wp:post_date_gmt>2010-09-17 15:40:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-35</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb9.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb9.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"248";s:6:"height";s:3:"155";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:24:"2010/09/image_thumb9.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>How to use different layout containers in WPF</title>
<link>http://www.tigraine.at/2010/09/17/how-to-use-different-layout-containers-in-wpf/</link>
<pubDate>Fri, 17 Sep 2010 17:00:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

		<category><![CDATA[WPF]]></category>

		<category domain="category" nicename="wpf"><![CDATA[WPF]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/17/how-to-use-different-layout-containers-in-wpf/</guid>
<description></description>
<content:encoded><![CDATA[<p>WPF is different, that much I knew before I started learning it. But understanding really how different it is really takes a lot of time and effort. Especially when used to Windows Forms and HTML+CSS, WPF feels very alien in it’s way how to do layout. Here is what I learned:</p>  <p><strong>StackPanel:</strong></p>  <p>StackPanels are used to layout elements horizontally stacked onto each other. </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image7.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb6.png" width="318" height="171" /></a></p>  <p>By default the elements inside a StackPanel will take up their set height and you can make them fill the whole width by setting their <em>VerticalAlignment</em> to <em>Stretch</em></p>  <p>They will however never fill the full height of the container when it is resized, no matter how your <em>HorizontalAlign </em>property is set. If the above container got resized in height the buttons would still stick to the top with their individual heights staying just the same.</p>  <p><strong>WrapPanel:</strong></p>  <p>They are the same as the StackPanel, just in vertical. They stack elements vertically and reorder them if there is no more space vertically. However they also don’t allow them to fill the vertical space available to the control.</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image8.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb7.png" width="216" height="166" /></a></p>  <p><strong>The Dockpanel:</strong></p>  <p>Where both WrapPanel and StackPanel don’t allow Elements to fill vertical space (even with HorizontalAlignment to Stretch) the DockPanel will do just that by default:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image9.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb8.png" width="244" height="153" /></a></p>  <p>The trick here is that only the last child really fills the panel, so while resizing the height will resize all 3 buttons, a horizontal resize will only cause the third button to change size. This has to do with the LastChildFill property, where Button3 is considered the filling element. </p>  <p>Why am I telling you this? Well, turns out most UIs look something like this:</p>  <p>Some header, then one filling list that should resize and then some controls around the edges. Making the list resize with the parent container can’t be achieved by the other panels at all. You have to use a DockPanel and use the DockPanel.Dock attributes on your child controls:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:2e6d557b-b705-4c34-b5ad-8606cf99c7de:f5a0003e-560c-4e80-afc7-a0fa94da07e6" class="wlWriterEditableSmartContent"><pre name="code" class="xml">
&lt;DockPanel Margin="0,0,0,0"&gt;
	&lt;TextBlock DockPanel.Dock="Top" Text="Hello World" /&gt;
	&lt;TextBlock DockPanel.Dock="Bottom" Text="Bottom" /&gt;
	&lt;Button Content="Button3"&gt;&lt;/Button&gt;
&lt;/DockPanel&gt;
</pre></div>

<p>This will make the last element fill all available space left by the elements that where docked to the sides like this:</p>

<p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image10.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb9.png" width="248" height="155" /></a></p>

<p>Once you understand these three layout concepts, you can build pretty much everything by nesting panels within each other. There is however also the GridPanel that lends itself very well to creating forms and other stuff that has to be aligned on a grid. But I won’t go into that in this post (and I think it’s markup is just awful. HTML4 tables were more intuitive to write)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>938</wp:post_id>
<wp:post_date>2010-09-17 19:00:00</wp:post_date>
<wp:post_date_gmt>2010-09-17 17:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-use-different-layout-containers-in-wpf</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Powershell Functions are a different kind of beast!</title>
<link>http://www.tigraine.at/2010/09/22/powershell-functions-are-a-different-kind-of-beast/</link>
<pubDate>Wed, 22 Sep 2010 15:20:52 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/22/powershell-functions-are-a-different-kind-of-beast/</guid>
<description></description>
<content:encoded><![CDATA[<p>When you look at functions in C style language there are some things always true:</p>  <ol>   <li>Return always terminates the function </li>    <li>Return &lt;something&gt; returns a value/reference to the thing you return </li> </ol>  <p>Guess what: Powershell is no C style language! It may look like one with all the curly braces and the $ (reminding you of PHP) before variables. But it is no C language, rather it is a shell.. And shells seem to be working differently. </p>  <p>Care to hazard a guess what this will output?</p>  <blockquote>   <p><font face="Courier New">function Test        <br />{         <br />&#160;&#160;&#160; $a = &quot;Hello World&quot;         <br />&#160;&#160;&#160; &quot;Sorry World is not available&quot;         <br />&#160;&#160;&#160; return $a         <br />}</font></p>    <p><font face="Courier New">$output = Test        <br />Write-Host $output</font></p> </blockquote>  <p>If you’d expect it to return “Hello World” you are wrong. Actually the return value of the function Test is an array of 2 System.String:</p>  <blockquote>   <p>Sorry World is not available Hello World</p> </blockquote>  <p>Madness I know. But fact is that all things that get written to the “output” (like Write-Host) inside a function is part of the function output. You don’t need to use return.</p>  <p>This also means if you run commands like –match inside a function</p>  <blockquote>   <p>$v –match “regex”</p> </blockquote>  <p>–match will output true or false to the output. And thus your method output will include a True somewhere you don’t need it. Like this:</p>  <blockquote>   <p><font face="Courier New">function Test        <br />{         <br />&#160;&#160;&#160; $a = &quot;Hello World&quot;         <br />&#160;&#160;&#160; $a -match &quot;World&quot;         <br />&#160;&#160;&#160; return $matches[0]         <br />}</font></p>    <p><font face="Courier New">$output = Test        <br />Write-Host $output</font></p> </blockquote>  <p>Will output: <font face="Courier New">True World</font></p>  <p>You can avoid this behavior through redirecting the “output” to $null or by adding the [void] attribute like this:</p>  <blockquote>   <p>function Test      <br />{       <br />&#160;&#160;&#160; $a = &quot;Hello World&quot;       <br />&#160;&#160;&#160; $a -match &quot;World&quot; &gt; $null       <br />&#160;&#160;&#160; return $matches[0]       <br />}</p>    <p>$output = Test      <br />Write-Host $output</p> </blockquote>  <p>I never thought I’d have to revisit the workings of a return statement again, but obviously there is always the possibility for someone to come along and teach me something new. This person btw is Keith Hill who wrote an excellent article on <a href="http://keithhill.spaces.live.com/Blog/cns!5A8D2641E0963A97!811.entry">Powershell Output</a> that sheds some light on this topic and does a far better job at explaining it than I can possibly do.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>940</wp:post_id>
<wp:post_date>2010-09-22 17:20:52</wp:post_date>
<wp:post_date_gmt>2010-09-22 15:20:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>powershell-functions-are-a-different-kind-of-beast</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Noooooo4.jpg</title>
<link>http://www.tigraine.at/?attachment_id=942</link>
<pubDate>Thu, 23 Sep 2010 11:11:40 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>942</wp:post_id>
<wp:post_date>2010-09-23 13:11:40</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:40</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>noooooo4-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/Noooooo4.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"271";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:20:"2010/09/Noooooo4.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"Noooooo4-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"Noooooo4-300x203.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"203";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Noooooo4_thumb.jpg</title>
<link>http://www.tigraine.at/?attachment_id=943</link>
<pubDate>Thu, 23 Sep 2010 11:11:41 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4_thumb.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>943</wp:post_id>
<wp:post_date>2010-09-23 13:11:41</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>noooooo4_thumb-jpg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4_thumb.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/Noooooo4_thumb.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"404";s:6:"height";s:3:"275";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:26:"2010/09/Noooooo4_thumb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"Noooooo4_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"Noooooo4_thumb-300x204.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"204";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=944</link>
<pubDate>Thu, 23 Sep 2010 11:11:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image11.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>944</wp:post_id>
<wp:post_date>2010-09-23 13:11:42</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-45</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image11.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image11.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"528";s:6:"height";s:2:"71";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:19:"2010/09/image11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"image11-150x71.png";s:5:"width";s:3:"150";s:6:"height";s:2:"71";}s:6:"medium";a:3:{s:4:"file";s:18:"image11-300x40.png";s:5:"width";s:3:"300";s:6:"height";s:2:"40";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=945</link>
<pubDate>Thu, 23 Sep 2010 11:11:42 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb10.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>945</wp:post_id>
<wp:post_date>2010-09-23 13:11:42</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-36</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb10.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb10.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"532";s:6:"height";s:2:"75";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:25:"2010/09/image_thumb10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"image_thumb10-150x75.png";s:5:"width";s:3:"150";s:6:"height";s:2:"75";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb10-300x42.png";s:5:"width";s:3:"300";s:6:"height";s:2:"42";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=946</link>
<pubDate>Thu, 23 Sep 2010 11:11:43 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image12.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>946</wp:post_id>
<wp:post_date>2010-09-23 13:11:43</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-46</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image12.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image12.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"342";s:6:"height";s:3:"163";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:19:"2010/09/image12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"image12-300x142.png";s:5:"width";s:3:"300";s:6:"height";s:3:"142";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=947</link>
<pubDate>Thu, 23 Sep 2010 11:11:44 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb11.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>947</wp:post_id>
<wp:post_date>2010-09-23 13:11:44</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:44</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-37</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb11.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb11.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"346";s:6:"height";s:3:"167";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:25:"2010/09/image_thumb11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"image_thumb11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"image_thumb11-300x144.png";s:5:"width";s:3:"300";s:6:"height";s:3:"144";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=948</link>
<pubDate>Thu, 23 Sep 2010 11:11:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image13.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>948</wp:post_id>
<wp:post_date>2010-09-23 13:11:45</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-47</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image13.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image13.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"521";s:6:"height";s:3:"205";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:19:"2010/09/image13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image13-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"image13-300x118.png";s:5:"width";s:3:"300";s:6:"height";s:3:"118";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=949</link>
<pubDate>Thu, 23 Sep 2010 11:11:45 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb12.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>949</wp:post_id>
<wp:post_date>2010-09-23 13:11:45</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-38</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb12.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb12.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"525";s:6:"height";s:3:"209";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:25:"2010/09/image_thumb12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"image_thumb12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"image_thumb12-300x119.png";s:5:"width";s:3:"300";s:6:"height";s:3:"119";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>wlEmoticonsadsmile.png</title>
<link>http://www.tigraine.at/?attachment_id=950</link>
<pubDate>Thu, 23 Sep 2010 11:11:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/wlEmoticonsadsmile.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>950</wp:post_id>
<wp:post_date>2010-09-23 13:11:46</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>wlemoticonsadsmile-png</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/wlEmoticonsadsmile.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/wlEmoticonsadsmile.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";s:2:"19";s:6:"height";s:2:"19";s:14:"hwstring_small";s:22:"height='19' width='19'";s:4:"file";s:30:"2010/09/wlEmoticonsadsmile.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>I&#8217;m getting a new Virus Scanner</title>
<link>http://www.tigraine.at/2010/09/23/im-getting-a-new-virus-scanner/</link>
<pubDate>Thu, 23 Sep 2010 11:11:46 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Internet]]></category>

		<category domain="category" nicename="internet"><![CDATA[Internet]]></category>

		<category><![CDATA[Personal]]></category>

		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/23/im-getting-a-new-virus-scanner/</guid>
<description></description>
<content:encoded><![CDATA[<p>Just yesterday I was sitting around with some friends and telling them how great Microsoft Security Essentials works for me and how unobtrusive and easy to use this thing is. I’ve been using it for 3 years now on all of my machines and never had any reason to complain.</p>  <p><strong>Until yesterday my CPU started running wild at 100%</strong>.. </p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4.jpg"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="Noooooo[4]" border="0" alt="Noooooo[4]" src="http://www.tigraine.at/wp-content/uploads/2010/09/Noooooo4_thumb.jpg" width="404" height="275" /></a></p>  <p>I guess I have to consider myself lucky to be running Windows7 so the Trojan never managed to get full access to my system, doing stupid stuff like preventing me to access task manager or shutting me out of my system. That still didn’t prevent it from installing itself in my Registry for launch on System Startup (don’t ask how, as always I suspect I clicked one UAC dialog too many). </p>  <p>Well, here it is:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image11.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb10.png" width="532" height="75" /></a></p>  <p>Obviously this is malicious code that is running when my system starts up. Nothing too malicious since it is not requesting Admin level privileges, but it’s still code that isn’t supposed to run and should be fairly easy to pick up. </p>  <p>Well Security Essentials doesn’t think so:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image12.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb11.png" width="346" height="167" /></a></p>  <p>Even after a deep system scan of 6 hours, Security Essentials still mocks me:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image13.png"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb12.png" width="525" height="209" /></a></p>  <p>Utterly unacceptable.</p>  <p>I still don’t have a clue how this got on my machine. I usually am pretty immune to stuff like that because I (on occasion) THINK while using my computer, and don’t click dialog boxes away without knowing what they were about. But somehow this thing seems to have made it past my usually pretty accurate instincts.. </p>  <p>Damn, I really liked Security Essentials <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-sadsmile" alt="Sad smile" src="http://www.tigraine.at/wp-content/uploads/2010/09/wlEmoticonsadsmile.png" />And I really really really hate formatting my PC right now.</p>  <p>Update: I think I managed to kill this stupid virus. Since I’m just too lazy at the moment to pave my PC I’ll just keep an eye on this. </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>951</wp:post_id>
<wp:post_date>2010-09-23 13:11:46</wp:post_date>
<wp:post_date_gmt>2010-09-23 11:11:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>im-getting-a-new-virus-scanner</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image.png</title>
<link>http://www.tigraine.at/?attachment_id=954</link>
<pubDate>Fri, 24 Sep 2010 23:08:17 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image14.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>954</wp:post_id>
<wp:post_date>2010-09-25 01:08:17</wp:post_date>
<wp:post_date_gmt>2010-09-24 23:08:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-png-48</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image14.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image14.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"623";s:6:"height";s:3:"113";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:19:"2010/09/image14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"image14-150x113.png";s:5:"width";s:3:"150";s:6:"height";s:3:"113";}s:6:"medium";a:3:{s:4:"file";s:18:"image14-300x54.png";s:5:"width";s:3:"300";s:6:"height";s:2:"54";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>image_thumb.png</title>
<link>http://www.tigraine.at/?attachment_id=955</link>
<pubDate>Fri, 24 Sep 2010 23:08:19 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[Uncategorized]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

<guid isPermaLink="false">http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb13.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>955</wp:post_id>
<wp:post_date>2010-09-25 01:08:19</wp:post_date>
<wp:post_date_gmt>2010-09-24 23:08:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image_thumb-png-39</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb13.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/09/image_thumb13.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"627";s:6:"height";s:3:"117";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:25:"2010/09/image_thumb13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"image_thumb13-150x117.png";s:5:"width";s:3:"150";s:6:"height";s:3:"117";}s:6:"medium";a:3:{s:4:"file";s:24:"image_thumb13-300x55.png";s:5:"width";s:3:"300";s:6:"height";s:2:"55";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>The small things can cause the biggest troubles: List&lt;T&gt;.AddRange and GetHashCode</title>
<link>http://www.tigraine.at/2010/09/27/the-small-things-can-cause-the-biggest-troubles-listt-addrange-and-gethashcode/</link>
<pubDate>Mon, 27 Sep 2010 17:00:00 +0000</pubDate>
<dc:creator><![CDATA[Daniel Hölbling]]></dc:creator>

		<category><![CDATA[.NET]]></category>

		<category domain="category" nicename="net"><![CDATA[.NET]]></category>

		<category><![CDATA[Coding]]></category>

		<category domain="category" nicename="programmierung"><![CDATA[Coding]]></category>

<guid isPermaLink="false">http://www.tigraine.at/2010/09/27/the-small-things-can-cause-the-biggest-troubles-listt-addrange-and-gethashcode/</guid>
<description></description>
<content:encoded><![CDATA[<p>I just spent some hours performance optimizing an application I wrote a while back. The architecture was actually quite nice and I had implemented my own Lazy-Loading using DynamicProxy. Things worked great and performance was never an issue.</p>  <p>Fast forward 2 years: I left the company after the project was finished and development carried on. Additions to the code where made and after some time performance got a serious problem.</p>  <p>After hours of profiling I finally found the issue: <u>Apparently List&lt;T&gt;.AddRange invokes GetHashCode on all items you add to the list</u>.</p>  <p>Why is that a problem? Well: My Proxy objects where designed to return some key data that was eagerly fetched (stuff like Id, and some filter columns) and once the filter logic had narrowed down the list of thousands of items to the 2 or 3 that were going to be displayed, the Proxy transparently fetched the real data from the database and cached it. So every object in itself was doing a select once a method besides the prefetched data was requested. </p>  <p>I hadn’t thought of GetHashCode and any call to GetHashCode was not handled directly in the Proxy but caused a lazy load. And since .Add does not call GetHashCode but AddRange does, the bug never came up during development. </p>  <p>Imagine my face when I saw this profiler graph:</p>  <p><a href="http://www.tigraine.at/wp-content/uploads/2010/09/image14.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 10px 3px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.tigraine.at/wp-content/uploads/2010/09/image_thumb13.png" width="627" height="117" /></a></p>  <p>Needless to say that fetching 64 items from the database instead of 1 really brought the app down to a crawl.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>956</wp:post_id>
<wp:post_date>2010-09-27 19:00:00</wp:post_date>
<wp:post_date_gmt>2010-09-27 17:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-small-things-can-cause-the-biggest-troubles-listt-addrange-and-gethashcode</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>dsq_thread_id</wp:meta_key>
<wp:meta_value></wp:meta_value>
</wp:postmeta>
	</item>
</channel>
</rss>
