---
layout: post
title: Jekyll - Static site generation made easy
---

There was one question nagging at me ever since I discovered "Jekyll":http://www.jekyllrb.com on GitHub: Why do we (programmers) all spend so much time and effort building blogs ontop of complicated architecture to deliver static content?

_Static content?_ Yes! In my book a blog is static content. It only changes when I publish something, and when I do the blog engine does little more than save a post in the database to present it to the public. And what this also means is that whenever someone visits my site I have to query a database server and do all sorts of unnecessary work to deliver little more than a fairly static HTML page.

I do see the appeal a blog has to a non-technical audience. You can write posts from your browser and spare yourself from all the nastiness of HTML and details of the web. You just input your content into a nice textbox and hit a button and magic starts to happen. 

For a programmer, this is a whole other story. We know what is going on, and I believe we are also smart enough to know that all this blogengine stuff is just a crutch to make the whole thing workable for mere humans. We don't need fancy textboxes that allow you to format text -> We know "markdown":http://daringfireball.net/projects/markdown/, "textile":http://textile.thresholdstate.com/ and HTML for that matter. We want our content to preserve semantic, not just dress it up in HTML tagsoup. 

And: Whatever blog engine out there I looked at so far, post versioning sucks. Nothing these blog engines use even comes close to the versioning programmers are used to: Git, Mercurial hell even Subversion. I host this blog on GitHub, and have the capabilities of a full fledged version control system at my disposal when playing around my site. If I screw up I simply revert. I can't nuke my database because there isn't one. If I screw up - git revert is my friend. **This is power!**

